<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="ABS" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="3173784">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_11073" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11074" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11075" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="0" to="-1 * 0" />
    <mutant id="mutant_11076" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11077" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11078" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11079" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11070" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11071" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11072" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11084" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11085" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11086" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_11087" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_11088" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="valueForNull" to="valueForNull &gt;= 0 ? valueForNull * -1 : valueForNull" />
    <mutant id="mutant_11089" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="valueForNull" to="valueForNull &gt;= 0 ? valueForNull : valueForNull * -1" />
    <mutant id="mutant_11080" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11081" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11082" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11083" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11059" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11051" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_12382" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11052" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12383" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11053" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12384" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11054" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12385" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11055" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12386" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11056" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12387" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11057" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12388" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11058" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12389" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12380" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length)" to="(indices.length &gt;= 0 ? indices.length * -1 : indices.length)" />
    <mutant id="mutant_11050" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_12381" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="(indices.length)" to="(indices.length &gt;= 0 ? indices.length : indices.length * -1)" />
    <mutant id="mutant_11062" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12393" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11063" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12394" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11064" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12395" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_11065" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12396" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_11066" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12397" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11067" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12398" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11068" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="array[i].doubleValue()" to="array[i].doubleValue() &gt;= 0 ? array[i].doubleValue() : array[i].doubleValue() * -1" />
    <mutant id="mutant_12399" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11069" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="array[i].doubleValue()" to="array[i].doubleValue() &gt;= 0 ? array[i].doubleValue() * -1 : array[i].doubleValue()" />
    <mutant id="mutant_12390" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_11060" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12391" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_11061" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12392" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11095" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_11096" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11097" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="element" to="element &gt;= 0 ? element : element * -1" />
    <mutant id="mutant_11098" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="element" to="element &gt;= 0 ? element * -1 : element" />
    <mutant id="mutant_11099" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],int,float)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11090" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_11091" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_11092" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="b.doubleValue()" to="b.doubleValue() &gt;= 0 ? b.doubleValue() : b.doubleValue() * -1" />
    <mutant id="mutant_11093" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Double[],double)" from="b.doubleValue()" to="b.doubleValue() &gt;= 0 ? b.doubleValue() * -1 : b.doubleValue()" />
    <mutant id="mutant_11094" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],float)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_9201" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(century)" to="(century &gt;= 0 ? century : century * -1)" />
    <mutant id="mutant_9202" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century)" to="(century &gt;= 0 ? century * -1 : century)" />
    <mutant id="mutant_9200" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(century)" to="(century &gt;= 0 ? century * -1 : century)" />
    <mutant id="mutant_9241" viable="false" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14907" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9242" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="(value.length())" to="(value.length() &gt;= 0 ? value.length() : value.length() * -1)" />
    <mutant id="mutant_14906" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14909" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9240" viable="false" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14908" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9245" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9246" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9243" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="(value.length())" to="(value.length() &gt;= 0 ? value.length() * -1 : value.length())" />
    <mutant id="mutant_9244" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14901" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14900" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14903" viable="false" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14902" viable="false" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14905" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14904" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9238" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9239" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9236" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="(value.length())" to="(value.length() &gt;= 0 ? value.length() : value.length() * -1)" />
    <mutant id="mutant_9237" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="(value.length())" to="(value.length() &gt;= 0 ? value.length() * -1 : value.length())" />
    <mutant id="mutant_9230" viable="false" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14918" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="(classes.length)" to="(classes.length &gt;= 0 ? classes.length * -1 : classes.length)" />
    <mutant id="mutant_9231" viable="false" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14917" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14919" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="(classes.length)" to="(classes.length &gt;= 0 ? classes.length : classes.length * -1)" />
    <mutant id="mutant_9234" viable="false" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9235" viable="false" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9232" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9233" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14910" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="(classes.length)" to="(classes.length &gt;= 0 ? classes.length * -1 : classes.length)" />
    <mutant id="mutant_14912" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14911" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="(classes.length)" to="(classes.length &gt;= 0 ? classes.length : classes.length * -1)" />
    <mutant id="mutant_14914" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="classes.length" to="classes.length &gt;= 0 ? classes.length : classes.length * -1" />
    <mutant id="mutant_14913" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="classes.length" to="classes.length &gt;= 0 ? classes.length * -1 : classes.length" />
    <mutant id="mutant_14916" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14915" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="0" to="-1 * 0" />
    <mutant id="mutant_9227" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9228" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="(value.length())" to="(value.length() &gt;= 0 ? value.length() : value.length() * -1)" />
    <mutant id="mutant_9225" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_9226" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9229" viable="true" in="org.apache.commons.lang3.time.FastDateParser.escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)" from="(value.length())" to="(value.length() &gt;= 0 ? value.length() * -1 : value.length())" />
    <mutant id="mutant_9220" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(timeZone.hashCode())" to="(timeZone.hashCode() &gt;= 0 ? timeZone.hashCode() : timeZone.hashCode() * -1)" />
    <mutant id="mutant_9223" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(locale.hashCode())" to="(locale.hashCode() &gt;= 0 ? locale.hashCode() : locale.hashCode() * -1)" />
    <mutant id="mutant_9224" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(locale.hashCode())" to="(locale.hashCode() &gt;= 0 ? locale.hashCode() * -1 : locale.hashCode())" />
    <mutant id="mutant_9221" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(timeZone.hashCode())" to="(timeZone.hashCode() &gt;= 0 ? timeZone.hashCode() * -1 : timeZone.hashCode())" />
    <mutant id="mutant_9222" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="13" to="(-1 * 13)" />
    <mutant id="mutant_9216" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getFieldWidth()" from="currentFormatField.length()" to="currentFormatField.length() &gt;= 0 ? currentFormatField.length() * -1 : currentFormatField.length()" />
    <mutant id="mutant_9217" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode())" to="(pattern.hashCode() &gt;= 0 ? pattern.hashCode() : pattern.hashCode() * -1)" />
    <mutant id="mutant_9214" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="100" to="(-1 * 100)" />
    <mutant id="mutant_9215" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getFieldWidth()" from="currentFormatField.length()" to="currentFormatField.length() &gt;= 0 ? currentFormatField.length() : currentFormatField.length() * -1" />
    <mutant id="mutant_9218" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="(pattern.hashCode())" to="(pattern.hashCode() &gt;= 0 ? pattern.hashCode() * -1 : pattern.hashCode())" />
    <mutant id="mutant_9219" viable="true" in="org.apache.commons.lang3.time.FastDateParser.hashCode()" from="13" to="(-1 * 13)" />
    <mutant id="mutant_9212" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial" to="(trial &gt;= 0 ? trial : trial * -1)" />
    <mutant id="mutant_9213" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial" to="(trial &gt;= 0 ? trial * -1 : trial)" />
    <mutant id="mutant_9210" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial" to="trial &gt;= 0 ? trial : trial * -1" />
    <mutant id="mutant_9211" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="trial" to="trial &gt;= 0 ? trial * -1 : trial" />
    <mutant id="mutant_9205" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="twoDigitYear" to="(twoDigitYear &gt;= 0 ? twoDigitYear * -1 : twoDigitYear)" />
    <mutant id="mutant_9206" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="twoDigitYear" to="(twoDigitYear &gt;= 0 ? twoDigitYear : twoDigitYear * -1)" />
    <mutant id="mutant_9203" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(century)" to="(century &gt;= 0 ? century : century * -1)" />
    <mutant id="mutant_9204" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="twoDigitYear" to="(twoDigitYear &gt;= 0 ? twoDigitYear : twoDigitYear * -1)" />
    <mutant id="mutant_9209" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(startYear)" to="(startYear &gt;= 0 ? startYear : startYear * -1)" />
    <mutant id="mutant_9207" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="twoDigitYear" to="(twoDigitYear &gt;= 0 ? twoDigitYear * -1 : twoDigitYear)" />
    <mutant id="mutant_9208" viable="true" in="org.apache.commons.lang3.time.FastDateParser.adjustYear(int)" from="(startYear)" to="(startYear &gt;= 0 ? startYear * -1 : startYear)" />
    <mutant id="mutant_9285" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9286" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="(formatField.length())" to="(formatField.length() &gt;= 0 ? formatField.length() : formatField.length() * -1)" />
    <mutant id="mutant_13619" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_9283" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,java.util.Calendar)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9284" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,java.util.Calendar)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9289" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9287" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="(formatField.length())" to="(formatField.length() &gt;= 0 ? formatField.length() * -1 : formatField.length())" />
    <mutant id="mutant_9288" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_13612" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_14943" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level * -1 : level)" />
    <mutant id="mutant_13611" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14942" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels" to="packageLevels &gt;= 0 ? packageLevels * -1 : packageLevels" />
    <mutant id="mutant_13614" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14945" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13613" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14944" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level : level * -1)" />
    <mutant id="mutant_9281" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,java.util.Calendar)" from="(Calendar.ZONE_OFFSET)" to="(Calendar.ZONE_OFFSET &gt;= 0 ? Calendar.ZONE_OFFSET : Calendar.ZONE_OFFSET * -1)" />
    <mutant id="mutant_13616" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14947" viable="false" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level : level * -1)" />
    <mutant id="mutant_9282" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,java.util.Calendar)" from="(Calendar.ZONE_OFFSET)" to="(Calendar.ZONE_OFFSET &gt;= 0 ? Calendar.ZONE_OFFSET * -1 : Calendar.ZONE_OFFSET)" />
    <mutant id="mutant_13615" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14946" viable="false" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level * -1 : level)" />
    <mutant id="mutant_13618" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14949" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_9280" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,java.util.Calendar)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_13617" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14948" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_13610" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14941" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels" to="packageLevels &gt;= 0 ? packageLevels : packageLevels * -1" />
    <mutant id="mutant_14940" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9274" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getCache(int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_9275" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getCache(int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9272" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getCache(int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9273" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getCache(int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9278" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,java.util.Calendar)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9279" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,java.util.Calendar)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9276" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getCache(int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9277" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getLocaleSpecificStrategy(int,java.util.Calendar)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_13623" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14954" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13622" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14953" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_13625" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14956" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_13624" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_14955" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_9270" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getCache(int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_13627" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14958" viable="false" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="availableSpace" to="availableSpace &gt;= 0 ? availableSpace : availableSpace * -1" />
    <mutant id="mutant_9271" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getCache(int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_13626" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14957" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13629" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13628" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14959" viable="false" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="availableSpace" to="availableSpace &gt;= 0 ? availableSpace * -1 : availableSpace" />
    <mutant id="mutant_14950" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="className.lastIndexOf('.', endIndex)" to="className.lastIndexOf('.', endIndex) &gt;= 0 ? className.lastIndexOf('.', endIndex) * -1 : className.lastIndexOf('.', endIndex)" />
    <mutant id="mutant_13621" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14952" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_13620" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14951" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="className.lastIndexOf('.', endIndex)" to="className.lastIndexOf('.', endIndex) &gt;= 0 ? className.lastIndexOf('.', endIndex) : className.lastIndexOf('.', endIndex) * -1" />
    <mutant id="mutant_9269" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getDisplayNames(int,java.util.Calendar,java.util.Locale)" from="Calendar.ALL_STYLES" to="(Calendar.ALL_STYLES &gt;= 0 ? Calendar.ALL_STYLES : Calendar.ALL_STYLES * -1)" />
    <mutant id="mutant_9263" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14929" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_9264" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(matcher.end())" to="(matcher.end() &gt;= 0 ? matcher.end() : matcher.end() * -1)" />
    <mutant id="mutant_14928" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_9261" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9262" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9267" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getDisplayNames(int,java.util.Calendar,java.util.Locale)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9268" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getDisplayNames(int,java.util.Calendar,java.util.Locale)" from="Calendar.ALL_STYLES" to="(Calendar.ALL_STYLES &gt;= 0 ? Calendar.ALL_STYLES * -1 : Calendar.ALL_STYLES)" />
    <mutant id="mutant_9265" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(matcher.end())" to="(matcher.end() &gt;= 0 ? matcher.end() * -1 : matcher.end())" />
    <mutant id="mutant_9266" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getDisplayNames(int,java.util.Calendar,java.util.Locale)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_14921" viable="false" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14920" viable="false" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14923" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14922" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14925" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9260" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14924" viable="true" in="org.apache.commons.lang3.ClassUtils.wrappersToPrimitives(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14927" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.Class,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14926" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.Class,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_9258" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9259" viable="false" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9252" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13609" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9253" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="0" to="-1 * 0" />
    <mutant id="mutant_13608" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14939" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() * -1 : className.length())" />
    <mutant id="mutant_9250" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1" />
    <mutant id="mutant_9251" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9256" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(strategies.length)" to="(strategies.length &gt;= 0 ? strategies.length * -1 : strategies.length)" />
    <mutant id="mutant_9257" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="(strategies.length)" to="(strategies.length &gt;= 0 ? strategies.length : strategies.length * -1)" />
    <mutant id="mutant_9254" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9255" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13601" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14932" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_13600" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14931" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_13603" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14934" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="StringUtils.countMatches(className, '.')" to="StringUtils.countMatches(className, '.') &gt;= 0 ? StringUtils.countMatches(className, '.') : StringUtils.countMatches(className, '.') * -1" />
    <mutant id="mutant_13602" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14933" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="StringUtils.countMatches(className, '.')" to="StringUtils.countMatches(className, '.') &gt;= 0 ? StringUtils.countMatches(className, '.') * -1 : StringUtils.countMatches(className, '.')" />
    <mutant id="mutant_13605" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14936" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels" to="(packageLevels &gt;= 0 ? packageLevels * -1 : packageLevels)" />
    <mutant id="mutant_13604" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14935" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels" to="(packageLevels &gt;= 0 ? packageLevels : packageLevels * -1)" />
    <mutant id="mutant_13607" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14938" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() : className.length() * -1)" />
    <mutant id="mutant_13606" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_14937" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14930" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9249" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex()" />
    <mutant id="mutant_9247" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9248" viable="true" in="org.apache.commons.lang3.time.FastDateParser.parse(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12324" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13656" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14987" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_12325" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13655" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14986" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12326" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13658" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14989" viable="false" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="dim" to="(dim &gt;= 0 ? dim : dim * -1)" />
    <mutant id="mutant_12327" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13657" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14988" viable="false" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="dim" to="(dim &gt;= 0 ? dim * -1 : dim)" />
    <mutant id="mutant_12328" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_12329" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13659" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13650" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14981" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14980" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12320" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13652" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14983" viable="false" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex : endIndex * -1" />
    <mutant id="mutant_12321" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13651" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14982" viable="false" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex * -1 : endIndex" />
    <mutant id="mutant_12322" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13654" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14985" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12323" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13653" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14984" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11004" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12335" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13667" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14998" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="className.length()" to="className.length() &gt;= 0 ? className.length() : className.length() * -1" />
    <mutant id="mutant_11005" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_12336" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="indices.length" to="indices.length &gt;= 0 ? indices.length * -1 : indices.length" />
    <mutant id="mutant_13666" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14997" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11006" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_12337" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="indices.length" to="indices.length &gt;= 0 ? indices.length : indices.length * -1" />
    <mutant id="mutant_13669" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_11007" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12338" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_13668" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14999" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="className.length()" to="className.length() &gt;= 0 ? className.length() * -1 : className.length()" />
    <mutant id="mutant_11008" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12339" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_11009" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_14990" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13661" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14992" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="dim" to="(dim &gt;= 0 ? dim : dim * -1)" />
    <mutant id="mutant_12330" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13660" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14991" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="dim" to="(dim &gt;= 0 ? dim * -1 : dim)" />
    <mutant id="mutant_11000" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12331" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13663" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14994" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11001" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_12332" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13662" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14993" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11002" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_12333" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="org.apache.commons.lang3.ArrayUtils.getLength(array)" to="org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1" />
    <mutant id="mutant_13665" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14996" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() * -1 : className.length())" />
    <mutant id="mutant_11003" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12334" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="org.apache.commons.lang3.ArrayUtils.getLength(array)" to="org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array)" />
    <mutant id="mutant_13664" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14995" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() : className.length() * -1)" />
    <mutant id="mutant_12302" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13634" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14965" viable="false" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="availableSpace" to="(availableSpace &gt;= 0 ? availableSpace : availableSpace * -1)" />
    <mutant id="mutant_12303" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13633" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14964" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12304" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13636" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14967" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level * -1 : level)" />
    <mutant id="mutant_12305" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13635" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14966" viable="false" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="availableSpace" to="(availableSpace &gt;= 0 ? availableSpace * -1 : availableSpace)" />
    <mutant id="mutant_12306" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13638" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14969" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels" to="(packageLevels &gt;= 0 ? packageLevels : packageLevels * -1)" />
    <mutant id="mutant_12307" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13637" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14968" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level : level * -1)" />
    <mutant id="mutant_12308" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12309" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13639" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_13630" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14961" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="part.length()" to="part.length() &gt;= 0 ? part.length() * -1 : part.length()" />
    <mutant id="mutant_14960" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="part.length()" to="part.length() &gt;= 0 ? part.length() : part.length() * -1" />
    <mutant id="mutant_12300" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13632" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14963" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level : level * -1)" />
    <mutant id="mutant_12301" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13631" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14962" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level * -1 : level)" />
    <mutant id="mutant_9296" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA * -1 : Calendar.ERA)" />
    <mutant id="mutant_9297" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="(formatField.length())" to="(formatField.length() &gt;= 0 ? formatField.length() : formatField.length() * -1)" />
    <mutant id="mutant_9294" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK : Calendar.DAY_OF_WEEK * -1)" />
    <mutant id="mutant_9295" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA : Calendar.ERA * -1)" />
    <mutant id="mutant_9298" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="(formatField.length())" to="(formatField.length() &gt;= 0 ? formatField.length() * -1 : formatField.length())" />
    <mutant id="mutant_9299" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_12313" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13645" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14976" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level * -1 : level)" />
    <mutant id="mutant_12314" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13644" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14975" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12315" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13647" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14978" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level * -1 : level)" />
    <mutant id="mutant_12316" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13646" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14977" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level : level * -1)" />
    <mutant id="mutant_9292" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12317" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13649" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_9293" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK * -1 : Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_12318" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13648" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14979" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level : level * -1)" />
    <mutant id="mutant_9290" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="(formatField.length())" to="(formatField.length() &gt;= 0 ? formatField.length() : formatField.length() * -1)" />
    <mutant id="mutant_12319" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_9291" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="(formatField.length())" to="(formatField.length() &gt;= 0 ? formatField.length() * -1 : formatField.length())" />
    <mutant id="mutant_14970" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="packageLevels" to="(packageLevels &gt;= 0 ? packageLevels * -1 : packageLevels)" />
    <mutant id="mutant_13641" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14972" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level : level * -1)" />
    <mutant id="mutant_12310" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13640" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14971" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="level" to="(level &gt;= 0 ? level * -1 : level)" />
    <mutant id="mutant_12311" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13643" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14974" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="availableSpace" to="(availableSpace &gt;= 0 ? availableSpace * -1 : availableSpace)" />
    <mutant id="mutant_12312" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13642" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14973" viable="true" in="org.apache.commons.lang3.ClassUtils.getAbbreviatedName(java.lang.String,int)" from="availableSpace" to="(availableSpace &gt;= 0 ? availableSpace : availableSpace * -1)" />
    <mutant id="mutant_11037" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12368" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="diff" to="(diff &gt;= 0 ? diff * -1 : diff)" />
    <mutant id="mutant_11038" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12369" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="diff" to="(diff &gt;= 0 ? diff : diff * -1)" />
    <mutant id="mutant_13699" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_11039" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12360" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="diff" to="(diff &gt;= 0 ? diff * -1 : diff)" />
    <mutant id="mutant_13692" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11030" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12361" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="diff" to="(diff &gt;= 0 ? diff : diff * -1)" />
    <mutant id="mutant_13691" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11031" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12362" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="prevIndex" to="prevIndex &gt;= 0 ? prevIndex * -1 : prevIndex" />
    <mutant id="mutant_13694" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11032" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12363" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="prevIndex" to="prevIndex &gt;= 0 ? prevIndex : prevIndex * -1" />
    <mutant id="mutant_13693" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11033" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12364" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_13696" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_11034" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_12365" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_13695" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11035" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_12366" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13698" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11036" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12367" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13697" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13690" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11048" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12379" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="diff" to="(diff &gt;= 0 ? diff : diff * -1)" />
    <mutant id="mutant_11049" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11040" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12371" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="diff" to="(diff &gt;= 0 ? diff : diff * -1)" />
    <mutant id="mutant_11041" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12372" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_11042" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_12373" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_11043" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_12374" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_11044" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12375" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_11045" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_12376" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_11046" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_12377" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_11047" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12378" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="diff" to="(diff &gt;= 0 ? diff * -1 : diff)" />
    <mutant id="mutant_12370" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="diff" to="(diff &gt;= 0 ? diff * -1 : diff)" />
    <mutant id="mutant_11015" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_12346" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13678" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11016" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_12347" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13677" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11017" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found) * -1" />
    <mutant id="mutant_12348" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11018" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.doubleValue(), found)" />
    <mutant id="mutant_12349" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13679" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11019" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_13670" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12340" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13672" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11010" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_12341" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13671" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11011" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_12342" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13674" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11012" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_12343" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13673" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11013" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="v.doubleValue()" to="(v.doubleValue() &gt;= 0 ? v.doubleValue() : v.doubleValue() * -1)" />
    <mutant id="mutant_12344" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13676" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11014" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="v.doubleValue()" to="(v.doubleValue() &gt;= 0 ? v.doubleValue() * -1 : v.doubleValue())" />
    <mutant id="mutant_12345" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13675" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11026" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12357" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13689" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_11027" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_12358" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="prevIndex" to="(prevIndex &gt;= 0 ? prevIndex * -1 : prevIndex)" />
    <mutant id="mutant_13688" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_11028" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_12359" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="prevIndex" to="(prevIndex &gt;= 0 ? prevIndex : prevIndex * -1)" />
    <mutant id="mutant_11029" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_13681" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_12350" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13680" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11020" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_12351" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13683" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_11021" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12352" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13682" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11022" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_12353" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13685" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11023" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_12354" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13684" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11024" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12355" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13687" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11025" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(double[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12356" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13686" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11194" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_11195" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found)" />
    <mutant id="mutant_11196" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.floatValue(), found) * -1" />
    <mutant id="mutant_11197" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_11198" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_11199" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11190" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_11191" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="v.floatValue()" to="(v.floatValue() &gt;= 0 ? v.floatValue() : v.floatValue() * -1)" />
    <mutant id="mutant_11192" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="v.floatValue()" to="(v.floatValue() &gt;= 0 ? v.floatValue() * -1 : v.floatValue())" />
    <mutant id="mutant_11193" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_11172" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="boxed" to="(boxed &gt;= 0 ? boxed * -1 : boxed)" />
    <mutant id="mutant_11173" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="boxed" to="(boxed &gt;= 0 ? boxed : boxed * -1)" />
    <mutant id="mutant_11174" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11175" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="e.getKey()" to="e.getKey() &gt;= 0 ? e.getKey() * -1 : e.getKey()" />
    <mutant id="mutant_11176" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="e.getKey()" to="e.getKey() &gt;= 0 ? e.getKey() : e.getKey() * -1" />
    <mutant id="mutant_11177" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11178" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11179" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_11170" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="boxed" to="(boxed &gt;= 0 ? boxed * -1 : boxed)" />
    <mutant id="mutant_11171" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="boxed" to="(boxed &gt;= 0 ? boxed : boxed * -1)" />
    <mutant id="mutant_11183" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_11184" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_11185" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11186" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11187" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_11188" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_11189" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_11180" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_11181" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11182" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9120" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="parser.adjustYear(iValue)" to="parser.adjustYear(iValue) &gt;= 0 ? parser.adjustYear(iValue) * -1 : parser.adjustYear(iValue)" />
    <mutant id="mutant_9121" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_9124" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iValue" to="(iValue &gt;= 0 ? iValue * -1 : iValue)" />
    <mutant id="mutant_9125" viable="false" in="?" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_9122" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_9123" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iValue" to="(iValue &gt;= 0 ? iValue : iValue * -1)" />
    <mutant id="mutant_9117" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iValue" to="(iValue &gt;= 0 ? iValue : iValue * -1)" />
    <mutant id="mutant_9118" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iValue" to="(iValue &gt;= 0 ? iValue * -1 : iValue)" />
    <mutant id="mutant_9115" viable="false" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iValue" to="iValue &gt;= 0 ? iValue : iValue * -1" />
    <mutant id="mutant_9116" viable="false" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iValue" to="iValue &gt;= 0 ? iValue * -1 : iValue" />
    <mutant id="mutant_9119" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="parser.adjustYear(iValue)" to="parser.adjustYear(iValue) &gt;= 0 ? parser.adjustYear(iValue) : parser.adjustYear(iValue) * -1" />
    <mutant id="mutant_13708" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_9110" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="Integer.parseInt(value)" to="Integer.parseInt(value) &gt;= 0 ? Integer.parseInt(value) * -1 : Integer.parseInt(value)" />
    <mutant id="mutant_13707" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13709" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_9113" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iValue" to="(iValue &gt;= 0 ? iValue * -1 : iValue)" />
    <mutant id="mutant_9114" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="100" to="(-1 * 100)" />
    <mutant id="mutant_9111" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="Integer.parseInt(value)" to="Integer.parseInt(value) &gt;= 0 ? Integer.parseInt(value) : Integer.parseInt(value) * -1" />
    <mutant id="mutant_9112" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iValue" to="(iValue &gt;= 0 ? iValue : iValue * -1)" />
    <mutant id="mutant_13700" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13702" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_13701" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13704" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13703" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13706" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_13705" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9106" viable="false" in="?" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_9107" viable="false" in="?" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_9104" viable="false" in="?" from="Calendar.FIELD_COUNT" to="Calendar.FIELD_COUNT &gt;= 0 ? Calendar.FIELD_COUNT * -1 : Calendar.FIELD_COUNT" />
    <mutant id="mutant_9105" viable="false" in="?" from="Calendar.FIELD_COUNT" to="Calendar.FIELD_COUNT &gt;= 0 ? Calendar.FIELD_COUNT : Calendar.FIELD_COUNT * -1" />
    <mutant id="mutant_9108" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1(int)" from="$anonymous0" to="($anonymous0 &gt;= 0 ? $anonymous0 * -1 : $anonymous0)" />
    <mutant id="mutant_9109" viable="true" in="org.apache.commons.lang3.time.FastDateParser$1(int)" from="$anonymous0" to="($anonymous0 &gt;= 0 ? $anonymous0 : $anonymous0 * -1)" />
    <mutant id="mutant_9102" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_9103" viable="false" in="?" from="2L" to="-1 * 2L" />
    <mutant id="mutant_9100" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9101" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9164" viable="true" in="org.apache.commons.lang3.time.FastDateParser$4.modify(int)" from="iValue" to="iValue &gt;= 0 ? iValue : iValue * -1" />
    <mutant id="mutant_12409" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="cp" to="(cp &gt;= 0 ? cp : cp * -1)" />
    <mutant id="mutant_9165" viable="true" in="org.apache.commons.lang3.time.FastDateParser$4.modify(int)" from="iValue" to="iValue &gt;= 0 ? iValue * -1 : iValue" />
    <mutant id="mutant_9162" viable="true" in="org.apache.commons.lang3.time.FastDateParser$4.modify(int)" from="12" to="(-1 * 12)" />
    <mutant id="mutant_9163" viable="true" in="org.apache.commons.lang3.time.FastDateParser$4.modify(int)" from="0" to="-1 * 0" />
    <mutant id="mutant_9168" viable="false" in="?" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_9169" viable="false" in="?" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_9166" viable="false" in="?" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR * -1 : Calendar.HOUR)" />
    <mutant id="mutant_9167" viable="false" in="?" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR : Calendar.HOUR * -1)" />
    <mutant id="mutant_12401" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="dest" to="dest &gt;= 0 ? dest : dest * -1" />
    <mutant id="mutant_13733" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12402" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="cp" to="cp &gt;= 0 ? cp : cp * -1" />
    <mutant id="mutant_13732" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12403" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="cp" to="cp &gt;= 0 ? cp * -1 : cp" />
    <mutant id="mutant_13735" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_12404" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13734" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_9160" viable="true" in="org.apache.commons.lang3.time.FastDateParser$4.modify(int)" from="iValue" to="(iValue &gt;= 0 ? iValue : iValue * -1)" />
    <mutant id="mutant_12405" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13737" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_9161" viable="true" in="org.apache.commons.lang3.time.FastDateParser$4.modify(int)" from="iValue" to="(iValue &gt;= 0 ? iValue * -1 : iValue)" />
    <mutant id="mutant_12406" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13736" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12407" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="dest" to="(dest &gt;= 0 ? dest * -1 : dest)" />
    <mutant id="mutant_13739" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12408" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="dest" to="(dest &gt;= 0 ? dest : dest * -1)" />
    <mutant id="mutant_13738" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_13731" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12400" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="dest" to="dest &gt;= 0 ? dest * -1 : dest" />
    <mutant id="mutant_13730" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_9159" viable="true" in="org.apache.commons.lang3.time.FastDateParser$4(int)" from="$anonymous0" to="($anonymous0 &gt;= 0 ? $anonymous0 : $anonymous0 * -1)" />
    <mutant id="mutant_9153" viable="true" in="org.apache.commons.lang3.time.FastDateParser$3.modify(int)" from="0" to="-1 * 0" />
    <mutant id="mutant_9154" viable="true" in="org.apache.commons.lang3.time.FastDateParser$3.modify(int)" from="iValue" to="iValue &gt;= 0 ? iValue : iValue * -1" />
    <mutant id="mutant_9151" viable="true" in="org.apache.commons.lang3.time.FastDateParser$3.modify(int)" from="iValue" to="(iValue &gt;= 0 ? iValue * -1 : iValue)" />
    <mutant id="mutant_9152" viable="true" in="org.apache.commons.lang3.time.FastDateParser$3.modify(int)" from="24" to="(-1 * 24)" />
    <mutant id="mutant_9157" viable="false" in="?" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR : Calendar.HOUR * -1)" />
    <mutant id="mutant_9158" viable="true" in="org.apache.commons.lang3.time.FastDateParser$4(int)" from="$anonymous0" to="($anonymous0 &gt;= 0 ? $anonymous0 * -1 : $anonymous0)" />
    <mutant id="mutant_9155" viable="true" in="org.apache.commons.lang3.time.FastDateParser$3.modify(int)" from="iValue" to="iValue &gt;= 0 ? iValue * -1 : iValue" />
    <mutant id="mutant_9156" viable="false" in="?" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR * -1 : Calendar.HOUR)" />
    <mutant id="mutant_12412" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_13744" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12413" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_13743" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_12414" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_13746" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12415" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_13745" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12416" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_13748" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_9150" viable="true" in="org.apache.commons.lang3.time.FastDateParser$3.modify(int)" from="iValue" to="(iValue &gt;= 0 ? iValue : iValue * -1)" />
    <mutant id="mutant_12417" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13747" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12418" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12419" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13749" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13740" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_12410" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="cp" to="(cp &gt;= 0 ? cp * -1 : cp)" />
    <mutant id="mutant_13742" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12411" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_13741" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_9148" viable="true" in="org.apache.commons.lang3.time.FastDateParser$3(int)" from="$anonymous0" to="($anonymous0 &gt;= 0 ? $anonymous0 * -1 : $anonymous0)" />
    <mutant id="mutant_9149" viable="true" in="org.apache.commons.lang3.time.FastDateParser$3(int)" from="$anonymous0" to="($anonymous0 &gt;= 0 ? $anonymous0 : $anonymous0 * -1)" />
    <mutant id="mutant_9142" viable="false" in="?" from="Calendar.DAY_OF_WEEK_IN_MONTH" to="(Calendar.DAY_OF_WEEK_IN_MONTH &gt;= 0 ? Calendar.DAY_OF_WEEK_IN_MONTH * -1 : Calendar.DAY_OF_WEEK_IN_MONTH)" />
    <mutant id="mutant_13719" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9143" viable="false" in="?" from="Calendar.DAY_OF_WEEK_IN_MONTH" to="(Calendar.DAY_OF_WEEK_IN_MONTH &gt;= 0 ? Calendar.DAY_OF_WEEK_IN_MONTH : Calendar.DAY_OF_WEEK_IN_MONTH * -1)" />
    <mutant id="mutant_13718" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9140" viable="false" in="?" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_9141" viable="false" in="?" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_9146" viable="false" in="?" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9147" viable="false" in="?" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_9144" viable="false" in="?" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9145" viable="false" in="?" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_13711" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13710" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13713" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13712" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13715" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13714" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13717" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13716" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_9139" viable="false" in="?" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_9137" viable="false" in="?" from="Calendar.WEEK_OF_MONTH" to="(Calendar.WEEK_OF_MONTH &gt;= 0 ? Calendar.WEEK_OF_MONTH * -1 : Calendar.WEEK_OF_MONTH)" />
    <mutant id="mutant_9138" viable="false" in="?" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_9131" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9132" viable="false" in="?" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_13729" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_9130" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue" to="(iValue &gt;= 0 ? iValue * -1 : iValue)" />
    <mutant id="mutant_9135" viable="false" in="?" from="Calendar.WEEK_OF_YEAR" to="(Calendar.WEEK_OF_YEAR &gt;= 0 ? Calendar.WEEK_OF_YEAR * -1 : Calendar.WEEK_OF_YEAR)" />
    <mutant id="mutant_9136" viable="false" in="?" from="Calendar.WEEK_OF_MONTH" to="(Calendar.WEEK_OF_MONTH &gt;= 0 ? Calendar.WEEK_OF_MONTH : Calendar.WEEK_OF_MONTH * -1)" />
    <mutant id="mutant_9133" viable="false" in="?" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_9134" viable="false" in="?" from="Calendar.WEEK_OF_YEAR" to="(Calendar.WEEK_OF_YEAR &gt;= 0 ? Calendar.WEEK_OF_YEAR : Calendar.WEEK_OF_YEAR * -1)" />
    <mutant id="mutant_13722" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_13721" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13724" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13723" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_13726" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13725" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13728" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13727" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13720" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9128" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2(int)" from="$anonymous0" to="($anonymous0 &gt;= 0 ? $anonymous0 : $anonymous0 * -1)" />
    <mutant id="mutant_9129" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2.modify(int)" from="iValue" to="(iValue &gt;= 0 ? iValue : iValue * -1)" />
    <mutant id="mutant_9126" viable="false" in="?" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_9127" viable="true" in="org.apache.commons.lang3.time.FastDateParser$2(int)" from="$anonymous0" to="($anonymous0 &gt;= 0 ? $anonymous0 * -1 : $anonymous0)" />
    <mutant id="mutant_11114" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_12445" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13777" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11115" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_12446" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13776" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11116" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_12447" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13779" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11117" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_12448" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex * -1 : srcIndex)" />
    <mutant id="mutant_13778" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11118" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(float[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12449" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex : srcIndex * -1)" />
    <mutant id="mutant_11119" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(float[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13771" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12440" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_13770" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11110" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12441" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set" to="(set &gt;= 0 ? set : set * -1)" />
    <mutant id="mutant_13773" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_11111" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_12442" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set" to="(set &gt;= 0 ? set * -1 : set)" />
    <mutant id="mutant_13772" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11112" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_12443" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex * -1 : srcIndex)" />
    <mutant id="mutant_13775" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11113" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12444" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex : srcIndex * -1)" />
    <mutant id="mutant_13774" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9197" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="startYear" to="startYear &gt;= 0 ? startYear : startYear * -1" />
    <mutant id="mutant_9198" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="(centuryStartYear &gt;= 0 ? centuryStartYear * -1 : centuryStartYear)" />
    <mutant id="mutant_9195" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="100" to="(-1 * 100)" />
    <mutant id="mutant_9196" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="startYear" to="startYear &gt;= 0 ? startYear * -1 : startYear" />
    <mutant id="mutant_9199" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="(centuryStartYear &gt;= 0 ? centuryStartYear : centuryStartYear * -1)" />
    <mutant id="mutant_11125" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12456" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_13788" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_9190" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="century" to="century &gt;= 0 ? century * -1 : century" />
    <mutant id="mutant_11126" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_12457" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_13787" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11127" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_12458" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="srcIndex &gt;= 0 ? srcIndex * -1 : srcIndex" />
    <mutant id="mutant_11128" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12459" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="srcIndex &gt;= 0 ? srcIndex : srcIndex * -1" />
    <mutant id="mutant_13789" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_9193" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="(centuryStartYear &gt;= 0 ? centuryStartYear : centuryStartYear * -1)" />
    <mutant id="mutant_11129" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_9194" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="100" to="(-1 * 100)" />
    <mutant id="mutant_9191" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="century" to="century &gt;= 0 ? century : century * -1" />
    <mutant id="mutant_9192" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="(centuryStartYear &gt;= 0 ? centuryStartYear * -1 : centuryStartYear)" />
    <mutant id="mutant_13780" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12450" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="destIndex" to="(destIndex &gt;= 0 ? destIndex : destIndex * -1)" />
    <mutant id="mutant_13782" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11120" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_12451" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="destIndex" to="(destIndex &gt;= 0 ? destIndex * -1 : destIndex)" />
    <mutant id="mutant_13781" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11121" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_12452" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13784" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11122" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_12453" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13783" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11123" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_12454" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="destIndex" to="destIndex &gt;= 0 ? destIndex : destIndex * -1" />
    <mutant id="mutant_13786" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_11124" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12455" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="destIndex" to="destIndex &gt;= 0 ? destIndex * -1 : destIndex" />
    <mutant id="mutant_13785" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9186" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_9187" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR))" to="(definingCalendar.get(Calendar.YEAR) &gt;= 0 ? definingCalendar.get(Calendar.YEAR) : definingCalendar.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_9184" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="centuryStartYear &gt;= 0 ? centuryStartYear : centuryStartYear * -1" />
    <mutant id="mutant_9185" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_9188" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="(definingCalendar.get(Calendar.YEAR))" to="(definingCalendar.get(Calendar.YEAR) &gt;= 0 ? definingCalendar.get(Calendar.YEAR) * -1 : definingCalendar.get(Calendar.YEAR))" />
    <mutant id="mutant_9189" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="80" to="(-1 * 80)" />
    <mutant id="mutant_12423" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="ArrayUtils.getLength(array)" to="ArrayUtils.getLength(array) &gt;= 0 ? ArrayUtils.getLength(array) * -1 : ArrayUtils.getLength(array)" />
    <mutant id="mutant_13755" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_12424" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="indices.cardinality()" to="indices.cardinality() &gt;= 0 ? indices.cardinality() : indices.cardinality() * -1" />
    <mutant id="mutant_13754" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_12425" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="indices.cardinality()" to="indices.cardinality() &gt;= 0 ? indices.cardinality() * -1 : indices.cardinality()" />
    <mutant id="mutant_13757" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12426" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength" to="(srcLength &gt;= 0 ? srcLength * -1 : srcLength)" />
    <mutant id="mutant_13756" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_9182" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="0" to="-1 * 0" />
    <mutant id="mutant_12427" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength" to="(srcLength &gt;= 0 ? srcLength : srcLength * -1)" />
    <mutant id="mutant_13759" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_9183" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="centuryStartYear &gt;= 0 ? centuryStartYear * -1 : centuryStartYear" />
    <mutant id="mutant_12428" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="removals" to="(removals &gt;= 0 ? removals * -1 : removals)" />
    <mutant id="mutant_13758" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_9180" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="centuryStartYear &gt;= 0 ? centuryStartYear * -1 : centuryStartYear" />
    <mutant id="mutant_12429" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="removals" to="(removals &gt;= 0 ? removals : removals * -1)" />
    <mutant id="mutant_9181" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="centuryStartYear &gt;= 0 ? centuryStartYear : centuryStartYear * -1" />
    <mutant id="mutant_13751" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12420" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_13750" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12421" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,int[])" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_13753" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_12422" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="ArrayUtils.getLength(array)" to="ArrayUtils.getLength(array) &gt;= 0 ? ArrayUtils.getLength(array) : ArrayUtils.getLength(array) * -1" />
    <mutant id="mutant_13752" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9175" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="centuryStartYear &gt;= 0 ? centuryStartYear : centuryStartYear * -1" />
    <mutant id="mutant_9176" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_9173" viable="false" in="?" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_9174" viable="false" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="centuryStartYear" to="centuryStartYear &gt;= 0 ? centuryStartYear * -1 : centuryStartYear" />
    <mutant id="mutant_9179" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="definingCalendar.get(Calendar.YEAR)" to="definingCalendar.get(Calendar.YEAR) &gt;= 0 ? definingCalendar.get(Calendar.YEAR) * -1 : definingCalendar.get(Calendar.YEAR)" />
    <mutant id="mutant_9177" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_9178" viable="true" in="org.apache.commons.lang3.time.FastDateParser(java.lang.String,java.util.TimeZone,java.util.Locale,java.util.Date)" from="definingCalendar.get(Calendar.YEAR)" to="definingCalendar.get(Calendar.YEAR) &gt;= 0 ? definingCalendar.get(Calendar.YEAR) : definingCalendar.get(Calendar.YEAR) * -1" />
    <mutant id="mutant_11103" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],int,float)" from="Float.valueOf(element)" to="(Float.valueOf(element) &gt;= 0 ? Float.valueOf(element) : Float.valueOf(element) * -1)" />
    <mutant id="mutant_12434" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex * -1 : srcIndex)" />
    <mutant id="mutant_13766" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_11104" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],int,float)" from="Float.valueOf(element)" to="(Float.valueOf(element) &gt;= 0 ? Float.valueOf(element) * -1 : Float.valueOf(element))" />
    <mutant id="mutant_12435" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex : srcIndex * -1)" />
    <mutant id="mutant_13765" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11105" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_12436" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="indices.nextSetBit(srcIndex)" to="indices.nextSetBit(srcIndex) &gt;= 0 ? indices.nextSetBit(srcIndex) : indices.nextSetBit(srcIndex) * -1" />
    <mutant id="mutant_13768" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_11106" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_12437" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="indices.nextSetBit(srcIndex)" to="indices.nextSetBit(srcIndex) &gt;= 0 ? indices.nextSetBit(srcIndex) * -1 : indices.nextSetBit(srcIndex)" />
    <mutant id="mutant_13767" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_9171" viable="false" in="?" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_11107" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_12438" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9172" viable="false" in="?" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_11108" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_12439" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_13769" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_11109" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(float[],float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9170" viable="false" in="?" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_13760" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_12430" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="0" to="-1 * 0" />
    <mutant id="mutant_13762" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11100" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],int,float)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12431" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="0" to="-1 * 0" />
    <mutant id="mutant_13761" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_11101" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],int,float)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_12432" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set" to="set &gt;= 0 ? set : set * -1" />
    <mutant id="mutant_13764" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11102" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(float[],int,float)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_12433" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set" to="set &gt;= 0 ? set * -1 : set" />
    <mutant id="mutant_13763" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(int[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11158" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12489" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11159" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11150" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_12481" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11151" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_12482" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11152" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_12483" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11153" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_12484" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11154" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_12485" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11155" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_12486" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11156" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_12487" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11157" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_12488" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12480" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11169" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="Float.valueOf(v)" to="Float.valueOf(v) &gt;= 0 ? Float.valueOf(v) : Float.valueOf(v) * -1" />
    <mutant id="mutant_11161" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_12492" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11162" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12493" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11163" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12494" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11164" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="values.length" to="(values.length &gt;= 0 ? values.length * -1 : values.length)" />
    <mutant id="mutant_12495" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11165" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="values.length" to="(values.length &gt;= 0 ? values.length : values.length * -1)" />
    <mutant id="mutant_12496" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11166" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_12497" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="1.5" to="(-1 * 1.5)" />
    <mutant id="mutant_11167" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_12498" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11168" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="Float.valueOf(v)" to="Float.valueOf(v) &gt;= 0 ? Float.valueOf(v) * -1 : Float.valueOf(v)" />
    <mutant id="mutant_12499" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12490" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11160" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(float[],float)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_12491" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11136" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_12467" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength" to="(srcLength &gt;= 0 ? srcLength : srcLength * -1)" />
    <mutant id="mutant_13799" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11137" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_12468" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex * -1 : srcIndex)" />
    <mutant id="mutant_13798" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11138" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_12469" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex : srcIndex * -1)" />
    <mutant id="mutant_11139" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_13791" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12460" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set" to="(set &gt;= 0 ? set : set * -1)" />
    <mutant id="mutant_13790" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11130" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12461" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="set" to="(set &gt;= 0 ? set * -1 : set)" />
    <mutant id="mutant_13793" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_11131" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12462" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="indices.nextClearBit(set)" to="indices.nextClearBit(set) &gt;= 0 ? indices.nextClearBit(set) * -1 : indices.nextClearBit(set)" />
    <mutant id="mutant_13792" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11132" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12463" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="indices.nextClearBit(set)" to="indices.nextClearBit(set) &gt;= 0 ? indices.nextClearBit(set) : indices.nextClearBit(set) * -1" />
    <mutant id="mutant_13795" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11133" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_12464" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_13794" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_11134" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_12465" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_13797" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11135" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="1" to="-1 * 1" />
    <mutant id="mutant_12466" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcLength" to="(srcLength &gt;= 0 ? srcLength * -1 : srcLength)" />
    <mutant id="mutant_13796" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11147" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_12478" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11148" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_12479" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11149" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_12470" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11140" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_12471" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11141" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_12472" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11142" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12473" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex * -1 : srcIndex)" />
    <mutant id="mutant_11143" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12474" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="srcIndex" to="(srcIndex &gt;= 0 ? srcIndex : srcIndex * -1)" />
    <mutant id="mutant_11144" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_12475" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="destIndex" to="(destIndex &gt;= 0 ? destIndex : destIndex * -1)" />
    <mutant id="mutant_11145" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_12476" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="destIndex" to="(destIndex &gt;= 0 ? destIndex * -1 : destIndex)" />
    <mutant id="mutant_11146" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(float[],float)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_12477" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAll(java.lang.Object,java.util.BitSet)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11293" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11294" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11295" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11296" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11297" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11298" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_11299" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_11290" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11291" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11292" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1919" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.setValue(double)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1917" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.increment()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1918" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.setValue(double)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1915" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.decrement()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1916" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.increment()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1913" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.add(java.lang.Number)" from="operand.doubleValue()" to="operand.doubleValue() &gt;= 0 ? operand.doubleValue() : operand.doubleValue() * -1" />
    <mutant id="mutant_1914" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.decrement()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1911" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.add(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1912" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.add(java.lang.Number)" from="operand.doubleValue()" to="operand.doubleValue() &gt;= 0 ? operand.doubleValue() * -1 : operand.doubleValue()" />
    <mutant id="mutant_1910" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.add(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1908" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.add(double)" from="operand" to="operand &gt;= 0 ? operand * -1 : operand" />
    <mutant id="mutant_1909" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.add(double)" from="operand" to="operand &gt;= 0 ? operand : operand * -1" />
    <mutant id="mutant_1906" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.add(double)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1907" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.add(double)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1904" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.longValue()" from="((long)(value))" to="((long)(value)) &gt;= 0 ? ((long)(value)) : ((long)(value)) * -1" />
    <mutant id="mutant_1905" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.longValue()" from="((long)(value))" to="((long)(value)) &gt;= 0 ? ((long)(value)) * -1 : ((long)(value))" />
    <mutant id="mutant_1902" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.toString()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1903" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.toString()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1900" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.toDouble()" from="Double.valueOf(doubleValue())" to="Double.valueOf(doubleValue()) &gt;= 0 ? Double.valueOf(doubleValue()) : Double.valueOf(doubleValue()) * -1" />
    <mutant id="mutant_1901" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.toDouble()" from="Double.valueOf(doubleValue())" to="Double.valueOf(doubleValue()) &gt;= 0 ? Double.valueOf(doubleValue()) * -1 : Double.valueOf(doubleValue())" />
    <mutant id="mutant_1959" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.doubleValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_1950" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="(Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value))" to="(Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value) &gt;= 0 ? Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value) * -1 : Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value))" />
    <mutant id="mutant_1957" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.isNaN()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1958" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.isNaN()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1955" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.isInfinite()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1956" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.isInfinite()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1953" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="(Float.floatToIntBits(value))" to="(Float.floatToIntBits(value) &gt;= 0 ? Float.floatToIntBits(value) : Float.floatToIntBits(value) * -1)" />
    <mutant id="mutant_1954" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="(Float.floatToIntBits(value))" to="(Float.floatToIntBits(value) &gt;= 0 ? Float.floatToIntBits(value) * -1 : Float.floatToIntBits(value))" />
    <mutant id="mutant_1951" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1952" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_13906" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13905" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13908" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13907" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13909" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_1948" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="((MutableFloat)(obj)).value" to="(((MutableFloat)(obj)).value &gt;= 0 ? ((MutableFloat)(obj)).value : ((MutableFloat)(obj)).value * -1)" />
    <mutant id="mutant_1949" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="(Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value))" to="(Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value) &gt;= 0 ? Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value) : Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(obj)).value) * -1)" />
    <mutant id="mutant_13900" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13902" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_13901" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13904" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13903" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_1946" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat(java.lang.String)" from="Float.parseFloat(value)" to="Float.parseFloat(value) &gt;= 0 ? Float.parseFloat(value) : Float.parseFloat(value) * -1" />
    <mutant id="mutant_1947" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.equals(java.lang.Object)" from="((MutableFloat)(obj)).value" to="(((MutableFloat)(obj)).value &gt;= 0 ? ((MutableFloat)(obj)).value * -1 : ((MutableFloat)(obj)).value)" />
    <mutant id="mutant_1944" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat(java.lang.String)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1945" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat(java.lang.String)" from="Float.parseFloat(value)" to="Float.parseFloat(value) &gt;= 0 ? Float.parseFloat(value) * -1 : Float.parseFloat(value)" />
    <mutant id="mutant_1942" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat(java.lang.Number)" from="value.floatValue()" to="value.floatValue() &gt;= 0 ? value.floatValue() : value.floatValue() * -1" />
    <mutant id="mutant_1943" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat(java.lang.String)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1940" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1941" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat(java.lang.Number)" from="value.floatValue()" to="value.floatValue() &gt;= 0 ? value.floatValue() * -1 : value.floatValue()" />
    <mutant id="mutant_1939" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1937" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat(float)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_1938" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat(float)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_1935" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat(float)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1936" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat(float)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1933" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.subtract(java.lang.Number)" from="operand.doubleValue()" to="operand.doubleValue() &gt;= 0 ? operand.doubleValue() : operand.doubleValue() * -1" />
    <mutant id="mutant_1934" viable="false" in="?" from="5787169186L" to="-1 * 5787169186L" />
    <mutant id="mutant_1931" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.subtract(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1932" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.subtract(java.lang.Number)" from="operand.doubleValue()" to="operand.doubleValue() &gt;= 0 ? operand.doubleValue() * -1 : operand.doubleValue()" />
    <mutant id="mutant_1930" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.subtract(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1928" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.subtract(double)" from="operand" to="operand &gt;= 0 ? operand * -1 : operand" />
    <mutant id="mutant_1929" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.subtract(double)" from="operand" to="operand &gt;= 0 ? operand : operand * -1" />
    <mutant id="mutant_1926" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.subtract(double)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1927" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.subtract(double)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1924" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.setValue(java.lang.Number)" from="value.doubleValue()" to="value.doubleValue() &gt;= 0 ? value.doubleValue() * -1 : value.doubleValue()" />
    <mutant id="mutant_1925" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.setValue(java.lang.Number)" from="value.doubleValue()" to="value.doubleValue() &gt;= 0 ? value.doubleValue() : value.doubleValue() * -1" />
    <mutant id="mutant_1922" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.setValue(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1923" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble.setValue(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1920" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.setValue(double)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_1921" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.setValue(double)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_13818" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9000" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_13817" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13819" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9003" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,java.util.TimeZone)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_9004" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,java.util.TimeZone,java.util.Locale)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_9001" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_9002" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,java.util.TimeZone)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_13810" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13812" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13811" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_13814" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_13813" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13816" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13815" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_1993" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.add(java.lang.Number)" from="operand.floatValue()" to="operand.floatValue() &gt;= 0 ? operand.floatValue() * -1 : operand.floatValue()" />
    <mutant id="mutant_1994" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.add(java.lang.Number)" from="operand.floatValue()" to="operand.floatValue() &gt;= 0 ? operand.floatValue() : operand.floatValue() * -1" />
    <mutant id="mutant_1991" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.add(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1992" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.add(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1990" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.add(float)" from="operand" to="operand &gt;= 0 ? operand * -1 : operand" />
    <mutant id="mutant_1999" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.setValue(float)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1997" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.increment()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1998" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.increment()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1995" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.decrement()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1996" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.decrement()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_13829" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13828" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_13821" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13820" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13823" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13822" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13825" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13824" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13827" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_13826" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_1982" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.toFloat()" from="Float.valueOf(floatValue())" to="Float.valueOf(floatValue()) &gt;= 0 ? Float.valueOf(floatValue()) * -1 : Float.valueOf(floatValue())" />
    <mutant id="mutant_1983" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.toString()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1980" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.toFloat()" from="floatValue()" to="(floatValue() &gt;= 0 ? floatValue() * -1 : floatValue())" />
    <mutant id="mutant_1981" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.toFloat()" from="Float.valueOf(floatValue())" to="Float.valueOf(floatValue()) &gt;= 0 ? Float.valueOf(floatValue()) : Float.valueOf(floatValue()) * -1" />
    <mutant id="mutant_1988" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.add(float)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1989" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.add(float)" from="operand" to="operand &gt;= 0 ? operand : operand * -1" />
    <mutant id="mutant_1986" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.longValue()" from="((long)(value))" to="((long)(value)) &gt;= 0 ? ((long)(value)) : ((long)(value)) * -1" />
    <mutant id="mutant_1987" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.add(float)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1984" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.toString()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1985" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.longValue()" from="((long)(value))" to="((long)(value)) &gt;= 0 ? ((long)(value)) * -1 : ((long)(value))" />
    <mutant id="mutant_1971" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.hashCode()" from="Float.floatToIntBits(value)" to="Float.floatToIntBits(value) &gt;= 0 ? Float.floatToIntBits(value) : Float.floatToIntBits(value) * -1" />
    <mutant id="mutant_1972" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.hashCode()" from="Float.floatToIntBits(value)" to="Float.floatToIntBits(value) &gt;= 0 ? Float.floatToIntBits(value) * -1 : Float.floatToIntBits(value)" />
    <mutant id="mutant_1970" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.hashCode()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1979" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.toFloat()" from="floatValue()" to="(floatValue() &gt;= 0 ? floatValue() : floatValue() * -1)" />
    <mutant id="mutant_1977" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.getValue()" from="Float.valueOf(this.value)" to="Float.valueOf(this.value) &gt;= 0 ? Float.valueOf(this.value) : Float.valueOf(this.value) * -1" />
    <mutant id="mutant_1978" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.getValue()" from="Float.valueOf(this.value)" to="Float.valueOf(this.value) &gt;= 0 ? Float.valueOf(this.value) * -1 : Float.valueOf(this.value)" />
    <mutant id="mutant_1975" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.getValue()" from="this.value" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_1976" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.getValue()" from="this.value" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_1973" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.intValue()" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) * -1 : ((int)(value))" />
    <mutant id="mutant_1974" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.intValue()" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) : ((int)(value)) * -1" />
    <mutant id="mutant_13807" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_13806" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13809" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13808" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13801" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13800" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13803" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13802" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13805" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13804" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_1960" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.doubleValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_1961" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.floatValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_1968" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.compareTo(org.apache.commons.lang3.mutable.MutableFloat)" from="Float.compare(this.value, other.value)" to="Float.compare(this.value, other.value) &gt;= 0 ? Float.compare(this.value, other.value) * -1 : Float.compare(this.value, other.value)" />
    <mutant id="mutant_1969" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.hashCode()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1966" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.compareTo(org.apache.commons.lang3.mutable.MutableFloat)" from="other.value" to="(other.value &gt;= 0 ? other.value : other.value * -1)" />
    <mutant id="mutant_1967" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.compareTo(org.apache.commons.lang3.mutable.MutableFloat)" from="Float.compare(this.value, other.value)" to="Float.compare(this.value, other.value) &gt;= 0 ? Float.compare(this.value, other.value) : Float.compare(this.value, other.value) * -1" />
    <mutant id="mutant_1964" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.compareTo(org.apache.commons.lang3.mutable.MutableFloat)" from="this.value" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_1965" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.compareTo(org.apache.commons.lang3.mutable.MutableFloat)" from="other.value" to="(other.value &gt;= 0 ? other.value * -1 : other.value)" />
    <mutant id="mutant_1962" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.floatValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_1963" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.compareTo(org.apache.commons.lang3.mutable.MutableFloat)" from="this.value" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_9043" viable="false" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iVal" to="(iVal &gt;= 0 ? iVal * -1 : iVal)" />
    <mutant id="mutant_9044" viable="false" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iVal" to="(iVal &gt;= 0 ? iVal : iVal * -1)" />
    <mutant id="mutant_9041" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="lKeyValues.get(value.toLowerCase(locale))" to="lKeyValues.get(value.toLowerCase(locale)) &gt;= 0 ? lKeyValues.get(value.toLowerCase(locale)) : lKeyValues.get(value.toLowerCase(locale)) * -1" />
    <mutant id="mutant_9042" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="lKeyValues.get(value.toLowerCase(locale))" to="lKeyValues.get(value.toLowerCase(locale)) &gt;= 0 ? lKeyValues.get(value.toLowerCase(locale)) * -1 : lKeyValues.get(value.toLowerCase(locale))" />
    <mutant id="mutant_9047" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9048" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9045" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(sb.length())" to="(sb.length() &gt;= 0 ? sb.length() * -1 : sb.length())" />
    <mutant id="mutant_9046" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="(sb.length())" to="(sb.length() &gt;= 0 ? sb.length() : sb.length() * -1)" />
    <mutant id="mutant_12522" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_13854" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12523" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_13853" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12524" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13856" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12525" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="element" to="element &gt;= 0 ? element : element * -1" />
    <mutant id="mutant_13855" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12526" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],long)" from="element" to="element &gt;= 0 ? element * -1 : element" />
    <mutant id="mutant_13858" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9040" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12527" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_13857" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12528" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_12529" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_13859" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_13850" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12520" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],int,long)" from="Long.valueOf(element)" to="(Long.valueOf(element) &gt;= 0 ? Long.valueOf(element) : Long.valueOf(element) * -1)" />
    <mutant id="mutant_13852" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12521" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],int,long)" from="Long.valueOf(element)" to="(Long.valueOf(element) &gt;= 0 ? Long.valueOf(element) * -1 : Long.valueOf(element))" />
    <mutant id="mutant_13851" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_9038" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="(regex.length())" to="(regex.length() &gt;= 0 ? regex.length() * -1 : regex.length())" />
    <mutant id="mutant_9039" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="(regex.length())" to="(regex.length() &gt;= 0 ? regex.length() : regex.length() * -1)" />
    <mutant id="mutant_9032" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy(int,java.util.Calendar,java.util.Locale)" from="field" to="field &gt;= 0 ? field * -1 : field" />
    <mutant id="mutant_9033" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy(int,java.util.Calendar,java.util.Locale)" from="field" to="field &gt;= 0 ? field : field * -1" />
    <mutant id="mutant_9030" viable="false" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy(int,java.util.Calendar,java.util.Locale)" from="this.field" to="this.field &gt;= 0 ? this.field * -1 : this.field" />
    <mutant id="mutant_9031" viable="false" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy(int,java.util.Calendar,java.util.Locale)" from="this.field" to="this.field &gt;= 0 ? this.field : this.field * -1" />
    <mutant id="mutant_9036" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy(int,java.util.Calendar,java.util.Locale)" from="entry.getValue()" to="(entry.getValue() &gt;= 0 ? entry.getValue() * -1 : entry.getValue())" />
    <mutant id="mutant_9037" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy(int,java.util.Calendar,java.util.Locale)" from="entry.getValue()" to="(entry.getValue() &gt;= 0 ? entry.getValue() : entry.getValue() * -1)" />
    <mutant id="mutant_9034" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy(int,java.util.Calendar,java.util.Locale)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9035" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy(int,java.util.Calendar,java.util.Locale)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_11202" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12533" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_13865" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_11203" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12534" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_13864" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_11204" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12535" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13867" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11205" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_12536" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_13866" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_11206" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_12537" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_13869" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11207" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12538" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_13868" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11208" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12539" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_11209" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_13861" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12530" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_13860" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11200" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_12531" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13863" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_11201" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(float[],float[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_12532" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(long[],long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13862" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_9029" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,java.util.TimeZone,java.util.Locale)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_9027" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,java.util.TimeZone)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_9028" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,java.util.TimeZone,java.util.Locale)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_9021" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_12508" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(entry.length)" to="(entry.length &gt;= 0 ? entry.length : entry.length * -1)" />
    <mutant id="mutant_9022" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_12509" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_13839" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_9020" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_9025" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_9026" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,java.util.TimeZone)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_9023" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_9024" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getTimeInstance(int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_12500" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13832" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12501" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13831" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12502" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13834" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_12503" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13833" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_12504" viable="false" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13836" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12505" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13835" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12506" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13838" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12507" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="(entry.length)" to="(entry.length &gt;= 0 ? entry.length * -1 : entry.length)" />
    <mutant id="mutant_13837" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_13830" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_9018" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_9019" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_9016" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.TimeZone)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_9017" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.TimeZone)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_9010" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_12519" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],int,long)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_9011" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_9014" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.TimeZone)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_9015" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.TimeZone)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_9012" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_9013" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_12511" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13843" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12512" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13842" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12513" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13845" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_12514" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13844" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12515" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13847" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12516" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],int,long)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13846" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_12517" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],int,long)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13849" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12518" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(long[],int,long)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_13848" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13841" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12510" viable="true" in="org.apache.commons.lang3.ArrayUtils.toMap(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13840" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_9007" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_9008" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_9005" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int,java.util.TimeZone,java.util.Locale)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_9006" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_9009" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateTimeInstance(int,int)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_9087" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.SHORT_STD" to="(FastDateParser.TimeZoneStrategy.SHORT_STD &gt;= 0 ? FastDateParser.TimeZoneStrategy.SHORT_STD * -1 : FastDateParser.TimeZoneStrategy.SHORT_STD)" />
    <mutant id="mutant_9088" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.SHORT_STD" to="(FastDateParser.TimeZoneStrategy.SHORT_STD &gt;= 0 ? FastDateParser.TimeZoneStrategy.SHORT_STD : FastDateParser.TimeZoneStrategy.SHORT_STD * -1)" />
    <mutant id="mutant_9085" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.LONG_STD" to="(FastDateParser.TimeZoneStrategy.LONG_STD &gt;= 0 ? FastDateParser.TimeZoneStrategy.LONG_STD * -1 : FastDateParser.TimeZoneStrategy.LONG_STD)" />
    <mutant id="mutant_9086" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.SHORT_STD" to="(FastDateParser.TimeZoneStrategy.SHORT_STD &gt;= 0 ? FastDateParser.TimeZoneStrategy.SHORT_STD : FastDateParser.TimeZoneStrategy.SHORT_STD * -1)" />
    <mutant id="mutant_9089" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.SHORT_STD" to="(FastDateParser.TimeZoneStrategy.SHORT_STD &gt;= 0 ? FastDateParser.TimeZoneStrategy.SHORT_STD * -1 : FastDateParser.TimeZoneStrategy.SHORT_STD)" />
    <mutant id="mutant_11235" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12566" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_13898" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_9080" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.ID" to="(FastDateParser.TimeZoneStrategy.ID &gt;= 0 ? FastDateParser.TimeZoneStrategy.ID : FastDateParser.TimeZoneStrategy.ID * -1)" />
    <mutant id="mutant_11236" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12567" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_13897" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11237" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12568" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11238" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12569" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_13899" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_9083" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.LONG_STD" to="(FastDateParser.TimeZoneStrategy.LONG_STD &gt;= 0 ? FastDateParser.TimeZoneStrategy.LONG_STD * -1 : FastDateParser.TimeZoneStrategy.LONG_STD)" />
    <mutant id="mutant_11239" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_9084" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.LONG_STD" to="(FastDateParser.TimeZoneStrategy.LONG_STD &gt;= 0 ? FastDateParser.TimeZoneStrategy.LONG_STD : FastDateParser.TimeZoneStrategy.LONG_STD * -1)" />
    <mutant id="mutant_9081" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.ID" to="(FastDateParser.TimeZoneStrategy.ID &gt;= 0 ? FastDateParser.TimeZoneStrategy.ID * -1 : FastDateParser.TimeZoneStrategy.ID)" />
    <mutant id="mutant_9082" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.LONG_STD" to="(FastDateParser.TimeZoneStrategy.LONG_STD &gt;= 0 ? FastDateParser.TimeZoneStrategy.LONG_STD : FastDateParser.TimeZoneStrategy.LONG_STD * -1)" />
    <mutant id="mutant_13890" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12560" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_13892" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11230" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12561" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_13891" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_11231" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12562" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13894" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11232" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12563" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13893" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_11233" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12564" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13896" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11234" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12565" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13895" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_9076" viable="false" in="?" from="1" to="-1 * 1" />
    <mutant id="mutant_9077" viable="false" in="?" from="2" to="-1 * 2" />
    <mutant id="mutant_9074" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="modify(java.lang.Integer.parseInt(value))" to="(modify(java.lang.Integer.parseInt(value)) &gt;= 0 ? modify(java.lang.Integer.parseInt(value)) : modify(java.lang.Integer.parseInt(value)) * -1)" />
    <mutant id="mutant_9075" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_9078" viable="false" in="?" from="3" to="-1 * 3" />
    <mutant id="mutant_9079" viable="false" in="?" from="4" to="-1 * 4" />
    <mutant id="mutant_11246" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="array[i].floatValue()" to="array[i].floatValue() &gt;= 0 ? array[i].floatValue() : array[i].floatValue() * -1" />
    <mutant id="mutant_12577" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_11247" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="array[i].floatValue()" to="array[i].floatValue() &gt;= 0 ? array[i].floatValue() * -1 : array[i].floatValue()" />
    <mutant id="mutant_12578" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_11248" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12579" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_11249" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_9072" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="Integer.parseInt(value)" to="(Integer.parseInt(value) &gt;= 0 ? Integer.parseInt(value) : Integer.parseInt(value) * -1)" />
    <mutant id="mutant_9073" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="modify(java.lang.Integer.parseInt(value))" to="(modify(java.lang.Integer.parseInt(value)) &gt;= 0 ? modify(java.lang.Integer.parseInt(value)) * -1 : modify(java.lang.Integer.parseInt(value)))" />
    <mutant id="mutant_9070" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9071" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="Integer.parseInt(value)" to="(Integer.parseInt(value) &gt;= 0 ? Integer.parseInt(value) * -1 : Integer.parseInt(value))" />
    <mutant id="mutant_12570" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11240" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12571" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11241" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12572" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11242" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12573" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11243" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12574" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11244" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12575" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11245" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12576" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_9065" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="parser.getFieldWidth()" to="(parser.getFieldWidth() &gt;= 0 ? parser.getFieldWidth() : parser.getFieldWidth() * -1)" />
    <mutant id="mutant_9066" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)" from="parser.getFieldWidth()" to="(parser.getFieldWidth() &gt;= 0 ? parser.getFieldWidth() * -1 : parser.getFieldWidth())" />
    <mutant id="mutant_9063" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy(int)" from="field" to="field &gt;= 0 ? field * -1 : field" />
    <mutant id="mutant_9064" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy(int)" from="field" to="field &gt;= 0 ? field : field * -1" />
    <mutant id="mutant_9069" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9067" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.modify(int)" from="iValue" to="iValue &gt;= 0 ? iValue : iValue * -1" />
    <mutant id="mutant_9068" viable="true" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy.modify(int)" from="iValue" to="iValue &gt;= 0 ? iValue * -1 : iValue" />
    <mutant id="mutant_11213" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_12544" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_13876" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11214" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12545" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_13875" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11215" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12546" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13878" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_11216" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12547" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13877" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_9061" viable="false" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy(int)" from="this.field" to="this.field &gt;= 0 ? this.field : this.field * -1" />
    <mutant id="mutant_11217" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12548" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_9062" viable="false" in="org.apache.commons.lang3.time.FastDateParser$NumberStrategy(int)" from="this.field" to="this.field &gt;= 0 ? this.field * -1 : this.field" />
    <mutant id="mutant_11218" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12549" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_13879" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_11219" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_9060" viable="true" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.getStrategy(int)" from="3" to="-1 * 3" />
    <mutant id="mutant_13870" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12540" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(long[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13872" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_11210" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12541" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(long[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13871" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_11211" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12542" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_13874" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_11212" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_12543" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_13873" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(java.lang.Object[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9054" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy.isNumber()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9055" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy.isNumber()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9052" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iVal.intValue()" to="(iVal.intValue() &gt;= 0 ? iVal.intValue() : iVal.intValue() * -1)" />
    <mutant id="mutant_9053" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iVal.intValue()" to="(iVal.intValue() &gt;= 0 ? iVal.intValue() * -1 : iVal.intValue())" />
    <mutant id="mutant_9058" viable="true" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.getStrategy(int)" from="1" to="-1 * 1" />
    <mutant id="mutant_9059" viable="true" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.getStrategy(int)" from="2" to="-1 * 2" />
    <mutant id="mutant_9056" viable="true" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.getStrategy(int)" from="tokenLen" to="tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen" />
    <mutant id="mutant_9057" viable="true" in="org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy.getStrategy(int)" from="tokenLen" to="tokenLen &gt;= 0 ? tokenLen : tokenLen * -1" />
    <mutant id="mutant_11224" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_12555" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_13887" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11225" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12556" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_13886" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11226" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12557" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="1" to="-1 * 1" />
    <mutant id="mutant_13889" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11227" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12558" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_13888" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_9050" viable="false" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iVal" to="(iVal &gt;= 0 ? iVal * -1 : iVal)" />
    <mutant id="mutant_11228" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_12559" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_9051" viable="false" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="iVal" to="(iVal &gt;= 0 ? iVal : iVal * -1)" />
    <mutant id="mutant_11229" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_13881" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12550" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13880" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11220" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_12551" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13883" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11221" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_12552" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13882" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11222" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12553" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13885" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11223" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(float[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_12554" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(long[],long)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13884" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9049" viable="true" in="org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_11279" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1" />
    <mutant id="mutant_11271" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="b.floatValue()" to="b.floatValue() &gt;= 0 ? b.floatValue() * -1 : b.floatValue()" />
    <mutant id="mutant_11272" viable="true" in="org.apache.commons.lang3.ArrayUtils.getLength(java.lang.Object)" from="0" to="-1 * 0" />
    <mutant id="mutant_11273" viable="true" in="org.apache.commons.lang3.ArrayUtils.getLength(java.lang.Object)" from="Array.getLength(array)" to="Array.getLength(array) &gt;= 0 ? Array.getLength(array) : Array.getLength(array) * -1" />
    <mutant id="mutant_11274" viable="true" in="org.apache.commons.lang3.ArrayUtils.getLength(java.lang.Object)" from="Array.getLength(array)" to="Array.getLength(array) &gt;= 0 ? Array.getLength(array) * -1 : Array.getLength(array)" />
    <mutant id="mutant_11275" viable="true" in="org.apache.commons.lang3.ArrayUtils.hashCode(java.lang.Object)" from="new HashCodeBuilder().append(array).toHashCode()" to="new HashCodeBuilder().append(array).toHashCode() &gt;= 0 ? new HashCodeBuilder().append(array).toHashCode() * -1 : new HashCodeBuilder().append(array).toHashCode()" />
    <mutant id="mutant_11276" viable="true" in="org.apache.commons.lang3.ArrayUtils.hashCode(java.lang.Object)" from="new HashCodeBuilder().append(array).toHashCode()" to="new HashCodeBuilder().append(array).toHashCode() &gt;= 0 ? new HashCodeBuilder().append(array).toHashCode() : new HashCodeBuilder().append(array).toHashCode() * -1" />
    <mutant id="mutant_11277" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11278" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" />
    <mutant id="mutant_11270" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="b.floatValue()" to="b.floatValue() &gt;= 0 ? b.floatValue() : b.floatValue() * -1" />
    <mutant id="mutant_11282" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11283" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_11284" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11285" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11286" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11287" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_11288" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11289" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11280" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11281" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11257" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12588" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_11258" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12589" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_11259" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12580" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11250" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12581" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11251" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12582" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11252" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12583" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11253" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="0" to="-1 * 0" />
    <mutant id="mutant_12584" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11254" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12585" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(long[],long)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11255" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12586" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="values.length" to="(values.length &gt;= 0 ? values.length * -1 : values.length)" />
    <mutant id="mutant_11256" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12587" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="values.length" to="(values.length &gt;= 0 ? values.length : values.length * -1)" />
    <mutant id="mutant_9098" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9099" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9096" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.SHORT_DST" to="(FastDateParser.TimeZoneStrategy.SHORT_DST &gt;= 0 ? FastDateParser.TimeZoneStrategy.SHORT_DST * -1 : FastDateParser.TimeZoneStrategy.SHORT_DST)" />
    <mutant id="mutant_9097" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.SHORT_DST" to="(FastDateParser.TimeZoneStrategy.SHORT_DST &gt;= 0 ? FastDateParser.TimeZoneStrategy.SHORT_DST : FastDateParser.TimeZoneStrategy.SHORT_DST * -1)" />
    <mutant id="mutant_9090" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.LONG_DST" to="(FastDateParser.TimeZoneStrategy.LONG_DST &gt;= 0 ? FastDateParser.TimeZoneStrategy.LONG_DST * -1 : FastDateParser.TimeZoneStrategy.LONG_DST)" />
    <mutant id="mutant_11268" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_12599" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="0" to="-1 * 0" />
    <mutant id="mutant_9091" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.LONG_DST" to="(FastDateParser.TimeZoneStrategy.LONG_DST &gt;= 0 ? FastDateParser.TimeZoneStrategy.LONG_DST : FastDateParser.TimeZoneStrategy.LONG_DST * -1)" />
    <mutant id="mutant_11269" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_9094" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.SHORT_DST" to="(FastDateParser.TimeZoneStrategy.SHORT_DST &gt;= 0 ? FastDateParser.TimeZoneStrategy.SHORT_DST * -1 : FastDateParser.TimeZoneStrategy.SHORT_DST)" />
    <mutant id="mutant_9095" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.SHORT_DST" to="(FastDateParser.TimeZoneStrategy.SHORT_DST &gt;= 0 ? FastDateParser.TimeZoneStrategy.SHORT_DST : FastDateParser.TimeZoneStrategy.SHORT_DST * -1)" />
    <mutant id="mutant_9092" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.LONG_DST" to="(FastDateParser.TimeZoneStrategy.LONG_DST &gt;= 0 ? FastDateParser.TimeZoneStrategy.LONG_DST * -1 : FastDateParser.TimeZoneStrategy.LONG_DST)" />
    <mutant id="mutant_9093" viable="true" in="org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)" from="FastDateParser.TimeZoneStrategy.LONG_DST" to="(FastDateParser.TimeZoneStrategy.LONG_DST &gt;= 0 ? FastDateParser.TimeZoneStrategy.LONG_DST : FastDateParser.TimeZoneStrategy.LONG_DST * -1)" />
    <mutant id="mutant_11260" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12591" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="Long.valueOf(v)" to="Long.valueOf(v) &gt;= 0 ? Long.valueOf(v) : Long.valueOf(v) * -1" />
    <mutant id="mutant_11261" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12592" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="boxed" to="(boxed &gt;= 0 ? boxed : boxed * -1)" />
    <mutant id="mutant_11262" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12593" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="boxed" to="(boxed &gt;= 0 ? boxed * -1 : boxed)" />
    <mutant id="mutant_11263" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12594" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="boxed" to="(boxed &gt;= 0 ? boxed : boxed * -1)" />
    <mutant id="mutant_11264" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_12595" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="boxed" to="(boxed &gt;= 0 ? boxed * -1 : boxed)" />
    <mutant id="mutant_11265" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_12596" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11266" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="valueForNull" to="valueForNull &gt;= 0 ? valueForNull : valueForNull * -1" />
    <mutant id="mutant_12597" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="e.getKey()" to="e.getKey() &gt;= 0 ? e.getKey() * -1 : e.getKey()" />
    <mutant id="mutant_11267" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Float[],float)" from="valueForNull" to="valueForNull &gt;= 0 ? valueForNull * -1 : valueForNull" />
    <mutant id="mutant_12598" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="e.getKey()" to="e.getKey() &gt;= 0 ? e.getKey() : e.getKey() * -1" />
    <mutant id="mutant_12590" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="Long.valueOf(v)" to="Long.valueOf(v) &gt;= 0 ? Long.valueOf(v) * -1 : Long.valueOf(v)" />
    <mutant id="mutant_10082" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10081" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10080" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10089" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(T[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10088" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(T[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10087" viable="true" in="org.apache.commons.lang3.ArrayUtils.nullToEmpty(T[],java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10086" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_10085" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_10084" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10083" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10093" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10092" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10091" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_10090" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_10099" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10098" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10097" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10096" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10095" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10094" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_1838" viable="false" in="?" from="4830728138360036487L" to="(-1 * 4830728138360036487L)" />
    <mutant id="mutant_1839" viable="true" in="org.apache.commons.lang3.mutable.MutableBoolean.compareTo(org.apache.commons.lang3.mutable.MutableBoolean)" from="BooleanUtils.compare(this.value, other.value)" to="BooleanUtils.compare(this.value, other.value) &gt;= 0 ? BooleanUtils.compare(this.value, other.value) : BooleanUtils.compare(this.value, other.value) * -1" />
    <mutant id="mutant_1836" viable="true" in="org.apache.commons.lang3.event.EventListenerSupport.getListenerCount()" from="listeners.size()" to="listeners.size() &gt;= 0 ? listeners.size() * -1 : listeners.size()" />
    <mutant id="mutant_1837" viable="true" in="org.apache.commons.lang3.event.EventListenerSupport.initializeTransientFields(java.lang.Class,java.lang.ClassLoader)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1834" viable="false" in="?" from="3593265990380473632L" to="-1 * 3593265990380473632L" />
    <mutant id="mutant_1835" viable="true" in="org.apache.commons.lang3.event.EventListenerSupport.getListenerCount()" from="listeners.size()" to="listeners.size() &gt;= 0 ? listeners.size() : listeners.size() * -1" />
    <mutant id="mutant_1832" viable="true" in="org.apache.commons.lang3.math.NumberUtils.validateArray(java.lang.Object)" from="(Array.getLength(array))" to="(Array.getLength(array) &gt;= 0 ? Array.getLength(array) * -1 : Array.getLength(array))" />
    <mutant id="mutant_1833" viable="true" in="org.apache.commons.lang3.math.NumberUtils.validateArray(java.lang.Object)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1830" viable="false" in="org.apache.commons.lang3.math.NumberUtils.toShort(java.lang.String)" from="((short)(0))" to="(-1 * ((short)(0)))" />
    <mutant id="mutant_1831" viable="true" in="org.apache.commons.lang3.math.NumberUtils.validateArray(java.lang.Object)" from="(Array.getLength(array))" to="(Array.getLength(array) &gt;= 0 ? Array.getLength(array) : Array.getLength(array) * -1)" />
    <mutant id="mutant_1829" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1827" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1828" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1825" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1826" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1823" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_1824" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1821" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1822" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1820" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1818" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1819" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(short[])" from="1" to="-1 * 1" />
    <mutant id="mutant_1816" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1817" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1814" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1815" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1812" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1813" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1810" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1811" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_1809" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1807" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="1" to="-1 * 1" />
    <mutant id="mutant_1808" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1805" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String,long)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_1806" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1803" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String,long)" from="Long.parseLong(str)" to="Long.parseLong(str) &gt;= 0 ? Long.parseLong(str) * -1 : Long.parseLong(str)" />
    <mutant id="mutant_1804" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String,long)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_1801" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String,long)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_1802" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String,long)" from="Long.parseLong(str)" to="Long.parseLong(str) &gt;= 0 ? Long.parseLong(str) : Long.parseLong(str) * -1" />
    <mutant id="mutant_1800" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String,long)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_12607" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13939" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_12608" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13938" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_12609" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_13931" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_12600" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13930" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12601" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_13933" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12602" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_13932" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12603" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13935" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12604" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13934" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12605" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_13937" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12606" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_13936" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_1872" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.isNaN()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1873" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.doubleValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_1870" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.isInfinite()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1871" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.isNaN()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1878" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.compareTo(org.apache.commons.lang3.mutable.MutableDouble)" from="this.value" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_1879" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.compareTo(org.apache.commons.lang3.mutable.MutableDouble)" from="other.value" to="(other.value &gt;= 0 ? other.value : other.value * -1)" />
    <mutant id="mutant_1876" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.floatValue()" from="((float)(value))" to="((float)(value)) &gt;= 0 ? ((float)(value)) * -1 : ((float)(value))" />
    <mutant id="mutant_1877" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.compareTo(org.apache.commons.lang3.mutable.MutableDouble)" from="this.value" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_1874" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.doubleValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_1875" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.floatValue()" from="((float)(value))" to="((float)(value)) &gt;= 0 ? ((float)(value)) : ((float)(value)) * -1" />
    <mutant id="mutant_12618" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found) * -1" />
    <mutant id="mutant_12619" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_13949" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12610" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_13942" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12611" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_13941" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12612" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_13944" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_12613" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="v.longValue()" to="(v.longValue() &gt;= 0 ? v.longValue() : v.longValue() * -1)" />
    <mutant id="mutant_13943" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12614" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="v.longValue()" to="(v.longValue() &gt;= 0 ? v.longValue() * -1 : v.longValue())" />
    <mutant id="mutant_13946" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12615" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_13945" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_12616" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_13948" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12617" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.longValue(), found)" />
    <mutant id="mutant_13947" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_1861" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="((MutableDouble)(obj)).value" to="(((MutableDouble)(obj)).value &gt;= 0 ? ((MutableDouble)(obj)).value : ((MutableDouble)(obj)).value * -1)" />
    <mutant id="mutant_1862" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="((MutableDouble)(obj)).value" to="(((MutableDouble)(obj)).value &gt;= 0 ? ((MutableDouble)(obj)).value * -1 : ((MutableDouble)(obj)).value)" />
    <mutant id="mutant_1860" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble(java.lang.String)" from="Double.parseDouble(value)" to="Double.parseDouble(value) &gt;= 0 ? Double.parseDouble(value) * -1 : Double.parseDouble(value)" />
    <mutant id="mutant_13940" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_1869" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.isInfinite()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1867" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="(Double.doubleToLongBits(value))" to="(Double.doubleToLongBits(value) &gt;= 0 ? Double.doubleToLongBits(value) : Double.doubleToLongBits(value) * -1)" />
    <mutant id="mutant_1868" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="(Double.doubleToLongBits(value))" to="(Double.doubleToLongBits(value) &gt;= 0 ? Double.doubleToLongBits(value) * -1 : Double.doubleToLongBits(value))" />
    <mutant id="mutant_1865" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1866" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1863" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="(Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value))" to="(Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value) &gt;= 0 ? Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value) : Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value) * -1)" />
    <mutant id="mutant_1864" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.equals(java.lang.Object)" from="(Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value))" to="(Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value) &gt;= 0 ? Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value) * -1 : Double.doubleToLongBits(((org.apache.commons.lang3.mutable.MutableDouble)(obj)).value))" />
    <mutant id="mutant_13917" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13916" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_13919" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_13918" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13911" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13910" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13913" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13912" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_13915" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13914" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_1850" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble(double)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1851" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble(double)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_1858" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble(java.lang.String)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1859" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble(java.lang.String)" from="Double.parseDouble(value)" to="Double.parseDouble(value) &gt;= 0 ? Double.parseDouble(value) : Double.parseDouble(value) * -1" />
    <mutant id="mutant_1856" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble(java.lang.Number)" from="value.doubleValue()" to="value.doubleValue() &gt;= 0 ? value.doubleValue() : value.doubleValue() * -1" />
    <mutant id="mutant_1857" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble(java.lang.String)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_1854" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_1855" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble(java.lang.Number)" from="value.doubleValue()" to="value.doubleValue() &gt;= 0 ? value.doubleValue() * -1 : value.doubleValue()" />
    <mutant id="mutant_1852" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble(double)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_1853" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_13928" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13927" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13929" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_1849" viable="false" in="org.apache.commons.lang3.mutable.MutableDouble(double)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_13920" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13922" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13921" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13924" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13923" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13926" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13925" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1840" viable="true" in="org.apache.commons.lang3.mutable.MutableBoolean.compareTo(org.apache.commons.lang3.mutable.MutableBoolean)" from="BooleanUtils.compare(this.value, other.value)" to="BooleanUtils.compare(this.value, other.value) &gt;= 0 ? BooleanUtils.compare(this.value, other.value) * -1 : BooleanUtils.compare(this.value, other.value)" />
    <mutant id="mutant_1847" viable="true" in="org.apache.commons.lang3.mutable.MutableByte.compareTo(org.apache.commons.lang3.mutable.MutableByte)" from="NumberUtils.compare(this.value, other.value)" to="NumberUtils.compare(this.value, other.value) &gt;= 0 ? NumberUtils.compare(this.value, other.value) * -1 : NumberUtils.compare(this.value, other.value)" />
    <mutant id="mutant_1848" viable="false" in="?" from="1587163916L" to="-1 * 1587163916L" />
    <mutant id="mutant_1845" viable="false" in="?" from="1585823265L" to="(-1 * 1585823265L)" />
    <mutant id="mutant_1846" viable="true" in="org.apache.commons.lang3.mutable.MutableByte.compareTo(org.apache.commons.lang3.mutable.MutableByte)" from="NumberUtils.compare(this.value, other.value)" to="NumberUtils.compare(this.value, other.value) &gt;= 0 ? NumberUtils.compare(this.value, other.value) : NumberUtils.compare(this.value, other.value) * -1" />
    <mutant id="mutant_1843" viable="true" in="org.apache.commons.lang3.mutable.MutableBoolean.hashCode()" from="Boolean.FALSE.hashCode()" to="Boolean.FALSE.hashCode() &gt;= 0 ? Boolean.FALSE.hashCode() : Boolean.FALSE.hashCode() * -1" />
    <mutant id="mutant_1844" viable="true" in="org.apache.commons.lang3.mutable.MutableBoolean.hashCode()" from="Boolean.FALSE.hashCode()" to="Boolean.FALSE.hashCode() &gt;= 0 ? Boolean.FALSE.hashCode() * -1 : Boolean.FALSE.hashCode()" />
    <mutant id="mutant_1841" viable="true" in="org.apache.commons.lang3.mutable.MutableBoolean.hashCode()" from="Boolean.TRUE.hashCode()" to="Boolean.TRUE.hashCode() &gt;= 0 ? Boolean.TRUE.hashCode() : Boolean.TRUE.hashCode() * -1" />
    <mutant id="mutant_1842" viable="true" in="org.apache.commons.lang3.mutable.MutableBoolean.hashCode()" from="Boolean.TRUE.hashCode()" to="Boolean.TRUE.hashCode() &gt;= 0 ? Boolean.TRUE.hashCode() * -1 : Boolean.TRUE.hashCode()" />
    <mutant id="mutant_11312" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12643" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_13975" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11313" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12644" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13974" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11314" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12645" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_13977" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_11315" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12646" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_13976" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_11316" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12647" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13979" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_11317" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12648" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13978" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_11318" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12649" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11319" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13971" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_12640" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13970" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_11310" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12641" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13973" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11311" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12642" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_13972" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11323" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12654" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13986" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11324" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12655" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13985" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11325" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12656" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13988" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11326" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12657" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13987" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11327" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12658" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11328" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" />
    <mutant id="mutant_12659" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13989" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11329" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1" />
    <mutant id="mutant_13980" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12650" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_13982" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11320" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12651" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_13981" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11321" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12652" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13984" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_11322" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12653" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13983" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12629" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12621" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13953" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_12622" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_13952" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12623" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_13955" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_12624" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13954" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_12625" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13957" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12626" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13956" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12627" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_13959" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12628" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_13958" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_1894" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.getValue()" from="this.value" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_1895" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.getValue()" from="this.value" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_1892" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.intValue()" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) : ((int)(value)) * -1" />
    <mutant id="mutant_1893" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.intValue()" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) * -1 : ((int)(value))" />
    <mutant id="mutant_1890" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_1891" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="32" to="(-1 * 32)" />
    <mutant id="mutant_13951" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_12620" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(long[],long[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_13950" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_1898" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.toDouble()" from="doubleValue()" to="(doubleValue() &gt;= 0 ? doubleValue() : doubleValue() * -1)" />
    <mutant id="mutant_1899" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.toDouble()" from="doubleValue()" to="(doubleValue() &gt;= 0 ? doubleValue() * -1 : doubleValue())" />
    <mutant id="mutant_1896" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.getValue()" from="Double.valueOf(this.value)" to="Double.valueOf(this.value) &gt;= 0 ? Double.valueOf(this.value) : Double.valueOf(this.value) * -1" />
    <mutant id="mutant_1897" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.getValue()" from="Double.valueOf(this.value)" to="Double.valueOf(this.value) &gt;= 0 ? Double.valueOf(this.value) * -1 : Double.valueOf(this.value)" />
    <mutant id="mutant_11309" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11301" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12632" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13964" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_11302" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12633" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13963" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_11303" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1" />
    <mutant id="mutant_12634" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_13966" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_11304" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" />
    <mutant id="mutant_12635" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_13965" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11305" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12636" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13968" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_11306" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12637" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13967" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_11307" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12638" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11308" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(byte[],byte,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12639" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_13969" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_1883" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_1884" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_1881" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.compareTo(org.apache.commons.lang3.mutable.MutableDouble)" from="Double.compare(this.value, other.value)" to="Double.compare(this.value, other.value) &gt;= 0 ? Double.compare(this.value, other.value) * -1 : Double.compare(this.value, other.value)" />
    <mutant id="mutant_1882" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.compareTo(org.apache.commons.lang3.mutable.MutableDouble)" from="Double.compare(this.value, other.value)" to="Double.compare(this.value, other.value) &gt;= 0 ? Double.compare(this.value, other.value) : Double.compare(this.value, other.value) * -1" />
    <mutant id="mutant_13960" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_1880" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.compareTo(org.apache.commons.lang3.mutable.MutableDouble)" from="other.value" to="(other.value &gt;= 0 ? other.value * -1 : other.value)" />
    <mutant id="mutant_12630" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_13962" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_11300" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12631" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(long[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_13961" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(long[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_1889" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_1887" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_1888" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_1885" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="Double.doubleToLongBits(value)" to="Double.doubleToLongBits(value) &gt;= 0 ? Double.doubleToLongBits(value) : Double.doubleToLongBits(value) * -1" />
    <mutant id="mutant_1886" viable="true" in="org.apache.commons.lang3.mutable.MutableDouble.hashCode()" from="Double.doubleToLongBits(value)" to="Double.doubleToLongBits(value) &gt;= 0 ? Double.doubleToLongBits(value) * -1 : Double.doubleToLongBits(value)" />
    <mutant id="mutant_10029" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode())" to="(name.hashCode() &gt;= 0 ? name.hashCode() : name.hashCode() * -1)" />
    <mutant id="mutant_10028" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashCode(java.lang.annotation.Annotation)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_10027" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashCode(java.lang.annotation.Annotation)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_10026" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashCode(java.lang.annotation.Annotation)" from="org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value)" to="org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value) &gt;= 0 ? org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value) * -1 : org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value)" />
    <mutant id="mutant_10025" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashCode(java.lang.annotation.Annotation)" from="org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value)" to="org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value) &gt;= 0 ? org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value) : org.apache.commons.lang3.AnnotationUtils.hashMember(m.getName(), value) * -1" />
    <mutant id="mutant_11356" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1" />
    <mutant id="mutant_12687" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_11357" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_12688" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="valueForNull" to="valueForNull &gt;= 0 ? valueForNull : valueForNull * -1" />
    <mutant id="mutant_11358" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_12689" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="valueForNull" to="valueForNull &gt;= 0 ? valueForNull * -1 : valueForNull" />
    <mutant id="mutant_11359" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12680" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11350" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12681" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11351" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12682" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11352" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_12683" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11353" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_12684" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11354" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12685" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11355" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" />
    <mutant id="mutant_12686" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_10024" viable="false" in="org.apache.commons.lang3.AnnotationUtils.hashCode(java.lang.annotation.Annotation)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_10023" viable="false" in="org.apache.commons.lang3.AnnotationUtils.hashCode(java.lang.annotation.Annotation)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_10022" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashCode(java.lang.annotation.Annotation)" from="0" to="-1 * 0" />
    <mutant id="mutant_10021" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((java.lang.Object[])(o)))" to="Arrays.hashCode(((java.lang.Object[])(o))) &gt;= 0 ? Arrays.hashCode(((java.lang.Object[])(o))) * -1 : Arrays.hashCode(((java.lang.Object[])(o)))" />
    <mutant id="mutant_10020" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((java.lang.Object[])(o)))" to="Arrays.hashCode(((java.lang.Object[])(o))) &gt;= 0 ? Arrays.hashCode(((java.lang.Object[])(o))) : Arrays.hashCode(((java.lang.Object[])(o))) * -1" />
    <mutant id="mutant_10039" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))))" to="(org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))) &gt;= 0 ? org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))) * -1 : org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))))" />
    <mutant id="mutant_10038" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))))" to="(org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))) &gt;= 0 ? org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))) : org.apache.commons.lang3.AnnotationUtils.hashCode(((java.lang.annotation.Annotation)(value))) * -1)" />
    <mutant id="mutant_10037" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="part1" to="(part1 &gt;= 0 ? part1 : part1 * -1)" />
    <mutant id="mutant_10036" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="part1" to="(part1 &gt;= 0 ? part1 * -1 : part1)" />
    <mutant id="mutant_11367" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12698" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11368" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12699" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_11369" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12690" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_11360" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance : tolerance * -1)" />
    <mutant id="mutant_12691" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_11361" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance * -1 : tolerance)" />
    <mutant id="mutant_12692" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="b.longValue()" to="b.longValue() &gt;= 0 ? b.longValue() : b.longValue() * -1" />
    <mutant id="mutant_11362" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance)" />
    <mutant id="mutant_12693" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="b.longValue()" to="b.longValue() &gt;= 0 ? b.longValue() * -1 : b.longValue()" />
    <mutant id="mutant_11363" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) * -1" />
    <mutant id="mutant_12694" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],int,short)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11364" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12695" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],int,short)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11365" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12696" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_11366" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12697" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(short[],short)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_10035" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value))" to="(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value) &gt;= 0 ? org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value) : org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value) * -1)" />
    <mutant id="mutant_10034" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value))" to="(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value) &gt;= 0 ? org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value) * -1 : org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(value.getClass().getComponentType(), value))" />
    <mutant id="mutant_10033" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="part1" to="(part1 &gt;= 0 ? part1 : part1 * -1)" />
    <mutant id="mutant_10032" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="part1" to="(part1 &gt;= 0 ? part1 * -1 : part1)" />
    <mutant id="mutant_10031" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="127" to="(-1 * 127)" />
    <mutant id="mutant_10030" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(name.hashCode())" to="(name.hashCode() &gt;= 0 ? name.hashCode() * -1 : name.hashCode())" />
    <mutant id="mutant_10009" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((int[])(o)))" to="Arrays.hashCode(((int[])(o))) &gt;= 0 ? Arrays.hashCode(((int[])(o))) * -1 : Arrays.hashCode(((int[])(o)))" />
    <mutant id="mutant_10008" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((int[])(o)))" to="Arrays.hashCode(((int[])(o))) &gt;= 0 ? Arrays.hashCode(((int[])(o))) : Arrays.hashCode(((int[])(o))) * -1" />
    <mutant id="mutant_10007" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((short[])(o)))" to="Arrays.hashCode(((short[])(o))) &gt;= 0 ? Arrays.hashCode(((short[])(o))) * -1 : Arrays.hashCode(((short[])(o)))" />
    <mutant id="mutant_10006" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((short[])(o)))" to="Arrays.hashCode(((short[])(o))) &gt;= 0 ? Arrays.hashCode(((short[])(o))) : Arrays.hashCode(((short[])(o))) * -1" />
    <mutant id="mutant_10005" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((byte[])(o)))" to="Arrays.hashCode(((byte[])(o))) &gt;= 0 ? Arrays.hashCode(((byte[])(o))) * -1 : Arrays.hashCode(((byte[])(o)))" />
    <mutant id="mutant_10004" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((byte[])(o)))" to="Arrays.hashCode(((byte[])(o))) &gt;= 0 ? Arrays.hashCode(((byte[])(o))) : Arrays.hashCode(((byte[])(o))) * -1" />
    <mutant id="mutant_10003" viable="true" in="org.apache.commons.lang3.AnnotationUtils.equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11334" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12665" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13997" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11335" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12666" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13996" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_11336" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12667" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13999" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11337" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12668" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="array[i].longValue()" to="array[i].longValue() &gt;= 0 ? array[i].longValue() : array[i].longValue() * -1" />
    <mutant id="mutant_13998" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_11338" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12669" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="array[i].longValue()" to="array[i].longValue() &gt;= 0 ? array[i].longValue() * -1 : array[i].longValue()" />
    <mutant id="mutant_11339" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_13991" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12660" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13990" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11330" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12661" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13993" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11331" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12662" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13992" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11332" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12663" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13995" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11333" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12664" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13994" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10002" viable="true" in="org.apache.commons.lang3.AnnotationUtils.equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation)" from="(m.getParameterTypes().length)" to="(m.getParameterTypes().length &gt;= 0 ? m.getParameterTypes().length : m.getParameterTypes().length * -1)" />
    <mutant id="mutant_10001" viable="true" in="org.apache.commons.lang3.AnnotationUtils.equals(java.lang.annotation.Annotation,java.lang.annotation.Annotation)" from="(m.getParameterTypes().length)" to="(m.getParameterTypes().length &gt;= 0 ? m.getParameterTypes().length * -1 : m.getParameterTypes().length)" />
    <mutant id="mutant_10000" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10019" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((boolean[])(o)))" to="Arrays.hashCode(((boolean[])(o))) &gt;= 0 ? Arrays.hashCode(((boolean[])(o))) * -1 : Arrays.hashCode(((boolean[])(o)))" />
    <mutant id="mutant_10018" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((boolean[])(o)))" to="Arrays.hashCode(((boolean[])(o))) &gt;= 0 ? Arrays.hashCode(((boolean[])(o))) : Arrays.hashCode(((boolean[])(o))) * -1" />
    <mutant id="mutant_10017" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((double[])(o)))" to="Arrays.hashCode(((double[])(o))) &gt;= 0 ? Arrays.hashCode(((double[])(o))) * -1 : Arrays.hashCode(((double[])(o)))" />
    <mutant id="mutant_10016" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((double[])(o)))" to="Arrays.hashCode(((double[])(o))) &gt;= 0 ? Arrays.hashCode(((double[])(o))) : Arrays.hashCode(((double[])(o))) * -1" />
    <mutant id="mutant_10015" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((float[])(o)))" to="Arrays.hashCode(((float[])(o))) &gt;= 0 ? Arrays.hashCode(((float[])(o))) * -1 : Arrays.hashCode(((float[])(o)))" />
    <mutant id="mutant_10014" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((float[])(o)))" to="Arrays.hashCode(((float[])(o))) &gt;= 0 ? Arrays.hashCode(((float[])(o))) : Arrays.hashCode(((float[])(o))) * -1" />
    <mutant id="mutant_11345" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12676" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11346" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12677" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11347" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12678" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11348" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12679" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11349" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12670" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11340" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12671" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11341" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12672" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11342" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12673" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11343" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12674" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11344" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12675" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Long[],long)" from="0" to="-1 * 0" />
    <mutant id="mutant_10013" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((long[])(o)))" to="Arrays.hashCode(((long[])(o))) &gt;= 0 ? Arrays.hashCode(((long[])(o))) * -1 : Arrays.hashCode(((long[])(o)))" />
    <mutant id="mutant_10012" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((long[])(o)))" to="Arrays.hashCode(((long[])(o))) &gt;= 0 ? Arrays.hashCode(((long[])(o))) : Arrays.hashCode(((long[])(o))) * -1" />
    <mutant id="mutant_10011" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((char[])(o)))" to="Arrays.hashCode(((char[])(o))) &gt;= 0 ? Arrays.hashCode(((char[])(o))) * -1 : Arrays.hashCode(((char[])(o)))" />
    <mutant id="mutant_10010" viable="true" in="org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Class,java.lang.Object)" from="Arrays.hashCode(((char[])(o)))" to="Arrays.hashCode(((char[])(o))) &gt;= 0 ? Arrays.hashCode(((char[])(o))) : Arrays.hashCode(((char[])(o))) * -1" />
    <mutant id="mutant_10069" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_10060" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_11392" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11393" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11394" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11395" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="0" to="-1 * 0" />
    <mutant id="mutant_11396" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11397" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11398" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance : tolerance * -1)" />
    <mutant id="mutant_11399" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance * -1 : tolerance)" />
    <mutant id="mutant_10068" viable="true" in="org.apache.commons.lang3.ArrayUtils$1.compare(T,T)" from="o1.compareTo(o2)" to="o1.compareTo(o2) &gt;= 0 ? o1.compareTo(o2) * -1 : o1.compareTo(o2)" />
    <mutant id="mutant_10067" viable="true" in="org.apache.commons.lang3.ArrayUtils$1.compare(T,T)" from="o1.compareTo(o2)" to="o1.compareTo(o2) &gt;= 0 ? o1.compareTo(o2) : o1.compareTo(o2) * -1" />
    <mutant id="mutant_10066" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10065" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10064" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10063" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10062" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_11390" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10061" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_11391" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10071" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10070" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],T)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_10079" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10078" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10077" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_10076" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_10075" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10074" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(T[],T[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10073" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],int,T)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10072" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(T[],int,T)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10049" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10048" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10047" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_11378" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11379" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11370" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11371" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_11372" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11373" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11374" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11375" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11376" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11377" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10046" viable="true" in="org.apache.commons.lang3.AnnotationUtils.toString(java.lang.annotation.Annotation)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10045" viable="true" in="org.apache.commons.lang3.AnnotationUtils.toString(java.lang.annotation.Annotation)" from="(m.getParameterTypes().length)" to="(m.getParameterTypes().length &gt;= 0 ? m.getParameterTypes().length : m.getParameterTypes().length * -1)" />
    <mutant id="mutant_10044" viable="true" in="org.apache.commons.lang3.AnnotationUtils.toString(java.lang.annotation.Annotation)" from="(m.getParameterTypes().length)" to="(m.getParameterTypes().length &gt;= 0 ? m.getParameterTypes().length * -1 : m.getParameterTypes().length)" />
    <mutant id="mutant_10043" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(value.hashCode())" to="(value.hashCode() &gt;= 0 ? value.hashCode() * -1 : value.hashCode())" />
    <mutant id="mutant_10042" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="(value.hashCode())" to="(value.hashCode() &gt;= 0 ? value.hashCode() : value.hashCode() * -1)" />
    <mutant id="mutant_10041" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="part1" to="(part1 &gt;= 0 ? part1 : part1 * -1)" />
    <mutant id="mutant_10040" viable="true" in="org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.String,java.lang.Object)" from="part1" to="(part1 &gt;= 0 ? part1 * -1 : part1)" />
    <mutant id="mutant_10059" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10058" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_11389" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11381" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11382" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11383" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11384" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_11385" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_11386" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11387" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11388" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10057" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10056" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10055" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10054" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10053" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10052" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10051" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_10050" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_11380" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_13259" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13252" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14583" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13251" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14582" viable="true" in="org.apache.commons.lang3.CharRange.toString()" from="4" to="(-1 * 4)" />
    <mutant id="mutant_13254" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14585" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="thisStart" to="(thisStart &gt;= 0 ? thisStart * -1 : thisStart)" />
    <mutant id="mutant_13253" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14584" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="thisStart" to="(thisStart &gt;= 0 ? thisStart : thisStart * -1)" />
    <mutant id="mutant_13256" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14587" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_13255" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_14586" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_13258" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14589" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13257" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14588" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13250" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14581" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_14580" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="1" to="-1 * 1" />
    <mutant id="mutant_13263" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14594" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_13262" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14593" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_13265" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14596" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="tmpLen" to="(tmpLen &gt;= 0 ? tmpLen : tmpLen * -1)" />
    <mutant id="mutant_13264" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_14595" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_13267" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14598" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13266" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14597" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="tmpLen" to="(tmpLen &gt;= 0 ? tmpLen * -1 : tmpLen)" />
    <mutant id="mutant_13269" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_13268" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_14599" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="index1" to="(index1 &gt;= 0 ? index1 * -1 : index1)" />
    <mutant id="mutant_14590" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="thisStart" to="thisStart &gt;= 0 ? thisStart : thisStart * -1" />
    <mutant id="mutant_13261" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_14592" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_13260" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14591" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="thisStart" to="thisStart &gt;= 0 ? thisStart * -1 : thisStart" />
    <mutant id="mutant_13238" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14569" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13237" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14568" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="falseValue &gt;= 0 ? falseValue * -1 : falseValue" />
    <mutant id="mutant_15899" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="65535" to="(-1 * 65535)" />
    <mutant id="mutant_13239" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13230" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14561" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean)" from="NumberUtils.INTEGER_ZERO" to="NumberUtils.INTEGER_ZERO &gt;= 0 ? NumberUtils.INTEGER_ZERO * -1 : NumberUtils.INTEGER_ZERO" />
    <mutant id="mutant_15893" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14560" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean)" from="NumberUtils.INTEGER_ONE" to="NumberUtils.INTEGER_ONE &gt;= 0 ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ONE * -1" />
    <mutant id="mutant_15894" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13232" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14563" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="nullValue" to="nullValue &gt;= 0 ? nullValue * -1 : nullValue" />
    <mutant id="mutant_15891" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_13231" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14562" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean)" from="NumberUtils.INTEGER_ZERO" to="NumberUtils.INTEGER_ZERO &gt;= 0 ? NumberUtils.INTEGER_ZERO : NumberUtils.INTEGER_ZERO * -1" />
    <mutant id="mutant_15892" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="65535" to="(-1 * 65535)" />
    <mutant id="mutant_13234" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14565" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="trueValue &gt;= 0 ? trueValue : trueValue * -1" />
    <mutant id="mutant_15897" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_13233" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14564" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="nullValue" to="nullValue &gt;= 0 ? nullValue : nullValue * -1" />
    <mutant id="mutant_15898" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_13236" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14567" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="falseValue &gt;= 0 ? falseValue : falseValue * -1" />
    <mutant id="mutant_15895" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_13235" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14566" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="trueValue &gt;= 0 ? trueValue * -1 : trueValue" />
    <mutant id="mutant_15896" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_15890" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_13249" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13248" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14579" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="7" to="(-1 * 7)" />
    <mutant id="mutant_13241" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14572" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13240" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14571" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="0" to="-1 * 0" />
    <mutant id="mutant_13243" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14574" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13242" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14573" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13245" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14576" viable="false" in="?" from="8270183163158333422L" to="-1 * 8270183163158333422L" />
    <mutant id="mutant_13244" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14575" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator.prepareNext()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13247" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14578" viable="true" in="org.apache.commons.lang3.CharRange.hashCode()" from="83" to="(-1 * 83)" />
    <mutant id="mutant_13246" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14577" viable="true" in="org.apache.commons.lang3.CharRange.contains(org.apache.commons.lang3.CharRange)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14570" viable="true" in="org.apache.commons.lang3.CharRange$CharacterIterator(org.apache.commons.lang3.CharRange)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13296" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13295" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13298" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13297" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13299" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13290" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13292" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13291" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13294" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13293" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13274" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13273" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_13276" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_13275" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13278" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13277" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13279" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_13270" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13272" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_13271" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13285" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13284" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13287" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13286" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_13289" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_13288" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13281" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13280" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13283" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13282" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_1719" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1717" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="radix" to="radix &gt;= 0 ? radix : radix * -1" />
    <mutant id="mutant_1718" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="8" to="-1 * 8" />
    <mutant id="mutant_1715" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1716" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="radix" to="radix &gt;= 0 ? radix * -1 : radix" />
    <mutant id="mutant_1713" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1714" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1711" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_1712" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_1710" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1708" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1709" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1706" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="16" to="-1 * 16" />
    <mutant id="mutant_1707" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1704" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="radix" to="radix &gt;= 0 ? radix * -1 : radix" />
    <mutant id="mutant_1705" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="radix" to="radix &gt;= 0 ? radix : radix * -1" />
    <mutant id="mutant_1702" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1703" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1700" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_1701" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="2" to="-1 * 2" />
    <mutant id="mutant_1751" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_1752" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_1750" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_1759" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_1757" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_1758" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_1755" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_1756" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_1753" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_1754" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_1740" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="c" to="c &gt;= 0 ? c * -1 : c" />
    <mutant id="mutant_1741" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_1748" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_1749" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_1746" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_1747" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1744" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="1" to="-1 * 1" />
    <mutant id="mutant_1745" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_1742" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_1743" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1739" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="c" to="c &gt;= 0 ? c : c * -1" />
    <mutant id="mutant_1730" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_1737" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_1738" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_1735" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_1736" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_1733" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_1734" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_1731" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="b" to="b &gt;= 0 ? b : b * -1" />
    <mutant id="mutant_1732" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="b" to="b &gt;= 0 ? b * -1 : b" />
    <mutant id="mutant_1728" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_1729" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_1726" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_1727" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_1724" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="radix" to="(radix &gt;= 0 ? radix : radix * -1)" />
    <mutant id="mutant_1725" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long,long,long)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_1722" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1723" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="radix" to="(radix &gt;= 0 ? radix * -1 : radix)" />
    <mutant id="mutant_1720" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1721" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1795" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_1796" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_1793" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1794" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1791" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_1792" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_1790" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_1799" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L)" to="org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L) : org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L) * -1" />
    <mutant id="mutant_1797" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String)" from="0L" to="(-1 * 0L)" />
    <mutant id="mutant_1798" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toLong(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L)" to="org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L) * -1 : org.apache.commons.lang3.math.NumberUtils.toLong(str, 0L)" />
    <mutant id="mutant_15808" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="digit" to="(digit &gt;= 0 ? digit : digit * -1)" />
    <mutant id="mutant_15809" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15802" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="7" to="-1 * 7" />
    <mutant id="mutant_15803" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="15" to="-1 * 15" />
    <mutant id="mutant_15800" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="3" to="-1 * 3" />
    <mutant id="mutant_15801" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="11" to="-1 * 11" />
    <mutant id="mutant_15806" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="Character.digit(hexDigit, 16)" to="Character.digit(hexDigit, 16) &gt;= 0 ? Character.digit(hexDigit, 16) * -1 : Character.digit(hexDigit, 16)" />
    <mutant id="mutant_15807" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="digit" to="(digit &gt;= 0 ? digit * -1 : digit)" />
    <mutant id="mutant_15804" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_15805" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="Character.digit(hexDigit, 16)" to="Character.digit(hexDigit, 16) &gt;= 0 ? Character.digit(hexDigit, 16) : Character.digit(hexDigit, 16) * -1" />
    <mutant id="mutant_1784" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_1785" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1782" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1783" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1780" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="1" to="-1 * 1" />
    <mutant id="mutant_1781" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1788" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1789" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_1786" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1787" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1773" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_1774" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_1771" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_1772" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_1770" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_1779" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1777" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_1778" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_1775" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="c" to="c &gt;= 0 ? c : c * -1" />
    <mutant id="mutant_1776" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="c" to="c &gt;= 0 ? c * -1 : c" />
    <mutant id="mutant_1762" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_1763" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_1760" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(long[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_1761" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_1768" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="b" to="b &gt;= 0 ? b * -1 : b" />
    <mutant id="mutant_1769" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_1766" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_1767" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="b" to="b &gt;= 0 ? b : b * -1" />
    <mutant id="mutant_1764" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_1765" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(long,long,long)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_14503" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer)" from="(value.intValue())" to="(value.intValue() &gt;= 0 ? value.intValue() : value.intValue() * -1)" />
    <mutant id="mutant_15835" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_14502" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15836" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_14505" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15833" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14504" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer)" from="(value.intValue())" to="(value.intValue() &gt;= 0 ? value.intValue() * -1 : value.intValue())" />
    <mutant id="mutant_15834" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14507" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15839" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14506" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_14509" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue * -1 : trueValue)" />
    <mutant id="mutant_15837" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_14508" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue : trueValue * -1)" />
    <mutant id="mutant_15838" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_15831" viable="false" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15832" viable="false" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14501" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_14500" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15830" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_14514" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15846" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_14513" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="nullValue" to="(nullValue &gt;= 0 ? nullValue : nullValue * -1)" />
    <mutant id="mutant_15847" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_14516" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue : trueValue * -1)" />
    <mutant id="mutant_15844" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" to="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) &gt;= 0 ? org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) : org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) * -1)" />
    <mutant id="mutant_14515" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15845" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_14518" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_14517" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue * -1 : trueValue)" />
    <mutant id="mutant_15848" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_14519" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15849" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_14510" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue : falseValue * -1)" />
    <mutant id="mutant_15842" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_15843" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" to="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) &gt;= 0 ? org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) * -1 : org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" />
    <mutant id="mutant_14512" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="nullValue" to="(nullValue &gt;= 0 ? nullValue * -1 : nullValue)" />
    <mutant id="mutant_15840" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14511" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue * -1 : falseValue)" />
    <mutant id="mutant_15841" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_15819" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15813" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_15814" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_15811" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="digit" to="digit &gt;= 0 ? digit : digit * -1" />
    <mutant id="mutant_15812" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15817" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_15818" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_15815" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_15816" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_15810" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitToInt(char)" from="digit" to="digit &gt;= 0 ? digit * -1 : digit" />
    <mutant id="mutant_15824" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_15825" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_15822" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_15823" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_15828" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15829" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_15826" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15827" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15820" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_15821" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_13216" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14547" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_15879" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_13215" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14546" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_13218" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14549" viable="true" in="org.apache.commons.lang3.BooleanUtils.xor(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_15877" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_13217" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14548" viable="true" in="org.apache.commons.lang3.BooleanUtils.xor(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_15878" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_13219" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_15871" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_15872" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_13210" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14541" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_14540" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_15870" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_13212" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14543" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15875" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_13211" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14542" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="5" to="-1 * 5" />
    <mutant id="mutant_15876" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_13214" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14545" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_15873" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13213" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14544" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15874" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_13227" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14558" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean,java.lang.Integer,java.lang.Integer)" from="falseValue" to="falseValue &gt;= 0 ? falseValue * -1 : falseValue" />
    <mutant id="mutant_13226" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14557" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean,java.lang.Integer,java.lang.Integer)" from="falseValue" to="falseValue &gt;= 0 ? falseValue : falseValue * -1" />
    <mutant id="mutant_13229" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_15888" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13228" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14559" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(java.lang.Boolean)" from="NumberUtils.INTEGER_ONE" to="NumberUtils.INTEGER_ONE &gt;= 0 ? NumberUtils.INTEGER_ONE * -1 : NumberUtils.INTEGER_ONE" />
    <mutant id="mutant_15889" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_14550" viable="true" in="org.apache.commons.lang3.BooleanUtils.xor(java.lang.Boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15882" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15883" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_13221" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14552" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean)" from="NumberUtils.INTEGER_ONE" to="NumberUtils.INTEGER_ONE &gt;= 0 ? NumberUtils.INTEGER_ONE : NumberUtils.INTEGER_ONE * -1" />
    <mutant id="mutant_15880" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_13220" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14551" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean)" from="NumberUtils.INTEGER_ONE" to="NumberUtils.INTEGER_ONE &gt;= 0 ? NumberUtils.INTEGER_ONE * -1 : NumberUtils.INTEGER_ONE" />
    <mutant id="mutant_15881" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13223" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14554" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean)" from="NumberUtils.INTEGER_ZERO" to="NumberUtils.INTEGER_ZERO &gt;= 0 ? NumberUtils.INTEGER_ZERO : NumberUtils.INTEGER_ZERO * -1" />
    <mutant id="mutant_15886" viable="false" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13222" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14553" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean)" from="NumberUtils.INTEGER_ZERO" to="NumberUtils.INTEGER_ZERO &gt;= 0 ? NumberUtils.INTEGER_ZERO * -1 : NumberUtils.INTEGER_ZERO" />
    <mutant id="mutant_15887" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13225" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14556" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean,java.lang.Integer,java.lang.Integer)" from="trueValue" to="trueValue &gt;= 0 ? trueValue * -1 : trueValue" />
    <mutant id="mutant_15884" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_13224" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14555" viable="true" in="org.apache.commons.lang3.BooleanUtils.toIntegerObject(boolean,java.lang.Integer,java.lang.Integer)" from="trueValue" to="trueValue &gt;= 0 ? trueValue : trueValue * -1" />
    <mutant id="mutant_15885" viable="false" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14525" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="nullValue" to="(nullValue &gt;= 0 ? nullValue : nullValue * -1)" />
    <mutant id="mutant_15857" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_14524" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="nullValue" to="(nullValue &gt;= 0 ? nullValue * -1 : nullValue)" />
    <mutant id="mutant_15858" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_14527" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_15855" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_14526" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_15856" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_14529" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14528" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="1" to="-1 * 1" />
    <mutant id="mutant_15859" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_15850" viable="false" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_14521" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue * -1 : falseValue)" />
    <mutant id="mutant_15853" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_14520" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue : falseValue * -1)" />
    <mutant id="mutant_15854" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_14523" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15851" viable="false" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_14522" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15852" viable="true" in="org.apache.commons.lang3.Conversion.hexToInt(java.lang.String,int,int,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_13205" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14536" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_15868" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_13204" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_14535" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15869" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_13207" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14538" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15866" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13206" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14537" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="4" to="-1 * 4" />
    <mutant id="mutant_15867" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_13209" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13208" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14539" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15860" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_15861" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_14530" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="2" to="-1 * 2" />
    <mutant id="mutant_13201" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14532" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15864" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_13200" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14531" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15865" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13203" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14534" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15862" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13202" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14533" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.String)" from="3" to="-1 * 3" />
    <mutant id="mutant_15863" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_12049" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found) * -1" />
    <mutant id="mutant_12041" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_13373" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_12042" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_13372" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12043" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_13375" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12044" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_13374" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_12045" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="v.intValue()" to="(v.intValue() &gt;= 0 ? v.intValue() : v.intValue() * -1)" />
    <mutant id="mutant_13377" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12046" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="v.intValue()" to="(v.intValue() &gt;= 0 ? v.intValue() * -1 : v.intValue())" />
    <mutant id="mutant_13376" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12047" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_13379" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12048" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_13378" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_13371" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12040" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13370" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12052" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_13384" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12053" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13383" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12054" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_13386" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_12055" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_13385" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12056" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13388" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12057" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_13387" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_12058" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12059" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_13389" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13380" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12050" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.intValue(), found)" />
    <mutant id="mutant_13382" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_12051" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_13381" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_12027" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="boxed" to="(boxed &gt;= 0 ? boxed * -1 : boxed)" />
    <mutant id="mutant_13359" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12028" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13358" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14689" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_12029" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="e.getKey()" to="e.getKey() &gt;= 0 ? e.getKey() * -1 : e.getKey()" />
    <mutant id="mutant_13351" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14682" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12020" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_13350" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14681" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12021" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_13353" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14684" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_12022" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="Integer.valueOf(v)" to="Integer.valueOf(v) &gt;= 0 ? Integer.valueOf(v) : Integer.valueOf(v) * -1" />
    <mutant id="mutant_13352" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14683" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_12023" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="Integer.valueOf(v)" to="Integer.valueOf(v) &gt;= 0 ? Integer.valueOf(v) * -1 : Integer.valueOf(v)" />
    <mutant id="mutant_13355" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14686" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12024" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="boxed" to="(boxed &gt;= 0 ? boxed : boxed * -1)" />
    <mutant id="mutant_13354" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14685" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12025" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="boxed" to="(boxed &gt;= 0 ? boxed * -1 : boxed)" />
    <mutant id="mutant_13357" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14688" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.NOT_FOUND" to="CharSequenceUtils.NOT_FOUND &gt;= 0 ? CharSequenceUtils.NOT_FOUND : CharSequenceUtils.NOT_FOUND * -1" />
    <mutant id="mutant_12026" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="boxed" to="(boxed &gt;= 0 ? boxed : boxed * -1)" />
    <mutant id="mutant_13356" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14687" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.NOT_FOUND" to="CharSequenceUtils.NOT_FOUND &gt;= 0 ? CharSequenceUtils.NOT_FOUND * -1 : CharSequenceUtils.NOT_FOUND" />
    <mutant id="mutant_14680" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12038" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_12039" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13369" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12030" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="e.getKey()" to="e.getKey() &gt;= 0 ? e.getKey() : e.getKey() * -1" />
    <mutant id="mutant_13362" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14693" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.subSequence(java.lang.CharSequence,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_12031" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13361" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14692" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="cs.toString().lastIndexOf(searchChar.toString(), start)" to="cs.toString().lastIndexOf(searchChar.toString(), start) &gt;= 0 ? cs.toString().lastIndexOf(searchChar.toString(), start) * -1 : cs.toString().lastIndexOf(searchChar.toString(), start)" />
    <mutant id="mutant_12032" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13364" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14695" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.subSequence(java.lang.CharSequence,int)" from="cs.length()" to="(cs.length() &gt;= 0 ? cs.length() * -1 : cs.length())" />
    <mutant id="mutant_12033" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_13363" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14694" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.subSequence(java.lang.CharSequence,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_12034" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_13366" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_14697" viable="false" in="?" from="5947847346149275958L" to="-1 * 5947847346149275958L" />
    <mutant id="mutant_12035" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13365" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14696" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.subSequence(java.lang.CharSequence,int)" from="cs.length()" to="(cs.length() &gt;= 0 ? cs.length() : cs.length() * -1)" />
    <mutant id="mutant_12036" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13368" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14699" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="set.length" to="set.length &gt;= 0 ? set.length : set.length * -1" />
    <mutant id="mutant_12037" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_13367" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14698" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="set.length" to="set.length &gt;= 0 ? set.length * -1 : set.length" />
    <mutant id="mutant_13360" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_14691" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="cs.toString().lastIndexOf(searchChar.toString(), start)" to="cs.toString().lastIndexOf(searchChar.toString(), start) &gt;= 0 ? cs.toString().lastIndexOf(searchChar.toString(), start) : cs.toString().lastIndexOf(searchChar.toString(), start) * -1" />
    <mutant id="mutant_14690" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_12085" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12086" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12087" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12088" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12089" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12080" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12081" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12082" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_12083" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_12084" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12096" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12097" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12098" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12099" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12090" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12091" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12092" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12093" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12094" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12095" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12063" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_13395" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_12064" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13394" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_12065" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13397" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12066" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_13396" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_12067" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_13399" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_12068" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13398" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12069" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13391" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12060" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_13390" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12061" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_13393" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_12062" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_13392" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12074" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_12075" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_12076" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12077" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_12078" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_12079" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12070" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12071" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12072" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12073" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(int[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_2929" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_2928" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2927" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2926" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2925" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_2924" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_2923" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_2922" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_2921" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int,int)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_2920" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int,int)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_2919" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int,int)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_2918" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int,int)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_2917" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2916" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2915" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2914" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2913" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2912" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2911" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_2910" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_2909" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2908" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2907" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2906" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_2905" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_2904" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_2903" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_2902" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)" from="Float.floatToIntBits(rhs)" to="(Float.floatToIntBits(rhs) &gt;= 0 ? Float.floatToIntBits(rhs) : Float.floatToIntBits(rhs) * -1)" />
    <mutant id="mutant_2901" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)" from="Float.floatToIntBits(rhs)" to="(Float.floatToIntBits(rhs) &gt;= 0 ? Float.floatToIntBits(rhs) * -1 : Float.floatToIntBits(rhs))" />
    <mutant id="mutant_2900" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1630" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0.0" to="(-1 * 0.0)" />
    <mutant id="mutant_2962" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1631" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="d &gt;= 0 ? d * -1 : d" />
    <mutant id="mutant_2961" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2960" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1638" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_1639" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_2969" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1636" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_2968" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1637" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_2967" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1634" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_2966" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1635" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2965" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1632" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="d &gt;= 0 ? d : d * -1" />
    <mutant id="mutant_2964" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1633" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_2963" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1629" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(d.floatValue())" to="(d.floatValue() &gt;= 0 ? d.floatValue() * -1 : d.floatValue())" />
    <mutant id="mutant_2951" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1620" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="f &gt;= 0 ? f * -1 : f" />
    <mutant id="mutant_2950" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1627" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="(d &gt;= 0 ? d : d * -1)" />
    <mutant id="mutant_2959" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_1628" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(d.floatValue())" to="(d.floatValue() &gt;= 0 ? d.floatValue() : d.floatValue() * -1)" />
    <mutant id="mutant_2958" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_1625" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="(d &gt;= 0 ? d : d * -1)" />
    <mutant id="mutant_2957" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1626" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="(d &gt;= 0 ? d * -1 : d)" />
    <mutant id="mutant_2956" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1623" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="NumberUtils.createDouble(numeric)" to="NumberUtils.createDouble(numeric) &gt;= 0 ? NumberUtils.createDouble(numeric) * -1 : NumberUtils.createDouble(numeric)" />
    <mutant id="mutant_2955" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long,long)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1624" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="(d &gt;= 0 ? d * -1 : d)" />
    <mutant id="mutant_2954" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long,long)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_1621" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="f &gt;= 0 ? f : f * -1" />
    <mutant id="mutant_2953" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long,long)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_1622" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="NumberUtils.createDouble(numeric)" to="NumberUtils.createDouble(numeric) &gt;= 0 ? NumberUtils.createDouble(numeric) : NumberUtils.createDouble(numeric) * -1" />
    <mutant id="mutant_2952" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long,long)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_1618" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(f.floatValue())" to="(f.floatValue() &gt;= 0 ? f.floatValue() * -1 : f.floatValue())" />
    <mutant id="mutant_1619" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0.0F" to="(-1 * 0.0F)" />
    <mutant id="mutant_2949" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2940" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_1616" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="(f &gt;= 0 ? f : f * -1)" />
    <mutant id="mutant_2948" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1617" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(f.floatValue())" to="(f.floatValue() &gt;= 0 ? f.floatValue() : f.floatValue() * -1)" />
    <mutant id="mutant_2947" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1614" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="(f &gt;= 0 ? f : f * -1)" />
    <mutant id="mutant_2946" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1615" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="(f &gt;= 0 ? f * -1 : f)" />
    <mutant id="mutant_2945" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1612" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="NumberUtils.createFloat(numeric)" to="NumberUtils.createFloat(numeric) &gt;= 0 ? NumberUtils.createFloat(numeric) : NumberUtils.createFloat(numeric) * -1" />
    <mutant id="mutant_2944" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1613" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="(f &gt;= 0 ? f * -1 : f)" />
    <mutant id="mutant_2943" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1610" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createLong(numeric)" to="org.apache.commons.lang3.math.NumberUtils.createLong(numeric) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createLong(numeric) * -1 : org.apache.commons.lang3.math.NumberUtils.createLong(numeric)" />
    <mutant id="mutant_2942" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1611" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="NumberUtils.createFloat(numeric)" to="NumberUtils.createFloat(numeric) &gt;= 0 ? NumberUtils.createFloat(numeric) * -1 : NumberUtils.createFloat(numeric)" />
    <mutant id="mutant_2941" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1609" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createLong(numeric)" to="org.apache.commons.lang3.math.NumberUtils.createLong(numeric) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createLong(numeric) : org.apache.commons.lang3.math.NumberUtils.createLong(numeric) * -1" />
    <mutant id="mutant_1607" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2939" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_1608" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2938" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1605" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_2937" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object[],java.lang.Object[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1606" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2936" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1603" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2935" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1604" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_2934" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1601" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_2933" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1602" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2932" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2931" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1600" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_2930" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_15918" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_15919" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_15912" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15913" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts * -1 : nInts)" />
    <mutant id="mutant_15910" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_15911" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_15916" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts : nInts * -1)" />
    <mutant id="mutant_15917" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15914" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts : nInts * -1)" />
    <mutant id="mutant_15915" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts * -1 : nInts)" />
    <mutant id="mutant_1674" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(d.doubleValue())" to="(d.doubleValue() &gt;= 0 ? d.doubleValue() * -1 : d.doubleValue())" />
    <mutant id="mutant_1675" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0.0" to="(-1 * 0.0)" />
    <mutant id="mutant_1672" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="(d &gt;= 0 ? d : d * -1)" />
    <mutant id="mutant_1673" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(d.doubleValue())" to="(d.doubleValue() &gt;= 0 ? d.doubleValue() : d.doubleValue() * -1)" />
    <mutant id="mutant_1670" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="(d &gt;= 0 ? d : d * -1)" />
    <mutant id="mutant_1671" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="(d &gt;= 0 ? d * -1 : d)" />
    <mutant id="mutant_1678" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String)" from="str.length()" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_1679" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String)" from="str.length()" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_1676" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="d &gt;= 0 ? d * -1 : d" />
    <mutant id="mutant_1677" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="d &gt;= 0 ? d : d * -1" />
    <mutant id="mutant_15929" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15923" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15924" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15921" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_15922" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15927" viable="false" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15928" viable="false" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15925" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts * -1 : nInts)" />
    <mutant id="mutant_15926" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts : nInts * -1)" />
    <mutant id="mutant_1663" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="f &gt;= 0 ? f : f * -1" />
    <mutant id="mutant_2995" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="f.getModifiers()" to="(f.getModifiers() &gt;= 0 ? f.getModifiers() * -1 : f.getModifiers())" />
    <mutant id="mutant_1664" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="numDecimals" to="(numDecimals &gt;= 0 ? numDecimals : numDecimals * -1)" />
    <mutant id="mutant_2994" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1661" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0.0F" to="(-1 * 0.0F)" />
    <mutant id="mutant_2993" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1662" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="f &gt;= 0 ? f * -1 : f" />
    <mutant id="mutant_2992" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2991" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1660" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(f.floatValue())" to="(f.floatValue() &gt;= 0 ? f.floatValue() * -1 : f.floatValue())" />
    <mutant id="mutant_2990" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="(fields.length)" to="(fields.length &gt;= 0 ? fields.length : fields.length * -1)" />
    <mutant id="mutant_15920" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_1669" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="d" to="(d &gt;= 0 ? d * -1 : d)" />
    <mutant id="mutant_1667" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createDouble(str)" to="org.apache.commons.lang3.math.NumberUtils.createDouble(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createDouble(str) * -1 : org.apache.commons.lang3.math.NumberUtils.createDouble(str)" />
    <mutant id="mutant_2999" viable="false" in="?" from="17" to="-1 * 17" />
    <mutant id="mutant_1668" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createDouble(str)" to="org.apache.commons.lang3.math.NumberUtils.createDouble(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createDouble(str) : org.apache.commons.lang3.math.NumberUtils.createDouble(str) * -1" />
    <mutant id="mutant_2998" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="f.getModifiers()" to="(f.getModifiers() &gt;= 0 ? f.getModifiers() : f.getModifiers() * -1)" />
    <mutant id="mutant_1665" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="numDecimals" to="(numDecimals &gt;= 0 ? numDecimals * -1 : numDecimals)" />
    <mutant id="mutant_2997" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="f.getModifiers()" to="(f.getModifiers() &gt;= 0 ? f.getModifiers() * -1 : f.getModifiers())" />
    <mutant id="mutant_1666" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_2996" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="f.getModifiers()" to="(f.getModifiers() &gt;= 0 ? f.getModifiers() : f.getModifiers() * -1)" />
    <mutant id="mutant_1652" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="7" to="(-1 * 7)" />
    <mutant id="mutant_2984" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1653" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createFloat(str)" to="org.apache.commons.lang3.math.NumberUtils.createFloat(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createFloat(str) * -1 : org.apache.commons.lang3.math.NumberUtils.createFloat(str)" />
    <mutant id="mutant_2983" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1650" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="numDecimals" to="(numDecimals &gt;= 0 ? numDecimals : numDecimals * -1)" />
    <mutant id="mutant_2982" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1651" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="numDecimals" to="(numDecimals &gt;= 0 ? numDecimals * -1 : numDecimals)" />
    <mutant id="mutant_2981" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2980" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1658" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="(f &gt;= 0 ? f : f * -1)" />
    <mutant id="mutant_1659" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(f.floatValue())" to="(f.floatValue() &gt;= 0 ? f.floatValue() : f.floatValue() * -1)" />
    <mutant id="mutant_2989" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="(fields.length)" to="(fields.length &gt;= 0 ? fields.length * -1 : fields.length)" />
    <mutant id="mutant_1656" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="(f &gt;= 0 ? f : f * -1)" />
    <mutant id="mutant_2988" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1657" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="(f &gt;= 0 ? f * -1 : f)" />
    <mutant id="mutant_2987" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1654" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createFloat(str)" to="org.apache.commons.lang3.math.NumberUtils.createFloat(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createFloat(str) : org.apache.commons.lang3.math.NumberUtils.createFloat(str) * -1" />
    <mutant id="mutant_2986" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.EqualsBuilder,boolean,java.lang.String[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1655" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="f" to="(f &gt;= 0 ? f * -1 : f)" />
    <mutant id="mutant_2985" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15909" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_15907" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_15908" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_15901" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_15902" viable="false" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_15900" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_15905" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_15906" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_15903" viable="false" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_15904" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToInt(short[],int,int,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_1641" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_2973" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_1642" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_2972" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_2971" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1640" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2970" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1649" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createLong(str)" to="org.apache.commons.lang3.math.NumberUtils.createLong(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createLong(str) * -1 : org.apache.commons.lang3.math.NumberUtils.createLong(str)" />
    <mutant id="mutant_1647" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createInteger(str)" to="org.apache.commons.lang3.math.NumberUtils.createInteger(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createInteger(str) * -1 : org.apache.commons.lang3.math.NumberUtils.createInteger(str)" />
    <mutant id="mutant_2979" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1648" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createLong(str)" to="org.apache.commons.lang3.math.NumberUtils.createLong(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createLong(str) : org.apache.commons.lang3.math.NumberUtils.createLong(str) * -1" />
    <mutant id="mutant_2978" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1645" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="str.length()" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_2977" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1646" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createInteger(str)" to="org.apache.commons.lang3.math.NumberUtils.createInteger(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createInteger(str) : org.apache.commons.lang3.math.NumberUtils.createInteger(str) * -1" />
    <mutant id="mutant_2976" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1643" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2975" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1644" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="str.length()" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_2974" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(short[],short[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_14624" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_15956" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14623" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="((String)(cs)).indexOf(searchChar, start)" to="((String)(cs)).indexOf(searchChar, start) &gt;= 0 ? ((String)(cs)).indexOf(searchChar, start) : ((String)(cs)).indexOf(searchChar, start) * -1" />
    <mutant id="mutant_15957" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14626" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15954" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="sb.length()" to="sb.length() &gt;= 0 ? sb.length() : sb.length() * -1" />
    <mutant id="mutant_14625" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_15955" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14628" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14627" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15958" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_14629" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_15959" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_14620" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15952" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_15953" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="sb.length()" to="sb.length() &gt;= 0 ? sb.length() * -1 : sb.length()" />
    <mutant id="mutant_14622" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="((String)(cs)).indexOf(searchChar, start)" to="((String)(cs)).indexOf(searchChar, start) &gt;= 0 ? ((String)(cs)).indexOf(searchChar, start) * -1 : ((String)(cs)).indexOf(searchChar, start)" />
    <mutant id="mutant_15950" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14621" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15951" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_13304" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14635" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15967" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_13303" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14634" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15968" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_13306" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14637" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_15965" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_13305" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14636" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_15966" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_13308" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14639" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13307" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14638" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15969" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_13309" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15960" viable="false" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13300" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14631" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15963" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14630" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_15964" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_13302" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14633" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_15961" viable="false" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13301" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14632" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_15962" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14609" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14602" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="index2" to="(index2 &gt;= 0 ? index2 : index2 * -1)" />
    <mutant id="mutant_15934" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_14601" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="index2" to="(index2 &gt;= 0 ? index2 * -1 : index2)" />
    <mutant id="mutant_15935" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_14604" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_15932" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14603" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_15933" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14606" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_15938" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="-1" to="(-1 * -1)" />
    <mutant id="mutant_14605" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_15939" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_14608" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15936" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14607" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_15937" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1696" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="radix" to="radix &gt;= 0 ? radix * -1 : radix" />
    <mutant id="mutant_1697" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="radix" to="radix &gt;= 0 ? radix : radix * -1" />
    <mutant id="mutant_1694" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1695" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1692" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_15930" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1693" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_15931" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_1690" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_14600" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="index1" to="(index1 &gt;= 0 ? index1 : index1 * -1)" />
    <mutant id="mutant_1691" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="1" to="-1 * 1" />
    <mutant id="mutant_1698" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="16" to="-1 * 16" />
    <mutant id="mutant_1699" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_14613" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15945" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_14612" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15946" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_14615" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15943" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14614" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15944" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_14617" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15949" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_14616" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14619" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_15947" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_14618" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_15948" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1685" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String,int)" from="stopPos" to="(stopPos &gt;= 0 ? stopPos : stopPos * -1)" />
    <mutant id="mutant_1686" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String,int)" from="stopPos" to="(stopPos &gt;= 0 ? stopPos * -1 : stopPos)" />
    <mutant id="mutant_1683" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String,int)" from="stopPos" to="(stopPos &gt;= 0 ? stopPos * -1 : stopPos)" />
    <mutant id="mutant_1684" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1681" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15941" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_1682" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String,int)" from="stopPos" to="(stopPos &gt;= 0 ? stopPos : stopPos * -1)" />
    <mutant id="mutant_15942" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_14611" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_1680" viable="true" in="org.apache.commons.lang3.math.NumberUtils.getMantissa(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14610" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.toCharArray(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_15940" viable="true" in="org.apache.commons.lang3.Conversion.longToIntArray(long,int,int[],int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_1689" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_1687" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_1688" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String)" from="10" to="-1 * 10" />
    <mutant id="mutant_12005" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_13337" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14668" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_12006" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13336" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14667" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_12007" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13339" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_15998" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12008" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_13338" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14669" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_15999" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12009" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_14660" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15992" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_15993" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_13331" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14662" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15990" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_12000" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_13330" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14661" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15991" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12001" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_13333" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14664" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.NOT_FOUND" to="CharSequenceUtils.NOT_FOUND &gt;= 0 ? CharSequenceUtils.NOT_FOUND : CharSequenceUtils.NOT_FOUND * -1" />
    <mutant id="mutant_15996" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="sb.length()" to="sb.length() &gt;= 0 ? sb.length() * -1 : sb.length()" />
    <mutant id="mutant_12002" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13332" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14663" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.NOT_FOUND" to="CharSequenceUtils.NOT_FOUND &gt;= 0 ? CharSequenceUtils.NOT_FOUND * -1 : CharSequenceUtils.NOT_FOUND" />
    <mutant id="mutant_15997" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="sb.length()" to="sb.length() &gt;= 0 ? sb.length() : sb.length() * -1" />
    <mutant id="mutant_12003" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13335" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14666" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15994" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_12004" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_13334" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_14665" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15995" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_12016" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13348" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14679" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12017" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13347" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14678" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12018" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="values.length" to="(values.length &gt;= 0 ? values.length * -1 : values.length)" />
    <mutant id="mutant_12019" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(int[],int[])" from="values.length" to="(values.length &gt;= 0 ? values.length : values.length * -1)" />
    <mutant id="mutant_13349" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13340" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14671" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_14670" viable="false" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_12010" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_13342" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14673" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12011" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_13341" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14672" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_12012" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13344" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14675" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_12013" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13343" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14674" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_12014" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_13346" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14677" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12015" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(int[],int)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_13345" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14676" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13315" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14646" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.NOT_FOUND" to="CharSequenceUtils.NOT_FOUND &gt;= 0 ? CharSequenceUtils.NOT_FOUND * -1 : CharSequenceUtils.NOT_FOUND" />
    <mutant id="mutant_15978" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_13314" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14645" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_15979" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_13317" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14648" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15976" viable="false" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append : append * -1)" />
    <mutant id="mutant_13316" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14647" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.NOT_FOUND" to="CharSequenceUtils.NOT_FOUND &gt;= 0 ? CharSequenceUtils.NOT_FOUND : CharSequenceUtils.NOT_FOUND * -1" />
    <mutant id="mutant_15977" viable="false" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append * -1 : append)" />
    <mutant id="mutant_13319" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13318" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14649" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15970" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_15971" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_14640" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13311" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14642" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_15974" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append : append * -1)" />
    <mutant id="mutant_13310" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14641" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15975" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append * -1 : append)" />
    <mutant id="mutant_13313" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14644" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_15972" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13312" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14643" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_15973" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13326" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14657" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="((String)(cs)).lastIndexOf(searchChar, start)" to="((String)(cs)).lastIndexOf(searchChar, start) &gt;= 0 ? ((String)(cs)).lastIndexOf(searchChar, start) : ((String)(cs)).lastIndexOf(searchChar, start) * -1" />
    <mutant id="mutant_15989" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_13325" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14656" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="((String)(cs)).lastIndexOf(searchChar, start)" to="((String)(cs)).lastIndexOf(searchChar, start) &gt;= 0 ? ((String)(cs)).lastIndexOf(searchChar, start) * -1 : ((String)(cs)).lastIndexOf(searchChar, start)" />
    <mutant id="mutant_13328" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14659" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_15987" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_13327" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14658" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_15988" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_13329" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_15981" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_15982" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13320" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14651" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="cs.toString().indexOf(searchChar.toString(), start)" to="cs.toString().indexOf(searchChar.toString(), start) &gt;= 0 ? cs.toString().indexOf(searchChar.toString(), start) * -1 : cs.toString().indexOf(searchChar.toString(), start)" />
    <mutant id="mutant_14650" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="cs.toString().indexOf(searchChar.toString(), start)" to="cs.toString().indexOf(searchChar.toString(), start) &gt;= 0 ? cs.toString().indexOf(searchChar.toString(), start) : cs.toString().indexOf(searchChar.toString(), start) * -1" />
    <mutant id="mutant_15980" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_13322" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14653" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_15985" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_13321" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14652" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_15986" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13324" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14655" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15983" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13323" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(byte[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14654" viable="true" in="org.apache.commons.lang3.CharSequenceUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15984" viable="true" in="org.apache.commons.lang3.Conversion.byteToHex(byte,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_12162" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13494" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_12163" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13493" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_12164" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13496" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12165" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13495" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12166" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13498" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_12167" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13497" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12168" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12169" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13499" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_13490" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12160" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13492" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_12161" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13491" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_12173" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12174" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12175" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12176" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12177" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12178" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12179" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12170" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12171" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12172" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12148" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12149" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13479" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_12140" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13472" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_12141" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13471" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_12142" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13474" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12143" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13473" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12144" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13476" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12145" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13475" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12146" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13478" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_12147" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13477" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13470" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12159" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12151" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13483" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12152" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13482" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12153" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13485" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12154" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13484" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12155" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13487" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_12156" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13486" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_12157" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13489" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12158" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(char[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13488" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13481" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12150" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13480" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12184" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12185" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12186" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12187" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12188" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12189" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12180" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12181" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12182" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12183" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12195" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12196" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12197" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12198" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12199" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12190" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="Double.valueOf(array[i])" to="Double.valueOf(array[i]) &gt;= 0 ? Double.valueOf(array[i]) * -1 : Double.valueOf(array[i])" />
    <mutant id="mutant_12191" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(double[])" from="Double.valueOf(array[i])" to="Double.valueOf(array[i]) &gt;= 0 ? Double.valueOf(array[i]) : Double.valueOf(array[i]) * -1" />
    <mutant id="mutant_12192" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12193" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12194" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2809" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,long,long)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_2808" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,long,long)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_2807" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,long,long)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_2806" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,long,long)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_2805" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,java.lang.Object[],java.lang.Object[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2804" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,java.lang.Object,java.lang.Object)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2803" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,int[],int[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2802" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getRight()" from="Integer.valueOf(rhs)" to="Integer.valueOf(rhs) &gt;= 0 ? Integer.valueOf(rhs) * -1 : Integer.valueOf(rhs)" />
    <mutant id="mutant_2801" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getRight()" from="Integer.valueOf(rhs)" to="Integer.valueOf(rhs) &gt;= 0 ? Integer.valueOf(rhs) : Integer.valueOf(rhs) * -1" />
    <mutant id="mutant_2800" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getRight()" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_1519" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="(pfxLen &gt;= 0 ? pfxLen * -1 : pfxLen)" />
    <mutant id="mutant_2841" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1510" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="pfxLen &gt;= 0 ? pfxLen : pfxLen * -1" />
    <mutant id="mutant_2840" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1517" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2849" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1518" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2848" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1515" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2847" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1516" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2846" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1513" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_2845" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_1514" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_2844" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_1511" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2843" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1512" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2842" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1508" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_1509" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="pfxLen &gt;= 0 ? pfxLen * -1 : pfxLen" />
    <mutant id="mutant_2839" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2830" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_1506" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="(pfxLen &gt;= 0 ? pfxLen : pfxLen * -1)" />
    <mutant id="mutant_2838" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1507" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2837" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1504" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfx.length()" to="pfx.length() &gt;= 0 ? pfx.length() * -1 : pfx.length()" />
    <mutant id="mutant_2836" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1505" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="(pfxLen &gt;= 0 ? pfxLen * -1 : pfxLen)" />
    <mutant id="mutant_2835" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1502" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="pfxLen &gt;= 0 ? pfxLen : pfxLen * -1" />
    <mutant id="mutant_2834" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1503" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfx.length()" to="pfx.length() &gt;= 0 ? pfx.length() : pfx.length() * -1" />
    <mutant id="mutant_2833" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1500" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_2832" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1501" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="pfxLen &gt;= 0 ? pfxLen * -1 : pfxLen" />
    <mutant id="mutant_2831" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2829" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_2828" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_2827" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_2826" viable="true" in="org.apache.commons.lang3.builder.DiffResult.toString(org.apache.commons.lang3.builder.ToStringStyle)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2825" viable="true" in="org.apache.commons.lang3.builder.DiffResult.toString(org.apache.commons.lang3.builder.ToStringStyle)" from="(diffs.size())" to="(diffs.size() &gt;= 0 ? diffs.size() * -1 : diffs.size())" />
    <mutant id="mutant_2824" viable="true" in="org.apache.commons.lang3.builder.DiffResult.toString(org.apache.commons.lang3.builder.ToStringStyle)" from="(diffs.size())" to="(diffs.size() &gt;= 0 ? diffs.size() : diffs.size() * -1)" />
    <mutant id="mutant_2823" viable="true" in="org.apache.commons.lang3.builder.DiffResult.getNumberOfDiffs()" from="diffs.size()" to="diffs.size() &gt;= 0 ? diffs.size() * -1 : diffs.size()" />
    <mutant id="mutant_2822" viable="true" in="org.apache.commons.lang3.builder.DiffResult.getNumberOfDiffs()" from="diffs.size()" to="diffs.size() &gt;= 0 ? diffs.size() : diffs.size() * -1" />
    <mutant id="mutant_2821" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,short[],short[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2820" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,short,short)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2819" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,long[],long[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2818" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getRight()" from="Long.valueOf(rhs)" to="Long.valueOf(rhs) &gt;= 0 ? Long.valueOf(rhs) * -1 : Long.valueOf(rhs)" />
    <mutant id="mutant_2817" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getRight()" from="Long.valueOf(rhs)" to="Long.valueOf(rhs) &gt;= 0 ? Long.valueOf(rhs) : Long.valueOf(rhs) * -1" />
    <mutant id="mutant_2816" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getRight()" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_2815" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getRight()" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_2814" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getLeft()" from="Long.valueOf(lhs)" to="Long.valueOf(lhs) &gt;= 0 ? Long.valueOf(lhs) * -1 : Long.valueOf(lhs)" />
    <mutant id="mutant_2813" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getLeft()" from="Long.valueOf(lhs)" to="Long.valueOf(lhs) &gt;= 0 ? Long.valueOf(lhs) : Long.valueOf(lhs) * -1" />
    <mutant id="mutant_2812" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getLeft()" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_2811" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getLeft()" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_2810" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,long,long)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_14709" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="89" to="(-1 * 89)" />
    <mutant id="mutant_14708" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14701" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14700" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="0" to="-1 * 0" />
    <mutant id="mutant_14703" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_14702" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14705" viable="false" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14704" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_14707" viable="true" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14706" viable="false" in="org.apache.commons.lang3.CharSet(java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1553" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos * -1 : decPos)" />
    <mutant id="mutant_2885" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1554" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2884" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1551" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_2883" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_1552" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos : decPos * -1)" />
    <mutant id="mutant_2882" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_2881" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1550" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2880" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1559" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_1557" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2889" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1558" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_2888" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1555" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_2887" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1556" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_2886" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14719" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_14712" viable="true" in="org.apache.commons.lang3.CharSet.getCharRanges()" from="set.size()" to="set.size() &gt;= 0 ? set.size() * -1 : set.size()" />
    <mutant id="mutant_14711" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="(set.hashCode())" to="(set.hashCode() &gt;= 0 ? set.hashCode() * -1 : set.hashCode())" />
    <mutant id="mutant_14714" viable="true" in="org.apache.commons.lang3.CharSet.getInstance(java.lang.String[])" from="(setStrs.length)" to="(setStrs.length &gt;= 0 ? setStrs.length * -1 : setStrs.length)" />
    <mutant id="mutant_14713" viable="true" in="org.apache.commons.lang3.CharSet.getCharRanges()" from="set.size()" to="set.size() &gt;= 0 ? set.size() : set.size() * -1" />
    <mutant id="mutant_14716" viable="true" in="org.apache.commons.lang3.CharSet.getInstance(java.lang.String[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14715" viable="true" in="org.apache.commons.lang3.CharSet.getInstance(java.lang.String[])" from="(setStrs.length)" to="(setStrs.length &gt;= 0 ? setStrs.length : setStrs.length * -1)" />
    <mutant id="mutant_14718" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_14717" viable="true" in="org.apache.commons.lang3.CharSet.getInstance(java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1542" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_2874" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)" from="Double.doubleToLongBits(lhs)" to="(Double.doubleToLongBits(lhs) &gt;= 0 ? Double.doubleToLongBits(lhs) : Double.doubleToLongBits(lhs) * -1)" />
    <mutant id="mutant_1543" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2873" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_1540" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createInteger(str)" to="org.apache.commons.lang3.math.NumberUtils.createInteger(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createInteger(str) * -1 : org.apache.commons.lang3.math.NumberUtils.createInteger(str)" />
    <mutant id="mutant_2872" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_1541" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_2871" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2870" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14710" viable="true" in="org.apache.commons.lang3.CharSet.hashCode()" from="(set.hashCode())" to="(set.hashCode() &gt;= 0 ? set.hashCode() : set.hashCode() * -1)" />
    <mutant id="mutant_1548" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.indexOf('E'))" to="(str.indexOf('E') &gt;= 0 ? str.indexOf('E') * -1 : str.indexOf('E'))" />
    <mutant id="mutant_1549" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.indexOf('E'))" to="(str.indexOf('E') &gt;= 0 ? str.indexOf('E') : str.indexOf('E') * -1)" />
    <mutant id="mutant_2879" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)" from="Double.doubleToLongBits(rhs)" to="(Double.doubleToLongBits(rhs) &gt;= 0 ? Double.doubleToLongBits(rhs) * -1 : Double.doubleToLongBits(rhs))" />
    <mutant id="mutant_1546" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.indexOf('e'))" to="(str.indexOf('e') &gt;= 0 ? str.indexOf('e') * -1 : str.indexOf('e'))" />
    <mutant id="mutant_2878" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)" from="Double.doubleToLongBits(rhs)" to="(Double.doubleToLongBits(rhs) &gt;= 0 ? Double.doubleToLongBits(rhs) : Double.doubleToLongBits(rhs) * -1)" />
    <mutant id="mutant_1547" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.indexOf('e'))" to="(str.indexOf('e') &gt;= 0 ? str.indexOf('e') : str.indexOf('e') * -1)" />
    <mutant id="mutant_2877" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_1544" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="str.indexOf('.')" to="str.indexOf('.') &gt;= 0 ? str.indexOf('.') : str.indexOf('.') * -1" />
    <mutant id="mutant_2876" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1545" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="str.indexOf('.')" to="str.indexOf('.') &gt;= 0 ? str.indexOf('.') * -1 : str.indexOf('.')" />
    <mutant id="mutant_2875" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double,double)" from="Double.doubleToLongBits(lhs)" to="(Double.doubleToLongBits(lhs) &gt;= 0 ? Double.doubleToLongBits(lhs) * -1 : Double.doubleToLongBits(lhs))" />
    <mutant id="mutant_1531" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="hexDigits" to="(hexDigits &gt;= 0 ? hexDigits : hexDigits * -1)" />
    <mutant id="mutant_2863" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1532" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="hexDigits" to="(hexDigits &gt;= 0 ? hexDigits * -1 : hexDigits)" />
    <mutant id="mutant_2862" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2861" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1530" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_2860" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_1539" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createInteger(str)" to="org.apache.commons.lang3.math.NumberUtils.createInteger(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createInteger(str) : org.apache.commons.lang3.math.NumberUtils.createInteger(str) * -1" />
    <mutant id="mutant_1537" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createLong(str)" to="org.apache.commons.lang3.math.NumberUtils.createLong(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createLong(str) : org.apache.commons.lang3.math.NumberUtils.createLong(str) * -1" />
    <mutant id="mutant_2869" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1538" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.createLong(str)" to="org.apache.commons.lang3.math.NumberUtils.createLong(str) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.createLong(str) * -1 : org.apache.commons.lang3.math.NumberUtils.createLong(str)" />
    <mutant id="mutant_2868" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1535" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="hexDigits" to="(hexDigits &gt;= 0 ? hexDigits * -1 : hexDigits)" />
    <mutant id="mutant_2867" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1536" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_2866" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1533" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_2865" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1534" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="hexDigits" to="(hexDigits &gt;= 0 ? hexDigits : hexDigits * -1)" />
    <mutant id="mutant_2864" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1520" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="(pfxLen &gt;= 0 ? pfxLen : pfxLen * -1)" />
    <mutant id="mutant_2852" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1521" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_2851" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2850" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1528" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="hexDigits" to="(hexDigits &gt;= 0 ? hexDigits : hexDigits * -1)" />
    <mutant id="mutant_1529" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="hexDigits" to="(hexDigits &gt;= 0 ? hexDigits * -1 : hexDigits)" />
    <mutant id="mutant_2859" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_1526" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="hexDigits" to="(hexDigits &gt;= 0 ? hexDigits * -1 : hexDigits)" />
    <mutant id="mutant_2858" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1527" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_2857" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1524" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="(pfxLen &gt;= 0 ? pfxLen : pfxLen * -1)" />
    <mutant id="mutant_2856" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1525" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="hexDigits" to="(hexDigits &gt;= 0 ? hexDigits : hexDigits * -1)" />
    <mutant id="mutant_2855" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1522" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_2854" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1523" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="pfxLen" to="(pfxLen &gt;= 0 ? pfxLen * -1 : pfxLen)" />
    <mutant id="mutant_2853" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13414" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_14745" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="4" to="-1 * 4" />
    <mutant id="mutant_13413" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14744" viable="false" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_13416" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14747" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="remainder" to="(remainder &gt;= 0 ? remainder : remainder * -1)" />
    <mutant id="mutant_13415" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14746" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="remainder" to="(remainder &gt;= 0 ? remainder * -1 : remainder)" />
    <mutant id="mutant_13418" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14749" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_13417" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14748" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_13419" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_1597" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_1598" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_1595" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_1596" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1593" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_13410" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14741" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1594" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_14740" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1591" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13412" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14743" viable="false" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_1592" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_13411" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14742" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_1599" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13425" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14756" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_1590" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_13424" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14755" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_13427" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14758" viable="false" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_13426" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14757" viable="false" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_13429" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_13428" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14759" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="3" to="-1 * 3" />
    <mutant id="mutant_1586" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_1587" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_1584" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_14750" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1585" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_1582" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13421" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14752" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1583" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_13420" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14751" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1580" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_13423" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14754" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1581" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_13422" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14753" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1588" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_1589" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_14723" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_14722" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_14725" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_14724" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14727" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_14726" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14729" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="remainder" to="(remainder &gt;= 0 ? remainder * -1 : remainder)" />
    <mutant id="mutant_14728" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1575" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos * -1 : decPos)" />
    <mutant id="mutant_1576" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="numDecimals" to="numDecimals &gt;= 0 ? numDecimals : numDecimals * -1" />
    <mutant id="mutant_1573" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1574" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos : decPos * -1)" />
    <mutant id="mutant_1571" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos : decPos * -1)" />
    <mutant id="mutant_1572" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos * -1 : decPos)" />
    <mutant id="mutant_14721" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1570" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_14720" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_1579" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="dec.length()" to="dec.length() &gt;= 0 ? dec.length() * -1 : dec.length()" />
    <mutant id="mutant_1577" viable="false" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="numDecimals" to="numDecimals &gt;= 0 ? numDecimals * -1 : numDecimals" />
    <mutant id="mutant_1578" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="dec.length()" to="dec.length() &gt;= 0 ? dec.length() : dec.length() * -1" />
    <mutant id="mutant_13403" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14734" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_13402" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_14733" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_13405" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14736" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_13404" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14735" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_13407" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14738" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_13406" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14737" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_13409" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13408" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14739" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1564" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_2896" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_1565" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_2895" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_1562" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_2894" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1563" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos * -1 : expPos)" />
    <mutant id="mutant_2893" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1560" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos : decPos * -1)" />
    <mutant id="mutant_2892" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14730" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="remainder" to="(remainder &gt;= 0 ? remainder : remainder * -1)" />
    <mutant id="mutant_1561" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos * -1 : decPos)" />
    <mutant id="mutant_2891" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2890" viable="false" in="org.apache.commons.lang3.builder.EqualsBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13401" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14732" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_13400" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14731" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_1568" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1569" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="expPos" to="(expPos &gt;= 0 ? expPos : expPos * -1)" />
    <mutant id="mutant_2899" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_1566" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos : decPos * -1)" />
    <mutant id="mutant_2898" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)" from="Float.floatToIntBits(lhs)" to="(Float.floatToIntBits(lhs) &gt;= 0 ? Float.floatToIntBits(lhs) * -1 : Float.floatToIntBits(lhs))" />
    <mutant id="mutant_1567" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createNumber(java.lang.String)" from="decPos" to="(decPos &gt;= 0 ? decPos * -1 : decPos)" />
    <mutant id="mutant_2897" viable="true" in="org.apache.commons.lang3.builder.EqualsBuilder.append(float,float)" from="Float.floatToIntBits(lhs)" to="(Float.floatToIntBits(lhs) &gt;= 0 ? Float.floatToIntBits(lhs) : Float.floatToIntBits(lhs) * -1)" />
    <mutant id="mutant_12126" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13458" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14789" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_12127" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13457" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14788" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12128" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12129" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13459" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13450" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14781" viable="true" in="org.apache.commons.lang3.CharSetUtils.count(java.lang.String,java.lang.String[])" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_14780" viable="true" in="org.apache.commons.lang3.CharSetUtils.count(java.lang.String,java.lang.String[])" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_12120" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="valueForNull" to="valueForNull &gt;= 0 ? valueForNull * -1 : valueForNull" />
    <mutant id="mutant_13452" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14783" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="str.length()" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_12121" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="valueForNull" to="valueForNull &gt;= 0 ? valueForNull : valueForNull * -1" />
    <mutant id="mutant_13451" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14782" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="str.length()" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_12122" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_13454" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14785" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="chrs.length" to="chrs.length &gt;= 0 ? chrs.length : chrs.length * -1" />
    <mutant id="mutant_12123" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_13453" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14784" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="chrs.length" to="chrs.length &gt;= 0 ? chrs.length * -1 : chrs.length" />
    <mutant id="mutant_12124" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="b.intValue()" to="b.intValue() &gt;= 0 ? b.intValue() : b.intValue() * -1" />
    <mutant id="mutant_13456" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14787" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12125" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="b.intValue()" to="b.intValue() &gt;= 0 ? b.intValue() * -1 : b.intValue()" />
    <mutant id="mutant_13455" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14786" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_12137" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13469" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12138" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13468" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14799" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="chrs.length" to="chrs.length &gt;= 0 ? chrs.length * -1 : chrs.length" />
    <mutant id="mutant_12139" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13461" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14792" viable="false" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12130" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13460" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14791" viable="false" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12131" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13463" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14794" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12132" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13462" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14793" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12133" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13465" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_14796" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12134" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13464" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14795" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12135" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13467" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14798" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="str.length()" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_12136" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13466" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14797" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="str.length()" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_14790" viable="true" in="org.apache.commons.lang3.CharSetUtils.modify(java.lang.String,java.lang.String[],boolean)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_12104" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13436" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14767" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12105" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13435" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14766" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_12106" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13438" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14769" viable="false" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_12107" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="0" to="-1 * 0" />
    <mutant id="mutant_13437" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14768" viable="false" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_12108" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12109" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13439" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_13430" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14761" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="remainder" to="(remainder &gt;= 0 ? remainder : remainder * -1)" />
    <mutant id="mutant_14760" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="remainder" to="(remainder &gt;= 0 ? remainder * -1 : remainder)" />
    <mutant id="mutant_12100" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="array[i].intValue()" to="array[i].intValue() &gt;= 0 ? array[i].intValue() : array[i].intValue() * -1" />
    <mutant id="mutant_13432" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14763" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_12101" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[])" from="array[i].intValue()" to="array[i].intValue() &gt;= 0 ? array[i].intValue() * -1 : array[i].intValue()" />
    <mutant id="mutant_13431" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14762" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_12102" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13434" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14765" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_12103" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13433" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14764" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_12115" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13447" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14778" viable="false" in="org.apache.commons.lang3.CharSetUtils.count(java.lang.String,java.lang.String[])" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_12116" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13446" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14777" viable="true" in="org.apache.commons.lang3.CharSetUtils.count(java.lang.String,java.lang.String[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12117" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13449" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12118" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_13448" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14779" viable="false" in="org.apache.commons.lang3.CharSetUtils.count(java.lang.String,java.lang.String[])" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_12119" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_14770" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="2" to="-1 * 2" />
    <mutant id="mutant_13441" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14772" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_12110" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13440" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14771" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_12111" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13443" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14774" viable="false" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_12112" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13442" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14773" viable="false" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_12113" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13445" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14776" viable="true" in="org.apache.commons.lang3.CharSetUtils.count(java.lang.String,java.lang.String[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12114" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Integer[],int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13444" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(char[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14775" viable="true" in="org.apache.commons.lang3.CharSet.add(java.lang.String)" from="1" to="-1 * 1" />
    <mutant id="mutant_12283" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12284" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_12285" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_12286" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12287" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12288" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="Array.getLength(array)" to="Array.getLength(array) &gt;= 0 ? Array.getLength(array) : Array.getLength(array) * -1" />
    <mutant id="mutant_12289" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="Array.getLength(array)" to="Array.getLength(array) &gt;= 0 ? Array.getLength(array) * -1 : Array.getLength(array)" />
    <mutant id="mutant_12280" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12281" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12282" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12294" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12295" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="arrayLength" to="(arrayLength &gt;= 0 ? arrayLength * -1 : arrayLength)" />
    <mutant id="mutant_12296" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="arrayLength" to="(arrayLength &gt;= 0 ? arrayLength : arrayLength * -1)" />
    <mutant id="mutant_12297" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12298" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="org.apache.commons.lang3.ArrayUtils.getLength(array)" to="org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1" />
    <mutant id="mutant_12299" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(java.lang.Object,int)" from="org.apache.commons.lang3.ArrayUtils.getLength(array)" to="org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array)" />
    <mutant id="mutant_12290" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="arrayLength" to="(arrayLength &gt;= 0 ? arrayLength * -1 : arrayLength)" />
    <mutant id="mutant_12291" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="arrayLength" to="(arrayLength &gt;= 0 ? arrayLength : arrayLength * -1)" />
    <mutant id="mutant_12292" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12293" viable="true" in="org.apache.commons.lang3.ArrayUtils.copyArrayGrow1(java.lang.Object,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12269" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12261" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13593" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12262" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13592" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_12263" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13595" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_12264" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13594" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_12265" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13597" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_12266" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13596" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_12267" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_13599" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_12268" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13598" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13591" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_12260" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13590" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12272" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12273" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12274" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12275" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12276" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12277" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_12278" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_12279" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12270" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12271" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_2729" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)" from="superCompareTo" to="superCompareTo &gt;= 0 ? superCompareTo * -1 : superCompareTo" />
    <mutant id="mutant_2720" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2728" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)" from="superCompareTo" to="superCompareTo &gt;= 0 ? superCompareTo : superCompareTo * -1" />
    <mutant id="mutant_2727" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_2726" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_2725" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2724" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_2723" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.appendSuper(int)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_2722" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2721" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2719" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2718" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2717" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2716" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2715" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_2714" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_2713" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_2712" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_2711" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2710" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2709" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2708" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2707" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2706" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_2705" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_2704" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_2703" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_2702" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_2701" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_2700" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_14829" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character)" from="org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue())" to="org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue()) &gt;= 0 ? org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue()) * -1 : org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue())" />
    <mutant id="mutant_14822" viable="true" in="org.apache.commons.lang3.CharUtils.toChar(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14821" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiPrintable(char)" from="127" to="(-1 * 127)" />
    <mutant id="mutant_14824" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char)" from="48" to="(-1 * 48)" />
    <mutant id="mutant_14823" viable="true" in="org.apache.commons.lang3.CharUtils.toChar(java.lang.String,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14826" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_14825" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_14828" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character)" from="org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue())" to="org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue()) &gt;= 0 ? org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue()) : org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue()) * -1" />
    <mutant id="mutant_14827" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(char,int)" from="48" to="(-1 * 48)" />
    <mutant id="mutant_1432" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2764" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$7.getLeft()" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_1433" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2763" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$7.getLeft()" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_1430" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="1" to="-1 * 1" />
    <mutant id="mutant_2762" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_1431" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2761" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="(Double.doubleToLongBits(rhs))" to="(Double.doubleToLongBits(rhs) &gt;= 0 ? Double.doubleToLongBits(rhs) * -1 : Double.doubleToLongBits(rhs))" />
    <mutant id="mutant_2760" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="(Double.doubleToLongBits(rhs))" to="(Double.doubleToLongBits(rhs) &gt;= 0 ? Double.doubleToLongBits(rhs) : Double.doubleToLongBits(rhs) * -1)" />
    <mutant id="mutant_14820" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiPrintable(char)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_1438" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_1439" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_2769" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$7.getRight()" from="Double.valueOf(rhs)" to="Double.valueOf(rhs) &gt;= 0 ? Double.valueOf(rhs) * -1 : Double.valueOf(rhs)" />
    <mutant id="mutant_1436" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2768" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$7.getRight()" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_1437" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2767" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$7.getRight()" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1434" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2766" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$7.getLeft()" from="Double.valueOf(lhs)" to="Double.valueOf(lhs) &gt;= 0 ? Double.valueOf(lhs) : Double.valueOf(lhs) * -1" />
    <mutant id="mutant_1435" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2765" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$7.getLeft()" from="Double.valueOf(lhs)" to="Double.valueOf(lhs) &gt;= 0 ? Double.valueOf(lhs) * -1 : Double.valueOf(lhs)" />
    <mutant id="mutant_13509" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13502" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14833" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character,int)" from="defaultValue" to="(defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue)" />
    <mutant id="mutant_13501" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_14832" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character,int)" from="defaultValue" to="(defaultValue &gt;= 0 ? defaultValue : defaultValue * -1)" />
    <mutant id="mutant_13504" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14835" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character,int)" from="org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue)" to="org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue) &gt;= 0 ? org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue) : org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue) * -1" />
    <mutant id="mutant_13503" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14834" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character,int)" from="org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue)" to="org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue) &gt;= 0 ? org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue) * -1 : org.apache.commons.lang3.CharUtils.toIntValue(ch.charValue(), defaultValue)" />
    <mutant id="mutant_13506" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14837" viable="true" in="org.apache.commons.lang3.CharUtils.toString(char)" from="128" to="(-1 * 128)" />
    <mutant id="mutant_13505" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14836" viable="true" in="org.apache.commons.lang3.CharUtils.toCharacterObject(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13508" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14839" viable="true" in="org.apache.commons.lang3.CharUtils.unicodeEscaped(char)" from="12" to="(-1 * 12)" />
    <mutant id="mutant_13507" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_14838" viable="true" in="org.apache.commons.lang3.CharUtils.unicodeEscaped(char)" from="6" to="(-1 * 6)" />
    <mutant id="mutant_1421" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_2753" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,char[],char[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_1422" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_2752" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,char,char)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2751" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,byte[],byte[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_1420" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_2750" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,byte,byte)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_13500" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14831" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character,int)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_14830" viable="true" in="org.apache.commons.lang3.CharUtils.toIntValue(java.lang.Character,int)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_1429" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1427" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_2759" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_1428" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_2758" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1425" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="c" to="c &gt;= 0 ? c : c * -1" />
    <mutant id="mutant_2757" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="(Double.doubleToLongBits(lhs))" to="(Double.doubleToLongBits(lhs) &gt;= 0 ? Double.doubleToLongBits(lhs) * -1 : Double.doubleToLongBits(lhs))" />
    <mutant id="mutant_1426" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="c" to="c &gt;= 0 ? c * -1 : c" />
    <mutant id="mutant_2756" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="(Double.doubleToLongBits(lhs))" to="(Double.doubleToLongBits(lhs) &gt;= 0 ? Double.doubleToLongBits(lhs) : Double.doubleToLongBits(lhs) * -1)" />
    <mutant id="mutant_1423" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_2755" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_1424" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_2754" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double,double)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_14808" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14807" viable="false" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14809" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14800" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="chrs.length" to="chrs.length &gt;= 0 ? chrs.length : chrs.length * -1" />
    <mutant id="mutant_14802" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14801" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="0" to="-1 * 0" />
    <mutant id="mutant_14804" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_14803" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14806" viable="false" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14805" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_1410" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(short,short)" from="1" to="-1 * 1" />
    <mutant id="mutant_2742" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="f.getModifiers()" to="(f.getModifiers() &gt;= 0 ? f.getModifiers() * -1 : f.getModifiers())" />
    <mutant id="mutant_1411" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_2741" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2740" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1418" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="b" to="b &gt;= 0 ? b : b * -1" />
    <mutant id="mutant_1419" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_2749" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,boolean[],boolean[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_1416" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_2748" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,boolean,boolean)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_1417" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="b" to="b &gt;= 0 ? b * -1 : b" />
    <mutant id="mutant_2747" viable="true" in="org.apache.commons.lang3.builder.Diff(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1414" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_2746" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_1415" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_2745" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="f.getModifiers()" to="(f.getModifiers() &gt;= 0 ? f.getModifiers() : f.getModifiers() * -1)" />
    <mutant id="mutant_1412" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_2744" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="f.getModifiers()" to="(f.getModifiers() &gt;= 0 ? f.getModifiers() * -1 : f.getModifiers())" />
    <mutant id="mutant_1413" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int,int,int)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_2743" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="f.getModifiers()" to="(f.getModifiers() &gt;= 0 ? f.getModifiers() : f.getModifiers() * -1)" />
    <mutant id="mutant_14819" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiControl(char)" from="127" to="(-1 * 127)" />
    <mutant id="mutant_14818" viable="true" in="org.apache.commons.lang3.CharUtils.isAsciiControl(char)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_1409" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(short,short)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14811" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14810" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14813" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_14812" viable="true" in="org.apache.commons.lang3.CharSetUtils.squeeze(java.lang.String,java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14815" viable="false" in="?" from="(CharUtils.CHAR_STRING_ARRAY.length)" to="(CharUtils.CHAR_STRING_ARRAY.length &gt;= 0 ? CharUtils.CHAR_STRING_ARRAY.length : CharUtils.CHAR_STRING_ARRAY.length * -1)" />
    <mutant id="mutant_14814" viable="false" in="?" from="(CharUtils.CHAR_STRING_ARRAY.length)" to="(CharUtils.CHAR_STRING_ARRAY.length &gt;= 0 ? CharUtils.CHAR_STRING_ARRAY.length * -1 : CharUtils.CHAR_STRING_ARRAY.length)" />
    <mutant id="mutant_14817" viable="true" in="org.apache.commons.lang3.CharUtils.isAscii(char)" from="128" to="(-1 * 128)" />
    <mutant id="mutant_14816" viable="false" in="?" from="128" to="-1 * 128" />
    <mutant id="mutant_2731" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1400" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="y" to="(y &gt;= 0 ? y * -1 : y)" />
    <mutant id="mutant_2730" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1407" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="1" to="-1 * 1" />
    <mutant id="mutant_2739" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1408" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(short,short)" from="0" to="-1 * 0" />
    <mutant id="mutant_2738" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1405" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="y" to="(y &gt;= 0 ? y * -1 : y)" />
    <mutant id="mutant_2737" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1406" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2736" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="(builder.comparison)" to="(builder.comparison &gt;= 0 ? builder.comparison * -1 : builder.comparison)" />
    <mutant id="mutant_1403" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="x" to="(x &gt;= 0 ? x : x * -1)" />
    <mutant id="mutant_2735" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="(builder.comparison)" to="(builder.comparison &gt;= 0 ? builder.comparison : builder.comparison * -1)" />
    <mutant id="mutant_1404" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="y" to="(y &gt;= 0 ? y : y * -1)" />
    <mutant id="mutant_2734" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="(fields.length)" to="(fields.length &gt;= 0 ? fields.length : fields.length * -1)" />
    <mutant id="mutant_1401" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="0" to="-1 * 0" />
    <mutant id="mutant_2733" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="(fields.length)" to="(fields.length &gt;= 0 ? fields.length * -1 : fields.length)" />
    <mutant id="mutant_1402" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="x" to="(x &gt;= 0 ? x * -1 : x)" />
    <mutant id="mutant_2732" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12203" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13535" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14866" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" to="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) &gt;= 0 ? className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) : className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) * -1" />
    <mutant id="mutant_1480" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_12204" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13534" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14865" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" to="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) &gt;= 0 ? className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) * -1 : className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" />
    <mutant id="mutant_12205" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13537" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14868" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="lastDotIndex" to="(lastDotIndex &gt;= 0 ? lastDotIndex : lastDotIndex * -1)" />
    <mutant id="mutant_12206" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13536" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14867" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="lastDotIndex" to="(lastDotIndex &gt;= 0 ? lastDotIndex * -1 : lastDotIndex)" />
    <mutant id="mutant_12207" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13539" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12208" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="Float.valueOf(array[i])" to="Float.valueOf(array[i]) &gt;= 0 ? Float.valueOf(array[i]) * -1 : Float.valueOf(array[i])" />
    <mutant id="mutant_13538" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14869" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12209" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="Float.valueOf(array[i])" to="Float.valueOf(array[i]) &gt;= 0 ? Float.valueOf(array[i]) : Float.valueOf(array[i]) * -1" />
    <mutant id="mutant_1476" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_1477" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_1474" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14860" viable="false" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1475" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_1472" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_13531" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14862" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1473" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_12200" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13530" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14861" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1470" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12201" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13533" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14864" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1471" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_12202" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13532" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14863" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1478" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_1479" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_12214" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13546" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14877" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="(classes.length)" to="(classes.length &gt;= 0 ? classes.length : classes.length * -1)" />
    <mutant id="mutant_12215" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13545" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14876" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="(classes.length)" to="(classes.length &gt;= 0 ? classes.length * -1 : classes.length)" />
    <mutant id="mutant_12216" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13548" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14879" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="classes.length" to="classes.length &gt;= 0 ? classes.length * -1 : classes.length" />
    <mutant id="mutant_12217" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13547" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14878" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12218" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12219" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13549" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_1465" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2797" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getLeft()" from="Integer.valueOf(lhs)" to="Integer.valueOf(lhs) &gt;= 0 ? Integer.valueOf(lhs) * -1 : Integer.valueOf(lhs)" />
    <mutant id="mutant_1466" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="1" to="-1 * 1" />
    <mutant id="mutant_2796" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getLeft()" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_1463" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_2795" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getLeft()" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_13540" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14871" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="lastDotIndex" to="(lastDotIndex &gt;= 0 ? lastDotIndex * -1 : lastDotIndex)" />
    <mutant id="mutant_1464" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_2794" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,int,int)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_14870" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1461" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="c" to="c &gt;= 0 ? c : c * -1" />
    <mutant id="mutant_2793" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,int,int)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_12210" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13542" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14873" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="lastDotIndex" to="(lastDotIndex &gt;= 0 ? lastDotIndex * -1 : lastDotIndex)" />
    <mutant id="mutant_1462" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="c" to="c &gt;= 0 ? c * -1 : c" />
    <mutant id="mutant_2792" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,int,int)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_12211" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13541" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14872" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="lastDotIndex" to="(lastDotIndex &gt;= 0 ? lastDotIndex : lastDotIndex * -1)" />
    <mutant id="mutant_2791" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,int,int)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_12212" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13544" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_14875" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1460" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_2790" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,int,int)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_12213" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13543" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14874" viable="true" in="org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader,java.lang.String,boolean)" from="lastDotIndex" to="(lastDotIndex &gt;= 0 ? lastDotIndex : lastDotIndex * -1)" />
    <mutant id="mutant_1469" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1467" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2799" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getRight()" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1468" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2798" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$1.getLeft()" from="Integer.valueOf(lhs)" to="Integer.valueOf(lhs) &gt;= 0 ? Integer.valueOf(lhs) : Integer.valueOf(lhs) * -1" />
    <mutant id="mutant_13513" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14844" viable="true" in="org.apache.commons.lang3.CharUtils.unicodeEscaped(char)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_13512" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14843" viable="true" in="org.apache.commons.lang3.CharUtils.unicodeEscaped(char)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_13515" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14846" viable="false" in="?" from="Integer.class" to="(Integer.class &gt;= 0 ? Integer.class : Integer.class * -1)" />
    <mutant id="mutant_13514" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14845" viable="true" in="org.apache.commons.lang3.CharUtils.unicodeEscaped(char)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_13517" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14848" viable="false" in="?" from="Long.class" to="(Long.class &gt;= 0 ? Long.class : Long.class * -1)" />
    <mutant id="mutant_13516" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14847" viable="false" in="?" from="Integer.class" to="(Integer.class &gt;= 0 ? Integer.class * -1 : Integer.class)" />
    <mutant id="mutant_13519" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_13518" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_14849" viable="false" in="?" from="Long.class" to="(Long.class &gt;= 0 ? Long.class * -1 : Long.class)" />
    <mutant id="mutant_1454" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="b" to="b &gt;= 0 ? b : b * -1" />
    <mutant id="mutant_2786" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$9.getRight()" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1455" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_2785" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$9.getRight()" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_1452" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_2784" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$9.getLeft()" from="Float.valueOf(lhs)" to="Float.valueOf(lhs) &gt;= 0 ? Float.valueOf(lhs) * -1 : Float.valueOf(lhs)" />
    <mutant id="mutant_1453" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="b" to="b &gt;= 0 ? b * -1 : b" />
    <mutant id="mutant_2783" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$9.getLeft()" from="Float.valueOf(lhs)" to="Float.valueOf(lhs) &gt;= 0 ? Float.valueOf(lhs) : Float.valueOf(lhs) * -1" />
    <mutant id="mutant_1450" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_2782" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$9.getLeft()" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_14840" viable="true" in="org.apache.commons.lang3.CharUtils.unicodeEscaped(char)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_1451" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_2781" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$9.getLeft()" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_2780" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_13511" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14842" viable="true" in="org.apache.commons.lang3.CharUtils.unicodeEscaped(char)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_13510" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14841" viable="true" in="org.apache.commons.lang3.CharUtils.unicodeEscaped(char)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_1458" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_1459" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_2789" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float[],float[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_1456" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_2788" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$9.getRight()" from="Float.valueOf(rhs)" to="Float.valueOf(rhs) &gt;= 0 ? Float.valueOf(rhs) : Float.valueOf(rhs) * -1" />
    <mutant id="mutant_1457" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_2787" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$9.getRight()" from="Float.valueOf(rhs)" to="Float.valueOf(rhs) &gt;= 0 ? Float.valueOf(rhs) * -1 : Float.valueOf(rhs)" />
    <mutant id="mutant_13524" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14855" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13523" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14854" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_13526" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14857" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="(classArray.length)" to="(classArray.length &gt;= 0 ? classArray.length * -1 : classArray.length)" />
    <mutant id="mutant_13525" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14856" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13528" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14859" viable="false" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13527" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14858" viable="true" in="org.apache.commons.lang3.ClassUtils.isAssignable(java.lang.Class[],java.lang.Class[],boolean)" from="(classArray.length)" to="(classArray.length &gt;= 0 ? classArray.length : classArray.length * -1)" />
    <mutant id="mutant_13529" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_1443" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2775" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="(Float.floatToIntBits(lhs))" to="(Float.floatToIntBits(lhs) &gt;= 0 ? Float.floatToIntBits(lhs) * -1 : Float.floatToIntBits(lhs))" />
    <mutant id="mutant_1444" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2774" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="(Float.floatToIntBits(lhs))" to="(Float.floatToIntBits(lhs) &gt;= 0 ? Float.floatToIntBits(lhs) : Float.floatToIntBits(lhs) * -1)" />
    <mutant id="mutant_1441" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_2773" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_1442" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_2772" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_2771" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,double[],double[])" from="1L" to="-1 * 1L" />
    <mutant id="mutant_13520" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14851" viable="false" in="?" from="Double.class" to="(Double.class &gt;= 0 ? Double.class : Double.class * -1)" />
    <mutant id="mutant_1440" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_2770" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder$7.getRight()" from="Double.valueOf(rhs)" to="Double.valueOf(rhs) &gt;= 0 ? Double.valueOf(rhs) : Double.valueOf(rhs) * -1" />
    <mutant id="mutant_14850" viable="false" in="?" from="Double.class" to="(Double.class &gt;= 0 ? Double.class * -1 : Double.class)" />
    <mutant id="mutant_13522" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14853" viable="false" in="?" from="Float.class" to="(Float.class &gt;= 0 ? Float.class : Float.class * -1)" />
    <mutant id="mutant_13521" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14852" viable="false" in="?" from="Float.class" to="(Float.class &gt;= 0 ? Float.class * -1 : Float.class)" />
    <mutant id="mutant_1449" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_1447" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_2779" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="(Float.floatToIntBits(rhs))" to="(Float.floatToIntBits(rhs) &gt;= 0 ? Float.floatToIntBits(rhs) : Float.floatToIntBits(rhs) * -1)" />
    <mutant id="mutant_1448" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int,int,int)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_2778" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="(Float.floatToIntBits(rhs))" to="(Float.floatToIntBits(rhs) &gt;= 0 ? Float.floatToIntBits(rhs) * -1 : Float.floatToIntBits(rhs))" />
    <mutant id="mutant_1445" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_2777" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1446" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(int[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_2776" viable="true" in="org.apache.commons.lang3.builder.DiffBuilder.append(java.lang.String,float,float)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_12247" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13579" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12248" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13578" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12249" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13571" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12240" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13570" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12241" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13573" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12242" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13572" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12243" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13575" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12244" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="Long.valueOf(array[i])" to="Long.valueOf(array[i]) &gt;= 0 ? Long.valueOf(array[i]) * -1 : Long.valueOf(array[i])" />
    <mutant id="mutant_13574" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12245" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="Long.valueOf(array[i])" to="Long.valueOf(array[i]) &gt;= 0 ? Long.valueOf(array[i]) : Long.valueOf(array[i]) * -1" />
    <mutant id="mutant_13577" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_12246" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13576" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_12258" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_12259" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13589" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12250" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13582" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12251" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13581" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12252" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13584" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_12253" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="Array.getLength(array)" to="Array.getLength(array) &gt;= 0 ? Array.getLength(array) : Array.getLength(array) * -1" />
    <mutant id="mutant_13583" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_12254" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="Array.getLength(array)" to="Array.getLength(array) &gt;= 0 ? Array.getLength(array) * -1 : Array.getLength(array)" />
    <mutant id="mutant_13586" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12255" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_13585" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12256" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_13588" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12257" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(java.lang.Object,int,java.lang.Object,java.lang.Class)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13587" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_13580" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12225" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13557" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14888" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12226" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="Integer.valueOf(array[i])" to="Integer.valueOf(array[i]) &gt;= 0 ? Integer.valueOf(array[i]) * -1 : Integer.valueOf(array[i])" />
    <mutant id="mutant_13556" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14887" viable="false" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12227" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="Integer.valueOf(array[i])" to="Integer.valueOf(array[i]) &gt;= 0 ? Integer.valueOf(array[i]) : Integer.valueOf(array[i]) * -1" />
    <mutant id="mutant_13559" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_12228" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13558" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14889" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12229" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_1498" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)" from="Long.decode(str)" to="Long.decode(str) &gt;= 0 ? Long.decode(str) * -1 : Long.decode(str)" />
    <mutant id="mutant_14880" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="classes.length" to="classes.length &gt;= 0 ? classes.length : classes.length * -1" />
    <mutant id="mutant_1499" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)" from="Long.decode(str)" to="Long.decode(str) &gt;= 0 ? Long.decode(str) : Long.decode(str) * -1" />
    <mutant id="mutant_1496" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String)" from="Integer.decode(str)" to="Integer.decode(str) &gt;= 0 ? Integer.decode(str) : Integer.decode(str) * -1" />
    <mutant id="mutant_13551" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14882" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1497" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String)" from="Integer.decode(str)" to="Integer.decode(str) &gt;= 0 ? Integer.decode(str) * -1 : Integer.decode(str)" />
    <mutant id="mutant_12220" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13550" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14881" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1494" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String)" from="Float.valueOf(str)" to="Float.valueOf(str) &gt;= 0 ? Float.valueOf(str) : Float.valueOf(str) * -1" />
    <mutant id="mutant_12221" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13553" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14884" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="(classes.length)" to="(classes.length &gt;= 0 ? classes.length * -1 : classes.length)" />
    <mutant id="mutant_1495" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createFloat(java.lang.String)" from="Float.valueOf(str)" to="Float.valueOf(str) &gt;= 0 ? Float.valueOf(str) * -1 : Float.valueOf(str)" />
    <mutant id="mutant_12222" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13552" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14883" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1492" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String)" from="Double.valueOf(str)" to="Double.valueOf(str) &gt;= 0 ? Double.valueOf(str) * -1 : Double.valueOf(str)" />
    <mutant id="mutant_12223" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13555" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14886" viable="false" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1493" viable="true" in="org.apache.commons.lang3.math.NumberUtils.createDouble(java.lang.String)" from="Double.valueOf(str)" to="Double.valueOf(str) &gt;= 0 ? Double.valueOf(str) : Double.valueOf(str) * -1" />
    <mutant id="mutant_12224" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13554" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(double[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14885" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="(classes.length)" to="(classes.length &gt;= 0 ? classes.length : classes.length * -1)" />
    <mutant id="mutant_1490" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String,int)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_12236" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13568" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14899" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1491" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String,int)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_12237" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13567" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14898" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12238" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12239" viable="false" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13569" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1487" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String,int)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_13560" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14891" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1488" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String,int)" from="Integer.parseInt(str)" to="Integer.parseInt(str) &gt;= 0 ? Integer.parseInt(str) : Integer.parseInt(str) * -1" />
    <mutant id="mutant_14890" viable="true" in="org.apache.commons.lang3.ClassUtils.primitivesToWrappers(java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1485" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.toInt(str, 0)" to="org.apache.commons.lang3.math.NumberUtils.toInt(str, 0) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.toInt(str, 0) : org.apache.commons.lang3.math.NumberUtils.toInt(str, 0) * -1" />
    <mutant id="mutant_12230" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13562" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14893" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_1486" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String,int)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_12231" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_13561" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14892" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1483" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12232" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_13564" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14895" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_1484" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.toInt(str, 0)" to="org.apache.commons.lang3.math.NumberUtils.toInt(str, 0) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.toInt(str, 0) * -1 : org.apache.commons.lang3.math.NumberUtils.toInt(str, 0)" />
    <mutant id="mutant_12233" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="0" to="-1 * 0" />
    <mutant id="mutant_13563" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14894" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1481" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_12234" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13566" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14897" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1482" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(int[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_12235" viable="true" in="org.apache.commons.lang3.ArrayUtils.toObject(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13565" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(float[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14896" viable="true" in="org.apache.commons.lang3.ClassUtils.toClass(java.lang.Object[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_1489" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toInt(java.lang.String,int)" from="Integer.parseInt(str)" to="Integer.parseInt(str) &gt;= 0 ? Integer.parseInt(str) * -1 : Integer.parseInt(str)" />
    <mutant id="mutant_14107" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15439" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14106" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_14109" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15437" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16768" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_14108" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15438" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16769" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T,boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_8706" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_15431" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16762" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_8705" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_15432" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16763" viable="true" in="org.apache.commons.lang3.ObjectUtils.min(T[])" from="(org.apache.commons.lang3.ObjectUtils.compare(value, result, true))" to="(org.apache.commons.lang3.ObjectUtils.compare(value, result, true) &gt;= 0 ? org.apache.commons.lang3.ObjectUtils.compare(value, result, true) : org.apache.commons.lang3.ObjectUtils.compare(value, result, true) * -1)" />
    <mutant id="mutant_8708" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND))" to="(end.get(Calendar.SECOND) &gt;= 0 ? end.get(Calendar.SECOND) : end.get(Calendar.SECOND) * -1)" />
    <mutant id="mutant_14101" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_16760" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(sort.size())" to="(sort.size() &gt;= 0 ? sort.size() * -1 : sort.size())" />
    <mutant id="mutant_8707" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.SECOND))" to="(end.get(Calendar.SECOND) &gt;= 0 ? end.get(Calendar.SECOND) * -1 : end.get(Calendar.SECOND))" />
    <mutant id="mutant_14100" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15430" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16761" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14103" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15435" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16766" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T)" from="org.apache.commons.lang3.ObjectUtils.compare(c1, c2, false)" to="org.apache.commons.lang3.ObjectUtils.compare(c1, c2, false) &gt;= 0 ? org.apache.commons.lang3.ObjectUtils.compare(c1, c2, false) : org.apache.commons.lang3.ObjectUtils.compare(c1, c2, false) * -1" />
    <mutant id="mutant_8709" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_14102" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15436" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16767" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T)" from="org.apache.commons.lang3.ObjectUtils.compare(c1, c2, false)" to="org.apache.commons.lang3.ObjectUtils.compare(c1, c2, false) &gt;= 0 ? org.apache.commons.lang3.ObjectUtils.compare(c1, c2, false) * -1 : org.apache.commons.lang3.ObjectUtils.compare(c1, c2, false)" />
    <mutant id="mutant_14105" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15433" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16764" viable="true" in="org.apache.commons.lang3.ObjectUtils.min(T[])" from="(org.apache.commons.lang3.ObjectUtils.compare(value, result, true))" to="(org.apache.commons.lang3.ObjectUtils.compare(value, result, true) &gt;= 0 ? org.apache.commons.lang3.ObjectUtils.compare(value, result, true) * -1 : org.apache.commons.lang3.ObjectUtils.compare(value, result, true))" />
    <mutant id="mutant_14104" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15434" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16765" viable="true" in="org.apache.commons.lang3.ObjectUtils.min(T[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8700" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND))" to="(end.get(Calendar.MILLISECOND) &gt;= 0 ? end.get(Calendar.MILLISECOND) * -1 : end.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_8702" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_8701" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_8704" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MILLISECOND))" to="(start.get(Calendar.MILLISECOND) &gt;= 0 ? start.get(Calendar.MILLISECOND) * -1 : start.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_8703" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MILLISECOND))" to="(start.get(Calendar.MILLISECOND) &gt;= 0 ? start.get(Calendar.MILLISECOND) : start.get(Calendar.MILLISECOND) * -1)" />
    <mutant id="mutant_14118" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14117" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15448" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16779" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_14119" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15449" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14110" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15442" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16773" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T,boolean)" from="c1.compareTo(c2)" to="c1.compareTo(c2) &gt;= 0 ? c1.compareTo(c2) * -1 : c1.compareTo(c2)" />
    <mutant id="mutant_15443" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16774" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T,boolean)" from="c1.compareTo(c2)" to="c1.compareTo(c2) &gt;= 0 ? c1.compareTo(c2) : c1.compareTo(c2) * -1" />
    <mutant id="mutant_14112" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15440" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16771" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14111" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15441" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16772" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T,boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_14114" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15446" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16777" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_14113" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15447" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16778" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_14116" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15444" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16775" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="Array.getLength(obj)" to="Array.getLength(obj) &gt;= 0 ? Array.getLength(obj) * -1 : Array.getLength(obj)" />
    <mutant id="mutant_14115" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15445" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16776" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="Array.getLength(obj)" to="Array.getLength(obj) &gt;= 0 ? Array.getLength(obj) : Array.getLength(obj) * -1" />
    <mutant id="mutant_16770" viable="true" in="org.apache.commons.lang3.ObjectUtils.compare(T,T,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15417" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16748" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[2].length())" to="(split[2].length() &gt;= 0 ? split[2].length() : split[2].length() * -1)" />
    <mutant id="mutant_15418" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16749" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[2].length())" to="(split[2].length() &gt;= 0 ? split[2].length() * -1 : split[2].length())" />
    <mutant id="mutant_15415" viable="false" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="srcPos &gt;= 0 ? srcPos : srcPos * -1" />
    <mutant id="mutant_16746" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15416" viable="false" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="srcPos &gt;= 0 ? srcPos * -1 : srcPos" />
    <mutant id="mutant_16747" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_15419" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16740" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[1].length())" to="(split[1].length() &gt;= 0 ? split[1].length() * -1 : split[1].length())" />
    <mutant id="mutant_15410" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_16741" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15413" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcLen" to="(srcLen &gt;= 0 ? srcLen : srcLen * -1)" />
    <mutant id="mutant_16744" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[1].length())" to="(split[1].length() &gt;= 0 ? split[1].length() * -1 : split[1].length())" />
    <mutant id="mutant_15414" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcLen" to="(srcLen &gt;= 0 ? srcLen * -1 : srcLen)" />
    <mutant id="mutant_16745" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_15411" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcLen" to="(srcLen &gt;= 0 ? srcLen : srcLen * -1)" />
    <mutant id="mutant_16742" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15412" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcLen" to="(srcLen &gt;= 0 ? srcLen * -1 : srcLen)" />
    <mutant id="mutant_16743" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[1].length())" to="(split[1].length() &gt;= 0 ? split[1].length() : split[1].length() * -1)" />
    <mutant id="mutant_15428" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16759" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(T[])" from="(sort.size())" to="(sort.size() &gt;= 0 ? sort.size() : sort.size() * -1)" />
    <mutant id="mutant_15429" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_15426" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16757" viable="true" in="org.apache.commons.lang3.ObjectUtils.max(T[])" from="(org.apache.commons.lang3.ObjectUtils.compare(value, result, false))" to="(org.apache.commons.lang3.ObjectUtils.compare(value, result, false) &gt;= 0 ? org.apache.commons.lang3.ObjectUtils.compare(value, result, false) * -1 : org.apache.commons.lang3.ObjectUtils.compare(value, result, false))" />
    <mutant id="mutant_15427" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16758" viable="true" in="org.apache.commons.lang3.ObjectUtils.max(T[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15420" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16751" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15421" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16752" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16750" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15424" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16755" viable="false" in="?" from="7092611880189329093L" to="-1 * 7092611880189329093L" />
    <mutant id="mutant_15425" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16756" viable="true" in="org.apache.commons.lang3.ObjectUtils.max(T[])" from="(org.apache.commons.lang3.ObjectUtils.compare(value, result, false))" to="(org.apache.commons.lang3.ObjectUtils.compare(value, result, false) &gt;= 0 ? org.apache.commons.lang3.ObjectUtils.compare(value, result, false) : org.apache.commons.lang3.ObjectUtils.compare(value, result, false) * -1)" />
    <mutant id="mutant_15422" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16753" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_15423" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16754" viable="false" in="?" from="20131021L" to="-1 * 20131021L" />
    <mutant id="mutant_7420" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8751" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.YEAR))" to="(start.get(Calendar.YEAR) &gt;= 0 ? start.get(Calendar.YEAR) : start.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_8750" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_7419" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt : spaceToWrapAt * -1)" />
    <mutant id="mutant_14143" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15475" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_7418" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt * -1 : spaceToWrapAt)" />
    <mutant id="mutant_8749" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_14142" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15476" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_14145" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15473" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14144" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15474" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14147" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15479" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14146" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14149" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_15477" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_14148" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15478" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_7411" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="spaceToWrapAt &gt;= 0 ? spaceToWrapAt : spaceToWrapAt * -1" />
    <mutant id="mutant_8742" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_7410" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="spaceToWrapAt &gt;= 0 ? spaceToWrapAt * -1 : spaceToWrapAt" />
    <mutant id="mutant_8741" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_7413" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength * -1 : wrapLength)" />
    <mutant id="mutant_8744" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MONTH))" to="(start.get(Calendar.MONTH) &gt;= 0 ? start.get(Calendar.MONTH) * -1 : start.get(Calendar.MONTH))" />
    <mutant id="mutant_7412" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength : wrapLength * -1)" />
    <mutant id="mutant_8743" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MONTH))" to="(start.get(Calendar.MONTH) &gt;= 0 ? start.get(Calendar.MONTH) : start.get(Calendar.MONTH) * -1)" />
    <mutant id="mutant_7415" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8746" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_15471" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_7414" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8745" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_15472" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_7417" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="str.indexOf(' ', (wrapLength + offset))" to="str.indexOf(' ', (wrapLength + offset)) &gt;= 0 ? str.indexOf(' ', (wrapLength + offset)) * -1 : str.indexOf(' ', (wrapLength + offset))" />
    <mutant id="mutant_8748" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR))" to="(end.get(Calendar.YEAR) &gt;= 0 ? end.get(Calendar.YEAR) * -1 : end.get(Calendar.YEAR))" />
    <mutant id="mutant_14141" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_7416" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="str.indexOf(' ', (wrapLength + offset))" to="str.indexOf(' ', (wrapLength + offset)) &gt;= 0 ? str.indexOf(' ', (wrapLength + offset)) : str.indexOf(' ', (wrapLength + offset)) * -1" />
    <mutant id="mutant_8747" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.YEAR))" to="(end.get(Calendar.YEAR) &gt;= 0 ? end.get(Calendar.YEAR) : end.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_14140" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15470" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_8740" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH))" to="(end.get(Calendar.MONTH) &gt;= 0 ? end.get(Calendar.MONTH) * -1 : end.get(Calendar.MONTH))" />
    <mutant id="mutant_7408" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="wrapLength &gt;= 0 ? wrapLength : wrapLength * -1" />
    <mutant id="mutant_8739" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH))" to="(end.get(Calendar.MONTH) &gt;= 0 ? end.get(Calendar.MONTH) : end.get(Calendar.MONTH) * -1)" />
    <mutant id="mutant_14154" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15486" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_7407" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_8738" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_14153" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15487" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14156" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15484" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_7409" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="wrapLength &gt;= 0 ? wrapLength * -1 : wrapLength" />
    <mutant id="mutant_14155" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15485" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_14158" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_14157" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15488" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_14159" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15489" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_7400" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8731" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH))" to="(end.get(Calendar.DAY_OF_MONTH) &gt;= 0 ? end.get(Calendar.DAY_OF_MONTH) : end.get(Calendar.DAY_OF_MONTH) * -1)" />
    <mutant id="mutant_8730" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_7402" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength : wrapLength * -1)" />
    <mutant id="mutant_8733" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_7401" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8732" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.DAY_OF_MONTH))" to="(end.get(Calendar.DAY_OF_MONTH) &gt;= 0 ? end.get(Calendar.DAY_OF_MONTH) * -1 : end.get(Calendar.DAY_OF_MONTH))" />
    <mutant id="mutant_7404" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8735" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.DAY_OF_MONTH))" to="(start.get(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.get(Calendar.DAY_OF_MONTH) : start.get(Calendar.DAY_OF_MONTH) * -1)" />
    <mutant id="mutant_14150" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_15482" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_7403" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength * -1 : wrapLength)" />
    <mutant id="mutant_8734" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_15483" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7406" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_8737" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_14152" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15480" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7405" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8736" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.DAY_OF_MONTH))" to="(start.get(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.get(Calendar.DAY_OF_MONTH) * -1 : start.get(Calendar.DAY_OF_MONTH))" />
    <mutant id="mutant_14151" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15481" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14129" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_14128" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15459" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_8728" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.HOUR_OF_DAY))" to="(start.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? start.get(Calendar.HOUR_OF_DAY) * -1 : start.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_14121" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_15453" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16784" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_8727" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.HOUR_OF_DAY))" to="(start.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? start.get(Calendar.HOUR_OF_DAY) : start.get(Calendar.HOUR_OF_DAY) * -1)" />
    <mutant id="mutant_14120" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15454" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16785" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_14123" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15451" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16782" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_8729" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_14122" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_15452" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16783" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_14125" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15457" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16788" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14124" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15458" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16789" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_14127" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15455" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16786" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(sort.size())" to="(sort.size() &gt;= 0 ? sort.size() : sort.size() * -1)" />
    <mutant id="mutant_14126" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15456" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16787" viable="true" in="org.apache.commons.lang3.ObjectUtils.median(java.util.Comparator,T[])" from="(sort.size())" to="(sort.size() &gt;= 0 ? sort.size() * -1 : sort.size())" />
    <mutant id="mutant_8720" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MINUTE))" to="(start.get(Calendar.MINUTE) &gt;= 0 ? start.get(Calendar.MINUTE) * -1 : start.get(Calendar.MINUTE))" />
    <mutant id="mutant_8722" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_8721" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_8724" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY))" to="(end.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? end.get(Calendar.HOUR_OF_DAY) * -1 : end.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_16780" viable="false" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_8723" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.HOUR_OF_DAY))" to="(end.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? end.get(Calendar.HOUR_OF_DAY) : end.get(Calendar.HOUR_OF_DAY) * -1)" />
    <mutant id="mutant_15450" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16781" viable="true" in="org.apache.commons.lang3.ObjectUtils.clone(T)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8726" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_8725" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_14139" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8717" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_14132" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15464" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16795" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_8716" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE))" to="(end.get(Calendar.MINUTE) &gt;= 0 ? end.get(Calendar.MINUTE) * -1 : end.get(Calendar.MINUTE))" />
    <mutant id="mutant_14131" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15465" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16796" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="cmp" to="(cmp &gt;= 0 ? cmp : cmp * -1)" />
    <mutant id="mutant_8719" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MINUTE))" to="(start.get(Calendar.MINUTE) &gt;= 0 ? start.get(Calendar.MINUTE) : start.get(Calendar.MINUTE) * -1)" />
    <mutant id="mutant_14134" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15462" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16793" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="0" to="-1 * 0" />
    <mutant id="mutant_8718" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_14133" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15463" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16794" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_14136" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15468" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16799" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_14135" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15469" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_14138" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15466" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16797" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="cmp" to="(cmp &gt;= 0 ? cmp * -1 : cmp)" />
    <mutant id="mutant_14137" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15467" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16798" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_8711" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.SECOND))" to="(start.get(Calendar.SECOND) &gt;= 0 ? start.get(Calendar.SECOND) * -1 : start.get(Calendar.SECOND))" />
    <mutant id="mutant_8710" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_8713" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_15460" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16791" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="items.length" to="(items.length &gt;= 0 ? items.length : items.length * -1)" />
    <mutant id="mutant_8712" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.SECOND))" to="(start.get(Calendar.SECOND) &gt;= 0 ? start.get(Calendar.SECOND) : start.get(Calendar.SECOND) * -1)" />
    <mutant id="mutant_15461" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16792" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8715" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MINUTE))" to="(end.get(Calendar.MINUTE) &gt;= 0 ? end.get(Calendar.MINUTE) : end.get(Calendar.MINUTE) * -1)" />
    <mutant id="mutant_14130" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(byte[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_8714" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_16790" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="items.length" to="(items.length &gt;= 0 ? items.length * -1 : items.length)" />
    <mutant id="mutant_7460" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="0" to="-1 * 0" />
    <mutant id="mutant_8791" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8790" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="(days &gt;= 0 ? days : days * -1)" />
    <mutant id="mutant_6130" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7462" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="BooleanUtils.toInteger(parent.equals(cParent))" to="BooleanUtils.toInteger(parent.equals(cParent)) &gt;= 0 ? BooleanUtils.toInteger(parent.equals(cParent)) * -1 : BooleanUtils.toInteger(parent.equals(cParent))" />
    <mutant id="mutant_8793" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_6131" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7461" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="BooleanUtils.toInteger(parent.equals(cParent))" to="BooleanUtils.toInteger(parent.equals(cParent)) &gt;= 0 ? BooleanUtils.toInteger(parent.equals(cParent)) : BooleanUtils.toInteger(parent.equals(cParent)) * -1" />
    <mutant id="mutant_8792" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_6132" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7464" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="(d &gt;= 0 ? d : d * -1)" />
    <mutant id="mutant_8795" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_6133" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7463" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="(d &gt;= 0 ? d * -1 : d)" />
    <mutant id="mutant_8794" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_14187" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14186" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_14189" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_14188" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6123" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7455" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field,boolean)" from="(Modifier.FINAL)" to="(Modifier.FINAL &gt;= 0 ? Modifier.FINAL * -1 : Modifier.FINAL)" />
    <mutant id="mutant_8786" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_6124" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7454" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field,boolean)" from="(field.getModifiers())" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_8785" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24" to="-1 * 24" />
    <mutant id="mutant_6125" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7457" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(java.lang.reflect.Field,java.lang.Object,boolean)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_8788" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_14181" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_6126" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7456" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field,boolean)" from="(Modifier.FINAL)" to="(Modifier.FINAL &gt;= 0 ? Modifier.FINAL : Modifier.FINAL * -1)" />
    <mutant id="mutant_8787" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_14180" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6127" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7459" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14183" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6128" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7458" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.writeStaticField(java.lang.reflect.Field,java.lang.Object,boolean)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_8789" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="(days &gt;= 0 ? days * -1 : days)" />
    <mutant id="mutant_14182" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_6129" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_14185" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_14184" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8780" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_7451" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field,boolean)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_8782" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6120" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7450" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(java.lang.Class,java.lang.Class)" from="annotatedFieldsList.size()" to="annotatedFieldsList.size() &gt;= 0 ? annotatedFieldsList.size() * -1 : annotatedFieldsList.size()" />
    <mutant id="mutant_8781" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_6121" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7453" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field,boolean)" from="(field.getModifiers())" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_8784" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="hours &gt;= 0 ? hours : hours * -1" />
    <mutant id="mutant_6122" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7452" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(java.lang.reflect.Field,boolean)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_8783" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="hours &gt;= 0 ? hours * -1 : hours" />
    <mutant id="mutant_14198" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="aux" to="aux &gt;= 0 ? aux * -1 : aux" />
    <mutant id="mutant_14197" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="aux" to="aux &gt;= 0 ? aux : aux * -1" />
    <mutant id="mutant_14199" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_6112" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7444" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.readStaticField(java.lang.reflect.Field,boolean)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_8775" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="minutes &gt;= 0 ? minutes : minutes * -1" />
    <mutant id="mutant_14190" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_6113" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7443" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.readStaticField(java.lang.reflect.Field,boolean)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_8774" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="minutes &gt;= 0 ? minutes * -1 : minutes" />
    <mutant id="mutant_6114" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7446" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_8777" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="hours &gt;= 0 ? hours * -1 : hours" />
    <mutant id="mutant_14192" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6115" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7445" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getField(java.lang.Class,java.lang.String,boolean)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_8776" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60" to="-1 * 60" />
    <mutant id="mutant_14191" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6116" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7448" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getAllFields(java.lang.Class)" from="allFieldsList.size()" to="allFieldsList.size() &gt;= 0 ? allFieldsList.size() * -1 : allFieldsList.size()" />
    <mutant id="mutant_8779" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_14194" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_6117" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7447" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getAllFields(java.lang.Class)" from="allFieldsList.size()" to="allFieldsList.size() &gt;= 0 ? allFieldsList.size() : allFieldsList.size() * -1" />
    <mutant id="mutant_8778" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="hours &gt;= 0 ? hours : hours * -1" />
    <mutant id="mutant_14193" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_6118" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_14196" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6119" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7449" viable="true" in="org.apache.commons.lang3.reflect.FieldUtils.getFieldsWithAnnotation(java.lang.Class,java.lang.Class)" from="annotatedFieldsList.size()" to="annotatedFieldsList.size() &gt;= 0 ? annotatedFieldsList.size() : annotatedFieldsList.size() * -1" />
    <mutant id="mutant_14195" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7440" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8771" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_8770" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_6110" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_7442" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(java.lang.Class)" from="cls.getModifiers()" to="(cls.getModifiers() &gt;= 0 ? cls.getModifiers() * -1 : cls.getModifiers())" />
    <mutant id="mutant_8773" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6111" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_7441" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.isAccessible(java.lang.Class)" from="cls.getModifiers()" to="(cls.getModifiers() &gt;= 0 ? cls.getModifiers() : cls.getModifiers() * -1)" />
    <mutant id="mutant_8772" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_6109" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_14165" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15497" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14164" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15498" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14167" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15495" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14166" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15496" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_14169" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_14168" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15499" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_6101" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7433" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_8764" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6102" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7432" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_8763" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="(seconds &gt;= 0 ? seconds : seconds * -1)" />
    <mutant id="mutant_15490" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_6103" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7435" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="inputLineLength" to="inputLineLength &gt;= 0 ? inputLineLength : inputLineLength * -1" />
    <mutant id="mutant_8766" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="seconds &gt;= 0 ? seconds : seconds * -1" />
    <mutant id="mutant_6104" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7434" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="inputLineLength" to="inputLineLength &gt;= 0 ? inputLineLength * -1 : inputLineLength" />
    <mutant id="mutant_8765" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="seconds &gt;= 0 ? seconds * -1 : seconds" />
    <mutant id="mutant_6105" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7437" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8768" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="minutes &gt;= 0 ? minutes * -1 : minutes" />
    <mutant id="mutant_14161" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15493" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_6106" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7436" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8767" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60" to="-1 * 60" />
    <mutant id="mutant_14160" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15494" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_6107" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7439" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[])" from="(MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes))" to="(MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes) &gt;= 0 ? MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes) * -1 : MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes))" />
    <mutant id="mutant_14163" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15491" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_6108" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7438" viable="true" in="org.apache.commons.lang3.reflect.ConstructorUtils.getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[])" from="(MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes))" to="(MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes) &gt;= 0 ? MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes) : MemberUtils.compareParameterTypes(ctor.getParameterTypes(), result.getParameterTypes(), parameterTypes) * -1)" />
    <mutant id="mutant_8769" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="minutes &gt;= 0 ? minutes : minutes * -1" />
    <mutant id="mutant_14162" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(char[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15492" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_8760" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="seconds &gt;= 0 ? seconds : seconds * -1" />
    <mutant id="mutant_7431" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8762" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="(seconds &gt;= 0 ? seconds * -1 : seconds)" />
    <mutant id="mutant_6100" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_7430" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8761" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_14176" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7429" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14175" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14178" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14177" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_14179" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7422" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8753" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_7421" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8752" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.YEAR))" to="(start.get(Calendar.YEAR) &gt;= 0 ? start.get(Calendar.YEAR) * -1 : start.get(Calendar.YEAR))" />
    <mutant id="mutant_7424" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt : spaceToWrapAt * -1)" />
    <mutant id="mutant_8755" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14170" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_7423" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt * -1 : spaceToWrapAt)" />
    <mutant id="mutant_8754" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_7426" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_8757" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds" />
    <mutant id="mutant_14172" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_7425" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_8756" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds : milliseconds * -1" />
    <mutant id="mutant_14171" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_7428" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt : spaceToWrapAt * -1)" />
    <mutant id="mutant_8759" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="seconds &gt;= 0 ? seconds * -1 : seconds" />
    <mutant id="mutant_14174" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_7427" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt * -1 : spaceToWrapAt)" />
    <mutant id="mutant_8758" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000" to="-1 * 1000" />
    <mutant id="mutant_14173" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(double[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6170" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6171" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6172" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6173" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6174" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6175" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6176" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6177" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6167" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_7499" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost * -1 : cost" />
    <mutant id="mutant_6168" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_7498" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="0.0F" to="-1 * 0.0F" />
    <mutant id="mutant_6169" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_7491" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6160" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_7490" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(int)" from="(MemberUtils.ACCESS_TEST)" to="(MemberUtils.ACCESS_TEST &gt;= 0 ? MemberUtils.ACCESS_TEST : MemberUtils.ACCESS_TEST * -1)" />
    <mutant id="mutant_6161" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_7493" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.AccessibleObject)" from="m.getModifiers()" to="(m.getModifiers() &gt;= 0 ? m.getModifiers() * -1 : m.getModifiers())" />
    <mutant id="mutant_6162" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_7492" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.AccessibleObject)" from="m.getModifiers()" to="(m.getModifiers() &gt;= 0 ? m.getModifiers() : m.getModifiers() * -1)" />
    <mutant id="mutant_6163" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7495" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.AccessibleObject)" from="m.getDeclaringClass().getModifiers()" to="(m.getDeclaringClass().getModifiers() &gt;= 0 ? m.getDeclaringClass().getModifiers() * -1 : m.getDeclaringClass().getModifiers())" />
    <mutant id="mutant_6164" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7494" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.AccessibleObject)" from="m.getDeclaringClass().getModifiers()" to="(m.getDeclaringClass().getModifiers() &gt;= 0 ? m.getDeclaringClass().getModifiers() : m.getDeclaringClass().getModifiers() * -1)" />
    <mutant id="mutant_6165" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7497" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass)" to="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass) &gt;= 0 ? org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass) : org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass) * -1" />
    <mutant id="mutant_6166" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_7496" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass)" to="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass) &gt;= 0 ? org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass) * -1 : org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(srcClass, destClass)" />
    <mutant id="mutant_6156" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.Object)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7488" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(int)" from="modifiers" to="(modifiers &gt;= 0 ? modifiers * -1 : modifiers)" />
    <mutant id="mutant_6157" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7487" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(int)" from="modifiers" to="(modifiers &gt;= 0 ? modifiers : modifiers * -1)" />
    <mutant id="mutant_6158" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6159" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_7489" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isPackageAccess(int)" from="(MemberUtils.ACCESS_TEST)" to="(MemberUtils.ACCESS_TEST &gt;= 0 ? MemberUtils.ACCESS_TEST * -1 : MemberUtils.ACCESS_TEST)" />
    <mutant id="mutant_7480" viable="false" in="?" from="(Modifier.PUBLIC)" to="(Modifier.PUBLIC &gt;= 0 ? Modifier.PUBLIC : Modifier.PUBLIC * -1)" />
    <mutant id="mutant_6150" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7482" viable="false" in="?" from="(Modifier.PROTECTED)" to="(Modifier.PROTECTED &gt;= 0 ? Modifier.PROTECTED * -1 : Modifier.PROTECTED)" />
    <mutant id="mutant_6151" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_7481" viable="false" in="?" from="(Modifier.PROTECTED)" to="(Modifier.PROTECTED &gt;= 0 ? Modifier.PROTECTED : Modifier.PROTECTED * -1)" />
    <mutant id="mutant_6152" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_7484" viable="false" in="?" from="(Modifier.PRIVATE)" to="(Modifier.PRIVATE &gt;= 0 ? Modifier.PRIVATE : Modifier.PRIVATE * -1)" />
    <mutant id="mutant_6153" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.Object)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7483" viable="false" in="?" from="(Modifier.PRIVATE)" to="(Modifier.PRIVATE &gt;= 0 ? Modifier.PRIVATE * -1 : Modifier.PRIVATE)" />
    <mutant id="mutant_6154" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.Object)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7486" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Member)" from="m.getModifiers()" to="(m.getModifiers() &gt;= 0 ? m.getModifiers() * -1 : m.getModifiers())" />
    <mutant id="mutant_6155" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.Object)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7485" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.isAccessible(java.lang.reflect.Member)" from="m.getModifiers()" to="(m.getModifiers() &gt;= 0 ? m.getModifiers() : m.getModifiers() * -1)" />
    <mutant id="mutant_6145" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,float)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7477" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6146" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,float)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7476" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="(d &gt;= 0 ? d : d * -1)" />
    <mutant id="mutant_6147" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,float)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_7479" viable="false" in="?" from="(Modifier.PUBLIC)" to="(Modifier.PUBLIC &gt;= 0 ? Modifier.PUBLIC * -1 : Modifier.PUBLIC)" />
    <mutant id="mutant_6148" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,float)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_7478" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6149" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7471" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent)" to="org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent) &gt;= 0 ? org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent) * -1 : org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent)" />
    <mutant id="mutant_6140" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_7470" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent)" to="org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent) &gt;= 0 ? org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent) : org.apache.commons.lang3.reflect.InheritanceUtils.distance(cParent, parent) * -1" />
    <mutant id="mutant_6141" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,double)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7473" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="(d &gt;= 0 ? d : d * -1)" />
    <mutant id="mutant_6142" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,double)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7472" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="(d &gt;= 0 ? d * -1 : d)" />
    <mutant id="mutant_6143" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_7475" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="(d &gt;= 0 ? d * -1 : d)" />
    <mutant id="mutant_6144" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_7474" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6134" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7466" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="d &gt;= 0 ? d * -1 : d" />
    <mutant id="mutant_8797" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="start.getActualMaximum(Calendar.DAY_OF_MONTH)" to="start.getActualMaximum(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.getActualMaximum(Calendar.DAY_OF_MONTH) * -1 : start.getActualMaximum(Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_6135" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7465" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8796" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="start.getActualMaximum(Calendar.DAY_OF_MONTH)" to="start.getActualMaximum(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.getActualMaximum(Calendar.DAY_OF_MONTH) : start.getActualMaximum(Calendar.DAY_OF_MONTH) * -1" />
    <mutant id="mutant_6136" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7468" viable="false" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="d &gt;= 0 ? d * -1 : d" />
    <mutant id="mutant_8799" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months * -1 : months" />
    <mutant id="mutant_6137" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7467" viable="true" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="d &gt;= 0 ? d : d * -1" />
    <mutant id="mutant_8798" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months : months * -1" />
    <mutant id="mutant_6138" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6139" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_7469" viable="false" in="org.apache.commons.lang3.reflect.InheritanceUtils.distance(java.lang.Class,java.lang.Class)" from="d" to="d &gt;= 0 ? d : d * -1" />
    <mutant id="mutant_6192" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_6193" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_6194" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_6195" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="(length())" to="(length() &gt;= 0 ? length() : length() * -1)" />
    <mutant id="mutant_6196" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="(length())" to="(length() &gt;= 0 ? length() * -1 : length())" />
    <mutant id="mutant_6197" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6198" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6199" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6190" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,long)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6191" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_6189" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,long)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6181" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6182" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_6183" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_6184" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6185" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6186" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6187" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6188" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6180" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6178" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6179" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_16726" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16727" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16724" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16725" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16728" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="-1 * 2" />
    <mutant id="mutant_16729" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16722" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[1].length())" to="(split[1].length() &gt;= 0 ? split[1].length() : split[1].length() * -1)" />
    <mutant id="mutant_16723" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[1].length())" to="(split[1].length() &gt;= 0 ? split[1].length() * -1 : split[1].length())" />
    <mutant id="mutant_16720" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16721" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15406" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="beSrcPos" to="(beSrcPos &gt;= 0 ? beSrcPos * -1 : beSrcPos)" />
    <mutant id="mutant_16737" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_15407" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16738" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15404" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="4" to="-1 * 4" />
    <mutant id="mutant_16735" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[0].length())" to="(split[0].length() &gt;= 0 ? split[0].length() : split[0].length() * -1)" />
    <mutant id="mutant_15405" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="beSrcPos" to="(beSrcPos &gt;= 0 ? beSrcPos : beSrcPos * -1)" />
    <mutant id="mutant_16736" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[0].length())" to="(split[0].length() &gt;= 0 ? split[0].length() * -1 : split[0].length())" />
    <mutant id="mutant_15408" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcLen" to="(srcLen &gt;= 0 ? srcLen : srcLen * -1)" />
    <mutant id="mutant_16739" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[1].length())" to="(split[1].length() &gt;= 0 ? split[1].length() : split[1].length() * -1)" />
    <mutant id="mutant_15409" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcLen" to="(srcLen &gt;= 0 ? srcLen * -1 : srcLen)" />
    <mutant id="mutant_16730" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15402" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="Math.min(4, (beSrcPos + 1))" to="Math.min(4, (beSrcPos + 1)) &gt;= 0 ? Math.min(4, (beSrcPos + 1)) * -1 : Math.min(4, (beSrcPos + 1))" />
    <mutant id="mutant_16733" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_15403" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="Math.min(4, (beSrcPos + 1))" to="Math.min(4, (beSrcPos + 1)) &gt;= 0 ? Math.min(4, (beSrcPos + 1)) : Math.min(4, (beSrcPos + 1)) * -1" />
    <mutant id="mutant_16734" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15400" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="beSrcPos" to="(beSrcPos &gt;= 0 ? beSrcPos * -1 : beSrcPos)" />
    <mutant id="mutant_16731" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[0].length())" to="(split[0].length() &gt;= 0 ? split[0].length() : split[0].length() * -1)" />
    <mutant id="mutant_15401" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16732" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[0].length())" to="(split[0].length() &gt;= 0 ? split[0].length() * -1 : split[0].length())" />
    <mutant id="mutant_16704" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_16705" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_16702" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="occurrences" to="occurrences &gt;= 0 ? occurrences * -1 : occurrences" />
    <mutant id="mutant_16703" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="occurrences" to="occurrences &gt;= 0 ? occurrences : occurrences * -1" />
    <mutant id="mutant_16708" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_16709" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_16706" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_16707" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16700" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length)" to="(split.length &gt;= 0 ? split.length : split.length * -1)" />
    <mutant id="mutant_16701" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16715" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[0].length())" to="(split[0].length() &gt;= 0 ? split[0].length() * -1 : split[0].length())" />
    <mutant id="mutant_16716" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16713" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16714" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[0].length())" to="(split[0].length() &gt;= 0 ? split[0].length() : split[0].length() * -1)" />
    <mutant id="mutant_16719" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[0].length())" to="(split[0].length() &gt;= 0 ? split[0].length() * -1 : split[0].length())" />
    <mutant id="mutant_16717" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16718" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split[0].length())" to="(split[0].length() &gt;= 0 ? split[0].length() : split[0].length() * -1)" />
    <mutant id="mutant_16711" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="-1 * 1" />
    <mutant id="mutant_16712" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16710" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_14228" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="aux" to="aux &gt;= 0 ? aux * -1 : aux" />
    <mutant id="mutant_14227" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="aux" to="aux &gt;= 0 ? aux : aux * -1" />
    <mutant id="mutant_15558" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16889" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14229" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15559" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9917" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_14220" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15552" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16883" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9918" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_15553" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16884" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9915" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle.intValue()" to="(timeStyle.intValue() &gt;= 0 ? timeStyle.intValue() * -1 : timeStyle.intValue())" />
    <mutant id="mutant_14222" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15550" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16881" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[])" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_9916" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_14221" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15551" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16882" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14224" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15556" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16887" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14223" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15557" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16888" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9919" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_14226" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15554" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16885" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14225" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15555" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16886" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9910" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_9913" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_9914" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle.intValue()" to="(timeStyle.intValue() &gt;= 0 ? timeStyle.intValue() : timeStyle.intValue() * -1)" />
    <mutant id="mutant_16880" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[])" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_9911" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_9912" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_14239" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14238" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_15569" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_9906" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_14231" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15563" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16894" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_9907" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_14230" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15564" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16895" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9904" viable="true" in="org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,java.util.TimeZone,java.util.Locale)" from="Integer.valueOf(timeStyle)" to="(Integer.valueOf(timeStyle) &gt;= 0 ? Integer.valueOf(timeStyle) * -1 : Integer.valueOf(timeStyle))" />
    <mutant id="mutant_14233" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15561" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16892" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9905" viable="true" in="org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,java.util.TimeZone,java.util.Locale)" from="Integer.valueOf(timeStyle)" to="(Integer.valueOf(timeStyle) &gt;= 0 ? Integer.valueOf(timeStyle) : Integer.valueOf(timeStyle) * -1)" />
    <mutant id="mutant_14232" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15562" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16893" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_14235" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15567" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16898" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14234" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15568" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16899" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_9908" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_14237" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_15565" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16896" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_9909" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_14236" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15566" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16897" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_9902" viable="true" in="org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,java.util.TimeZone,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_16890" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_9903" viable="true" in="org.apache.commons.lang3.time.FormatCache.getTimeInstance(int,java.util.TimeZone,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_15560" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16891" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_9900" viable="true" in="org.apache.commons.lang3.time.FormatCache.getInstance()" from="DateFormat.SHORT" to="(DateFormat.SHORT &gt;= 0 ? DateFormat.SHORT : DateFormat.SHORT * -1)" />
    <mutant id="mutant_9901" viable="true" in="org.apache.commons.lang3.time.FormatCache.getInstance()" from="DateFormat.SHORT" to="(DateFormat.SHORT &gt;= 0 ? DateFormat.SHORT * -1 : DateFormat.SHORT)" />
    <mutant id="mutant_14206" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15538" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16869" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="chars.length" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_14205" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15539" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14208" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_15536" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16867" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14207" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_15537" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16868" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="chars.length" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_14209" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15530" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16861" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15531" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16862" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14200" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_16860" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14202" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15534" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16865" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14201" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15535" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16866" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14204" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15532" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16863" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14203" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15533" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16864" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14217" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15549" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14216" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_14219" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15547" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16878" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[])" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_14218" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15548" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16879" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[])" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15541" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16872" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15542" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16873" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_14211" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_16870" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14210" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15540" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16871" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14213" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15545" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16876" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[])" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14212" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15546" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16877" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[])" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14215" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15543" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16874" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_14214" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(float[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15544" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16875" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_9960" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime())" to="(System.nanoTime() &gt;= 0 ? System.nanoTime() * -1 : System.nanoTime())" />
    <mutant id="mutant_9961" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(System.nanoTime())" to="(System.nanoTime() &gt;= 0 ? System.nanoTime() : System.nanoTime() * -1)" />
    <mutant id="mutant_8630" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_SECOND)" to="(DateUtils.MILLIS_PER_SECOND &gt;= 0 ? DateUtils.MILLIS_PER_SECOND * -1 : DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_8629" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_SECOND)" to="(DateUtils.MILLIS_PER_SECOND &gt;= 0 ? DateUtils.MILLIS_PER_SECOND : DateUtils.MILLIS_PER_SECOND * -1)" />
    <mutant id="mutant_14264" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15596" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_8628" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_14263" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15597" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_9959" viable="false" in="org.apache.commons.lang3.time.StopWatch.resume()" from="this.startTime" to="this.startTime &gt;= 0 ? this.startTime * -1 : this.startTime" />
    <mutant id="mutant_14266" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15594" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14265" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15595" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14268" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14267" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_15598" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14269" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15599" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_8621" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_9953" viable="true" in="org.apache.commons.lang3.time.StopWatch.getStartTime()" from="this.startTimeMillis" to="this.startTimeMillis &gt;= 0 ? this.startTimeMillis : this.startTimeMillis * -1" />
    <mutant id="mutant_8620" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_9954" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime())" to="(getNanoTime() &gt;= 0 ? getNanoTime() * -1 : getNanoTime())" />
    <mutant id="mutant_8623" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_MINUTE)" to="(DateUtils.MILLIS_PER_MINUTE &gt;= 0 ? DateUtils.MILLIS_PER_MINUTE * -1 : DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_9951" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(StopWatch.NANO_2_MILLIS)" to="(StopWatch.NANO_2_MILLIS &gt;= 0 ? StopWatch.NANO_2_MILLIS : StopWatch.NANO_2_MILLIS * -1)" />
    <mutant id="mutant_8622" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_9952" viable="true" in="org.apache.commons.lang3.time.StopWatch.getStartTime()" from="this.startTimeMillis" to="this.startTimeMillis &gt;= 0 ? this.startTimeMillis * -1 : this.startTimeMillis" />
    <mutant id="mutant_8625" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="seconds" to="seconds &gt;= 0 ? seconds : seconds * -1" />
    <mutant id="mutant_9957" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(StopWatch.NANO_2_MILLIS)" to="(StopWatch.NANO_2_MILLIS &gt;= 0 ? StopWatch.NANO_2_MILLIS : StopWatch.NANO_2_MILLIS * -1)" />
    <mutant id="mutant_14260" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15592" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_8624" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_MINUTE)" to="(DateUtils.MILLIS_PER_MINUTE &gt;= 0 ? DateUtils.MILLIS_PER_MINUTE : DateUtils.MILLIS_PER_MINUTE * -1)" />
    <mutant id="mutant_9958" viable="false" in="org.apache.commons.lang3.time.StopWatch.resume()" from="this.startTime" to="this.startTime &gt;= 0 ? this.startTime : this.startTime * -1" />
    <mutant id="mutant_15593" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_8627" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_9955" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(getNanoTime())" to="(getNanoTime() &gt;= 0 ? getNanoTime() : getNanoTime() * -1)" />
    <mutant id="mutant_14262" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15590" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_8626" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="seconds" to="seconds &gt;= 0 ? seconds * -1 : seconds" />
    <mutant id="mutant_9956" viable="true" in="org.apache.commons.lang3.time.StopWatch.getTime()" from="(StopWatch.NANO_2_MILLIS)" to="(StopWatch.NANO_2_MILLIS &gt;= 0 ? StopWatch.NANO_2_MILLIS * -1 : StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_14261" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15591" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9950" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(StopWatch.NANO_2_MILLIS)" to="(StopWatch.NANO_2_MILLIS &gt;= 0 ? StopWatch.NANO_2_MILLIS * -1 : StopWatch.NANO_2_MILLIS)" />
    <mutant id="mutant_8618" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds" />
    <mutant id="mutant_14275" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_8617" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds : milliseconds * -1" />
    <mutant id="mutant_14274" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9948" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime())" to="(getSplitNanoTime() &gt;= 0 ? getSplitNanoTime() * -1 : getSplitNanoTime())" />
    <mutant id="mutant_14277" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8619" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_9949" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitTime()" from="(getSplitNanoTime())" to="(getSplitNanoTime() &gt;= 0 ? getSplitNanoTime() : getSplitNanoTime() * -1)" />
    <mutant id="mutant_14276" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_14279" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_14278" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8610" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_HOUR)" to="(DateUtils.MILLIS_PER_HOUR &gt;= 0 ? DateUtils.MILLIS_PER_HOUR * -1 : DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_9942" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.startTime)" to="(this.startTime &gt;= 0 ? this.startTime : this.startTime * -1)" />
    <mutant id="mutant_9943" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.startTime)" to="(this.startTime &gt;= 0 ? this.startTime * -1 : this.startTime)" />
    <mutant id="mutant_8612" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="minutes" to="minutes &gt;= 0 ? minutes : minutes * -1" />
    <mutant id="mutant_9940" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime())" to="(System.nanoTime() &gt;= 0 ? System.nanoTime() * -1 : System.nanoTime())" />
    <mutant id="mutant_8611" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="minutes" to="minutes &gt;= 0 ? minutes * -1 : minutes" />
    <mutant id="mutant_9941" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(System.nanoTime())" to="(System.nanoTime() &gt;= 0 ? System.nanoTime() : System.nanoTime() * -1)" />
    <mutant id="mutant_8614" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_9946" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.startTime)" to="(this.startTime &gt;= 0 ? this.startTime : this.startTime * -1)" />
    <mutant id="mutant_14271" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_8613" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_9947" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.startTime)" to="(this.startTime &gt;= 0 ? this.startTime * -1 : this.startTime)" />
    <mutant id="mutant_14270" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8616" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_MINUTE)" to="(DateUtils.MILLIS_PER_MINUTE &gt;= 0 ? DateUtils.MILLIS_PER_MINUTE : DateUtils.MILLIS_PER_MINUTE * -1)" />
    <mutant id="mutant_9944" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime)" to="(this.stopTime &gt;= 0 ? this.stopTime : this.stopTime * -1)" />
    <mutant id="mutant_14273" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8615" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_MINUTE)" to="(DateUtils.MILLIS_PER_MINUTE &gt;= 0 ? DateUtils.MILLIS_PER_MINUTE * -1 : DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_9945" viable="true" in="org.apache.commons.lang3.time.StopWatch.getSplitNanoTime()" from="(this.stopTime)" to="(this.stopTime &gt;= 0 ? this.stopTime * -1 : this.stopTime)" />
    <mutant id="mutant_14272" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_14249" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_8607" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_9939" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="0" to="-1 * 0" />
    <mutant id="mutant_14242" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15574" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_8606" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_14241" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15575" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_8609" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_HOUR)" to="(DateUtils.MILLIS_PER_HOUR &gt;= 0 ? DateUtils.MILLIS_PER_HOUR : DateUtils.MILLIS_PER_HOUR * -1)" />
    <mutant id="mutant_9937" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.startTime)" to="(this.startTime &gt;= 0 ? this.startTime : this.startTime * -1)" />
    <mutant id="mutant_14244" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15572" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_8608" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_9938" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.startTime)" to="(this.startTime &gt;= 0 ? this.startTime * -1 : this.startTime)" />
    <mutant id="mutant_14243" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15573" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14246" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15578" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14245" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15579" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14248" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15576" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_14247" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15577" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_9931" viable="true" in="org.apache.commons.lang3.time.StopWatch.toSplitString()" from="getSplitTime()" to="(getSplitTime() &gt;= 0 ? getSplitTime() : getSplitTime() * -1)" />
    <mutant id="mutant_9932" viable="true" in="org.apache.commons.lang3.time.StopWatch.toSplitString()" from="getSplitTime()" to="(getSplitTime() &gt;= 0 ? getSplitTime() * -1 : getSplitTime())" />
    <mutant id="mutant_8601" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_HOUR)" to="(DateUtils.MILLIS_PER_HOUR &gt;= 0 ? DateUtils.MILLIS_PER_HOUR : DateUtils.MILLIS_PER_HOUR * -1)" />
    <mutant id="mutant_8600" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_9930" viable="false" in="?" from="1000000L" to="-1 * 1000000L" />
    <mutant id="mutant_8603" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds : milliseconds * -1" />
    <mutant id="mutant_9935" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime)" to="(this.stopTime &gt;= 0 ? this.stopTime : this.stopTime * -1)" />
    <mutant id="mutant_15570" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_8602" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_HOUR)" to="(DateUtils.MILLIS_PER_HOUR &gt;= 0 ? DateUtils.MILLIS_PER_HOUR * -1 : DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_9936" viable="true" in="org.apache.commons.lang3.time.StopWatch.getNanoTime()" from="(this.stopTime)" to="(this.stopTime &gt;= 0 ? this.stopTime * -1 : this.stopTime)" />
    <mutant id="mutant_15571" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8605" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_9933" viable="true" in="org.apache.commons.lang3.time.StopWatch.toString()" from="getTime()" to="(getTime() &gt;= 0 ? getTime() : getTime() * -1)" />
    <mutant id="mutant_14240" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8604" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds" />
    <mutant id="mutant_9934" viable="true" in="org.apache.commons.lang3.time.StopWatch.toString()" from="getTime()" to="(getTime() &gt;= 0 ? getTime() * -1 : getTime())" />
    <mutant id="mutant_9928" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle.intValue()" to="(timeStyle.intValue() &gt;= 0 ? timeStyle.intValue() : timeStyle.intValue() * -1)" />
    <mutant id="mutant_14253" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15585" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_9929" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle.intValue()" to="(timeStyle.intValue() &gt;= 0 ? timeStyle.intValue() * -1 : timeStyle.intValue())" />
    <mutant id="mutant_14252" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15586" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_9926" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_14255" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15583" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_9927" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_14254" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15584" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_14257" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="aux" to="aux &gt;= 0 ? aux : aux * -1" />
    <mutant id="mutant_15589" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14256" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14259" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15587" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14258" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="aux" to="aux &gt;= 0 ? aux * -1 : aux" />
    <mutant id="mutant_15588" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9920" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle.intValue()" to="(dateStyle.intValue() &gt;= 0 ? dateStyle.intValue() : dateStyle.intValue() * -1)" />
    <mutant id="mutant_9921" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle.intValue()" to="(dateStyle.intValue() &gt;= 0 ? dateStyle.intValue() * -1 : dateStyle.intValue())" />
    <mutant id="mutant_9924" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle.intValue()" to="(dateStyle.intValue() &gt;= 0 ? dateStyle.intValue() : dateStyle.intValue() * -1)" />
    <mutant id="mutant_15581" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_9925" viable="true" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle.intValue()" to="(dateStyle.intValue() &gt;= 0 ? dateStyle.intValue() * -1 : dateStyle.intValue())" />
    <mutant id="mutant_15582" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_9922" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_14251" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9923" viable="false" in="org.apache.commons.lang3.time.FormatCache.getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_14250" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(int[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15580" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_8670" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() * -1 : duration.length())" />
    <mutant id="mutant_7341" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8672" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6010" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7340" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="delimLen" to="(delimLen &gt;= 0 ? delimLen : delimLen * -1)" />
    <mutant id="mutant_8671" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6011" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7343" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8674" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() * -1 : tmp.length())" />
    <mutant id="mutant_6012" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7342" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_8673" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() : tmp.length() * -1)" />
    <mutant id="mutant_6002" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7334" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8665" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() : tmp.length() * -1)" />
    <mutant id="mutant_9997" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6003" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7333" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8664" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() * -1 : duration.length())" />
    <mutant id="mutant_9998" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6004" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7336" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8667" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() : duration.length() * -1)" />
    <mutant id="mutant_9995" viable="false" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6005" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7335" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8666" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() * -1 : tmp.length())" />
    <mutant id="mutant_9996" viable="false" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6006" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7338" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="delimiters.length" to="delimiters.length &gt;= 0 ? delimiters.length : delimiters.length * -1" />
    <mutant id="mutant_8669" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() : duration.length() * -1)" />
    <mutant id="mutant_6007" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7337" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="delimiters.length" to="delimiters.length &gt;= 0 ? delimiters.length * -1 : delimiters.length" />
    <mutant id="mutant_8668" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() * -1 : duration.length())" />
    <mutant id="mutant_6008" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_9999" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6009" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7339" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="delimLen" to="(delimLen &gt;= 0 ? delimLen * -1 : delimLen)" />
    <mutant id="mutant_9990" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="0" to="-1 * 0" />
    <mutant id="mutant_7330" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8661" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() : tmp.length() * -1)" />
    <mutant id="mutant_9993" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="(a1.length)" to="(a1.length &gt;= 0 ? a1.length * -1 : a1.length)" />
    <mutant id="mutant_8660" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() * -1 : duration.length())" />
    <mutant id="mutant_9994" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="(a1.length)" to="(a1.length &gt;= 0 ? a1.length : a1.length * -1)" />
    <mutant id="mutant_6000" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7332" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8663" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() : duration.length() * -1)" />
    <mutant id="mutant_9991" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6001" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7331" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8662" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() * -1 : tmp.length())" />
    <mutant id="mutant_9992" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7323" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_8654" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationISO(long)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis * -1 : durationMillis)" />
    <mutant id="mutant_9986" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="(a1.length)" to="(a1.length &gt;= 0 ? a1.length * -1 : a1.length)" />
    <mutant id="mutant_7322" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_8653" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationISO(long)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis : durationMillis * -1)" />
    <mutant id="mutant_9987" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="(a1.length)" to="(a1.length &gt;= 0 ? a1.length : a1.length * -1)" />
    <mutant id="mutant_7325" viable="false" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8656" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis * -1 : durationMillis)" />
    <mutant id="mutant_9984" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_7324" viable="false" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8655" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis : durationMillis * -1)" />
    <mutant id="mutant_9985" viable="true" in="org.apache.commons.lang3.AnnotationUtils$1.getShortClassName(java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7327" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8658" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() * -1 : tmp.length())" />
    <mutant id="mutant_7326" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8657" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() : tmp.length() * -1)" />
    <mutant id="mutant_7329" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9988" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="(a2.length)" to="(a2.length &gt;= 0 ? a2.length * -1 : a2.length)" />
    <mutant id="mutant_7328" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8659" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() : duration.length() * -1)" />
    <mutant id="mutant_9989" viable="true" in="org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(java.lang.annotation.Annotation[],java.lang.annotation.Annotation[])" from="(a2.length)" to="(a2.length &gt;= 0 ? a2.length : a2.length * -1)" />
    <mutant id="mutant_8650" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_9982" viable="true" in="org.apache.commons.lang3.time.StopWatch.suspend()" from="System.nanoTime()" to="System.nanoTime() &gt;= 0 ? System.nanoTime() * -1 : System.nanoTime()" />
    <mutant id="mutant_9983" viable="true" in="org.apache.commons.lang3.time.StopWatch.suspend()" from="System.nanoTime()" to="System.nanoTime() &gt;= 0 ? System.nanoTime() : System.nanoTime() * -1" />
    <mutant id="mutant_7321" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8652" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis * -1 : durationMillis)" />
    <mutant id="mutant_9980" viable="false" in="org.apache.commons.lang3.time.StopWatch.suspend()" from="this.stopTime" to="this.stopTime &gt;= 0 ? this.stopTime : this.stopTime * -1" />
    <mutant id="mutant_7320" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8651" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationHMS(long)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis : durationMillis * -1)" />
    <mutant id="mutant_9981" viable="false" in="org.apache.commons.lang3.time.StopWatch.suspend()" from="this.stopTime" to="this.stopTime &gt;= 0 ? this.stopTime * -1 : this.stopTime" />
    <mutant id="mutant_14286" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7319" viable="true" in="org.apache.commons.lang3.text.WordUtils.swapCase(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_14285" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14288" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_14287" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_14289" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_7312" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8643" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_9975" viable="true" in="org.apache.commons.lang3.time.StopWatch.start()" from="System.currentTimeMillis()" to="System.currentTimeMillis() &gt;= 0 ? System.currentTimeMillis() : System.currentTimeMillis() * -1" />
    <mutant id="mutant_7311" viable="false" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8642" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="days" to="(days &gt;= 0 ? days : days * -1)" />
    <mutant id="mutant_9976" viable="false" in="org.apache.commons.lang3.time.StopWatch.stop()" from="this.stopTime" to="this.stopTime &gt;= 0 ? this.stopTime : this.stopTime * -1" />
    <mutant id="mutant_7314" viable="false" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_8645" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_9973" viable="false" in="org.apache.commons.lang3.time.StopWatch.start()" from="this.startTimeMillis" to="this.startTimeMillis &gt;= 0 ? this.startTimeMillis : this.startTimeMillis * -1" />
    <mutant id="mutant_14280" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_7313" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8644" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_9974" viable="true" in="org.apache.commons.lang3.time.StopWatch.start()" from="System.currentTimeMillis()" to="System.currentTimeMillis() &gt;= 0 ? System.currentTimeMillis() * -1 : System.currentTimeMillis()" />
    <mutant id="mutant_7316" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8647" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="seconds" to="(seconds &gt;= 0 ? seconds : seconds * -1)" />
    <mutant id="mutant_9979" viable="true" in="org.apache.commons.lang3.time.StopWatch.stop()" from="System.nanoTime()" to="System.nanoTime() &gt;= 0 ? System.nanoTime() : System.nanoTime() * -1" />
    <mutant id="mutant_14282" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7315" viable="false" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_8646" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_14281" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7318" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_8649" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_9977" viable="false" in="org.apache.commons.lang3.time.StopWatch.stop()" from="this.stopTime" to="this.stopTime &gt;= 0 ? this.stopTime * -1 : this.stopTime" />
    <mutant id="mutant_14284" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_7317" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_8648" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="seconds" to="(seconds &gt;= 0 ? seconds * -1 : seconds)" />
    <mutant id="mutant_9978" viable="true" in="org.apache.commons.lang3.time.StopWatch.stop()" from="System.nanoTime()" to="System.nanoTime() &gt;= 0 ? System.nanoTime() * -1 : System.nanoTime()" />
    <mutant id="mutant_14283" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(java.lang.Object[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_9971" viable="true" in="org.apache.commons.lang3.time.StopWatch.start()" from="System.nanoTime()" to="System.nanoTime() &gt;= 0 ? System.nanoTime() : System.nanoTime() * -1" />
    <mutant id="mutant_9972" viable="false" in="org.apache.commons.lang3.time.StopWatch.start()" from="this.startTimeMillis" to="this.startTimeMillis &gt;= 0 ? this.startTimeMillis * -1 : this.startTimeMillis" />
    <mutant id="mutant_7310" viable="false" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8641" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="days" to="(days &gt;= 0 ? days * -1 : days)" />
    <mutant id="mutant_8640" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9970" viable="true" in="org.apache.commons.lang3.time.StopWatch.start()" from="System.nanoTime()" to="System.nanoTime() &gt;= 0 ? System.nanoTime() * -1 : System.nanoTime()" />
    <mutant id="mutant_7309" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_14297" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7308" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_8639" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14296" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14299" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_14298" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7301" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_8632" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds" />
    <mutant id="mutant_9964" viable="false" in="org.apache.commons.lang3.time.StopWatch.split()" from="this.stopTime" to="this.stopTime &gt;= 0 ? this.stopTime : this.stopTime * -1" />
    <mutant id="mutant_7300" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_8631" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds : milliseconds * -1" />
    <mutant id="mutant_9965" viable="false" in="org.apache.commons.lang3.time.StopWatch.split()" from="this.stopTime" to="this.stopTime &gt;= 0 ? this.stopTime * -1 : this.stopTime" />
    <mutant id="mutant_7303" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8634" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_9962" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(this.stopTime)" to="(this.stopTime &gt;= 0 ? this.stopTime : this.stopTime * -1)" />
    <mutant id="mutant_14291" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7302" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_8633" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_9963" viable="true" in="org.apache.commons.lang3.time.StopWatch.resume()" from="(this.stopTime)" to="(this.stopTime &gt;= 0 ? this.stopTime * -1 : this.stopTime)" />
    <mutant id="mutant_14290" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_7305" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_8636" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="seconds" to="(seconds &gt;= 0 ? seconds * -1 : seconds)" />
    <mutant id="mutant_9968" viable="false" in="org.apache.commons.lang3.time.StopWatch.start()" from="this.startTime" to="this.startTime &gt;= 0 ? this.startTime : this.startTime * -1" />
    <mutant id="mutant_14293" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7304" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_8635" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="seconds" to="(seconds &gt;= 0 ? seconds : seconds * -1)" />
    <mutant id="mutant_9969" viable="false" in="org.apache.commons.lang3.time.StopWatch.start()" from="this.startTime" to="this.startTime &gt;= 0 ? this.startTime * -1 : this.startTime" />
    <mutant id="mutant_14292" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_7307" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8638" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_SECOND)" to="(DateUtils.MILLIS_PER_SECOND &gt;= 0 ? DateUtils.MILLIS_PER_SECOND * -1 : DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_9966" viable="true" in="org.apache.commons.lang3.time.StopWatch.split()" from="System.nanoTime()" to="System.nanoTime() &gt;= 0 ? System.nanoTime() * -1 : System.nanoTime()" />
    <mutant id="mutant_14295" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7306" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8637" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_SECOND)" to="(DateUtils.MILLIS_PER_SECOND &gt;= 0 ? DateUtils.MILLIS_PER_SECOND : DateUtils.MILLIS_PER_SECOND * -1)" />
    <mutant id="mutant_9967" viable="true" in="org.apache.commons.lang3.time.StopWatch.split()" from="System.nanoTime()" to="System.nanoTime() &gt;= 0 ? System.nanoTime() : System.nanoTime() * -1" />
    <mutant id="mutant_14294" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7381" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength : wrapLength * -1)" />
    <mutant id="mutant_6050" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7380" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength * -1 : wrapLength)" />
    <mutant id="mutant_6051" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7383" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6052" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7382" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength * -1 : wrapLength)" />
    <mutant id="mutant_6053" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7385" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="str.lastIndexOf(' ', (wrapLength + offset))" to="str.lastIndexOf(' ', (wrapLength + offset)) &gt;= 0 ? str.lastIndexOf(' ', (wrapLength + offset)) : str.lastIndexOf(' ', (wrapLength + offset)) * -1" />
    <mutant id="mutant_6054" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7384" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6055" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7387" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt * -1 : spaceToWrapAt)" />
    <mutant id="mutant_6056" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7386" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="str.lastIndexOf(' ', (wrapLength + offset))" to="str.lastIndexOf(' ', (wrapLength + offset)) &gt;= 0 ? str.lastIndexOf(' ', (wrapLength + offset)) * -1 : str.lastIndexOf(' ', (wrapLength + offset))" />
    <mutant id="mutant_6046" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7378" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6047" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7377" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6048" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6049" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7379" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength : wrapLength * -1)" />
    <mutant id="mutant_7370" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="inputLineLength" to="(inputLineLength &gt;= 0 ? inputLineLength : inputLineLength * -1)" />
    <mutant id="mutant_6040" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7372" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6041" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7371" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6042" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7374" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6043" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7373" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6044" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7376" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="inputLineLength" to="(inputLineLength &gt;= 0 ? inputLineLength : inputLineLength * -1)" />
    <mutant id="mutant_6045" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7375" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="inputLineLength" to="(inputLineLength &gt;= 0 ? inputLineLength * -1 : inputLineLength)" />
    <mutant id="mutant_6035" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7367" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8698" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_6036" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7366" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_8697" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_6037" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7369" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="inputLineLength" to="(inputLineLength &gt;= 0 ? inputLineLength * -1 : inputLineLength)" />
    <mutant id="mutant_6038" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_7368" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8699" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MILLISECOND))" to="(end.get(Calendar.MILLISECOND) &gt;= 0 ? end.get(Calendar.MILLISECOND) : end.get(Calendar.MILLISECOND) * -1)" />
    <mutant id="mutant_6039" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="5" to="-1 * 5" />
    <mutant id="mutant_8690" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="startMillis" to="(startMillis &gt;= 0 ? startMillis * -1 : startMillis)" />
    <mutant id="mutant_7361" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_8692" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="endMillis" to="(endMillis &gt;= 0 ? endMillis * -1 : endMillis)" />
    <mutant id="mutant_6030" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7360" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_8691" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="endMillis" to="(endMillis &gt;= 0 ? endMillis : endMillis * -1)" />
    <mutant id="mutant_6031" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7363" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_8694" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="startMillis" to="(startMillis &gt;= 0 ? startMillis * -1 : startMillis)" />
    <mutant id="mutant_6032" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7362" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_8693" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="startMillis" to="(startMillis &gt;= 0 ? startMillis : startMillis * -1)" />
    <mutant id="mutant_6033" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7365" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="inputLineLength" to="(inputLineLength &gt;= 0 ? inputLineLength : inputLineLength * -1)" />
    <mutant id="mutant_8696" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="endMillis" to="(endMillis &gt;= 0 ? endMillis * -1 : endMillis)" />
    <mutant id="mutant_6034" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7364" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="inputLineLength" to="(inputLineLength &gt;= 0 ? inputLineLength * -1 : inputLineLength)" />
    <mutant id="mutant_8695" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="endMillis" to="(endMillis &gt;= 0 ? endMillis : endMillis * -1)" />
    <mutant id="mutant_6024" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7356" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength * -1 : wrapLength)" />
    <mutant id="mutant_8687" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String)" from="endMillis" to="(endMillis &gt;= 0 ? endMillis : endMillis * -1)" />
    <mutant id="mutant_6025" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7355" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength : wrapLength * -1)" />
    <mutant id="mutant_8686" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String)" from="startMillis" to="(startMillis &gt;= 0 ? startMillis * -1 : startMillis)" />
    <mutant id="mutant_6026" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7358" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="wrapLength &gt;= 0 ? wrapLength : wrapLength * -1" />
    <mutant id="mutant_8689" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="startMillis" to="(startMillis &gt;= 0 ? startMillis : startMillis * -1)" />
    <mutant id="mutant_6027" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7357" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8688" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String)" from="endMillis" to="(endMillis &gt;= 0 ? endMillis * -1 : endMillis)" />
    <mutant id="mutant_6028" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6029" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7359" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="wrapLength" to="wrapLength &gt;= 0 ? wrapLength * -1 : wrapLength" />
    <mutant id="mutant_7350" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8681" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() : tmp.length() * -1)" />
    <mutant id="mutant_8680" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() * -1 : duration.length())" />
    <mutant id="mutant_6020" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7352" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8683" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() : duration.length() * -1)" />
    <mutant id="mutant_6021" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7351" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8682" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() * -1 : tmp.length())" />
    <mutant id="mutant_6022" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="5" to="(-1 * 5)" />
    <mutant id="mutant_7354" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength * -1 : wrapLength)" />
    <mutant id="mutant_8685" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String)" from="startMillis" to="(startMillis &gt;= 0 ? startMillis : startMillis * -1)" />
    <mutant id="mutant_6023" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7353" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int)" from="wrapLength" to="(wrapLength &gt;= 0 ? wrapLength : wrapLength * -1)" />
    <mutant id="mutant_8684" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() * -1 : duration.length())" />
    <mutant id="mutant_6013" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_7345" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_8676" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() * -1 : duration.length())" />
    <mutant id="mutant_6014" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="4" to="-1 * 4" />
    <mutant id="mutant_7344" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8675" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() : duration.length() * -1)" />
    <mutant id="mutant_6015" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7347" viable="false" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8678" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() * -1 : tmp.length())" />
    <mutant id="mutant_6016" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7346" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_8677" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(tmp.length())" to="(tmp.length() &gt;= 0 ? tmp.length() : tmp.length() * -1)" />
    <mutant id="mutant_6017" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="5" to="(-1 * 5)" />
    <mutant id="mutant_7349" viable="true" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6018" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7348" viable="false" in="org.apache.commons.lang3.text.WordUtils.uncapitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8679" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDurationWords(long,boolean,boolean)" from="(duration.length())" to="(duration.length() &gt;= 0 ? duration.length() : duration.length() * -1)" />
    <mutant id="mutant_6019" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6093" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6094" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6095" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6096" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6097" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6098" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6099" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_6090" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6091" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6092" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[],int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6082" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6083" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6084" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6085" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6086" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6087" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6088" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_6089" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_6080" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6081" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6079" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6071" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6072" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6073" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6074" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6075" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6076" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6077" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6078" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6070" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6068" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6069" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7399" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6060" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7392" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6061" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7391" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6062" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="chars.length" to="chars.length &gt;= 0 ? chars.length * -1 : chars.length" />
    <mutant id="mutant_7394" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt : spaceToWrapAt * -1)" />
    <mutant id="mutant_6063" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="chars.length" to="chars.length &gt;= 0 ? chars.length : chars.length * -1" />
    <mutant id="mutant_7393" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt * -1 : spaceToWrapAt)" />
    <mutant id="mutant_6064" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7396" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_6065" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_7395" viable="false" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_6066" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7398" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt : spaceToWrapAt * -1)" />
    <mutant id="mutant_6067" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7397" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt * -1 : spaceToWrapAt)" />
    <mutant id="mutant_7390" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6057" viable="false" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7389" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6058" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7388" viable="true" in="org.apache.commons.lang3.text.WordUtils.wrap(java.lang.String,int,java.lang.String,boolean)" from="spaceToWrapAt" to="(spaceToWrapAt &gt;= 0 ? spaceToWrapAt : spaceToWrapAt * -1)" />
    <mutant id="mutant_6059" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,char[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_16809" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_16803" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_16804" viable="false" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_16801" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="cmp" to="(cmp &gt;= 0 ? cmp * -1 : cmp)" />
    <mutant id="mutant_16802" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_16807" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="cmp" to="cmp &gt;= 0 ? cmp * -1 : cmp" />
    <mutant id="mutant_16808" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_16805" viable="false" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_16806" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="cmp" to="cmp &gt;= 0 ? cmp : cmp * -1" />
    <mutant id="mutant_16800" viable="true" in="org.apache.commons.lang3.ObjectUtils.mode(T[])" from="cmp" to="(cmp &gt;= 0 ? cmp : cmp * -1)" />
    <mutant id="mutant_16814" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((byte)(v))" to="((byte)(v)) &gt;= 0 ? ((byte)(v)) : ((byte)(v)) * -1" />
    <mutant id="mutant_16815" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="((byte)(v))" to="((byte)(v)) &gt;= 0 ? ((byte)(v)) * -1 : ((byte)(v))" />
    <mutant id="mutant_16812" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_16813" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_16818" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST(float)" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_16819" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST(float)" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_16816" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST(double)" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_16817" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST(double)" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_16810" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_16811" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_BYTE(int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_15516" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16847" viable="true" in="org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.Appendable,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) * -1 : System.identityHashCode(object))" />
    <mutant id="mutant_15517" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16848" viable="true" in="org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.Appendable,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) : System.identityHashCode(object) * -1)" />
    <mutant id="mutant_15514" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16845" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((short)(v))" to="((short)(v)) &gt;= 0 ? ((short)(v)) : ((short)(v)) * -1" />
    <mutant id="mutant_15515" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16846" viable="false" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="((short)(v))" to="((short)(v)) &gt;= 0 ? ((short)(v)) * -1 : ((short)(v))" />
    <mutant id="mutant_15518" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16849" viable="true" in="org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuffer,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) * -1 : System.identityHashCode(object))" />
    <mutant id="mutant_15519" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16840" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_15512" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16843" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_15513" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16844" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_15510" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16841" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_15511" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16842" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_15527" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16858" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15528" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16859" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15525" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16856" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15526" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16857" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,boolean,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15529" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16850" viable="true" in="org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuffer,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) : System.identityHashCode(object) * -1)" />
    <mutant id="mutant_15520" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16851" viable="true" in="org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuilder,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) * -1 : System.identityHashCode(object))" />
    <mutant id="mutant_15523" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16854" viable="true" in="org.apache.commons.lang3.ObjectUtils.identityToString(org.apache.commons.lang3.text.StrBuilder,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) : System.identityHashCode(object) * -1)" />
    <mutant id="mutant_15524" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16855" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15521" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16852" viable="true" in="org.apache.commons.lang3.ObjectUtils.identityToString(java.lang.StringBuilder,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) : System.identityHashCode(object) * -1)" />
    <mutant id="mutant_15522" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16853" viable="true" in="org.apache.commons.lang3.ObjectUtils.identityToString(org.apache.commons.lang3.text.StrBuilder,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) * -1 : System.identityHashCode(object))" />
    <mutant id="mutant_16825" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="1" to="-1 * 1" />
    <mutant id="mutant_16826" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="ObjectUtils.hashCode(object)" to="ObjectUtils.hashCode(object) &gt;= 0 ? ObjectUtils.hashCode(object) * -1 : ObjectUtils.hashCode(object)" />
    <mutant id="mutant_16823" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object)" from="obj.hashCode()" to="obj.hashCode() &gt;= 0 ? obj.hashCode() : obj.hashCode() * -1" />
    <mutant id="mutant_16824" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object)" from="obj.hashCode()" to="obj.hashCode() &gt;= 0 ? obj.hashCode() * -1 : obj.hashCode()" />
    <mutant id="mutant_16829" viable="false" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="hash" to="hash &gt;= 0 ? hash : hash * -1" />
    <mutant id="mutant_16827" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="ObjectUtils.hashCode(object)" to="ObjectUtils.hashCode(object) &gt;= 0 ? ObjectUtils.hashCode(object) : ObjectUtils.hashCode(object) * -1" />
    <mutant id="mutant_16828" viable="false" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="hash" to="hash &gt;= 0 ? hash * -1 : hash" />
    <mutant id="mutant_16821" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST(int)" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_16822" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCode(java.lang.Object)" from="0" to="-1 * 0" />
    <mutant id="mutant_16820" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST(int)" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_15505" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16836" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="hash" to="hash &gt;= 0 ? hash : hash * -1" />
    <mutant id="mutant_15506" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16837" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST(long)" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_15503" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16834" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="tmpHash" to="(tmpHash &gt;= 0 ? tmpHash * -1 : tmpHash)" />
    <mutant id="mutant_15504" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16835" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="hash" to="hash &gt;= 0 ? hash * -1 : hash" />
    <mutant id="mutant_15509" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_15507" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16838" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST(long)" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_15508" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16839" viable="true" in="org.apache.commons.lang3.ObjectUtils.CONST_SHORT(int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_15501" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16832" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="31" to="(-1 * 31)" />
    <mutant id="mutant_15502" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16833" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="tmpHash" to="(tmpHash &gt;= 0 ? tmpHash : tmpHash * -1)" />
    <mutant id="mutant_16830" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="hash" to="(hash &gt;= 0 ? hash * -1 : hash)" />
    <mutant id="mutant_15500" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16831" viable="true" in="org.apache.commons.lang3.ObjectUtils.hashCodeMulti(java.lang.Object[])" from="hash" to="(hash &gt;= 0 ? hash : hash * -1)" />
    <mutant id="mutant_13018" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_14349" viable="true" in="org.apache.commons.lang3.BitField(int)" from="0" to="-1 * 0" />
    <mutant id="mutant_13017" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_14348" viable="true" in="org.apache.commons.lang3.BitField(int)" from="mask" to="mask &gt;= 0 ? mask : mask * -1" />
    <mutant id="mutant_15679" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="12" to="-1 * 12" />
    <mutant id="mutant_13019" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13010" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14341" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15673" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="6" to="-1 * 6" />
    <mutant id="mutant_14340" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15674" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="7" to="-1 * 7" />
    <mutant id="mutant_13012" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14343" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15671" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="4" to="-1 * 4" />
    <mutant id="mutant_13011" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_14342" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15672" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="5" to="-1 * 5" />
    <mutant id="mutant_13014" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14345" viable="false" in="org.apache.commons.lang3.BitField(int)" from="_mask" to="_mask &gt;= 0 ? _mask * -1 : _mask" />
    <mutant id="mutant_15677" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="10" to="-1 * 10" />
    <mutant id="mutant_13013" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14344" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15678" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="11" to="-1 * 11" />
    <mutant id="mutant_13016" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14347" viable="true" in="org.apache.commons.lang3.BitField(int)" from="mask" to="mask &gt;= 0 ? mask * -1 : mask" />
    <mutant id="mutant_15675" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="8" to="-1 * 8" />
    <mutant id="mutant_13015" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_14346" viable="false" in="org.apache.commons.lang3.BitField(int)" from="_mask" to="_mask &gt;= 0 ? _mask : _mask * -1" />
    <mutant id="mutant_15676" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="9" to="-1 * 9" />
    <mutant id="mutant_15670" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="3" to="-1 * 3" />
    <mutant id="mutant_13029" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_13028" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14359" viable="false" in="org.apache.commons.lang3.BitField(int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13021" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14352" viable="true" in="org.apache.commons.lang3.BitField(int)" from="bit_pattern" to="(bit_pattern &gt;= 0 ? bit_pattern * -1 : bit_pattern)" />
    <mutant id="mutant_15684" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="nibble" to="(nibble &gt;= 0 ? nibble : nibble * -1)" />
    <mutant id="mutant_13020" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14351" viable="true" in="org.apache.commons.lang3.BitField(int)" from="mask" to="mask &gt;= 0 ? mask : mask * -1" />
    <mutant id="mutant_15685" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_13023" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14354" viable="true" in="org.apache.commons.lang3.BitField(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15682" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="15" to="-1 * 15" />
    <mutant id="mutant_13022" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14353" viable="true" in="org.apache.commons.lang3.BitField(int)" from="bit_pattern" to="(bit_pattern &gt;= 0 ? bit_pattern : bit_pattern * -1)" />
    <mutant id="mutant_15683" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="nibble" to="(nibble &gt;= 0 ? nibble * -1 : nibble)" />
    <mutant id="mutant_13025" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_14356" viable="true" in="org.apache.commons.lang3.BitField(int)" from="bit_pattern" to="(bit_pattern &gt;= 0 ? bit_pattern : bit_pattern * -1)" />
    <mutant id="mutant_15688" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_13024" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_14355" viable="true" in="org.apache.commons.lang3.BitField(int)" from="bit_pattern" to="(bit_pattern &gt;= 0 ? bit_pattern * -1 : bit_pattern)" />
    <mutant id="mutant_15689" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_13027" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14358" viable="true" in="org.apache.commons.lang3.BitField(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15686" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_13026" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14357" viable="true" in="org.apache.commons.lang3.BitField(int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15687" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15680" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="13" to="-1 * 13" />
    <mutant id="mutant_15681" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="14" to="-1 * 14" />
    <mutant id="mutant_14350" viable="true" in="org.apache.commons.lang3.BitField(int)" from="mask" to="mask &gt;= 0 ? mask * -1 : mask" />
    <mutant id="mutant_14327" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15659" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14326" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14329" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15657" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16988" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,java.lang.String)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14328" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15658" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16989" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15651" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16982" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15652" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16983" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,java.lang.String)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14321" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16980" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14320" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15650" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16981" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14323" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15655" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16986" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14322" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15656" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16987" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,java.lang.String)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14325" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_15653" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16984" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,java.lang.String)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14324" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15654" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16985" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13007" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14338" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_13006" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14337" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_13009" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15668" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="1" to="-1 * 1" />
    <mutant id="mutant_16999" viable="true" in="org.apache.commons.lang3.RandomUtils.nextBytes(int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13008" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14339" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15669" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="2" to="-1 * 2" />
    <mutant id="mutant_14330" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15662" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16993" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomAscii(int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15663" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="nibble" to="(nibble &gt;= 0 ? nibble * -1 : nibble)" />
    <mutant id="mutant_16994" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomAscii(int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13001" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14332" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15660" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="nibble" to="(nibble &gt;= 0 ? nibble * -1 : nibble)" />
    <mutant id="mutant_16991" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13000" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14331" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15661" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="nibble" to="(nibble &gt;= 0 ? nibble : nibble * -1)" />
    <mutant id="mutant_16992" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomAlphanumeric(int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13003" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14334" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15666" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="nibble" to="nibble &gt;= 0 ? nibble : nibble * -1" />
    <mutant id="mutant_16997" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomNumeric(int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13002" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14333" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15667" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16998" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomNumeric(int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13005" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14336" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15664" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigit(int)" from="nibble" to="(nibble &gt;= 0 ? nibble : nibble * -1)" />
    <mutant id="mutant_16995" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomAscii(int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_13004" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14335" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15665" viable="true" in="org.apache.commons.lang3.Conversion.intToHexDigitMsb0(int)" from="nibble" to="nibble &gt;= 0 ? nibble * -1 : nibble" />
    <mutant id="mutant_16996" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomAscii(int)" from="127" to="(-1 * 127)" />
    <mutant id="mutant_16990" viable="true" in="org.apache.commons.lang3.RandomStringUtils.randomAlphabetic(int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9840" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="10" to="(-1 * 10)" />
    <mutant id="mutant_8508" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13054" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_14385" viable="true" in="org.apache.commons.lang3.BitField.clear(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask * -1 : _mask)" />
    <mutant id="mutant_8507" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_13053" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_14384" viable="true" in="org.apache.commons.lang3.BitField.clear(int)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_9838" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_13056" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14387" viable="true" in="org.apache.commons.lang3.BitField.getRawValue(int)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_8509" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9839" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_13055" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14386" viable="true" in="org.apache.commons.lang3.BitField.clear(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask : _mask * -1)" />
    <mutant id="mutant_13058" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14389" viable="true" in="org.apache.commons.lang3.BitField.getRawValue(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask * -1 : _mask)" />
    <mutant id="mutant_13057" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14388" viable="true" in="org.apache.commons.lang3.BitField.getRawValue(int)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_13059" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8500" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9832" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9833" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_8502" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9830" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_8501" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9831" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="2" to="-1 * 2" />
    <mutant id="mutant_8504" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9836" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="padding" to="(padding &gt;= 0 ? padding : padding * -1)" />
    <mutant id="mutant_13050" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14381" viable="false" in="org.apache.commons.lang3.BitField.setByte(byte)" from="((byte)(set(holder)))" to="((byte)(set(holder))) &gt;= 0 ? ((byte)(set(holder))) * -1 : ((byte)(set(holder)))" />
    <mutant id="mutant_8503" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9837" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="padding" to="(padding &gt;= 0 ? padding * -1 : padding)" />
    <mutant id="mutant_14380" viable="false" in="org.apache.commons.lang3.BitField.clearByte(byte)" from="((byte)(clear(holder)))" to="((byte)(clear(holder))) &gt;= 0 ? ((byte)(clear(holder))) * -1 : ((byte)(clear(holder)))" />
    <mutant id="mutant_8506" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0]))" to="(val.get(aField[0]) &gt;= 0 ? val.get(aField[0]) : val.get(aField[0]) * -1)" />
    <mutant id="mutant_9834" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_13052" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14383" viable="true" in="org.apache.commons.lang3.BitField.clear(int)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_8505" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0]))" to="(val.get(aField[0]) &gt;= 0 ? val.get(aField[0]) * -1 : val.get(aField[0]))" />
    <mutant id="mutant_9835" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_13051" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_14382" viable="false" in="org.apache.commons.lang3.BitField.setByte(byte)" from="((byte)(set(holder)))" to="((byte)(set(holder))) &gt;= 0 ? ((byte)(set(holder))) : ((byte)(set(holder))) * -1" />
    <mutant id="mutant_9829" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_13065" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14396" viable="true" in="org.apache.commons.lang3.BitField.getValue(int)" from="(_shift_count)" to="(_shift_count &gt;= 0 ? _shift_count : _shift_count * -1)" />
    <mutant id="mutant_13064" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14395" viable="true" in="org.apache.commons.lang3.BitField.getValue(int)" from="(_shift_count)" to="(_shift_count &gt;= 0 ? _shift_count * -1 : _shift_count)" />
    <mutant id="mutant_9827" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="padding" to="padding &gt;= 0 ? padding * -1 : padding" />
    <mutant id="mutant_13067" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14398" viable="true" in="org.apache.commons.lang3.BitField.set(int)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_9828" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_13066" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14397" viable="true" in="org.apache.commons.lang3.BitField.set(int)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_13069" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_13068" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14399" viable="true" in="org.apache.commons.lang3.BitField.set(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask * -1 : _mask)" />
    <mutant id="mutant_9821" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9822" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(sub.length())" to="(sub.length() &gt;= 0 ? sub.length() : sub.length() * -1)" />
    <mutant id="mutant_14390" viable="true" in="org.apache.commons.lang3.BitField.getRawValue(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask : _mask * -1)" />
    <mutant id="mutant_9820" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="2" to="(-1 * 2)" />
    <mutant id="mutant_9825" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13061" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14392" viable="true" in="org.apache.commons.lang3.BitField.getValue(int)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_9826" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(int,int)" from="padding" to="padding &gt;= 0 ? padding : padding * -1" />
    <mutant id="mutant_13060" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14391" viable="true" in="org.apache.commons.lang3.BitField.getValue(int)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_9823" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="(sub.length())" to="(sub.length() &gt;= 0 ? sub.length() * -1 : sub.length())" />
    <mutant id="mutant_13063" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14394" viable="true" in="org.apache.commons.lang3.BitField.getValue(int)" from="(getRawValue(holder))" to="(getRawValue(holder) &gt;= 0 ? getRawValue(holder) : getRawValue(holder) * -1)" />
    <mutant id="mutant_9824" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13062" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14393" viable="true" in="org.apache.commons.lang3.BitField.getValue(int)" from="(getRawValue(holder))" to="(getRawValue(holder) &gt;= 0 ? getRawValue(holder) * -1 : getRawValue(holder))" />
    <mutant id="mutant_13039" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9818" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_13032" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14363" viable="true" in="org.apache.commons.lang3.BitField(int)" from="1" to="-1 * 1" />
    <mutant id="mutant_15695" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_9819" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_13031" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14362" viable="false" in="org.apache.commons.lang3.BitField(int)" from="bit_pattern" to="bit_pattern &gt;= 0 ? bit_pattern : bit_pattern * -1" />
    <mutant id="mutant_15696" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_9816" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_13034" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_14365" viable="false" in="org.apache.commons.lang3.BitField(int)" from="_shift_count" to="_shift_count &gt;= 0 ? _shift_count : _shift_count * -1" />
    <mutant id="mutant_15693" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_9817" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13033" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14364" viable="false" in="org.apache.commons.lang3.BitField(int)" from="_shift_count" to="_shift_count &gt;= 0 ? _shift_count * -1 : _shift_count" />
    <mutant id="mutant_15694" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_13036" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14367" viable="true" in="org.apache.commons.lang3.BitField(int)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_15699" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_13035" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_14366" viable="true" in="org.apache.commons.lang3.BitField(int)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_13038" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14369" viable="true" in="org.apache.commons.lang3.BitField.isAllSet(int)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_15697" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_13037" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14368" viable="true" in="org.apache.commons.lang3.BitField.isAllSet(int)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_15698" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9810" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="4" to="(-1 * 4)" />
    <mutant id="mutant_9811" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="TimeZone.LONG" to="(TimeZone.LONG &gt;= 0 ? TimeZone.LONG * -1 : TimeZone.LONG)" />
    <mutant id="mutant_9814" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="TimeZone.SHORT" to="(TimeZone.SHORT &gt;= 0 ? TimeZone.SHORT * -1 : TimeZone.SHORT)" />
    <mutant id="mutant_15691" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9815" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_15692" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_9812" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="TimeZone.LONG" to="(TimeZone.LONG &gt;= 0 ? TimeZone.LONG : TimeZone.LONG * -1)" />
    <mutant id="mutant_13030" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14361" viable="false" in="org.apache.commons.lang3.BitField(int)" from="bit_pattern" to="bit_pattern &gt;= 0 ? bit_pattern * -1 : bit_pattern" />
    <mutant id="mutant_9813" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="TimeZone.SHORT" to="(TimeZone.SHORT &gt;= 0 ? TimeZone.SHORT : TimeZone.SHORT * -1)" />
    <mutant id="mutant_14360" viable="false" in="org.apache.commons.lang3.BitField(int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15690" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9807" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_13043" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14374" viable="true" in="org.apache.commons.lang3.BitField.isSet(int)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_9808" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_13042" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14373" viable="true" in="org.apache.commons.lang3.BitField.isAllSet(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask : _mask * -1)" />
    <mutant id="mutant_9805" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_13045" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14376" viable="true" in="org.apache.commons.lang3.BitField.isSet(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask * -1 : _mask)" />
    <mutant id="mutant_9806" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_13044" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14375" viable="true" in="org.apache.commons.lang3.BitField.isSet(int)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_13047" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_14378" viable="true" in="org.apache.commons.lang3.BitField.isSet(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13046" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14377" viable="true" in="org.apache.commons.lang3.BitField.isSet(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask : _mask * -1)" />
    <mutant id="mutant_9809" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_13049" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13048" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14379" viable="false" in="org.apache.commons.lang3.BitField.clearByte(byte)" from="((byte)(clear(holder)))" to="((byte)(clear(holder))) &gt;= 0 ? ((byte)(clear(holder))) : ((byte)(clear(holder))) * -1" />
    <mutant id="mutant_9800" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_9803" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR : Calendar.HOUR * -1)" />
    <mutant id="mutant_14370" viable="true" in="org.apache.commons.lang3.BitField.isAllSet(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask * -1 : _mask)" />
    <mutant id="mutant_9804" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_9801" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_13041" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14372" viable="true" in="org.apache.commons.lang3.BitField.isAllSet(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask * -1 : _mask)" />
    <mutant id="mutant_9802" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR * -1 : Calendar.HOUR)" />
    <mutant id="mutant_13040" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14371" viable="true" in="org.apache.commons.lang3.BitField.isAllSet(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask : _mask * -1)" />
    <mutant id="mutant_9880" viable="false" in="?" from="7" to="(-1 * 7)" />
    <mutant id="mutant_7220" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8551" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9883" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateInstance(int,java.util.TimeZone,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_8550" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9884" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateInstance(int,java.util.TimeZone,java.util.Locale)" from="Integer.valueOf(dateStyle)" to="(Integer.valueOf(dateStyle) &gt;= 0 ? Integer.valueOf(dateStyle) * -1 : Integer.valueOf(dateStyle))" />
    <mutant id="mutant_7222" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="(trimStart &gt;= 0 ? trimStart * -1 : trimStart)" />
    <mutant id="mutant_8553" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="seconds" to="(seconds &gt;= 0 ? seconds * -1 : seconds)" />
    <mutant id="mutant_9881" viable="false" in="?" from="7" to="(-1 * 7)" />
    <mutant id="mutant_7221" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="(trimStart &gt;= 0 ? trimStart : trimStart * -1)" />
    <mutant id="mutant_8552" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="seconds" to="(seconds &gt;= 0 ? seconds : seconds * -1)" />
    <mutant id="mutant_9882" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateInstance(int,java.util.TimeZone,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_13098" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13097" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_13099" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7213" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimmedLen" to="trimmedLen &gt;= 0 ? trimmedLen : trimmedLen * -1" />
    <mutant id="mutant_8544" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_9876" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="rc" to="rc &gt;= 0 ? rc * -1 : rc" />
    <mutant id="mutant_13090" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7212" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimmedLen" to="trimmedLen &gt;= 0 ? trimmedLen * -1 : trimmedLen" />
    <mutant id="mutant_8543" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9877" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode * -1 : hashCode" />
    <mutant id="mutant_7215" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8546" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9874" viable="false" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode : hashCode * -1" />
    <mutant id="mutant_13092" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_7214" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8545" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_9875" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="rc" to="rc &gt;= 0 ? rc : rc * -1" />
    <mutant id="mutant_13091" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7217" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="trimStart &gt;= 0 ? trimStart * -1 : trimStart" />
    <mutant id="mutant_8548" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_13094" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_7216" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="trimStart &gt;= 0 ? trimStart : trimStart * -1" />
    <mutant id="mutant_8547" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_13093" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_7219" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="workArea.size()" to="workArea.size() &gt;= 0 ? workArea.size() * -1 : workArea.size()" />
    <mutant id="mutant_9878" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode : hashCode * -1" />
    <mutant id="mutant_13096" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_7218" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="workArea.size()" to="workArea.size() &gt;= 0 ? workArea.size() : workArea.size() * -1" />
    <mutant id="mutant_8549" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_9879" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13095" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_8540" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="days" to="(days &gt;= 0 ? days * -1 : days)" />
    <mutant id="mutant_9872" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(key.hashCode())" to="(key.hashCode() &gt;= 0 ? key.hashCode() * -1 : key.hashCode())" />
    <mutant id="mutant_9873" viable="false" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode * -1 : hashCode" />
    <mutant id="mutant_7211" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_8542" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9870" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="7" to="(-1 * 7)" />
    <mutant id="mutant_7210" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_8541" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="days" to="(days &gt;= 0 ? days : days * -1)" />
    <mutant id="mutant_9871" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(key.hashCode())" to="(key.hashCode() &gt;= 0 ? key.hashCode() : key.hashCode() * -1)" />
    <mutant id="mutant_7209" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimmedLen" to="(trimmedLen &gt;= 0 ? trimmedLen : trimmedLen * -1)" />
    <mutant id="mutant_7202" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="getTrimmerMatcher().isMatch(srcChars, pos, start, len)" to="getTrimmerMatcher().isMatch(srcChars, pos, start, len) &gt;= 0 ? getTrimmerMatcher().isMatch(srcChars, pos, start, len) : getTrimmerMatcher().isMatch(srcChars, pos, start, len) * -1" />
    <mutant id="mutant_8533" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="years" to="(years &gt;= 0 ? years * -1 : years)" />
    <mutant id="mutant_9865" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_7201" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="getTrimmerMatcher().isMatch(srcChars, pos, start, len)" to="getTrimmerMatcher().isMatch(srcChars, pos, start, len) &gt;= 0 ? getTrimmerMatcher().isMatch(srcChars, pos, start, len) * -1 : getTrimmerMatcher().isMatch(srcChars, pos, start, len)" />
    <mutant id="mutant_8532" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="years" to="(years &gt;= 0 ? years : years * -1)" />
    <mutant id="mutant_9866" viable="false" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="rc" to="rc &gt;= 0 ? rc : rc * -1" />
    <mutant id="mutant_7204" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimmedLen" to="(trimmedLen &gt;= 0 ? trimmedLen : trimmedLen * -1)" />
    <mutant id="mutant_8535" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9863" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(hashCode)" to="(hashCode &gt;= 0 ? hashCode : hashCode * -1)" />
    <mutant id="mutant_7203" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimmedLen" to="(trimmedLen &gt;= 0 ? trimmedLen * -1 : trimmedLen)" />
    <mutant id="mutant_8534" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9864" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7206" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8537" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="months" to="(months &gt;= 0 ? months * -1 : months)" />
    <mutant id="mutant_9869" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="rc" to="(rc &gt;= 0 ? rc * -1 : rc)" />
    <mutant id="mutant_7205" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8536" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="months" to="(months &gt;= 0 ? months : months * -1)" />
    <mutant id="mutant_7208" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimmedLen" to="(trimmedLen &gt;= 0 ? trimmedLen * -1 : trimmedLen)" />
    <mutant id="mutant_8539" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9867" viable="false" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="rc" to="rc &gt;= 0 ? rc * -1 : rc" />
    <mutant id="mutant_7207" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8538" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9868" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="rc" to="(rc &gt;= 0 ? rc : rc * -1)" />
    <mutant id="mutant_9861" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_9862" viable="true" in="org.apache.commons.lang3.time.FormatCache$MultipartKey.hashCode()" from="(hashCode)" to="(hashCode &gt;= 0 ? hashCode * -1 : hashCode)" />
    <mutant id="mutant_7200" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8531" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="token.getCount()" to="token.getCount() &gt;= 0 ? token.getCount() : token.getCount() * -1" />
    <mutant id="mutant_8530" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="token.getCount()" to="token.getCount() &gt;= 0 ? token.getCount() * -1 : token.getCount()" />
    <mutant id="mutant_9860" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_13076" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_8529" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.increment()" from="(count)" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13075" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13078" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_13077" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13079" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_8522" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.getCount()" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_9854" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8521" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.equals(java.lang.Object)" from="(tok2.count)" to="(tok2.count &gt;= 0 ? tok2.count * -1 : tok2.count)" />
    <mutant id="mutant_9855" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8524" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.hashCode()" from="this.value.hashCode()" to="this.value.hashCode() &gt;= 0 ? this.value.hashCode() : this.value.hashCode() * -1" />
    <mutant id="mutant_9852" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_13070" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8523" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.getCount()" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_9853" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_8526" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.toString()" from="this.count" to="(this.count &gt;= 0 ? this.count : this.count * -1)" />
    <mutant id="mutant_9858" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="mMaxLengthEstimate" to="mMaxLengthEstimate &gt;= 0 ? mMaxLengthEstimate * -1 : mMaxLengthEstimate" />
    <mutant id="mutant_13072" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8525" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.hashCode()" from="this.value.hashCode()" to="this.value.hashCode() &gt;= 0 ? this.value.hashCode() * -1 : this.value.hashCode()" />
    <mutant id="mutant_9859" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="mMaxLengthEstimate" to="mMaxLengthEstimate &gt;= 0 ? mMaxLengthEstimate : mMaxLengthEstimate * -1" />
    <mutant id="mutant_13071" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(java.lang.Object[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8528" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.increment()" from="(count)" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9856" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="mRules[i].estimateLength()" to="mRules[i].estimateLength() &gt;= 0 ? mRules[i].estimateLength() * -1 : mRules[i].estimateLength()" />
    <mutant id="mutant_13074" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_8527" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.toString()" from="this.count" to="(this.count &gt;= 0 ? this.count * -1 : this.count)" />
    <mutant id="mutant_9857" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="mRules[i].estimateLength()" to="mRules[i].estimateLength() &gt;= 0 ? mRules[i].estimateLength() : mRules[i].estimateLength() * -1" />
    <mutant id="mutant_13073" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_9850" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9851" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8520" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.equals(java.lang.Object)" from="(tok2.count)" to="(tok2.count &gt;= 0 ? tok2.count : tok2.count * -1)" />
    <mutant id="mutant_8519" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.equals(java.lang.Object)" from="(this.count)" to="(this.count &gt;= 0 ? this.count * -1 : this.count)" />
    <mutant id="mutant_13087" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8518" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token.equals(java.lang.Object)" from="(this.count)" to="(this.count &gt;= 0 ? this.count : this.count * -1)" />
    <mutant id="mutant_13086" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_9849" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13089" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_13088" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_8511" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils$Token(java.lang.Object)" from="this.count" to="this.count &gt;= 0 ? this.count : this.count * -1" />
    <mutant id="mutant_9843" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="10" to="(-1 * 10)" />
    <mutant id="mutant_8510" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9844" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="rulesList.size()" to="rulesList.size() &gt;= 0 ? rulesList.size() : rulesList.size() * -1" />
    <mutant id="mutant_8513" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token(java.lang.Object)" from="1" to="-1 * 1" />
    <mutant id="mutant_9841" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_13081" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_8512" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils$Token(java.lang.Object)" from="this.count" to="this.count &gt;= 0 ? this.count * -1 : this.count" />
    <mutant id="mutant_9842" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.appendDigits(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_13080" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_8515" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils$Token(java.lang.Object,int)" from="this.count" to="this.count &gt;= 0 ? this.count * -1 : this.count" />
    <mutant id="mutant_9847" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="mRules.length" to="mRules.length &gt;= 0 ? mRules.length * -1 : mRules.length" />
    <mutant id="mutant_13083" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_8514" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils$Token(java.lang.Object,int)" from="this.count" to="this.count &gt;= 0 ? this.count : this.count * -1" />
    <mutant id="mutant_9848" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="mRules.length" to="mRules.length &gt;= 0 ? mRules.length : mRules.length * -1" />
    <mutant id="mutant_13082" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_8517" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token(java.lang.Object,int)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_9845" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="rulesList.size()" to="rulesList.size() &gt;= 0 ? rulesList.size() * -1 : rulesList.size()" />
    <mutant id="mutant_13085" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_8516" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils$Token(java.lang.Object,int)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_9846" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.init()" from="0" to="-1 * 0" />
    <mutant id="mutant_13084" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_7260" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.reset()" from="tokenPos" to="tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos" />
    <mutant id="mutant_8591" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_8590" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds" />
    <mutant id="mutant_7262" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.reset()" from="0" to="-1 * 0" />
    <mutant id="mutant_8593" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="days" to="(days &gt;= 0 ? days * -1 : days)" />
    <mutant id="mutant_7261" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.reset()" from="tokenPos" to="tokenPos &gt;= 0 ? tokenPos : tokenPos * -1" />
    <mutant id="mutant_8592" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_7264" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8595" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_DAY)" to="(DateUtils.MILLIS_PER_DAY &gt;= 0 ? DateUtils.MILLIS_PER_DAY : DateUtils.MILLIS_PER_DAY * -1)" />
    <mutant id="mutant_7263" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8594" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="days" to="(days &gt;= 0 ? days : days * -1)" />
    <mutant id="mutant_7266" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="split.size()" to="split.size() &gt;= 0 ? split.size() * -1 : split.size()" />
    <mutant id="mutant_8597" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="hours" to="hours &gt;= 0 ? hours : hours * -1" />
    <mutant id="mutant_7265" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="split.size()" to="split.size() &gt;= 0 ? split.size() : split.size() * -1" />
    <mutant id="mutant_8596" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_DAY)" to="(DateUtils.MILLIS_PER_DAY &gt;= 0 ? DateUtils.MILLIS_PER_DAY * -1 : DateUtils.MILLIS_PER_DAY)" />
    <mutant id="mutant_7257" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8588" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_DAY)" to="(DateUtils.MILLIS_PER_DAY &gt;= 0 ? DateUtils.MILLIS_PER_DAY * -1 : DateUtils.MILLIS_PER_DAY)" />
    <mutant id="mutant_7256" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8587" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="(DateUtils.MILLIS_PER_DAY)" to="(DateUtils.MILLIS_PER_DAY &gt;= 0 ? DateUtils.MILLIS_PER_DAY : DateUtils.MILLIS_PER_DAY * -1)" />
    <mutant id="mutant_7259" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_7258" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_8589" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds : milliseconds * -1" />
    <mutant id="mutant_8580" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_7251" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8582" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="durationMillis" to="durationMillis &gt;= 0 ? durationMillis * -1 : durationMillis" />
    <mutant id="mutant_7250" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8581" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="durationMillis" to="durationMillis &gt;= 0 ? durationMillis : durationMillis * -1" />
    <mutant id="mutant_7253" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_8584" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_7252" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_8583" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_7255" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="readNextToken(srcChars, pos, count, buf, tokenList)" to="readNextToken(srcChars, pos, count, buf, tokenList) &gt;= 0 ? readNextToken(srcChars, pos, count, buf, tokenList) : readNextToken(srcChars, pos, count, buf, tokenList) * -1" />
    <mutant id="mutant_8586" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_7254" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="readNextToken(srcChars, pos, count, buf, tokenList)" to="readNextToken(srcChars, pos, count, buf, tokenList) &gt;= 0 ? readNextToken(srcChars, pos, count, buf, tokenList) * -1 : readNextToken(srcChars, pos, count, buf, tokenList)" />
    <mutant id="mutant_8585" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_7246" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_8577" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_7245" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8576" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis * -1 : durationMillis)" />
    <mutant id="mutant_7248" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_8579" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_7247" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_8578" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_7249" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_7240" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_8571" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis * -1 : durationMillis)" />
    <mutant id="mutant_8570" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis : durationMillis * -1)" />
    <mutant id="mutant_7242" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8573" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="Long.MAX_VALUE" to="(Long.MAX_VALUE &gt;= 0 ? Long.MAX_VALUE : Long.MAX_VALUE * -1)" />
    <mutant id="mutant_7241" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8572" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7244" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8575" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="durationMillis" to="(durationMillis &gt;= 0 ? durationMillis : durationMillis * -1)" />
    <mutant id="mutant_7243" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8574" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="Long.MAX_VALUE" to="(Long.MAX_VALUE &gt;= 0 ? Long.MAX_VALUE * -1 : Long.MAX_VALUE)" />
    <mutant id="mutant_7235" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.getTokenList()" from="tokens.length" to="(tokens.length &gt;= 0 ? tokens.length : tokens.length * -1)" />
    <mutant id="mutant_8566" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_9898" viable="true" in="org.apache.commons.lang3.time.FormatCache.getInstance()" from="DateFormat.SHORT" to="(DateFormat.SHORT &gt;= 0 ? DateFormat.SHORT : DateFormat.SHORT * -1)" />
    <mutant id="mutant_7234" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.getTokenList()" from="tokens.length" to="(tokens.length &gt;= 0 ? tokens.length * -1 : tokens.length)" />
    <mutant id="mutant_8565" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_9899" viable="true" in="org.apache.commons.lang3.time.FormatCache.getInstance()" from="DateFormat.SHORT" to="(DateFormat.SHORT &gt;= 0 ? DateFormat.SHORT * -1 : DateFormat.SHORT)" />
    <mutant id="mutant_7237" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_8568" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9896" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_7236" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_8567" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_9897" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_7239" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_7238" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.tokenize(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8569" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9890" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle * -1 : timeStyle)" />
    <mutant id="mutant_9891" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="timeStyle" to="(timeStyle &gt;= 0 ? timeStyle : timeStyle * -1)" />
    <mutant id="mutant_8560" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="Math.max(3, count)" to="Math.max(3, count) &gt;= 0 ? Math.max(3, count) : Math.max(3, count) * -1" />
    <mutant id="mutant_7231" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.previous()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos : tokenPos * -1)" />
    <mutant id="mutant_8562" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_9894" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_7230" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.previous()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos)" />
    <mutant id="mutant_8561" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="3" to="-1 * 3" />
    <mutant id="mutant_9895" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_7233" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.previousToken()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos : tokenPos * -1)" />
    <mutant id="mutant_8564" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_9892" viable="false" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="Integer.valueOf(timeStyle)" to="(Integer.valueOf(timeStyle) &gt;= 0 ? Integer.valueOf(timeStyle) * -1 : Integer.valueOf(timeStyle))" />
    <mutant id="mutant_7232" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.previousToken()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos)" />
    <mutant id="mutant_8563" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_9893" viable="false" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="Integer.valueOf(timeStyle)" to="(Integer.valueOf(timeStyle) &gt;= 0 ? Integer.valueOf(timeStyle) : Integer.valueOf(timeStyle) * -1)" />
    <mutant id="mutant_7224" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.size()" from="tokens.length" to="tokens.length &gt;= 0 ? tokens.length * -1 : tokens.length" />
    <mutant id="mutant_8555" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9887" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle * -1 : dateStyle)" />
    <mutant id="mutant_7223" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8554" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9888" viable="false" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="Integer.valueOf(dateStyle)" to="(Integer.valueOf(dateStyle) &gt;= 0 ? Integer.valueOf(dateStyle) * -1 : Integer.valueOf(dateStyle))" />
    <mutant id="mutant_7226" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.next()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos)" />
    <mutant id="mutant_8557" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_9885" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateInstance(int,java.util.TimeZone,java.util.Locale)" from="Integer.valueOf(dateStyle)" to="(Integer.valueOf(dateStyle) &gt;= 0 ? Integer.valueOf(dateStyle) : Integer.valueOf(dateStyle) * -1)" />
    <mutant id="mutant_7225" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.size()" from="tokens.length" to="tokens.length &gt;= 0 ? tokens.length : tokens.length * -1" />
    <mutant id="mutant_8556" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_9886" viable="true" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="dateStyle" to="(dateStyle &gt;= 0 ? dateStyle : dateStyle * -1)" />
    <mutant id="mutant_7228" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.nextToken()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos)" />
    <mutant id="mutant_8559" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="Math.max(3, count)" to="Math.max(3, count) &gt;= 0 ? Math.max(3, count) * -1 : Math.max(3, count)" />
    <mutant id="mutant_7227" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.next()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos : tokenPos * -1)" />
    <mutant id="mutant_8558" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.format(org.apache.commons.lang3.time.DurationFormatUtils$Token[],long,long,long,long,long,long,long,boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_9889" viable="false" in="org.apache.commons.lang3.time.FormatCache.getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)" from="Integer.valueOf(dateStyle)" to="(Integer.valueOf(dateStyle) &gt;= 0 ? Integer.valueOf(dateStyle) : Integer.valueOf(dateStyle) * -1)" />
    <mutant id="mutant_7229" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.nextToken()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos : tokenPos * -1)" />
    <mutant id="mutant_7293" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String,char[])" from="delimLen" to="(delimLen &gt;= 0 ? delimLen : delimLen * -1)" />
    <mutant id="mutant_7292" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String,char[])" from="delimLen" to="(delimLen &gt;= 0 ? delimLen * -1 : delimLen)" />
    <mutant id="mutant_7295" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(delimiters.length)" to="(delimiters.length &gt;= 0 ? delimiters.length * -1 : delimiters.length)" />
    <mutant id="mutant_7294" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7297" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7296" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="(delimiters.length)" to="(delimiters.length &gt;= 0 ? delimiters.length : delimiters.length * -1)" />
    <mutant id="mutant_7299" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_7298" viable="true" in="org.apache.commons.lang3.text.WordUtils.initials(java.lang.String,char[])" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_7291" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String,char[])" from="delimiters.length" to="delimiters.length &gt;= 0 ? delimiters.length : delimiters.length * -1" />
    <mutant id="mutant_7290" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String,char[])" from="delimiters.length" to="delimiters.length &gt;= 0 ? delimiters.length * -1 : delimiters.length" />
    <mutant id="mutant_7289" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalizeFully(java.lang.String,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7282" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_7281" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_7284" viable="false" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7283" viable="false" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7286" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7285" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7288" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7287" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7280" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7279" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7278" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_7271" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="split.size()" to="split.size() &gt;= 0 ? split.size() * -1 : split.size()" />
    <mutant id="mutant_7270" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="split.size()" to="split.size() &gt;= 0 ? split.size() : split.size() * -1" />
    <mutant id="mutant_7273" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="delimiters.length" to="delimiters.length &gt;= 0 ? delimiters.length * -1 : delimiters.length" />
    <mutant id="mutant_7272" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7275" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="delimLen" to="(delimLen &gt;= 0 ? delimLen * -1 : delimLen)" />
    <mutant id="mutant_7274" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="delimiters.length" to="delimiters.length &gt;= 0 ? delimiters.length : delimiters.length * -1" />
    <mutant id="mutant_7277" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7276" viable="true" in="org.apache.commons.lang3.text.WordUtils.capitalize(java.lang.String,char[])" from="delimLen" to="(delimLen &gt;= 0 ? delimLen : delimLen * -1)" />
    <mutant id="mutant_7268" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="chars.length" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_8599" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_7267" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8598" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long,java.lang.String,boolean)" from="hours" to="hours &gt;= 0 ? hours * -1 : hours" />
    <mutant id="mutant_7269" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.checkTokenized()" from="chars.length" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_16924" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_16925" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_16922" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16923" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16928" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16929" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="gap" to="(gap &gt;= 0 ? gap * -1 : gap)" />
    <mutant id="mutant_16926" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_16927" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_16920" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_16921" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_15604" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16935" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="gap" to="(gap &gt;= 0 ? gap * -1 : gap)" />
    <mutant id="mutant_15605" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16936" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="gap" to="(gap &gt;= 0 ? gap : gap * -1)" />
    <mutant id="mutant_15602" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16933" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15603" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16934" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15608" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16939" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_15609" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_15606" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16937" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(random.nextInt(gap))" to="(random.nextInt(gap) &gt;= 0 ? random.nextInt(gap) : random.nextInt(gap) * -1)" />
    <mutant id="mutant_15607" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16938" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(random.nextInt(gap))" to="(random.nextInt(gap) &gt;= 0 ? random.nextInt(gap) * -1 : random.nextInt(gap))" />
    <mutant id="mutant_15600" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16931" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(random.nextInt(gap))" to="(random.nextInt(gap) &gt;= 0 ? random.nextInt(gap) : random.nextInt(gap) * -1)" />
    <mutant id="mutant_15601" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16932" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(random.nextInt(gap))" to="(random.nextInt(gap) &gt;= 0 ? random.nextInt(gap) * -1 : random.nextInt(gap))" />
    <mutant id="mutant_16930" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="gap" to="(gap &gt;= 0 ? gap : gap * -1)" />
    <mutant id="mutant_16908" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_16909" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16902" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="chars.length" to="chars.length &gt;= 0 ? chars.length : chars.length * -1" />
    <mutant id="mutant_16903" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_16900" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_16901" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="chars.length" to="chars.length &gt;= 0 ? chars.length * -1 : chars.length" />
    <mutant id="mutant_16906" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE" />
    <mutant id="mutant_16907" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_16904" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_16905" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1" />
    <mutant id="mutant_16919" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_16913" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16914" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_16911" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_16912" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16917" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16918" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_16915" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_16916" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16910" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_14305" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15637" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16968" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="128" to="(-1 * 128)" />
    <mutant id="mutant_14304" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15638" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16969" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(random.nextInt(128))" to="(random.nextInt(128) &gt;= 0 ? random.nextInt(128) : random.nextInt(128) * -1)" />
    <mutant id="mutant_14307" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15635" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16966" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14306" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15636" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16967" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="56320" to="(-1 * 56320)" />
    <mutant id="mutant_14309" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14308" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15639" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16960" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15630" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16961" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14301" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15633" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16964" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14300" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15634" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16965" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14303" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15631" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16962" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14302" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15632" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16963" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14316" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="aux" to="aux &gt;= 0 ? aux : aux * -1" />
    <mutant id="mutant_15648" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16979" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14315" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="aux" to="aux &gt;= 0 ? aux * -1 : aux" />
    <mutant id="mutant_15649" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14318" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_15646" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16977" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14317" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_15647" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16978" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14319" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(short[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15640" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16971" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15641" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16972" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_14310" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16970" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(random.nextInt(128))" to="(random.nextInt(128) &gt;= 0 ? random.nextInt(128) * -1 : random.nextInt(128))" />
    <mutant id="mutant_14312" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_15644" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16975" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="56192" to="(-1 * 56192)" />
    <mutant id="mutant_14311" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_15645" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16976" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="56319" to="(-1 * 56319)" />
    <mutant id="mutant_14314" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15642" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16973" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_14313" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(long[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15643" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16974" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15615" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16946" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15616" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16947" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15613" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16944" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15614" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16945" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15619" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_15617" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16948" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15618" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_16949" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15611" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_16942" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="57343" to="(-1 * 57343)" />
    <mutant id="mutant_15612" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16943" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_16940" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_15610" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16941" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="56320" to="(-1 * 56320)" />
    <mutant id="mutant_15626" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16957" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(random.nextInt(128))" to="(random.nextInt(128) &gt;= 0 ? random.nextInt(128) * -1 : random.nextInt(128))" />
    <mutant id="mutant_15627" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16958" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="55296" to="(-1 * 55296)" />
    <mutant id="mutant_15624" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16955" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="128" to="(-1 * 128)" />
    <mutant id="mutant_15625" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_16956" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="(random.nextInt(128))" to="(random.nextInt(128) &gt;= 0 ? random.nextInt(128) : random.nextInt(128) * -1)" />
    <mutant id="mutant_15628" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16959" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="56191" to="(-1 * 56191)" />
    <mutant id="mutant_15629" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16950" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_15622" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16953" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15623" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16954" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="55296" to="(-1 * 55296)" />
    <mutant id="mutant_15620" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16951" viable="false" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_15621" viable="true" in="org.apache.commons.lang3.Conversion.binaryToHexDigitMsb0_4bits(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16952" viable="true" in="org.apache.commons.lang3.RandomStringUtils.random(int,int,int,boolean,boolean,char[],java.util.Random)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_13139" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13138" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14469" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(boolean,int,int)" from="trueValue" to="trueValue &gt;= 0 ? trueValue * -1 : trueValue" />
    <mutant id="mutant_13131" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14462" viable="true" in="org.apache.commons.lang3.BooleanUtils.xor(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15794" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="6" to="-1 * 6" />
    <mutant id="mutant_13130" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14461" viable="true" in="org.apache.commons.lang3.BooleanUtils.xor(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_15795" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="14" to="-1 * 14" />
    <mutant id="mutant_13133" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14464" viable="true" in="org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_15792" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="2" to="-1 * 2" />
    <mutant id="mutant_13132" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14463" viable="true" in="org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_15793" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="10" to="-1 * 10" />
    <mutant id="mutant_13135" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14466" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_15798" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="5" to="-1 * 5" />
    <mutant id="mutant_13134" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14465" viable="true" in="org.apache.commons.lang3.BooleanUtils.compare(boolean,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15799" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="13" to="-1 * 13" />
    <mutant id="mutant_13137" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14468" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(boolean,int,int)" from="trueValue" to="trueValue &gt;= 0 ? trueValue : trueValue * -1" />
    <mutant id="mutant_15796" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="1" to="-1 * 1" />
    <mutant id="mutant_13136" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14467" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_15797" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="9" to="-1 * 9" />
    <mutant id="mutant_15790" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="4" to="-1 * 4" />
    <mutant id="mutant_15791" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="12" to="-1 * 12" />
    <mutant id="mutant_14460" viable="true" in="org.apache.commons.lang3.BooleanUtils.xor(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13149" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13142" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14473" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(java.lang.Boolean,int,int,int)" from="nullValue" to="nullValue &gt;= 0 ? nullValue * -1 : nullValue" />
    <mutant id="mutant_13141" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14472" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(java.lang.Boolean,int,int,int)" from="nullValue" to="nullValue &gt;= 0 ? nullValue : nullValue * -1" />
    <mutant id="mutant_13144" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14475" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(java.lang.Boolean,int,int,int)" from="trueValue" to="trueValue &gt;= 0 ? trueValue * -1 : trueValue" />
    <mutant id="mutant_13143" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14474" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(java.lang.Boolean,int,int,int)" from="trueValue" to="trueValue &gt;= 0 ? trueValue : trueValue * -1" />
    <mutant id="mutant_13146" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14477" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(java.lang.Boolean,int,int,int)" from="falseValue" to="falseValue &gt;= 0 ? falseValue * -1 : falseValue" />
    <mutant id="mutant_13145" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14476" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(java.lang.Boolean,int,int,int)" from="falseValue" to="falseValue &gt;= 0 ? falseValue : falseValue * -1" />
    <mutant id="mutant_13148" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14479" viable="true" in="org.apache.commons.lang3.BooleanUtils.and(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13147" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14478" viable="true" in="org.apache.commons.lang3.BooleanUtils.and(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13140" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14471" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(boolean,int,int)" from="falseValue" to="falseValue &gt;= 0 ? falseValue * -1 : falseValue" />
    <mutant id="mutant_14470" viable="true" in="org.apache.commons.lang3.BooleanUtils.toInteger(boolean,int,int)" from="falseValue" to="falseValue &gt;= 0 ? falseValue : falseValue * -1" />
    <mutant id="mutant_13117" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14448" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue : trueValue * -1)" />
    <mutant id="mutant_13116" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14447" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_13119" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_15778" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_13118" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14449" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue * -1 : trueValue)" />
    <mutant id="mutant_15779" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_14440" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue : trueValue * -1)" />
    <mutant id="mutant_15772" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_15773" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_13111" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14442" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15770" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13110" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14441" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue * -1 : trueValue)" />
    <mutant id="mutant_15771" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_13113" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14444" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue : falseValue * -1)" />
    <mutant id="mutant_15776" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_13112" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14443" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15777" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_13115" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_14446" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15774" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_13114" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14445" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue * -1 : falseValue)" />
    <mutant id="mutant_15775" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="255" to="(-1 * 255)" />
    <mutant id="mutant_13128" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14459" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue * -1 : falseValue)" />
    <mutant id="mutant_13127" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14458" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue : falseValue * -1)" />
    <mutant id="mutant_15789" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="8" to="-1 * 8" />
    <mutant id="mutant_13129" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_13120" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14451" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue * -1 : falseValue)" />
    <mutant id="mutant_15783" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_14450" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue : falseValue * -1)" />
    <mutant id="mutant_15784" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_13122" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_14453" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15781" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_13121" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_14452" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15782" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_13124" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14455" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue * -1 : trueValue)" />
    <mutant id="mutant_15787" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_13123" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14454" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue : trueValue * -1)" />
    <mutant id="mutant_15788" viable="true" in="org.apache.commons.lang3.Conversion.hexDigitMsb0ToInt(char)" from="0" to="-1 * 0" />
    <mutant id="mutant_13126" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14457" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15785" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_13125" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14456" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBoolean(java.lang.Integer,java.lang.Integer,java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15786" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_15780" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_9719" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="token.length()" to="token.length() &gt;= 0 ? token.length() : token.length() * -1" />
    <mutant id="mutant_13175" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_13174" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_9717" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_13177" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_9718" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13176" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13179" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_13178" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9711" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9712" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9710" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_9715" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_13171" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_9716" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_13170" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_9713" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13173" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9714" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_13172" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_9708" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13186" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_9709" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_13185" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_9706" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="0" to="-1 * 0" />
    <mutant id="mutant_13188" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9707" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13187" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_13189" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9700" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="((Long)(obj)).longValue()" to="(((Long)(obj)).longValue() &gt;= 0 ? ((Long)(obj)).longValue() * -1 : ((Long)(obj)).longValue())" />
    <mutant id="mutant_9701" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(long,java.lang.StringBuffer)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_13180" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9704" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="mPattern.length()" to="mPattern.length() &gt;= 0 ? mPattern.length() * -1 : mPattern.length()" />
    <mutant id="mutant_13182" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_9705" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="1" to="-1 * 1" />
    <mutant id="mutant_13181" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_9702" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(long,java.lang.StringBuffer)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_13184" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_9703" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="mPattern.length()" to="mPattern.length() &gt;= 0 ? mPattern.length() : mPattern.length() * -1" />
    <mutant id="mutant_13183" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_13153" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14484" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_13152" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14483" viable="true" in="org.apache.commons.lang3.BooleanUtils.or(java.lang.Boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13155" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14486" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13154" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14485" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_13157" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14488" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_13156" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_14487" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_13159" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_13158" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14489" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue : trueValue * -1)" />
    <mutant id="mutant_14480" viable="true" in="org.apache.commons.lang3.BooleanUtils.and(java.lang.Boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_13151" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14482" viable="true" in="org.apache.commons.lang3.BooleanUtils.or(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_13150" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_14481" viable="true" in="org.apache.commons.lang3.BooleanUtils.or(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_13164" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_14495" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_13163" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_14494" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue * -1 : falseValue)" />
    <mutant id="mutant_13166" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_14497" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="nullValue" to="(nullValue &gt;= 0 ? nullValue : nullValue * -1)" />
    <mutant id="mutant_13165" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_14496" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_13168" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14499" viable="false" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(java.lang.Integer)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_13167" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_14498" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="nullValue" to="(nullValue &gt;= 0 ? nullValue * -1 : nullValue)" />
    <mutant id="mutant_13169" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13160" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14491" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_14490" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="trueValue" to="(trueValue &gt;= 0 ? trueValue * -1 : trueValue)" />
    <mutant id="mutant_13162" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_14493" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="falseValue" to="(falseValue &gt;= 0 ? falseValue : falseValue * -1)" />
    <mutant id="mutant_13161" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_14492" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBooleanObject(int,int,int,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8430" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="12" to="(-1 * 12)" />
    <mutant id="mutant_9762" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_9763" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_7101" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_8432" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_9760" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_7100" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8431" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_9761" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_8423" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.HOUR_OF_DAY))" to="(val.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? val.get(Calendar.HOUR_OF_DAY) * -1 : val.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_9755" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR * -1 : Calendar.HOUR)" />
    <mutant id="mutant_8422" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.HOUR_OF_DAY))" to="(val.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? val.get(Calendar.HOUR_OF_DAY) : val.get(Calendar.HOUR_OF_DAY) * -1)" />
    <mutant id="mutant_9756" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR : Calendar.HOUR * -1)" />
    <mutant id="mutant_8425" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9753" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_8424" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9754" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_8427" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="12" to="(-1 * 12)" />
    <mutant id="mutant_9759" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_8426" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_8429" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_9757" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_8428" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9758" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_9751" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_9752" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_8421" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_8420" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9750" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="2" to="(-1 * 2)" />
    <mutant id="mutant_8419" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.AM_PM)" to="(Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM * -1 : Calendar.AM_PM)" />
    <mutant id="mutant_8412" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_9744" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_8411" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_9745" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="3" to="(-1 * 3)" />
    <mutant id="mutant_8414" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_9742" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_8413" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_9743" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_8416" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9748" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_8415" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9749" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_8418" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.AM_PM)" to="(Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM : Calendar.AM_PM * -1)" />
    <mutant id="mutant_9746" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_8417" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9747" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_9740" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="4" to="(-1 * 4)" />
    <mutant id="mutant_9741" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_8410" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_8409" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_13197" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_8408" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_13196" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9739" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_13199" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_13198" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_8401" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(DateUtils.SEMI_MONTH)" to="(DateUtils.SEMI_MONTH &gt;= 0 ? DateUtils.SEMI_MONTH : DateUtils.SEMI_MONTH * -1)" />
    <mutant id="mutant_9733" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_8400" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(DateUtils.SEMI_MONTH)" to="(DateUtils.SEMI_MONTH &gt;= 0 ? DateUtils.SEMI_MONTH * -1 : DateUtils.SEMI_MONTH)" />
    <mutant id="mutant_9734" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="4" to="(-1 * 4)" />
    <mutant id="mutant_8403" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_9731" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_13191" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_8402" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_9732" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_13190" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8405" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE))" to="(val.get(Calendar.DATE) &gt;= 0 ? val.get(Calendar.DATE) : val.get(Calendar.DATE) * -1)" />
    <mutant id="mutant_9737" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="tokenLen &gt;= 0 ? tokenLen : tokenLen * -1" />
    <mutant id="mutant_13193" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8404" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE))" to="(val.get(Calendar.DATE) &gt;= 0 ? val.get(Calendar.DATE) * -1 : val.get(Calendar.DATE))" />
    <mutant id="mutant_9738" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_13192" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_8407" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_9735" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="4" to="-1 * 4" />
    <mutant id="mutant_13195" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8406" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9736" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen" />
    <mutant id="mutant_13194" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(boolean[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9730" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_9728" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_9729" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="2" to="(-1 * 2)" />
    <mutant id="mutant_9722" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_9723" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9720" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="token.length()" to="token.length() &gt;= 0 ? token.length() * -1 : token.length()" />
    <mutant id="mutant_9721" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_9726" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA * -1 : Calendar.ERA)" />
    <mutant id="mutant_9727" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_9724" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9725" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA : Calendar.ERA * -1)" />
    <mutant id="mutant_8470" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.get(Calendar.HOUR_OF_DAY)" to="val.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? val.get(Calendar.HOUR_OF_DAY) * -1 : val.get(Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_7141" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8472" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7140" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="quoteLen &gt;= 0 ? quoteLen : quoteLen * -1" />
    <mutant id="mutant_8471" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7143" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="trimStart &gt;= 0 ? trimStart : trimStart * -1" />
    <mutant id="mutant_8474" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_7142" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8473" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="12" to="(-1 * 12)" />
    <mutant id="mutant_7145" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="workArea.size()" to="workArea.size() &gt;= 0 ? workArea.size() : workArea.size() * -1" />
    <mutant id="mutant_8476" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="12" to="-1 * 12" />
    <mutant id="mutant_7144" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="trimStart &gt;= 0 ? trimStart * -1 : trimStart" />
    <mutant id="mutant_8475" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_7136" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="workArea.size()" to="workArea.size() &gt;= 0 ? workArea.size() * -1 : workArea.size()" />
    <mutant id="mutant_8467" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9799" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_7135" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="workArea.size()" to="workArea.size() &gt;= 0 ? workArea.size() : workArea.size() * -1" />
    <mutant id="mutant_8466" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_7138" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_8469" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.get(Calendar.HOUR_OF_DAY)" to="val.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? val.get(Calendar.HOUR_OF_DAY) : val.get(Calendar.HOUR_OF_DAY) * -1" />
    <mutant id="mutant_9797" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.AM_PM" to="(Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM * -1 : Calendar.AM_PM)" />
    <mutant id="mutant_7137" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_8468" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_9798" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_7139" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen" />
    <mutant id="mutant_9791" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_9792" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.WEEK_OF_MONTH" to="(Calendar.WEEK_OF_MONTH &gt;= 0 ? Calendar.WEEK_OF_MONTH : Calendar.WEEK_OF_MONTH * -1)" />
    <mutant id="mutant_7130" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_8461" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.AM_PM" to="Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM * -1 : Calendar.AM_PM" />
    <mutant id="mutant_8460" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.AM_PM" to="Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM : Calendar.AM_PM * -1" />
    <mutant id="mutant_9790" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_7132" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_8463" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.HOUR_OF_DAY)" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9795" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_7131" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_8462" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9796" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.AM_PM" to="(Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM : Calendar.AM_PM * -1)" />
    <mutant id="mutant_7134" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="trimStart &gt;= 0 ? trimStart * -1 : trimStart" />
    <mutant id="mutant_8465" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_9793" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.WEEK_OF_MONTH" to="(Calendar.WEEK_OF_MONTH &gt;= 0 ? Calendar.WEEK_OF_MONTH * -1 : Calendar.WEEK_OF_MONTH)" />
    <mutant id="mutant_7133" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="trimStart &gt;= 0 ? trimStart : trimStart * -1" />
    <mutant id="mutant_8464" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.HOUR_OF_DAY)" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_9794" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_7125" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8456" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="15" to="-1 * 15" />
    <mutant id="mutant_9788" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.WEEK_OF_YEAR" to="(Calendar.WEEK_OF_YEAR &gt;= 0 ? Calendar.WEEK_OF_YEAR : Calendar.WEEK_OF_YEAR * -1)" />
    <mutant id="mutant_7124" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8455" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_9789" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.WEEK_OF_YEAR" to="(Calendar.WEEK_OF_YEAR &gt;= 0 ? Calendar.WEEK_OF_YEAR * -1 : Calendar.WEEK_OF_YEAR)" />
    <mutant id="mutant_7127" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_8458" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9786" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_7126" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_8457" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9787" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_7129" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_7128" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_8459" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="7" to="(-1 * 7)" />
    <mutant id="mutant_9780" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_9781" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_8450" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7121" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteStart" to="(quoteStart &gt;= 0 ? quoteStart : quoteStart * -1)" />
    <mutant id="mutant_8452" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9784" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.DAY_OF_WEEK_IN_MONTH" to="(Calendar.DAY_OF_WEEK_IN_MONTH &gt;= 0 ? Calendar.DAY_OF_WEEK_IN_MONTH * -1 : Calendar.DAY_OF_WEEK_IN_MONTH)" />
    <mutant id="mutant_7120" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteStart" to="(quoteStart &gt;= 0 ? quoteStart * -1 : quoteStart)" />
    <mutant id="mutant_8451" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9785" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.DAY_OF_WEEK_IN_MONTH" to="(Calendar.DAY_OF_WEEK_IN_MONTH &gt;= 0 ? Calendar.DAY_OF_WEEK_IN_MONTH : Calendar.DAY_OF_WEEK_IN_MONTH * -1)" />
    <mutant id="mutant_7123" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_8454" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_9782" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_7122" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_8453" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_9783" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_7114" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8445" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_9777" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_7113" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_8444" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_9778" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_7116" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_8447" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_9775" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK * -1 : Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_7115" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8446" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_9776" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK : Calendar.DAY_OF_WEEK * -1)" />
    <mutant id="mutant_7118" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8449" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE))" to="(val.get(Calendar.DATE) &gt;= 0 ? val.get(Calendar.DATE) : val.get(Calendar.DATE) * -1)" />
    <mutant id="mutant_7117" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_8448" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.DATE))" to="(val.get(Calendar.DATE) &gt;= 0 ? val.get(Calendar.DATE) * -1 : val.get(Calendar.DATE))" />
    <mutant id="mutant_9779" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="4" to="(-1 * 4)" />
    <mutant id="mutant_7119" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_9770" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_7110" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteStart" to="(quoteStart &gt;= 0 ? quoteStart * -1 : quoteStart)" />
    <mutant id="mutant_8441" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9773" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_8440" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="DateUtils.SEMI_MONTH" to="DateUtils.SEMI_MONTH &gt;= 0 ? DateUtils.SEMI_MONTH : DateUtils.SEMI_MONTH * -1" />
    <mutant id="mutant_9774" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_7112" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_8443" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.DATE)" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_9771" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_7111" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteStart" to="(quoteStart &gt;= 0 ? quoteStart : quoteStart * -1)" />
    <mutant id="mutant_8442" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.DATE)" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_9772" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_7103" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8434" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9766" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen : tokenLen * -1)" />
    <mutant id="mutant_7102" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8433" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9767" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_7105" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8436" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="-1 * 0" />
    <mutant id="mutant_9764" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_7104" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8435" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9765" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_7107" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8438" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="field &gt;= 0 ? field : field * -1" />
    <mutant id="mutant_7106" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8437" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="field &gt;= 0 ? field * -1 : field" />
    <mutant id="mutant_7109" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_9768" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_7108" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8439" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="DateUtils.SEMI_MONTH" to="DateUtils.SEMI_MONTH &gt;= 0 ? DateUtils.SEMI_MONTH * -1 : DateUtils.SEMI_MONTH" />
    <mutant id="mutant_9769" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parsePattern()" from="tokenLen" to="(tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen)" />
    <mutant id="mutant_7183" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_7182" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_7185" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_7184" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7187" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="getIgnoredMatcher().isMatch(srcChars, pos, start, len)" to="getIgnoredMatcher().isMatch(srcChars, pos, start, len) &gt;= 0 ? getIgnoredMatcher().isMatch(srcChars, pos, start, len) : getIgnoredMatcher().isMatch(srcChars, pos, start, len) * -1" />
    <mutant id="mutant_7186" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="getIgnoredMatcher().isMatch(srcChars, pos, start, len)" to="getIgnoredMatcher().isMatch(srcChars, pos, start, len) &gt;= 0 ? getIgnoredMatcher().isMatch(srcChars, pos, start, len) * -1 : getIgnoredMatcher().isMatch(srcChars, pos, start, len)" />
    <mutant id="mutant_7189" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="ignoredLen" to="(ignoredLen &gt;= 0 ? ignoredLen * -1 : ignoredLen)" />
    <mutant id="mutant_7188" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="ignoredLen" to="(ignoredLen &gt;= 0 ? ignoredLen : ignoredLen * -1)" />
    <mutant id="mutant_7181" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7180" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_7179" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="quoteLen &gt;= 0 ? quoteLen : quoteLen * -1" />
    <mutant id="mutant_7172" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteStart" to="(quoteStart &gt;= 0 ? quoteStart * -1 : quoteStart)" />
    <mutant id="mutant_7171" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_7174" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_7173" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteStart" to="(quoteStart &gt;= 0 ? quoteStart : quoteStart * -1)" />
    <mutant id="mutant_7176" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_7175" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_7178" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen" />
    <mutant id="mutant_7177" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_7170" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7169" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7168" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8499" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_7161" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8492" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_7160" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="(trimStart &gt;= 0 ? trimStart * -1 : trimStart)" />
    <mutant id="mutant_8491" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_7163" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="delimLen" to="(delimLen &gt;= 0 ? delimLen * -1 : delimLen)" />
    <mutant id="mutant_8494" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7162" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8493" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7165" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_8496" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_7164" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="delimLen" to="(delimLen &gt;= 0 ? delimLen : delimLen * -1)" />
    <mutant id="mutant_8495" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_7167" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8498" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_7166" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_8497" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_8490" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0]))" to="(val.get(aField[0]) &gt;= 0 ? val.get(aField[0]) : val.get(aField[0]) * -1)" />
    <mutant id="mutant_7158" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8489" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(aField[0]))" to="(val.get(aField[0]) &gt;= 0 ? val.get(aField[0]) * -1 : val.get(aField[0]))" />
    <mutant id="mutant_7157" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8488" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7159" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="trimStart" to="(trimStart &gt;= 0 ? trimStart : trimStart * -1)" />
    <mutant id="mutant_7150" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8481" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.getActualMinimum(aField[0])" to="val.getActualMinimum(aField[0]) &gt;= 0 ? val.getActualMinimum(aField[0]) : val.getActualMinimum(aField[0]) * -1" />
    <mutant id="mutant_8480" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7152" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8483" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7151" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8482" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.getActualMinimum(aField[0])" to="val.getActualMinimum(aField[0]) &gt;= 0 ? val.getActualMinimum(aField[0]) * -1 : val.getActualMinimum(aField[0])" />
    <mutant id="mutant_7154" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="getDelimiterMatcher().isMatch(srcChars, pos, start, len)" to="getDelimiterMatcher().isMatch(srcChars, pos, start, len) &gt;= 0 ? getDelimiterMatcher().isMatch(srcChars, pos, start, len) : getDelimiterMatcher().isMatch(srcChars, pos, start, len) * -1" />
    <mutant id="mutant_8485" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.getActualMaximum(aField[0])" to="val.getActualMaximum(aField[0]) &gt;= 0 ? val.getActualMaximum(aField[0]) * -1 : val.getActualMaximum(aField[0])" />
    <mutant id="mutant_7153" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="getDelimiterMatcher().isMatch(srcChars, pos, start, len)" to="getDelimiterMatcher().isMatch(srcChars, pos, start, len) &gt;= 0 ? getDelimiterMatcher().isMatch(srcChars, pos, start, len) * -1 : getDelimiterMatcher().isMatch(srcChars, pos, start, len)" />
    <mutant id="mutant_8484" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.getActualMaximum(aField[0])" to="val.getActualMaximum(aField[0]) &gt;= 0 ? val.getActualMaximum(aField[0]) : val.getActualMaximum(aField[0]) * -1" />
    <mutant id="mutant_7156" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="delimLen" to="(delimLen &gt;= 0 ? delimLen : delimLen * -1)" />
    <mutant id="mutant_8487" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_7155" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="delimLen" to="(delimLen &gt;= 0 ? delimLen * -1 : delimLen)" />
    <mutant id="mutant_8486" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_7147" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_8478" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7146" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="workArea.size()" to="workArea.size() &gt;= 0 ? workArea.size() * -1 : workArea.size()" />
    <mutant id="mutant_8477" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7149" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_7148" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_8479" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="6" to="(-1 * 6)" />
    <mutant id="mutant_7194" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="ignoredLen" to="ignoredLen &gt;= 0 ? ignoredLen * -1 : ignoredLen" />
    <mutant id="mutant_7193" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="ignoredLen" to="ignoredLen &gt;= 0 ? ignoredLen : ignoredLen * -1" />
    <mutant id="mutant_7196" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7195" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_7198" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_7197" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_7199" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7190" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7192" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_7191" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_15714" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_15715" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15712" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15713" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_15718" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_15719" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_15716" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15717" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_15710" viable="false" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15711" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15725" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_15726" viable="false" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_15723" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15724" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_15729" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_15727" viable="false" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_15728" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_15721" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_15722" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_15720" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15709" viable="false" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15703" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_15704" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15701" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_15702" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_15707" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_15708" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_15705" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15706" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15700" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_14426" viable="false" in="org.apache.commons.lang3.BitField.setShort(short)" from="((short)(set(holder)))" to="((short)(set(holder))) &gt;= 0 ? ((short)(set(holder))) * -1 : ((short)(set(holder)))" />
    <mutant id="mutant_15758" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14425" viable="false" in="org.apache.commons.lang3.BitField.setShort(short)" from="((short)(set(holder)))" to="((short)(set(holder))) &gt;= 0 ? ((short)(set(holder))) : ((short)(set(holder))) * -1" />
    <mutant id="mutant_15759" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_14428" viable="false" in="org.apache.commons.lang3.BitField.setShortValue(short,short)" from="((short)(setValue(holder, value)))" to="((short)(setValue(holder, value))) &gt;= 0 ? ((short)(setValue(holder, value))) : ((short)(setValue(holder, value))) * -1" />
    <mutant id="mutant_15756" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14427" viable="false" in="org.apache.commons.lang3.BitField.setShortValue(short,short)" from="((short)(setValue(holder, value)))" to="((short)(setValue(holder, value))) &gt;= 0 ? ((short)(setValue(holder, value))) * -1 : ((short)(setValue(holder, value)))" />
    <mutant id="mutant_15757" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14429" viable="true" in="org.apache.commons.lang3.BooleanUtils.and(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_15750" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_15751" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_14420" viable="false" in="org.apache.commons.lang3.BitField.clearShort(short)" from="((short)(clear(holder)))" to="((short)(clear(holder))) &gt;= 0 ? ((short)(clear(holder))) : ((short)(clear(holder))) * -1" />
    <mutant id="mutant_14422" viable="false" in="org.apache.commons.lang3.BitField.getShortRawValue(short)" from="((short)(getRawValue(holder)))" to="((short)(getRawValue(holder))) &gt;= 0 ? ((short)(getRawValue(holder))) : ((short)(getRawValue(holder))) * -1" />
    <mutant id="mutant_15754" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_14421" viable="false" in="org.apache.commons.lang3.BitField.getShortRawValue(short)" from="((short)(getRawValue(holder)))" to="((short)(getRawValue(holder))) &gt;= 0 ? ((short)(getRawValue(holder))) * -1 : ((short)(getRawValue(holder)))" />
    <mutant id="mutant_15755" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_14424" viable="false" in="org.apache.commons.lang3.BitField.getShortValue(short)" from="((short)(getValue(holder)))" to="((short)(getValue(holder))) &gt;= 0 ? ((short)(getValue(holder))) * -1 : ((short)(getValue(holder)))" />
    <mutant id="mutant_15752" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_14423" viable="false" in="org.apache.commons.lang3.BitField.getShortValue(short)" from="((short)(getValue(holder)))" to="((short)(getValue(holder))) &gt;= 0 ? ((short)(getValue(holder))) : ((short)(getValue(holder))) * -1" />
    <mutant id="mutant_15753" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_13106" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14437" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15769" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13105" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_14436" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_13108" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14439" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15767" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_13107" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14438" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int,int,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15768" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="255" to="(-1 * 255)" />
    <mutant id="mutant_13109" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(short[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_15761" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15762" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_13100" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14431" viable="true" in="org.apache.commons.lang3.BooleanUtils.and(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14430" viable="true" in="org.apache.commons.lang3.BooleanUtils.and(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_15760" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_13102" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_14433" viable="true" in="org.apache.commons.lang3.BooleanUtils.or(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_15765" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_13101" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14432" viable="true" in="org.apache.commons.lang3.BooleanUtils.or(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_15766" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_13104" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_14435" viable="true" in="org.apache.commons.lang3.BooleanUtils.toBoolean(int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15763" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_13103" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(long[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_14434" viable="true" in="org.apache.commons.lang3.BooleanUtils.or(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15764" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14404" viable="true" in="org.apache.commons.lang3.BitField.setBoolean(int,boolean)" from="set(holder)" to="set(holder) &gt;= 0 ? set(holder) * -1 : set(holder)" />
    <mutant id="mutant_15736" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_14403" viable="true" in="org.apache.commons.lang3.BitField.setBoolean(int,boolean)" from="set(holder)" to="set(holder) &gt;= 0 ? set(holder) : set(holder) * -1" />
    <mutant id="mutant_15737" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_14406" viable="true" in="org.apache.commons.lang3.BitField.setBoolean(int,boolean)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_15734" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_14405" viable="true" in="org.apache.commons.lang3.BitField.setBoolean(int,boolean)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_15735" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_14408" viable="true" in="org.apache.commons.lang3.BitField.setBoolean(int,boolean)" from="clear(holder)" to="clear(holder) &gt;= 0 ? clear(holder) * -1 : clear(holder)" />
    <mutant id="mutant_14407" viable="true" in="org.apache.commons.lang3.BitField.setBoolean(int,boolean)" from="clear(holder)" to="clear(holder) &gt;= 0 ? clear(holder) : clear(holder) * -1" />
    <mutant id="mutant_15738" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14409" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_15739" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14400" viable="true" in="org.apache.commons.lang3.BitField.set(int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask : _mask * -1)" />
    <mutant id="mutant_15732" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_15733" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_14402" viable="true" in="org.apache.commons.lang3.BitField.setBoolean(int,boolean)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_15730" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_14401" viable="true" in="org.apache.commons.lang3.BitField.setBoolean(int,boolean)" from="holder" to="(holder &gt;= 0 ? holder * -1 : holder)" />
    <mutant id="mutant_15731" viable="true" in="org.apache.commons.lang3.Conversion.binaryToInt(boolean[],int,int,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_14415" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="(_shift_count)" to="(_shift_count &gt;= 0 ? _shift_count * -1 : _shift_count)" />
    <mutant id="mutant_15747" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_14414" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15748" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_14417" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask * -1 : _mask)" />
    <mutant id="mutant_15745" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_14416" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="(_shift_count)" to="(_shift_count &gt;= 0 ? _shift_count : _shift_count * -1)" />
    <mutant id="mutant_15746" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_14419" viable="false" in="org.apache.commons.lang3.BitField.clearShort(short)" from="((short)(clear(holder)))" to="((short)(clear(holder))) &gt;= 0 ? ((short)(clear(holder))) * -1 : ((short)(clear(holder)))" />
    <mutant id="mutant_14418" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask : _mask * -1)" />
    <mutant id="mutant_15749" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15740" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14411" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask * -1 : _mask)" />
    <mutant id="mutant_15743" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_14410" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="holder" to="(holder &gt;= 0 ? holder : holder * -1)" />
    <mutant id="mutant_15744" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_14413" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15741" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14412" viable="true" in="org.apache.commons.lang3.BitField.setValue(int,int)" from="(_mask)" to="(_mask &gt;= 0 ? _mask : _mask * -1)" />
    <mutant id="mutant_15742" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToInt(byte[],int,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17618" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="sub.length()" to="sub.length() &gt;= 0 ? sub.length() * -1 : sub.length()" />
    <mutant id="mutant_18949" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_17617" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="idx" to="idx &gt;= 0 ? idx * -1 : idx" />
    <mutant id="mutant_18948" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17616" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="idx" to="idx &gt;= 0 ? idx : idx * -1" />
    <mutant id="mutant_18947" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17615" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_18946" viable="false" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17619" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="sub.length()" to="sub.length() &gt;= 0 ? sub.length() : sub.length() * -1" />
    <mutant id="mutant_17610" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="CharSequenceUtils.indexOf(str, sub, idx)" to="CharSequenceUtils.indexOf(str, sub, idx) &gt;= 0 ? CharSequenceUtils.indexOf(str, sub, idx) * -1 : CharSequenceUtils.indexOf(str, sub, idx)" />
    <mutant id="mutant_18941" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18940" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_17614" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_18945" viable="false" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17613" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_18944" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_17612" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_18943" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_17611" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="CharSequenceUtils.indexOf(str, sub, idx)" to="CharSequenceUtils.indexOf(str, sub, idx) &gt;= 0 ? CharSequenceUtils.indexOf(str, sub, idx) : CharSequenceUtils.indexOf(str, sub, idx) * -1" />
    <mutant id="mutant_18942" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17629" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(queryLowerCase.length())" to="(queryLowerCase.length() &gt;= 0 ? queryLowerCase.length() : queryLowerCase.length() * -1)" />
    <mutant id="mutant_17628" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="queryIndex" to="(queryIndex &gt;= 0 ? queryIndex : queryIndex * -1)" />
    <mutant id="mutant_18959" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_17627" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="queryIndex" to="(queryIndex &gt;= 0 ? queryIndex * -1 : queryIndex)" />
    <mutant id="mutant_18958" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_17626" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="0" to="-1 * 0" />
    <mutant id="mutant_18957" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_17621" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_18952" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17620" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_18951" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18950" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_17625" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="Integer.MIN_VALUE" to="Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1" />
    <mutant id="mutant_18956" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_17624" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="Integer.MIN_VALUE" to="Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE" />
    <mutant id="mutant_18955" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_17623" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="0" to="-1 * 0" />
    <mutant id="mutant_18954" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_17622" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="0" to="-1 * 0" />
    <mutant id="mutant_18953" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18927" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_18926" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18925" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.util.Iterator,java.lang.String)" from="256" to="(-1 * 256)" />
    <mutant id="mutant_18924" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.util.Iterator,char)" from="256" to="(-1 * 256)" />
    <mutant id="mutant_18929" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_18928" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_18923" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18922" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18921" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18920" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17607" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="idx" to="idx &gt;= 0 ? idx * -1 : idx" />
    <mutant id="mutant_18938" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17606" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="idx" to="idx &gt;= 0 ? idx : idx * -1" />
    <mutant id="mutant_18937" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_17605" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18936" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_17604" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18935" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17609" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="idx" to="(idx &gt;= 0 ? idx * -1 : idx)" />
    <mutant id="mutant_17608" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="idx" to="(idx &gt;= 0 ? idx : idx * -1)" />
    <mutant id="mutant_18939" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_18930" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_17603" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18934" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_17602" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_18933" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_17601" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_18932" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_17600" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_18931" viable="true" in="org.apache.commons.lang3.StringUtils.join(long[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_16328" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16329" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="4294967295L" to="(-1 * 4294967295L)" />
    <mutant id="mutant_17659" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="s.length()" to="s.length() &gt;= 0 ? s.length() * -1 : s.length()" />
    <mutant id="mutant_16322" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="4294967295L" to="(-1 * 4294967295L)" />
    <mutant id="mutant_17654" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="previousMatchingCharacterIndex" to="previousMatchingCharacterIndex &gt;= 0 ? previousMatchingCharacterIndex * -1 : previousMatchingCharacterIndex" />
    <mutant id="mutant_18985" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_16323" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17653" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="previousMatchingCharacterIndex" to="previousMatchingCharacterIndex &gt;= 0 ? previousMatchingCharacterIndex : previousMatchingCharacterIndex * -1" />
    <mutant id="mutant_18984" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_16320" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17652" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="2" to="-1 * 2" />
    <mutant id="mutant_18983" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_16321" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17651" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="score" to="score &gt;= 0 ? score * -1 : score" />
    <mutant id="mutant_18982" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16326" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17658" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="score" to="score &gt;= 0 ? score * -1 : score" />
    <mutant id="mutant_18989" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_16327" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17657" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="score" to="score &gt;= 0 ? score : score * -1" />
    <mutant id="mutant_18988" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_16324" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17656" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="termIndex &gt;= 0 ? termIndex * -1 : termIndex" />
    <mutant id="mutant_18987" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16325" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17655" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="termIndex &gt;= 0 ? termIndex : termIndex * -1" />
    <mutant id="mutant_18986" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_17650" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="score" to="score &gt;= 0 ? score : score * -1" />
    <mutant id="mutant_18981" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_18980" viable="true" in="org.apache.commons.lang3.StringUtils.left(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_15008" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="dim" to="(dim &gt;= 0 ? dim * -1 : dim)" />
    <mutant id="mutant_16339" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_15009" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="dim" to="(dim &gt;= 0 ? dim : dim * -1)" />
    <mutant id="mutant_15002" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16333" viable="false" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_17665" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18996" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_15003" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16334" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_17664" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_18995" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_15000" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() : className.length() * -1)" />
    <mutant id="mutant_16331" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17663" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_18994" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_15001" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() * -1 : className.length())" />
    <mutant id="mutant_16332" viable="false" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_17662" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="t.length()" to="t.length() &gt;= 0 ? t.length() : t.length() * -1" />
    <mutant id="mutant_18993" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_15006" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16337" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_17669" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_15007" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16338" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_17668" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_18999" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_15004" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16335" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_17667" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="m &gt;= 0 ? m * -1 : m" />
    <mutant id="mutant_18998" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15005" viable="true" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_16336" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_17666" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="m &gt;= 0 ? m : m * -1" />
    <mutant id="mutant_18997" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_17661" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="t.length()" to="t.length() &gt;= 0 ? t.length() * -1 : t.length()" />
    <mutant id="mutant_18992" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_16330" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17660" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="s.length()" to="s.length() &gt;= 0 ? s.length() : s.length() * -1" />
    <mutant id="mutant_18991" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_18990" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_16308" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_16309" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17639" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="(termIndex &gt;= 0 ? termIndex : termIndex * -1)" />
    <mutant id="mutant_16306" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17638" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(termLowerCase.length())" to="(termLowerCase.length() &gt;= 0 ? termLowerCase.length() * -1 : termLowerCase.length())" />
    <mutant id="mutant_18969" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16307" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_17637" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(termLowerCase.length())" to="(termLowerCase.length() &gt;= 0 ? termLowerCase.length() : termLowerCase.length() * -1)" />
    <mutant id="mutant_18968" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16300" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17632" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="queryIndex" to="(queryIndex &gt;= 0 ? queryIndex : queryIndex * -1)" />
    <mutant id="mutant_18963" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_16301" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts * -1 : nInts)" />
    <mutant id="mutant_17631" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="queryIndex" to="(queryIndex &gt;= 0 ? queryIndex * -1 : queryIndex)" />
    <mutant id="mutant_18962" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17630" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="(queryLowerCase.length())" to="(queryLowerCase.length() &gt;= 0 ? queryLowerCase.length() * -1 : queryLowerCase.length())" />
    <mutant id="mutant_18961" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_18960" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_16304" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_17636" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="(termIndex &gt;= 0 ? termIndex * -1 : termIndex)" />
    <mutant id="mutant_18967" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_16305" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17635" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="(termIndex &gt;= 0 ? termIndex : termIndex * -1)" />
    <mutant id="mutant_18966" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_16302" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts : nInts * -1)" />
    <mutant id="mutant_17634" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="queryIndex" to="(queryIndex &gt;= 0 ? queryIndex : queryIndex * -1)" />
    <mutant id="mutant_18965" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16303" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17633" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="queryIndex" to="(queryIndex &gt;= 0 ? queryIndex * -1 : queryIndex)" />
    <mutant id="mutant_18964" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_16319" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_16317" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17649" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="(termIndex &gt;= 0 ? termIndex * -1 : termIndex)" />
    <mutant id="mutant_16318" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17648" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="(termIndex &gt;= 0 ? termIndex : termIndex * -1)" />
    <mutant id="mutant_18979" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16311" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17643" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="score" to="(score &gt;= 0 ? score : score * -1)" />
    <mutant id="mutant_18974" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16312" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17642" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="(termIndex &gt;= 0 ? termIndex * -1 : termIndex)" />
    <mutant id="mutant_18973" viable="false" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17641" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="(termIndex &gt;= 0 ? termIndex : termIndex * -1)" />
    <mutant id="mutant_18972" viable="false" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16310" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17640" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="termIndex" to="(termIndex &gt;= 0 ? termIndex * -1 : termIndex)" />
    <mutant id="mutant_18971" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_16315" viable="false" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17647" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18978" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16316" viable="false" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17646" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="previousMatchingCharacterIndex" to="(previousMatchingCharacterIndex &gt;= 0 ? previousMatchingCharacterIndex * -1 : previousMatchingCharacterIndex)" />
    <mutant id="mutant_18977" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_16313" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts * -1 : nInts)" />
    <mutant id="mutant_17645" viable="true" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="previousMatchingCharacterIndex" to="(previousMatchingCharacterIndex &gt;= 0 ? previousMatchingCharacterIndex : previousMatchingCharacterIndex * -1)" />
    <mutant id="mutant_18976" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_16314" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts : nInts * -1)" />
    <mutant id="mutant_17644" viable="false" in="org.apache.commons.lang3.StringUtils.getFuzzyDistance(java.lang.CharSequence,java.lang.CharSequence,java.util.Locale)" from="score" to="(score &gt;= 0 ? score * -1 : score)" />
    <mutant id="mutant_18975" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18970" viable="true" in="org.apache.commons.lang3.StringUtils.join(short[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_9641" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.getMaxLengthEstimate()" from="mMaxLengthEstimate" to="mMaxLengthEstimate &gt;= 0 ? mMaxLengthEstimate * -1 : mMaxLengthEstimate" />
    <mutant id="mutant_9642" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.getMaxLengthEstimate()" from="mMaxLengthEstimate" to="mMaxLengthEstimate &gt;= 0 ? mMaxLengthEstimate : mMaxLengthEstimate * -1" />
    <mutant id="mutant_8311" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MILLISECONDS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MILLISECONDS)" />
    <mutant id="mutant_8310" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MILLISECONDS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) * -1" />
    <mutant id="mutant_9640" viable="false" in="?" from="7" to="(-1 * 7)" />
    <mutant id="mutant_15035" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() * -1 : className.length())" />
    <mutant id="mutant_16366" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_17698" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8309" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_15036" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16367" viable="false" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17697" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15033" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16364" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17696" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15034" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() : className.length() * -1)" />
    <mutant id="mutant_16365" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_17695" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15039" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx" to="(lastDotIdx &gt;= 0 ? lastDotIdx : lastDotIdx * -1)" />
    <mutant id="mutant_15037" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" to="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) &gt;= 0 ? className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) * -1 : className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" />
    <mutant id="mutant_16368" viable="false" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15038" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" to="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) &gt;= 0 ? className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) : className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) * -1" />
    <mutant id="mutant_16369" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17699" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8302" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInHours(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.HOURS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.HOURS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.HOURS) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.HOURS)" />
    <mutant id="mutant_9634" viable="false" in="?" from="DateFormat.LONG" to="DateFormat.LONG &gt;= 0 ? DateFormat.LONG * -1 : DateFormat.LONG" />
    <mutant id="mutant_17690" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8301" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInHours(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_9635" viable="false" in="?" from="DateFormat.LONG" to="DateFormat.LONG &gt;= 0 ? DateFormat.LONG : DateFormat.LONG * -1" />
    <mutant id="mutant_8304" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_9632" viable="false" in="?" from="DateFormat.FULL" to="DateFormat.FULL &gt;= 0 ? DateFormat.FULL : DateFormat.FULL * -1" />
    <mutant id="mutant_8303" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInHours(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.HOURS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.HOURS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.HOURS) : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.HOURS) * -1" />
    <mutant id="mutant_9633" viable="false" in="?" from="DateFormat.FULL" to="DateFormat.FULL &gt;= 0 ? DateFormat.FULL * -1 : DateFormat.FULL" />
    <mutant id="mutant_8306" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MILLISECONDS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MILLISECONDS)" />
    <mutant id="mutant_9638" viable="false" in="?" from="DateFormat.SHORT" to="DateFormat.SHORT &gt;= 0 ? DateFormat.SHORT : DateFormat.SHORT * -1" />
    <mutant id="mutant_15031" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() * -1 : className.length())" />
    <mutant id="mutant_16362" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17694" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8305" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_9639" viable="false" in="?" from="DateFormat.SHORT" to="DateFormat.SHORT &gt;= 0 ? DateFormat.SHORT * -1 : DateFormat.SHORT" />
    <mutant id="mutant_15032" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16363" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17693" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_8308" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_9636" viable="false" in="?" from="DateFormat.MEDIUM" to="DateFormat.MEDIUM &gt;= 0 ? DateFormat.MEDIUM : DateFormat.MEDIUM * -1" />
    <mutant id="mutant_16360" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_17692" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_8307" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMilliseconds(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MILLISECONDS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MILLISECONDS) * -1" />
    <mutant id="mutant_9637" viable="false" in="?" from="DateFormat.MEDIUM" to="DateFormat.MEDIUM &gt;= 0 ? DateFormat.MEDIUM * -1 : DateFormat.MEDIUM" />
    <mutant id="mutant_15030" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() : className.length() * -1)" />
    <mutant id="mutant_16361" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17691" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_9630" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(mField)" to="(calendar.get(mField) &gt;= 0 ? calendar.get(mField) : calendar.get(mField) * -1)" />
    <mutant id="mutant_9631" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_8300" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInHours(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_15046" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="className.indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1))" to="className.indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1)) &gt;= 0 ? className.indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1)) * -1 : className.indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1))" />
    <mutant id="mutant_16377" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_15047" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="className.indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1))" to="className.indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1)) &gt;= 0 ? className.indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1)) : className.indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR, (lastDotIdx == (-1) ? 0 : lastDotIdx + 1)) * -1" />
    <mutant id="mutant_16378" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_9629" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(mField)" to="(calendar.get(mField) &gt;= 0 ? calendar.get(mField) * -1 : calendar.get(mField))" />
    <mutant id="mutant_15044" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx" to="(lastDotIdx &gt;= 0 ? lastDotIdx * -1 : lastDotIdx)" />
    <mutant id="mutant_16375" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15045" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16376" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15048" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx" to="(lastDotIdx &gt;= 0 ? lastDotIdx : lastDotIdx * -1)" />
    <mutant id="mutant_16379" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_15049" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx" to="(lastDotIdx &gt;= 0 ? lastDotIdx * -1 : lastDotIdx)" />
    <mutant id="mutant_9623" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_9624" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_16370" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9621" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_9622" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="100" to="(-1 * 100)" />
    <mutant id="mutant_9627" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mField" to="(mField &gt;= 0 ? mField : mField * -1)" />
    <mutant id="mutant_15042" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_16373" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_9628" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mField" to="(mField &gt;= 0 ? mField * -1 : mField)" />
    <mutant id="mutant_15043" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx" to="(lastDotIdx &gt;= 0 ? lastDotIdx : lastDotIdx * -1)" />
    <mutant id="mutant_16374" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="65535L" to="(-1 * 65535L)" />
    <mutant id="mutant_9625" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15040" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="lastDotIdx" to="(lastDotIdx &gt;= 0 ? lastDotIdx * -1 : lastDotIdx)" />
    <mutant id="mutant_16371" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_9626" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15041" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16372" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_9620" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15019" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" to="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) &gt;= 0 ? className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) * -1 : className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" />
    <mutant id="mutant_15013" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16344" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17676" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_15014" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16345" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17675" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_9618" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15011" viable="false" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16342" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_17674" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_9619" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15012" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16343" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_17673" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15017" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16348" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15018" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16349" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_17679" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="m &gt;= 0 ? m : m * -1" />
    <mutant id="mutant_15015" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() : className.length() * -1)" />
    <mutant id="mutant_16346" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17678" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_15016" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() * -1 : className.length())" />
    <mutant id="mutant_16347" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17677" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_9612" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField(int)" from="field" to="field &gt;= 0 ? field * -1 : field" />
    <mutant id="mutant_9613" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField(int)" from="field" to="field &gt;= 0 ? field : field * -1" />
    <mutant id="mutant_9610" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField(int)" from="mField" to="mField &gt;= 0 ? mField : mField * -1" />
    <mutant id="mutant_9611" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField(int)" from="mField" to="mField &gt;= 0 ? mField * -1 : mField" />
    <mutant id="mutant_9616" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_16340" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_17672" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_9617" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="10" to="(-1 * 10)" />
    <mutant id="mutant_15010" viable="false" in="org.apache.commons.lang3.ClassUtils.getCanonicalName(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16341" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_17671" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_9614" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.estimateLength()" from="4" to="-1 * 4" />
    <mutant id="mutant_17670" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9615" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_9609" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15024" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16355" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17687" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15025" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16356" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17686" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_9607" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.MONTH))" to="(calendar.get(Calendar.MONTH) &gt;= 0 ? calendar.get(Calendar.MONTH) : calendar.get(Calendar.MONTH) * -1)" />
    <mutant id="mutant_15022" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16353" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_17685" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_9608" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.MONTH))" to="(calendar.get(Calendar.MONTH) &gt;= 0 ? calendar.get(Calendar.MONTH) * -1 : calendar.get(Calendar.MONTH))" />
    <mutant id="mutant_15023" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16354" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_17684" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="t.length()" to="t.length() &gt;= 0 ? t.length() : t.length() * -1" />
    <mutant id="mutant_15028" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16359" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_15029" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15026" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16357" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17689" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15027" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16358" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17688" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_9601" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_9602" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_9600" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="10" to="(-1 * 10)" />
    <mutant id="mutant_9605" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_15020" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR)" to="className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) &gt;= 0 ? className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) : className.lastIndexOf(org.apache.commons.lang3.ClassUtils.PACKAGE_SEPARATOR_CHAR) * -1" />
    <mutant id="mutant_16351" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_17683" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="t.length()" to="t.length() &gt;= 0 ? t.length() * -1 : t.length()" />
    <mutant id="mutant_9606" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_15021" viable="true" in="org.apache.commons.lang3.ClassUtils.getPackageName(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16352" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17682" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="m &gt;= 0 ? m * -1 : m" />
    <mutant id="mutant_9603" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_17681" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="m &gt;= 0 ? m : m * -1" />
    <mutant id="mutant_9604" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_16350" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_17680" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="m &gt;= 0 ? m * -1 : m" />
    <mutant id="mutant_9681" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9682" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7020" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen * -1 : removeLen)" />
    <mutant id="mutant_8351" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="millisecs" to="(millisecs &gt;= 0 ? millisecs : millisecs * -1)" />
    <mutant id="mutant_8350" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="millisecs" to="(millisecs &gt;= 0 ? millisecs * -1 : millisecs)" />
    <mutant id="mutant_9680" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7022" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8353" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9685" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7021" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen : removeLen * -1)" />
    <mutant id="mutant_8352" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9686" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7024" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8355" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.SECOND)" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_9683" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7023" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8354" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.SECOND)" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_9684" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15079" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15077" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15078" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7015" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8346" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="time &gt;= 0 ? time : time * -1" />
    <mutant id="mutant_9678" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_15071" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_7014" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8345" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="500" to="(-1 * 500)" />
    <mutant id="mutant_9679" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_15072" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_7017" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="getTrimmerMatcher().isMatch(srcChars, start, start, len)" to="(getTrimmerMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getTrimmerMatcher().isMatch(srcChars, start, start, len) : getTrimmerMatcher().isMatch(srcChars, start, start, len) * -1)" />
    <mutant id="mutant_8348" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time : time * -1)" />
    <mutant id="mutant_9676" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7016" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="getTrimmerMatcher().isMatch(srcChars, start, start, len)" to="(getTrimmerMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getTrimmerMatcher().isMatch(srcChars, start, start, len) * -1 : getTrimmerMatcher().isMatch(srcChars, start, start, len))" />
    <mutant id="mutant_8347" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="time &gt;= 0 ? time * -1 : time" />
    <mutant id="mutant_9677" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15070" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_7019" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len))" to="Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len)) &gt;= 0 ? Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len)) : Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len)) * -1" />
    <mutant id="mutant_15075" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_7018" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len))" to="Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len)) &gt;= 0 ? Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len)) * -1 : Math.max(getIgnoredMatcher().isMatch(srcChars, start, start, len), getTrimmerMatcher().isMatch(srcChars, start, start, len))" />
    <mutant id="mutant_8349" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time * -1 : time)" />
    <mutant id="mutant_15076" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_15073" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15074" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_9670" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_9671" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8340" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_7011" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8342" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.get(Calendar.MILLISECOND)" to="val.get(Calendar.MILLISECOND) &gt;= 0 ? val.get(Calendar.MILLISECOND) * -1 : val.get(Calendar.MILLISECOND)" />
    <mutant id="mutant_9674" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7010" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8341" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.get(Calendar.MILLISECOND)" to="val.get(Calendar.MILLISECOND) &gt;= 0 ? val.get(Calendar.MILLISECOND) : val.get(Calendar.MILLISECOND) * -1" />
    <mutant id="mutant_9675" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15090" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7013" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8344" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="millisecs" to="(millisecs &gt;= 0 ? millisecs : millisecs * -1)" />
    <mutant id="mutant_9672" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7012" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8343" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="millisecs" to="(millisecs &gt;= 0 ? millisecs * -1 : millisecs)" />
    <mutant id="mutant_9673" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15088" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_15089" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_7004" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8335" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.MILLISECOND)" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_9667" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15082" viable="false" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7003" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8334" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9668" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15083" viable="false" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7006" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8337" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="date.getTime()" to="date.getTime() &gt;= 0 ? date.getTime() : date.getTime() * -1" />
    <mutant id="mutant_9665" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15080" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_7005" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8336" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.MILLISECOND)" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_9666" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15081" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_7008" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="getIgnoredMatcher().isMatch(srcChars, start, start, len)" to="(getIgnoredMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getIgnoredMatcher().isMatch(srcChars, start, start, len) * -1 : getIgnoredMatcher().isMatch(srcChars, start, start, len))" />
    <mutant id="mutant_8339" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_15086" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_7007" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8338" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="date.getTime()" to="date.getTime() &gt;= 0 ? date.getTime() * -1 : date.getTime()" />
    <mutant id="mutant_15087" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_9669" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_15084" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7009" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="getIgnoredMatcher().isMatch(srcChars, start, start, len)" to="(getIgnoredMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getIgnoredMatcher().isMatch(srcChars, start, start, len) : getIgnoredMatcher().isMatch(srcChars, start, start, len) * -1)" />
    <mutant id="mutant_15085" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9660" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_7000" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8331" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.YEAR))" to="(val.get(Calendar.YEAR) &gt;= 0 ? val.get(Calendar.YEAR) * -1 : val.get(Calendar.YEAR))" />
    <mutant id="mutant_9663" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="pattern.length()" to="pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length()" />
    <mutant id="mutant_8330" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(val.get(Calendar.YEAR))" to="(val.get(Calendar.YEAR) &gt;= 0 ? val.get(Calendar.YEAR) : val.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_9664" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7002" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8333" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9661" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7001" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8332" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="280000000" to="(-1 * 280000000)" />
    <mutant id="mutant_9662" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="pattern.length()" to="pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1" />
    <mutant id="mutant_15057" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16388" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_15058" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="declaredMethod.getDeclaringClass().getModifiers()" to="(declaredMethod.getDeclaringClass().getModifiers() &gt;= 0 ? declaredMethod.getDeclaringClass().getModifiers() : declaredMethod.getDeclaringClass().getModifiers() * -1)" />
    <mutant id="mutant_16389" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_15055" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() : className.length() * -1)" />
    <mutant id="mutant_16386" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_15056" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="(className.length())" to="(className.length() &gt;= 0 ? className.length() * -1 : className.length())" />
    <mutant id="mutant_16387" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_15059" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="declaredMethod.getDeclaringClass().getModifiers()" to="(declaredMethod.getDeclaringClass().getModifiers() &gt;= 0 ? declaredMethod.getDeclaringClass().getModifiers() * -1 : declaredMethod.getDeclaringClass().getModifiers())" />
    <mutant id="mutant_8324" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_9656" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(long)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_16380" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_8323" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.SECONDS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.SECONDS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.SECONDS) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.SECONDS)" />
    <mutant id="mutant_9657" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_15050" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16381" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="65535L" to="(-1 * 65535L)" />
    <mutant id="mutant_8326" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.SECONDS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.SECONDS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.SECONDS) : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.SECONDS) * -1" />
    <mutant id="mutant_9654" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar)" from="mMaxLengthEstimate" to="(mMaxLengthEstimate &gt;= 0 ? mMaxLengthEstimate : mMaxLengthEstimate * -1)" />
    <mutant id="mutant_8325" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_9655" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(long)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_8328" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_15053" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16384" viable="false" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_8327" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.SECONDS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.SECONDS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.SECONDS) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.SECONDS)" />
    <mutant id="mutant_15054" viable="true" in="org.apache.commons.lang3.ClassUtils.toCanonicalName(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16385" viable="false" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_9658" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_15051" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="innerIdx" to="(innerIdx &gt;= 0 ? innerIdx : innerIdx * -1)" />
    <mutant id="mutant_16382" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_8329" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_9659" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_15052" viable="true" in="org.apache.commons.lang3.ClassUtils.getShortClassName(java.lang.String)" from="innerIdx" to="(innerIdx &gt;= 0 ? innerIdx * -1 : innerIdx)" />
    <mutant id="mutant_16383" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_8320" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_9652" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.applyRulesToString(java.util.Calendar)" from="mMaxLengthEstimate" to="(mMaxLengthEstimate &gt;= 0 ? mMaxLengthEstimate : mMaxLengthEstimate * -1)" />
    <mutant id="mutant_9653" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.util.Calendar)" from="mMaxLengthEstimate" to="(mMaxLengthEstimate &gt;= 0 ? mMaxLengthEstimate * -1 : mMaxLengthEstimate)" />
    <mutant id="mutant_8322" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.SECONDS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.SECONDS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.SECONDS) : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.SECONDS) * -1" />
    <mutant id="mutant_9650" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mLocale.hashCode())" to="(mLocale.hashCode() &gt;= 0 ? mLocale.hashCode() * -1 : mLocale.hashCode())" />
    <mutant id="mutant_8321" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInSeconds(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_9651" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.applyRulesToString(java.util.Calendar)" from="mMaxLengthEstimate" to="(mMaxLengthEstimate &gt;= 0 ? mMaxLengthEstimate * -1 : mMaxLengthEstimate)" />
    <mutant id="mutant_15068" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16399" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15069" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_15066" viable="true" in="org.apache.commons.lang3.ClassUtils.convertClassesToClassNames(java.util.List)" from="classes.size()" to="(classes.size() &gt;= 0 ? classes.size() : classes.size() * -1)" />
    <mutant id="mutant_16397" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_15067" viable="true" in="org.apache.commons.lang3.ClassUtils.convertClassesToClassNames(java.util.List)" from="classes.size()" to="(classes.size() &gt;= 0 ? classes.size() * -1 : classes.size())" />
    <mutant id="mutant_16398" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_8313" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_9645" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="13" to="(-1 * 13)" />
    <mutant id="mutant_15060" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="candidateClass.getModifiers()" to="(candidateClass.getModifiers() &gt;= 0 ? candidateClass.getModifiers() : candidateClass.getModifiers() * -1)" />
    <mutant id="mutant_16391" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_8312" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_9646" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mTimeZone.hashCode())" to="(mTimeZone.hashCode() &gt;= 0 ? mTimeZone.hashCode() : mTimeZone.hashCode() * -1)" />
    <mutant id="mutant_15061" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="candidateClass.getModifiers()" to="(candidateClass.getModifiers() &gt;= 0 ? candidateClass.getModifiers() * -1 : candidateClass.getModifiers())" />
    <mutant id="mutant_16392" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_8315" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MINUTES)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MINUTES) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MINUTES) : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MINUTES) * -1" />
    <mutant id="mutant_9643" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode())" to="(mPattern.hashCode() &gt;= 0 ? mPattern.hashCode() : mPattern.hashCode() * -1)" />
    <mutant id="mutant_8314" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MINUTES)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MINUTES) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MINUTES) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.MINUTES)" />
    <mutant id="mutant_9644" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mPattern.hashCode())" to="(mPattern.hashCode() &gt;= 0 ? mPattern.hashCode() * -1 : mPattern.hashCode())" />
    <mutant id="mutant_16390" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_8317" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_9649" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mLocale.hashCode())" to="(mLocale.hashCode() &gt;= 0 ? mLocale.hashCode() : mLocale.hashCode() * -1)" />
    <mutant id="mutant_15064" viable="true" in="org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(java.util.List)" from="classNames.size()" to="(classNames.size() &gt;= 0 ? classNames.size() : classNames.size() * -1)" />
    <mutant id="mutant_16395" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_8316" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_15065" viable="true" in="org.apache.commons.lang3.ClassUtils.convertClassNamesToClasses(java.util.List)" from="classNames.size()" to="(classNames.size() &gt;= 0 ? classNames.size() * -1 : classNames.size())" />
    <mutant id="mutant_16396" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8319" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MINUTES)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MINUTES) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MINUTES) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MINUTES)" />
    <mutant id="mutant_9647" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="(mTimeZone.hashCode())" to="(mTimeZone.hashCode() &gt;= 0 ? mTimeZone.hashCode() * -1 : mTimeZone.hashCode())" />
    <mutant id="mutant_15062" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="candidateMethod.getDeclaringClass().getModifiers()" to="(candidateMethod.getDeclaringClass().getModifiers() &gt;= 0 ? candidateMethod.getDeclaringClass().getModifiers() : candidateMethod.getDeclaringClass().getModifiers() * -1)" />
    <mutant id="mutant_16393" viable="true" in="org.apache.commons.lang3.Conversion.shortArrayToLong(short[],int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_8318" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInMinutes(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MINUTES)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MINUTES) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MINUTES) : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.MINUTES) * -1" />
    <mutant id="mutant_9648" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.hashCode()" from="13" to="(-1 * 13)" />
    <mutant id="mutant_15063" viable="true" in="org.apache.commons.lang3.ClassUtils.getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="candidateMethod.getDeclaringClass().getModifiers()" to="(candidateMethod.getDeclaringClass().getModifiers() &gt;= 0 ? candidateMethod.getDeclaringClass().getModifiers() * -1 : candidateMethod.getDeclaringClass().getModifiers())" />
    <mutant id="mutant_16394" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_7062" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8393" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time * -1 : time)" />
    <mutant id="mutant_7061" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8392" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time : time * -1)" />
    <mutant id="mutant_7064" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="delimLen" to="(delimLen &gt;= 0 ? delimLen : delimLen * -1)" />
    <mutant id="mutant_8395" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_7063" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="delimLen" to="(delimLen &gt;= 0 ? delimLen * -1 : delimLen)" />
    <mutant id="mutant_8394" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_7066" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8397" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_7065" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8396" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_7068" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8399" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_7067" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8398" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_7060" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8391" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time * -1 : time)" />
    <mutant id="mutant_8390" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time : time * -1)" />
    <mutant id="mutant_7059" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="delimLen" to="(delimLen &gt;= 0 ? delimLen : delimLen * -1)" />
    <mutant id="mutant_7058" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="delimLen" to="(delimLen &gt;= 0 ? delimLen * -1 : delimLen)" />
    <mutant id="mutant_8389" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(date.getTime())" to="(date.getTime() &gt;= 0 ? date.getTime() * -1 : date.getTime())" />
    <mutant id="mutant_7051" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8382" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="time &gt;= 0 ? time * -1 : time" />
    <mutant id="mutant_7050" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8381" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="time &gt;= 0 ? time : time * -1" />
    <mutant id="mutant_7053" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8384" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time * -1 : time)" />
    <mutant id="mutant_7052" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8383" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time : time * -1)" />
    <mutant id="mutant_7055" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8386" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_7054" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8385" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_7057" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="getDelimiterMatcher().isMatch(srcChars, start, start, len)" to="getDelimiterMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getDelimiterMatcher().isMatch(srcChars, start, start, len) : getDelimiterMatcher().isMatch(srcChars, start, start, len) * -1" />
    <mutant id="mutant_8388" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(date.getTime())" to="(date.getTime() &gt;= 0 ? date.getTime() : date.getTime() * -1)" />
    <mutant id="mutant_7056" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="getDelimiterMatcher().isMatch(srcChars, start, start, len)" to="getDelimiterMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getDelimiterMatcher().isMatch(srcChars, start, start, len) * -1 : getDelimiterMatcher().isMatch(srcChars, start, start, len)" />
    <mutant id="mutant_8387" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="60000L" to="(-1 * 60000L)" />
    <mutant id="mutant_8380" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="30" to="(-1 * 30)" />
    <mutant id="mutant_7048" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8379" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_7047" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8378" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_7049" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7040" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8371" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_8370" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_7042" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_8373" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.MINUTE)" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_7041" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_8372" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="(Calendar.MINUTE)" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_7044" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="removeLen" to="removeLen &gt;= 0 ? removeLen : removeLen * -1" />
    <mutant id="mutant_8375" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_7043" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="removeLen" to="removeLen &gt;= 0 ? removeLen * -1 : removeLen" />
    <mutant id="mutant_8374" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_7046" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8377" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.get(Calendar.MINUTE)" to="val.get(Calendar.MINUTE) &gt;= 0 ? val.get(Calendar.MINUTE) * -1 : val.get(Calendar.MINUTE)" />
    <mutant id="mutant_7045" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8376" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.get(Calendar.MINUTE)" to="val.get(Calendar.MINUTE) &gt;= 0 ? val.get(Calendar.MINUTE) : val.get(Calendar.MINUTE) * -1" />
    <mutant id="mutant_7037" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8368" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="seconds" to="(seconds &gt;= 0 ? seconds : seconds * -1)" />
    <mutant id="mutant_7036" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8367" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="seconds" to="(seconds &gt;= 0 ? seconds * -1 : seconds)" />
    <mutant id="mutant_7039" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(getQuoteMatcher().isMatch(srcChars, start, start, len))" to="(getQuoteMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getQuoteMatcher().isMatch(srcChars, start, start, len) : getQuoteMatcher().isMatch(srcChars, start, start, len) * -1)" />
    <mutant id="mutant_9698" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_7038" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(getQuoteMatcher().isMatch(srcChars, start, start, len))" to="(getQuoteMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getQuoteMatcher().isMatch(srcChars, start, start, len) * -1 : getQuoteMatcher().isMatch(srcChars, start, start, len))" />
    <mutant id="mutant_8369" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="1000L" to="(-1 * 1000L)" />
    <mutant id="mutant_9699" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.format(java.lang.Object,java.lang.StringBuffer,java.text.FieldPosition)" from="((Long)(obj)).longValue()" to="(((Long)(obj)).longValue() &gt;= 0 ? ((Long)(obj)).longValue() : ((Long)(obj)).longValue() * -1)" />
    <mutant id="mutant_8360" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="seconds" to="(seconds &gt;= 0 ? seconds * -1 : seconds)" />
    <mutant id="mutant_9692" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9693" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7031" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8362" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="30" to="(-1 * 30)" />
    <mutant id="mutant_9690" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7030" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(getDelimiterMatcher().isMatch(srcChars, start, start, len))" to="(getDelimiterMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getDelimiterMatcher().isMatch(srcChars, start, start, len) : getDelimiterMatcher().isMatch(srcChars, start, start, len) * -1)" />
    <mutant id="mutant_8361" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="seconds" to="(seconds &gt;= 0 ? seconds : seconds * -1)" />
    <mutant id="mutant_9691" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7033" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8364" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="time &gt;= 0 ? time * -1 : time" />
    <mutant id="mutant_9696" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7032" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8363" viable="false" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="time &gt;= 0 ? time : time * -1" />
    <mutant id="mutant_9697" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_7035" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8366" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time * -1 : time)" />
    <mutant id="mutant_9694" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7034" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8365" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="time" to="(time &gt;= 0 ? time : time * -1)" />
    <mutant id="mutant_9695" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7026" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_8357" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_9689" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7025" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_8356" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_7028" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8359" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.get(Calendar.SECOND)" to="val.get(Calendar.SECOND) &gt;= 0 ? val.get(Calendar.SECOND) : val.get(Calendar.SECOND) * -1" />
    <mutant id="mutant_9687" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7027" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8358" viable="true" in="org.apache.commons.lang3.time.DateUtils.modify(java.util.Calendar,int,org.apache.commons.lang3.time.DateUtils$ModifyType)" from="val.get(Calendar.SECOND)" to="val.get(Calendar.SECOND) &gt;= 0 ? val.get(Calendar.SECOND) * -1 : val.get(Calendar.SECOND)" />
    <mutant id="mutant_9688" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter.parseToken(java.lang.String,int[])" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7029" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="(getDelimiterMatcher().isMatch(srcChars, start, start, len))" to="(getDelimiterMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getDelimiterMatcher().isMatch(srcChars, start, start, len) * -1 : getDelimiterMatcher().isMatch(srcChars, start, start, len))" />
    <mutant id="mutant_7095" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0)" to="readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0) &gt;= 0 ? readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0) : readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0) * -1" />
    <mutant id="mutant_7094" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0)" to="readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0) &gt;= 0 ? readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0) * -1 : readWithQuotes(srcChars, start, len, workArea, tokenList, 0, 0)" />
    <mutant id="mutant_7097" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_7096" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_7099" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_7098" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readWithQuotes(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_7091" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_7090" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7093" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7092" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7084" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_7083" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_7086" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen)" to="readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen) &gt;= 0 ? readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen) : readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen) * -1" />
    <mutant id="mutant_7085" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_7088" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_7087" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen)" to="readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen) &gt;= 0 ? readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen) * -1 : readWithQuotes(srcChars, (start + quoteLen), len, workArea, tokenList, start, quoteLen)" />
    <mutant id="mutant_7089" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_7080" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7082" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_7081" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_7073" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_7072" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="getQuoteMatcher().isMatch(srcChars, start, start, len)" to="getQuoteMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getQuoteMatcher().isMatch(srcChars, start, start, len) : getQuoteMatcher().isMatch(srcChars, start, start, len) * -1" />
    <mutant id="mutant_7075" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7074" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_7077" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_7076" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_7079" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_7078" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_7071" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="getQuoteMatcher().isMatch(srcChars, start, start, len)" to="getQuoteMatcher().isMatch(srcChars, start, start, len) &gt;= 0 ? getQuoteMatcher().isMatch(srcChars, start, start, len) * -1 : getQuoteMatcher().isMatch(srcChars, start, start, len)" />
    <mutant id="mutant_7070" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_7069" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_18905" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_18904" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18903" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_18902" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_18909" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_18908" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_18907" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_18906" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_18901" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_18900" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_18916" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18915" viable="false" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18914" viable="false" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18913" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_18919" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_18918" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_18917" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18912" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_18911" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18910" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16407" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17739" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16408" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17738" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16405" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17737" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16406" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17736" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16409" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17731" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16400" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17730" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16403" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_17735" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16404" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_17734" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="-1 * 1" />
    <mutant id="mutant_16401" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_17733" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_16402" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_17732" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16418" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16419" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17749" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="cost" to="(cost &gt;= 0 ? cost : cost * -1)" />
    <mutant id="mutant_16416" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17748" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16417" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17747" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16410" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17742" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16411" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17741" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17740" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16414" viable="false" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17746" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16415" viable="false" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17745" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1))" to="(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)) &gt;= 0 ? Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)) * -1 : Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)))" />
    <mutant id="mutant_16412" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_17744" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1))" to="(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)) &gt;= 0 ? Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)) : Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)) * -1)" />
    <mutant id="mutant_16413" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_17743" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17717" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="j &gt;= 0 ? j : j * -1" />
    <mutant id="mutant_17716" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17715" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17714" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_17719" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_17718" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="j &gt;= 0 ? j * -1 : j" />
    <mutant id="mutant_17713" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_17712" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_17711" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_17710" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_17728" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="cost" to="cost &gt;= 0 ? cost : cost * -1" />
    <mutant id="mutant_17727" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17726" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17725" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_17729" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="cost" to="cost &gt;= 0 ? cost * -1 : cost" />
    <mutant id="mutant_17720" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_17724" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_17723" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17722" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17721" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="-1 * 1" />
    <mutant id="mutant_15118" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16449" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_15119" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15112" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16443" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_17775" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15113" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16444" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_17774" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15110" viable="false" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16441" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17773" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_15111" viable="false" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16442" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_17772" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_15116" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16447" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_17779" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_15117" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16448" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17778" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold : threshold * -1)" />
    <mutant id="mutant_15114" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16445" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_17777" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold * -1 : threshold)" />
    <mutant id="mutant_15115" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16446" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17776" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_17771" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16440" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17770" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="m &gt;= 0 ? m * -1 : m" />
    <mutant id="mutant_15129" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_15123" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16454" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_17786" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_15124" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16455" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_17785" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_15121" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_16452" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17784" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_15122" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_16453" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17783" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15127" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_16458" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15128" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_16459" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17789" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="m &gt;= 0 ? m * -1 : m" />
    <mutant id="mutant_15125" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16456" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17788" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="m &gt;= 0 ? m : m * -1" />
    <mutant id="mutant_15126" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16457" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17787" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_16450" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17782" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15120" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16451" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17781" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17780" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_16429" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16427" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17759" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="s.length()" to="s.length() &gt;= 0 ? s.length() : s.length() * -1" />
    <mutant id="mutant_16428" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17758" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="s.length()" to="s.length() &gt;= 0 ? s.length() * -1 : s.length()" />
    <mutant id="mutant_16421" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17753" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_16422" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17752" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="Math.min(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost))" to="Math.min(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost)) &gt;= 0 ? Math.min(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost)) * -1 : Math.min(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost))" />
    <mutant id="mutant_17751" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="Math.min(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost))" to="Math.min(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost)) &gt;= 0 ? Math.min(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost)) : Math.min(Math.min(((d[(i - 1)]) + 1), ((p[i]) + 1)), ((p[(i - 1)]) + cost)) * -1" />
    <mutant id="mutant_16420" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17750" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="cost" to="(cost &gt;= 0 ? cost * -1 : cost)" />
    <mutant id="mutant_16425" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17757" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16426" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17756" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold : threshold * -1)" />
    <mutant id="mutant_16423" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17755" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold * -1 : threshold)" />
    <mutant id="mutant_16424" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_17754" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15109" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_15107" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16438" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_15108" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_16439" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17769" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="m &gt;= 0 ? m : m * -1" />
    <mutant id="mutant_15101" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16432" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_17764" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15102" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16433" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_17763" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_16430" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17762" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15100" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_16431" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_17761" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="t.length()" to="t.length() &gt;= 0 ? t.length() : t.length() * -1" />
    <mutant id="mutant_15105" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16436" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_17768" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold : threshold * -1)" />
    <mutant id="mutant_15106" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16437" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17767" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold * -1 : threshold)" />
    <mutant id="mutant_15103" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16434" viable="true" in="org.apache.commons.lang3.Conversion.binaryToShort(boolean[],int,short,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_17766" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_15104" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_16435" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_17765" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_17760" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="t.length()" to="t.length() &gt;= 0 ? t.length() * -1 : t.length()" />
    <mutant id="mutant_9520" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_9521" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_15156" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16487" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15157" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_16488" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9519" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="1000" to="(-1 * 1000)" />
    <mutant id="mutant_15154" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16485" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_15155" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16486" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_15158" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_16489" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15159" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_9513" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="1000" to="(-1 * 1000)" />
    <mutant id="mutant_9514" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_16480" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_9511" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_9512" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_9517" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_15152" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_16483" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_9518" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_15153" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16484" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_9515" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_15150" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16481" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_9516" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15151" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_16482" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9510" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_15167" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16498" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_15168" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16499" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_9508" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_15165" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_16496" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_9509" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15166" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_16497" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_15169" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_9502" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_16490" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_9503" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_15160" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_16491" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_9500" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.DST_OFFSET) &gt;= 0 ? calendar.get(Calendar.DST_OFFSET) * -1 : calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_9501" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.DST_OFFSET) &gt;= 0 ? calendar.get(Calendar.DST_OFFSET) : calendar.get(Calendar.DST_OFFSET) * -1)" />
    <mutant id="mutant_9506" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_15163" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16494" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9507" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15164" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16495" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9504" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15161" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16492" viable="false" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9505" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_15162" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16493" viable="false" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15134" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_16465" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17797" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15135" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16466" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17796" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15132" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16463" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="255" to="(-1 * 255)" />
    <mutant id="mutant_17795" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15133" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16464" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17794" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15138" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_16469" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_15139" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_15136" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16467" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17799" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15137" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16468" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17798" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15130" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_16461" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17793" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="t.length()" to="t.length() &gt;= 0 ? t.length() : t.length() * -1" />
    <mutant id="mutant_15131" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16462" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17792" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="t.length()" to="t.length() &gt;= 0 ? t.length() * -1 : t.length()" />
    <mutant id="mutant_17791" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="m &gt;= 0 ? m * -1 : m" />
    <mutant id="mutant_16460" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_17790" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="m &gt;= 0 ? m : m * -1" />
    <mutant id="mutant_15145" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16476" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_15146" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16477" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15143" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16474" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_15144" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16475" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_15149" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15147" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16478" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_15148" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16479" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_15141" viable="false" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16472" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_15142" viable="true" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16473" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_16470" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="255" to="(-1 * 255)" />
    <mutant id="mutant_15140" viable="false" in="org.apache.commons.lang3.Conversion.longToBinary(long,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16471" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToShort(byte[],int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_9560" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY))" to="(calendar.getMaximum(Calendar.HOUR_OF_DAY) &gt;= 0 ? calendar.getMaximum(Calendar.HOUR_OF_DAY) : calendar.getMaximum(Calendar.HOUR_OF_DAY) * -1)" />
    <mutant id="mutant_9561" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getMaximum(Calendar.HOUR_OF_DAY))" to="(calendar.getMaximum(Calendar.HOUR_OF_DAY) &gt;= 0 ? calendar.getMaximum(Calendar.HOUR_OF_DAY) * -1 : calendar.getMaximum(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_8230" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="fragment" to="fragment &gt;= 0 ? fragment * -1 : fragment" />
    <mutant id="mutant_8232" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.YEAR" to="Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1" />
    <mutant id="mutant_9564" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8231" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="fragment" to="fragment &gt;= 0 ? fragment : fragment * -1" />
    <mutant id="mutant_9565" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.estimateLength()" from="2" to="-1 * 2" />
    <mutant id="mutant_8234" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MONTH" to="Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1" />
    <mutant id="mutant_9562" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8233" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.YEAR" to="Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR" />
    <mutant id="mutant_9563" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15198" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_15199" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_8225" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(calendar.get(Calendar.DAY_OF_MONTH))" to="(calendar.get(Calendar.DAY_OF_MONTH) &gt;= 0 ? calendar.get(Calendar.DAY_OF_MONTH) * -1 : calendar.get(Calendar.DAY_OF_MONTH))" />
    <mutant id="mutant_9557" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_15192" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8224" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(calendar.get(Calendar.DAY_OF_MONTH))" to="(calendar.get(Calendar.DAY_OF_MONTH) &gt;= 0 ? calendar.get(Calendar.DAY_OF_MONTH) : calendar.get(Calendar.DAY_OF_MONTH) * -1)" />
    <mutant id="mutant_9558" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_15193" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_8227" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9555" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15190" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_8226" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9556" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_15191" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_8229" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(((calendar.get(java.util.Calendar.DAY_OF_MONTH)) - offset), TimeUnit.DAYS)" to="unit.convert(((calendar.get(java.util.Calendar.DAY_OF_MONTH)) - offset), TimeUnit.DAYS) &gt;= 0 ? unit.convert(((calendar.get(java.util.Calendar.DAY_OF_MONTH)) - offset), TimeUnit.DAYS) * -1 : unit.convert(((calendar.get(java.util.Calendar.DAY_OF_MONTH)) - offset), TimeUnit.DAYS)" />
    <mutant id="mutant_15196" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8228" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(((calendar.get(java.util.Calendar.DAY_OF_MONTH)) - offset), TimeUnit.DAYS)" to="unit.convert(((calendar.get(java.util.Calendar.DAY_OF_MONTH)) - offset), TimeUnit.DAYS) &gt;= 0 ? unit.convert(((calendar.get(java.util.Calendar.DAY_OF_MONTH)) - offset), TimeUnit.DAYS) : unit.convert(((calendar.get(java.util.Calendar.DAY_OF_MONTH)) - offset), TimeUnit.DAYS) * -1" />
    <mutant id="mutant_15197" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_9559" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_15194" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_15195" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9550" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_8221" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_9553" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8220" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_9554" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8223" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_9551" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(Calendar.HOUR_OF_DAY)" to="calendar.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? calendar.get(Calendar.HOUR_OF_DAY) : calendar.get(Calendar.HOUR_OF_DAY) * -1" />
    <mutant id="mutant_8222" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_9552" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(Calendar.HOUR_OF_DAY)" to="calendar.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? calendar.get(Calendar.HOUR_OF_DAY) * -1 : calendar.get(Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_8214" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9546" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.estimateLength()" from="mRule.estimateLength()" to="mRule.estimateLength() &gt;= 0 ? mRule.estimateLength() : mRule.estimateLength() * -1" />
    <mutant id="mutant_8213" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(calendar.get(Calendar.DAY_OF_YEAR))" to="(calendar.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? calendar.get(Calendar.DAY_OF_YEAR) * -1 : calendar.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_9547" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8216" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(((calendar.get(java.util.Calendar.DAY_OF_YEAR)) - offset), TimeUnit.DAYS)" to="unit.convert(((calendar.get(java.util.Calendar.DAY_OF_YEAR)) - offset), TimeUnit.DAYS) &gt;= 0 ? unit.convert(((calendar.get(java.util.Calendar.DAY_OF_YEAR)) - offset), TimeUnit.DAYS) * -1 : unit.convert(((calendar.get(java.util.Calendar.DAY_OF_YEAR)) - offset), TimeUnit.DAYS)" />
    <mutant id="mutant_9544" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8215" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_9545" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.estimateLength()" from="mRule.estimateLength()" to="mRule.estimateLength() &gt;= 0 ? mRule.estimateLength() * -1 : mRule.estimateLength()" />
    <mutant id="mutant_8218" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MONTH" to="Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1" />
    <mutant id="mutant_8217" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(((calendar.get(java.util.Calendar.DAY_OF_YEAR)) - offset), TimeUnit.DAYS)" to="unit.convert(((calendar.get(java.util.Calendar.DAY_OF_YEAR)) - offset), TimeUnit.DAYS) &gt;= 0 ? unit.convert(((calendar.get(java.util.Calendar.DAY_OF_YEAR)) - offset), TimeUnit.DAYS) : unit.convert(((calendar.get(java.util.Calendar.DAY_OF_YEAR)) - offset), TimeUnit.DAYS) * -1" />
    <mutant id="mutant_9548" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8219" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MONTH" to="Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH" />
    <mutant id="mutant_9549" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwentyFourHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_8210" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_9542" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9543" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8212" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="(calendar.get(Calendar.DAY_OF_YEAR))" to="(calendar.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? calendar.get(Calendar.DAY_OF_YEAR) : calendar.get(Calendar.DAY_OF_YEAR) * -1)" />
    <mutant id="mutant_9540" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR))" to="(calendar.getLeastMaximum(Calendar.HOUR) &gt;= 0 ? calendar.getLeastMaximum(Calendar.HOUR) * -1 : calendar.getLeastMaximum(Calendar.HOUR))" />
    <mutant id="mutant_8211" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_9541" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.getLeastMaximum(Calendar.HOUR))" to="(calendar.getLeastMaximum(Calendar.HOUR) &gt;= 0 ? calendar.getLeastMaximum(Calendar.HOUR) : calendar.getLeastMaximum(Calendar.HOUR) * -1)" />
    <mutant id="mutant_15178" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15179" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15176" viable="false" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15177" viable="false" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8203" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="1" to="-1 * 1" />
    <mutant id="mutant_9535" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15170" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_8202" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="0" to="-1 * 0" />
    <mutant id="mutant_9536" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_15171" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_8205" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="fragment" to="fragment &gt;= 0 ? fragment : fragment * -1" />
    <mutant id="mutant_9533" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8204" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="fragment" to="fragment &gt;= 0 ? fragment * -1 : fragment" />
    <mutant id="mutant_9534" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8207" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.YEAR" to="Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR" />
    <mutant id="mutant_9539" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR : Calendar.HOUR * -1)" />
    <mutant id="mutant_15174" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_8206" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.YEAR" to="Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1" />
    <mutant id="mutant_15175" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_8209" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_9537" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_15172" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8208" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_9538" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR * -1 : Calendar.HOUR)" />
    <mutant id="mutant_15173" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9531" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(Calendar.HOUR)" to="calendar.get(Calendar.HOUR) &gt;= 0 ? calendar.get(Calendar.HOUR) * -1 : calendar.get(Calendar.HOUR)" />
    <mutant id="mutant_9532" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(Calendar.HOUR)" to="calendar.get(Calendar.HOUR) &gt;= 0 ? calendar.get(Calendar.HOUR) : calendar.get(Calendar.HOUR) * -1" />
    <mutant id="mutant_8201" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="0" to="-1 * 0" />
    <mutant id="mutant_8200" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Date,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle * -1 : rangeStyle)" />
    <mutant id="mutant_9530" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR : Calendar.HOUR * -1)" />
    <mutant id="mutant_15189" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15187" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_15188" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_9524" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_15181" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_9525" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.estimateLength()" from="mRule.estimateLength()" to="mRule.estimateLength() &gt;= 0 ? mRule.estimateLength() * -1 : mRule.estimateLength()" />
    <mutant id="mutant_15182" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_9522" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_9523" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_15180" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_9528" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15185" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9529" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.HOUR" to="(Calendar.HOUR &gt;= 0 ? Calendar.HOUR * -1 : Calendar.HOUR)" />
    <mutant id="mutant_15186" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9526" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.estimateLength()" from="mRule.estimateLength()" to="mRule.estimateLength() &gt;= 0 ? mRule.estimateLength() : mRule.estimateLength() * -1" />
    <mutant id="mutant_15183" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_9527" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15184" viable="true" in="org.apache.commons.lang3.Conversion.shortToBinary(short,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8272" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_8271" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8274" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="calendar.get(Calendar.MILLISECOND)" to="(calendar.get(Calendar.MILLISECOND) &gt;= 0 ? calendar.get(Calendar.MILLISECOND) : calendar.get(Calendar.MILLISECOND) * -1)" />
    <mutant id="mutant_8273" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_8276" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(calendar.get(java.util.Calendar.MILLISECOND), TimeUnit.MILLISECONDS)" to="unit.convert(calendar.get(java.util.Calendar.MILLISECOND), TimeUnit.MILLISECONDS) &gt;= 0 ? unit.convert(calendar.get(java.util.Calendar.MILLISECOND), TimeUnit.MILLISECONDS) : unit.convert(calendar.get(java.util.Calendar.MILLISECOND), TimeUnit.MILLISECONDS) * -1" />
    <mutant id="mutant_8275" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="calendar.get(Calendar.MILLISECOND)" to="(calendar.get(Calendar.MILLISECOND) &gt;= 0 ? calendar.get(Calendar.MILLISECOND) * -1 : calendar.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_8278" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MILLISECOND" to="Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1" />
    <mutant id="mutant_8277" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(calendar.get(java.util.Calendar.MILLISECOND), TimeUnit.MILLISECONDS)" to="unit.convert(calendar.get(java.util.Calendar.MILLISECOND), TimeUnit.MILLISECONDS) &gt;= 0 ? unit.convert(calendar.get(java.util.Calendar.MILLISECOND), TimeUnit.MILLISECONDS) * -1 : unit.convert(calendar.get(java.util.Calendar.MILLISECOND), TimeUnit.MILLISECONDS)" />
    <mutant id="mutant_8270" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8269" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.SECOND" to="Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1" />
    <mutant id="mutant_8268" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.SECOND" to="Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND" />
    <mutant id="mutant_9599" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8261" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_9593" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_8260" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_9594" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.YEAR))" to="(calendar.get(Calendar.YEAR) &gt;= 0 ? calendar.get(Calendar.YEAR) : calendar.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_8263" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_9591" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8262" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_9592" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_8265" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="calendar.get(Calendar.SECOND)" to="(calendar.get(Calendar.SECOND) &gt;= 0 ? calendar.get(Calendar.SECOND) : calendar.get(Calendar.SECOND) * -1)" />
    <mutant id="mutant_9597" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.estimateLength()" from="2" to="-1 * 2" />
    <mutant id="mutant_8264" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="calendar.get(Calendar.SECOND)" to="(calendar.get(Calendar.SECOND) &gt;= 0 ? calendar.get(Calendar.SECOND) * -1 : calendar.get(Calendar.SECOND))" />
    <mutant id="mutant_9598" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8267" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(calendar.get(java.util.Calendar.SECOND), TimeUnit.SECONDS)" to="unit.convert(calendar.get(java.util.Calendar.SECOND), TimeUnit.SECONDS) &gt;= 0 ? unit.convert(calendar.get(java.util.Calendar.SECOND), TimeUnit.SECONDS) : unit.convert(calendar.get(java.util.Calendar.SECOND), TimeUnit.SECONDS) * -1" />
    <mutant id="mutant_9595" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.YEAR))" to="(calendar.get(Calendar.YEAR) &gt;= 0 ? calendar.get(Calendar.YEAR) * -1 : calendar.get(Calendar.YEAR))" />
    <mutant id="mutant_8266" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(calendar.get(java.util.Calendar.SECOND), TimeUnit.SECONDS)" to="unit.convert(calendar.get(java.util.Calendar.SECOND), TimeUnit.SECONDS) &gt;= 0 ? unit.convert(calendar.get(java.util.Calendar.SECOND), TimeUnit.SECONDS) * -1 : unit.convert(calendar.get(java.util.Calendar.SECOND), TimeUnit.SECONDS)" />
    <mutant id="mutant_9596" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="100" to="(-1 * 100)" />
    <mutant id="mutant_9590" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8258" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MINUTE" to="Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1" />
    <mutant id="mutant_8257" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(calendar.get(java.util.Calendar.MINUTE), TimeUnit.MINUTES)" to="unit.convert(calendar.get(java.util.Calendar.MINUTE), TimeUnit.MINUTES) &gt;= 0 ? unit.convert(calendar.get(java.util.Calendar.MINUTE), TimeUnit.MINUTES) : unit.convert(calendar.get(java.util.Calendar.MINUTE), TimeUnit.MINUTES) * -1" />
    <mutant id="mutant_9588" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(mField)" to="(calendar.get(mField) &gt;= 0 ? calendar.get(mField) : calendar.get(mField) * -1)" />
    <mutant id="mutant_8259" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MINUTE" to="Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE" />
    <mutant id="mutant_9589" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitYearField.estimateLength()" from="2" to="-1 * 2" />
    <mutant id="mutant_8250" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_9582" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_9583" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8252" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_9580" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,int)" from="100" to="(-1 * 100)" />
    <mutant id="mutant_8251" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_9581" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8254" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="calendar.get(Calendar.MINUTE)" to="(calendar.get(Calendar.MINUTE) &gt;= 0 ? calendar.get(Calendar.MINUTE) : calendar.get(Calendar.MINUTE) * -1)" />
    <mutant id="mutant_9586" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mField" to="(mField &gt;= 0 ? mField * -1 : mField)" />
    <mutant id="mutant_8253" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_9587" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(mField)" to="(calendar.get(mField) &gt;= 0 ? calendar.get(mField) * -1 : calendar.get(mField))" />
    <mutant id="mutant_8256" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(calendar.get(java.util.Calendar.MINUTE), TimeUnit.MINUTES)" to="unit.convert(calendar.get(java.util.Calendar.MINUTE), TimeUnit.MINUTES) &gt;= 0 ? unit.convert(calendar.get(java.util.Calendar.MINUTE), TimeUnit.MINUTES) * -1 : unit.convert(calendar.get(java.util.Calendar.MINUTE), TimeUnit.MINUTES)" />
    <mutant id="mutant_9584" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8255" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="calendar.get(Calendar.MINUTE)" to="(calendar.get(Calendar.MINUTE) &gt;= 0 ? calendar.get(Calendar.MINUTE) * -1 : calendar.get(Calendar.MINUTE))" />
    <mutant id="mutant_9585" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mField" to="(mField &gt;= 0 ? mField : mField * -1)" />
    <mutant id="mutant_15099" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_8247" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(calendar.get(java.util.Calendar.HOUR_OF_DAY), TimeUnit.HOURS)" to="unit.convert(calendar.get(java.util.Calendar.HOUR_OF_DAY), TimeUnit.HOURS) &gt;= 0 ? unit.convert(calendar.get(java.util.Calendar.HOUR_OF_DAY), TimeUnit.HOURS) * -1 : unit.convert(calendar.get(java.util.Calendar.HOUR_OF_DAY), TimeUnit.HOURS)" />
    <mutant id="mutant_9579" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15093" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_8246" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="unit.convert(calendar.get(java.util.Calendar.HOUR_OF_DAY), TimeUnit.HOURS)" to="unit.convert(calendar.get(java.util.Calendar.HOUR_OF_DAY), TimeUnit.HOURS) &gt;= 0 ? unit.convert(calendar.get(java.util.Calendar.HOUR_OF_DAY), TimeUnit.HOURS) : unit.convert(calendar.get(java.util.Calendar.HOUR_OF_DAY), TimeUnit.HOURS) * -1" />
    <mutant id="mutant_15094" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_8249" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.HOUR_OF_DAY" to="Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1" />
    <mutant id="mutant_9577" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.estimateLength()" from="2" to="-1 * 2" />
    <mutant id="mutant_15091" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8248" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.HOUR_OF_DAY" to="Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY" />
    <mutant id="mutant_9578" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15092" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15097" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_15098" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_15095" viable="true" in="org.apache.commons.lang3.Conversion.byteToBinary(byte,int,boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15096" viable="true" in="org.apache.commons.lang3.Conversion.intToBinary(int,int,boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9571" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.MONTH))" to="(calendar.get(Calendar.MONTH) &gt;= 0 ? calendar.get(Calendar.MONTH) * -1 : calendar.get(Calendar.MONTH))" />
    <mutant id="mutant_9572" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8241" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8240" viable="false" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_9570" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.MONTH))" to="(calendar.get(Calendar.MONTH) &gt;= 0 ? calendar.get(Calendar.MONTH) : calendar.get(Calendar.MONTH) * -1)" />
    <mutant id="mutant_8243" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_9575" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField(int)" from="field" to="field &gt;= 0 ? field * -1 : field" />
    <mutant id="mutant_8242" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9576" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField(int)" from="field" to="field &gt;= 0 ? field : field * -1" />
    <mutant id="mutant_8245" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="calendar.get(Calendar.HOUR_OF_DAY)" to="(calendar.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? calendar.get(Calendar.HOUR_OF_DAY) * -1 : calendar.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_9573" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField(int)" from="mField" to="mField &gt;= 0 ? mField : mField * -1" />
    <mutant id="mutant_8244" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="calendar.get(Calendar.HOUR_OF_DAY)" to="(calendar.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? calendar.get(Calendar.HOUR_OF_DAY) : calendar.get(Calendar.HOUR_OF_DAY) * -1)" />
    <mutant id="mutant_9574" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField(int)" from="mField" to="mField &gt;= 0 ? mField * -1 : mField" />
    <mutant id="mutant_8236" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.DAY_OF_YEAR" to="Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1" />
    <mutant id="mutant_9568" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_8235" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MONTH" to="Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH" />
    <mutant id="mutant_9569" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_8238" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.DATE" to="Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1" />
    <mutant id="mutant_9566" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_8237" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.DAY_OF_YEAR" to="Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR" />
    <mutant id="mutant_9567" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TwoDigitMonthField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_8239" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.DATE" to="Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE" />
    <mutant id="mutant_8294" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInDays(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.DAYS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.DAYS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.DAYS) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.DAYS)" />
    <mutant id="mutant_8293" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInDays(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_8296" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInHours(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_8295" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInDays(java.util.Date,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.DAYS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.DAYS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.DAYS) : org.apache.commons.lang3.time.DateUtils.getFragment(date, fragment, java.util.concurrent.TimeUnit.DAYS) * -1" />
    <mutant id="mutant_8298" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInHours(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.HOURS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.HOURS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.HOURS) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.HOURS)" />
    <mutant id="mutant_8297" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInHours(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_8299" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInHours(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.HOURS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.HOURS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.HOURS) : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.HOURS) * -1" />
    <mutant id="mutant_8290" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInDays(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.DAYS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.DAYS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.DAYS) : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.DAYS) * -1" />
    <mutant id="mutant_8292" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInDays(java.util.Date,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_8291" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInDays(java.util.Calendar,int)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.DAYS)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.DAYS) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.DAYS) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, java.util.concurrent.TimeUnit.DAYS)" />
    <mutant id="mutant_8283" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8282" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8285" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Date,int,java.util.concurrent.TimeUnit)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_8284" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Date,int,java.util.concurrent.TimeUnit)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_8287" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Date,int,java.util.concurrent.TimeUnit)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit) * -1 : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit)" />
    <mutant id="mutant_8286" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Date,int,java.util.concurrent.TimeUnit)" from="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit)" to="org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit) : org.apache.commons.lang3.time.DateUtils.getFragment(calendar, fragment, unit) * -1" />
    <mutant id="mutant_8289" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInDays(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_8288" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragmentInDays(java.util.Calendar,int)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_8281" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="fragment" to="(fragment &gt;= 0 ? fragment : fragment * -1)" />
    <mutant id="mutant_8280" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="fragment" to="(fragment &gt;= 0 ? fragment * -1 : fragment)" />
    <mutant id="mutant_8279" viable="true" in="org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar,int,java.util.concurrent.TimeUnit)" from="Calendar.MILLISECOND" to="Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND" />
    <mutant id="mutant_17706" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="-1 * 1" />
    <mutant id="mutant_17705" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="j &gt;= 0 ? j * -1 : j" />
    <mutant id="mutant_17704" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="j &gt;= 0 ? j : j * -1" />
    <mutant id="mutant_17703" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_17709" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_17708" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_17707" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_17702" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_17701" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17700" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16528" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_16529" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_17859" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold : threshold * -1)" />
    <mutant id="mutant_16526" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17858" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold * -1 : threshold)" />
    <mutant id="mutant_16527" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17857" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_16520" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17852" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_16521" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17851" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold : threshold * -1)" />
    <mutant id="mutant_17850" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold * -1 : threshold)" />
    <mutant id="mutant_16524" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_17856" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_16525" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17855" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_16522" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17854" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_16523" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17853" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_15208" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_16539" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15209" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_15206" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16537" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17869" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15207" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16538" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17868" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_15200" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_16531" viable="false" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17863" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_15201" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16532" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17862" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_17861" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Math.min(n, (j + threshold))" to="Math.min(n, (j + threshold)) &gt;= 0 ? Math.min(n, (j + threshold)) : Math.min(n, (j + threshold)) * -1" />
    <mutant id="mutant_16530" viable="false" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17860" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Math.min(n, (j + threshold))" to="Math.min(n, (j + threshold)) &gt;= 0 ? Math.min(n, (j + threshold)) * -1 : Math.min(n, (j + threshold))" />
    <mutant id="mutant_15204" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_16535" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17867" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_15205" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16536" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17866" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15202" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16533" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17865" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_15203" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16534" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17864" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_16506" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17838" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="j &gt;= 0 ? j * -1 : j" />
    <mutant id="mutant_16507" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17837" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="j &gt;= 0 ? j : j * -1" />
    <mutant id="mutant_16504" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" to="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) &gt;= 0 ? org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) * -1 : org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" />
    <mutant id="mutant_17836" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16505" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" to="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) &gt;= 0 ? org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) : org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) * -1)" />
    <mutant id="mutant_17835" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16508" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_16509" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17839" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17830" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_16502" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17834" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_16503" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17833" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_16500" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17832" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_16501" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17831" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_16517" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_17849" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_16518" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_17848" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_16515" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17847" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_16516" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_17846" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_16519" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_17841" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_16510" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17840" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_16513" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_17845" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Math.max(1, (j - threshold))" to="Math.max(1, (j - threshold)) &gt;= 0 ? Math.max(1, (j - threshold)) * -1 : Math.max(1, (j - threshold))" />
    <mutant id="mutant_16514" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_17844" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Math.max(1, (j - threshold))" to="Math.max(1, (j - threshold)) &gt;= 0 ? Math.max(1, (j - threshold)) : Math.max(1, (j - threshold)) * -1" />
    <mutant id="mutant_16511" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_17843" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold : threshold * -1)" />
    <mutant id="mutant_16512" viable="true" in="org.apache.commons.lang3.Conversion.hexToShort(java.lang.String,int,short,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_17842" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold * -1 : threshold)" />
    <mutant id="mutant_15239" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_15233" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_16564" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17896" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15234" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_16565" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17895" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15231" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16562" viable="false" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17894" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15232" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_16563" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17893" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15237" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_16568" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_15238" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16569" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17899" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Math.min(d[(i - 1)], p[i])" to="(Math.min(d[(i - 1)], p[i]) &gt;= 0 ? Math.min(d[(i - 1)], p[i]) : Math.min(d[(i - 1)], p[i]) * -1)" />
    <mutant id="mutant_15235" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_16566" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17898" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15236" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16567" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17897" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16560" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_17892" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15230" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_16561" viable="false" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17891" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17890" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15244" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_16575" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_15245" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_16576" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_15242" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16573" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_15243" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16574" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_15248" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16579" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_15249" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15246" viable="false" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16577" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="(constants.length)" to="(constants.length &gt;= 0 ? constants.length * -1 : constants.length)" />
    <mutant id="mutant_15247" viable="false" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16578" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="(constants.length)" to="(constants.length &gt;= 0 ? constants.length : constants.length * -1)" />
    <mutant id="mutant_15240" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_16571" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15241" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16572" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="65535" to="(-1 * 65535)" />
    <mutant id="mutant_16570" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15219" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_15217" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16548" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_15218" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16549" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_17879" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_15211" viable="false" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16542" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_17874" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE" />
    <mutant id="mutant_15212" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16543" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_17873" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1" />
    <mutant id="mutant_16540" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17872" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15210" viable="false" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16541" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="65535" to="(-1 * 65535)" />
    <mutant id="mutant_17871" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_15215" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16546" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17878" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15216" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16547" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_17877" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15213" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16544" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17876" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_15214" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16545" viable="true" in="org.apache.commons.lang3.Conversion.intToShortArray(int,int,short[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17875" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_17870" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_15228" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_16559" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts : nShorts * -1)" />
    <mutant id="mutant_15229" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_15222" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16553" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17885" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15223" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16554" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17884" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15220" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_16551" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17883" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15221" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16552" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17882" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15226" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16557" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17889" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15227" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_16558" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17888" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15224" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16555" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_17887" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15225" viable="true" in="org.apache.commons.lang3.Conversion.binaryToByte(boolean[],int,byte,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16556" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17886" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17881" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16550" viable="true" in="org.apache.commons.lang3.Conversion.longToShortArray(long,int,short[],int,int)" from="nShorts" to="(nShorts &gt;= 0 ? nShorts * -1 : nShorts)" />
    <mutant id="mutant_17880" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_9400" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="digit" to="(digit &gt;= 0 ? digit * -1 : digit)" />
    <mutant id="mutant_15277" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_15278" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_15275" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_15276" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_15279" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_15270" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_15273" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_15274" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15271" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_15272" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_15288" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_15289" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_15286" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15287" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15280" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15281" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15284" viable="false" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15285" viable="false" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15282" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_15283" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_15255" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16586" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="Long.SIZE" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_15256" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16587" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="Integer.valueOf(java.lang.Long.SIZE)" to="(Integer.valueOf(java.lang.Long.SIZE) &gt;= 0 ? Integer.valueOf(java.lang.Long.SIZE) : Integer.valueOf(java.lang.Long.SIZE) * -1)" />
    <mutant id="mutant_15253" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_16584" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="Integer.valueOf(constants.length)" to="(Integer.valueOf(constants.length) &gt;= 0 ? Integer.valueOf(constants.length) * -1 : Integer.valueOf(constants.length))" />
    <mutant id="mutant_15254" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16585" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="Long.SIZE" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_15259" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" to="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) &gt;= 0 ? org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) : org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) * -1)" />
    <mutant id="mutant_15257" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16588" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="Integer.valueOf(java.lang.Long.SIZE)" to="(Integer.valueOf(java.lang.Long.SIZE) &gt;= 0 ? Integer.valueOf(java.lang.Long.SIZE) * -1 : Integer.valueOf(java.lang.Long.SIZE))" />
    <mutant id="mutant_15258" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" to="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) &gt;= 0 ? org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) * -1 : org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" />
    <mutant id="mutant_16589" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVector(java.lang.Class,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15251" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16582" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="constants.length" to="(constants.length &gt;= 0 ? constants.length : constants.length * -1)" />
    <mutant id="mutant_15252" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16583" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="Integer.valueOf(constants.length)" to="(Integer.valueOf(constants.length) &gt;= 0 ? Integer.valueOf(constants.length) : Integer.valueOf(constants.length) * -1)" />
    <mutant id="mutant_16580" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_15250" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_16581" viable="true" in="org.apache.commons.lang3.EnumUtils.checkBitVectorable(java.lang.Class)" from="constants.length" to="(constants.length &gt;= 0 ? constants.length * -1 : constants.length)" />
    <mutant id="mutant_15266" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_16597" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(lvalues.length)" to="(lvalues.length &gt;= 0 ? lvalues.length * -1 : lvalues.length)" />
    <mutant id="mutant_15267" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_16598" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(lvalues.length)" to="(lvalues.length &gt;= 0 ? lvalues.length : lvalues.length * -1)" />
    <mutant id="mutant_15264" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16595" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="block" to="(block &gt;= 0 ? block : block * -1)" />
    <mutant id="mutant_15265" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_16596" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="block" to="(block &gt;= 0 ? block * -1 : block)" />
    <mutant id="mutant_15268" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_16599" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="block" to="(block &gt;= 0 ? block : block * -1)" />
    <mutant id="mutant_15269" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16590" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVector(java.lang.Class,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_15262" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_16593" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_15263" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16594" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_15260" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16591" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal())" to="(constant.ordinal() &gt;= 0 ? constant.ordinal() : constant.ordinal() * -1)" />
    <mutant id="mutant_15261" viable="true" in="org.apache.commons.lang3.Conversion.hexToByte(java.lang.String,int,byte,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16592" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal())" to="(constant.ordinal() &gt;= 0 ? constant.ordinal() * -1 : constant.ordinal())" />
    <mutant id="mutant_9440" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_8111" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_SUNDAY" to="DateUtils.RANGE_WEEK_SUNDAY &gt;= 0 ? DateUtils.RANGE_WEEK_SUNDAY * -1 : DateUtils.RANGE_WEEK_SUNDAY" />
    <mutant id="mutant_9443" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_8110" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_SUNDAY" to="DateUtils.RANGE_WEEK_SUNDAY &gt;= 0 ? DateUtils.RANGE_WEEK_SUNDAY : DateUtils.RANGE_WEEK_SUNDAY * -1" />
    <mutant id="mutant_9444" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_8113" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_MONDAY" to="DateUtils.RANGE_WEEK_MONDAY &gt;= 0 ? DateUtils.RANGE_WEEK_MONDAY * -1 : DateUtils.RANGE_WEEK_MONDAY" />
    <mutant id="mutant_9441" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_8112" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_MONDAY" to="DateUtils.RANGE_WEEK_MONDAY &gt;= 0 ? DateUtils.RANGE_WEEK_MONDAY : DateUtils.RANGE_WEEK_MONDAY * -1" />
    <mutant id="mutant_9442" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_8104" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_9436" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_8103" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_CENTER" to="DateUtils.RANGE_WEEK_CENTER &gt;= 0 ? DateUtils.RANGE_WEEK_CENTER : DateUtils.RANGE_WEEK_CENTER * -1" />
    <mutant id="mutant_9437" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_8106" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_9434" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="mValues[i].length()" to="mValues[i].length() &gt;= 0 ? mValues[i].length() * -1 : mValues[i].length()" />
    <mutant id="mutant_8105" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_9435" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_8108" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="rangeStyle" to="rangeStyle &gt;= 0 ? rangeStyle : rangeStyle * -1" />
    <mutant id="mutant_8107" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_9438" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_8109" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="rangeStyle" to="rangeStyle &gt;= 0 ? rangeStyle * -1 : rangeStyle" />
    <mutant id="mutant_9439" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_8100" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_RELATIVE" to="DateUtils.RANGE_WEEK_RELATIVE &gt;= 0 ? DateUtils.RANGE_WEEK_RELATIVE * -1 : DateUtils.RANGE_WEEK_RELATIVE" />
    <mutant id="mutant_9432" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9433" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="mValues[i].length()" to="mValues[i].length() &gt;= 0 ? mValues[i].length() : mValues[i].length() * -1" />
    <mutant id="mutant_8102" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_CENTER" to="DateUtils.RANGE_WEEK_CENTER &gt;= 0 ? DateUtils.RANGE_WEEK_CENTER * -1 : DateUtils.RANGE_WEEK_CENTER" />
    <mutant id="mutant_9430" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8101" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_RELATIVE" to="DateUtils.RANGE_WEEK_RELATIVE &gt;= 0 ? DateUtils.RANGE_WEEK_RELATIVE : DateUtils.RANGE_WEEK_RELATIVE * -1" />
    <mutant id="mutant_9431" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9425" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="0" to="-1 * 0" />
    <mutant id="mutant_9426" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="mValues.length" to="mValues.length &gt;= 0 ? mValues.length * -1 : mValues.length" />
    <mutant id="mutant_9423" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField(int,java.lang.String[])" from="field" to="field &gt;= 0 ? field * -1 : field" />
    <mutant id="mutant_9424" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField(int,java.lang.String[])" from="field" to="field &gt;= 0 ? field : field * -1" />
    <mutant id="mutant_9429" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9427" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="mValues.length" to="mValues.length &gt;= 0 ? mValues.length : mValues.length * -1" />
    <mutant id="mutant_9428" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.estimateLength()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9421" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TextField(int,java.lang.String[])" from="mField" to="mField &gt;= 0 ? mField : mField * -1" />
    <mutant id="mutant_9422" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TextField(int,java.lang.String[])" from="mField" to="mField &gt;= 0 ? mField * -1 : mField" />
    <mutant id="mutant_9420" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$StringLiteral.estimateLength()" from="mValue.length()" to="mValue.length() &gt;= 0 ? mValue.length() * -1 : mValue.length()" />
    <mutant id="mutant_15299" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_15297" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_15298" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_9414" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="10" to="(-1 * 10)" />
    <mutant id="mutant_15291" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_9415" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mField" to="(mField &gt;= 0 ? mField * -1 : mField)" />
    <mutant id="mutant_15292" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_9412" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_9413" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_15290" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_9418" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(mField)" to="(calendar.get(mField) &gt;= 0 ? calendar.get(mField) : calendar.get(mField) * -1)" />
    <mutant id="mutant_15295" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="255" to="(-1 * 255)" />
    <mutant id="mutant_9419" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$StringLiteral.estimateLength()" from="mValue.length()" to="mValue.length() &gt;= 0 ? mValue.length() : mValue.length() * -1" />
    <mutant id="mutant_15296" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_9416" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mField" to="(mField &gt;= 0 ? mField : mField * -1)" />
    <mutant id="mutant_15293" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9417" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(mField)" to="(calendar.get(mField) &gt;= 0 ? calendar.get(mField) * -1 : calendar.get(mField))" />
    <mutant id="mutant_15294" viable="true" in="org.apache.commons.lang3.Conversion.intToByteArray(int,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_9410" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_9411" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_9409" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="10" to="-1 * 10" />
    <mutant id="mutant_9403" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="buffer.length()" to="buffer.length() &gt;= 0 ? buffer.length() * -1 : buffer.length()" />
    <mutant id="mutant_9404" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_9401" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="digit" to="(digit &gt;= 0 ? digit : digit * -1)" />
    <mutant id="mutant_9402" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="buffer.length()" to="buffer.length() &gt;= 0 ? buffer.length() : buffer.length() * -1" />
    <mutant id="mutant_9407" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_9408" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_9405" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_9406" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8151" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle : rangeStyle * -1)" />
    <mutant id="mutant_9483" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.estimateLength()" from="Math.max(mStandard.length(), mDaylight.length())" to="Math.max(mStandard.length(), mDaylight.length()) &gt;= 0 ? Math.max(mStandard.length(), mDaylight.length()) * -1 : Math.max(mStandard.length(), mDaylight.length())" />
    <mutant id="mutant_8150" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_9484" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.DST_OFFSET" to="(Calendar.DST_OFFSET &gt;= 0 ? Calendar.DST_OFFSET : Calendar.DST_OFFSET * -1)" />
    <mutant id="mutant_8153" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="(startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff)" />
    <mutant id="mutant_9481" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.estimateLength()" from="mDaylight.length()" to="(mDaylight.length() &gt;= 0 ? mDaylight.length() * -1 : mDaylight.length())" />
    <mutant id="mutant_8152" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle * -1 : rangeStyle)" />
    <mutant id="mutant_9482" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.estimateLength()" from="Math.max(mStandard.length(), mDaylight.length())" to="Math.max(mStandard.length(), mDaylight.length()) &gt;= 0 ? Math.max(mStandard.length(), mDaylight.length()) : Math.max(mStandard.length(), mDaylight.length()) * -1" />
    <mutant id="mutant_8155" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(Calendar.SUNDAY)" to="(Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY * -1 : Calendar.SUNDAY)" />
    <mutant id="mutant_9487" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.DST_OFFSET) &gt;= 0 ? calendar.get(Calendar.DST_OFFSET) : calendar.get(Calendar.DST_OFFSET) * -1)" />
    <mutant id="mutant_8154" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="(startCutoff &gt;= 0 ? startCutoff : startCutoff * -1)" />
    <mutant id="mutant_9488" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8157" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff" />
    <mutant id="mutant_9485" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.DST_OFFSET" to="(Calendar.DST_OFFSET &gt;= 0 ? Calendar.DST_OFFSET * -1 : Calendar.DST_OFFSET)" />
    <mutant id="mutant_8156" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(Calendar.SUNDAY)" to="(Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY : Calendar.SUNDAY * -1)" />
    <mutant id="mutant_9486" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.DST_OFFSET) &gt;= 0 ? calendar.get(Calendar.DST_OFFSET) * -1 : calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_9480" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.estimateLength()" from="mDaylight.length()" to="(mDaylight.length() &gt;= 0 ? mDaylight.length() : mDaylight.length() * -1)" />
    <mutant id="mutant_8148" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK))" to="(focus.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? focus.get(Calendar.DAY_OF_WEEK) : focus.get(Calendar.DAY_OF_WEEK) * -1)" />
    <mutant id="mutant_8147" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK : Calendar.DAY_OF_WEEK * -1)" />
    <mutant id="mutant_9478" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.estimateLength()" from="mStandard.length()" to="(mStandard.length() &gt;= 0 ? mStandard.length() : mStandard.length() * -1)" />
    <mutant id="mutant_8149" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK))" to="(focus.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? focus.get(Calendar.DAY_OF_WEEK) * -1 : focus.get(Calendar.DAY_OF_WEEK))" />
    <mutant id="mutant_9479" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.estimateLength()" from="mStandard.length()" to="(mStandard.length() &gt;= 0 ? mStandard.length() * -1 : mStandard.length())" />
    <mutant id="mutant_8140" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK : Calendar.DAY_OF_WEEK * -1)" />
    <mutant id="mutant_9472" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)" from="style" to="style &gt;= 0 ? style : style * -1" />
    <mutant id="mutant_9473" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)" from="style" to="style &gt;= 0 ? style * -1 : style" />
    <mutant id="mutant_8142" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK))" to="(focus.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? focus.get(Calendar.DAY_OF_WEEK) * -1 : focus.get(Calendar.DAY_OF_WEEK))" />
    <mutant id="mutant_9470" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)" from="mStyle" to="mStyle &gt;= 0 ? mStyle : mStyle * -1" />
    <mutant id="mutant_8141" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(focus.get(Calendar.DAY_OF_WEEK))" to="(focus.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? focus.get(Calendar.DAY_OF_WEEK) : focus.get(Calendar.DAY_OF_WEEK) * -1)" />
    <mutant id="mutant_9471" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)" from="mStyle" to="mStyle &gt;= 0 ? mStyle * -1 : mStyle" />
    <mutant id="mutant_8144" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff : endCutoff * -1" />
    <mutant id="mutant_9476" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_8143" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_9477" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_8146" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK * -1 : Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_9474" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_8145" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff" />
    <mutant id="mutant_9475" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_8137" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff" />
    <mutant id="mutant_9469" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(mTimeZone.hashCode())" to="(mTimeZone.hashCode() &gt;= 0 ? mTimeZone.hashCode() * -1 : mTimeZone.hashCode())" />
    <mutant id="mutant_8136" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_CENTER" to="DateUtils.RANGE_WEEK_CENTER &gt;= 0 ? DateUtils.RANGE_WEEK_CENTER : DateUtils.RANGE_WEEK_CENTER * -1" />
    <mutant id="mutant_8139" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK * -1 : Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_9467" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="31" to="(-1 * 31)" />
    <mutant id="mutant_8138" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff : startCutoff * -1" />
    <mutant id="mutant_9468" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(mTimeZone.hashCode())" to="(mTimeZone.hashCode() &gt;= 0 ? mTimeZone.hashCode() : mTimeZone.hashCode() * -1)" />
    <mutant id="mutant_9461" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.equals(java.lang.Object)" from="(other.mStyle)" to="(other.mStyle &gt;= 0 ? other.mStyle * -1 : other.mStyle)" />
    <mutant id="mutant_9462" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(mStyle)" to="(mStyle &gt;= 0 ? mStyle : mStyle * -1)" />
    <mutant id="mutant_8131" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff" />
    <mutant id="mutant_8130" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff : endCutoff * -1" />
    <mutant id="mutant_9460" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.equals(java.lang.Object)" from="(other.mStyle)" to="(other.mStyle &gt;= 0 ? other.mStyle : other.mStyle * -1)" />
    <mutant id="mutant_8133" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="(startCutoff &gt;= 0 ? startCutoff : startCutoff * -1)" />
    <mutant id="mutant_9465" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(mLocale.hashCode())" to="(mLocale.hashCode() &gt;= 0 ? mLocale.hashCode() : mLocale.hashCode() * -1)" />
    <mutant id="mutant_8132" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="(startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff)" />
    <mutant id="mutant_9466" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(mLocale.hashCode())" to="(mLocale.hashCode() &gt;= 0 ? mLocale.hashCode() * -1 : mLocale.hashCode())" />
    <mutant id="mutant_8135" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_CENTER" to="DateUtils.RANGE_WEEK_CENTER &gt;= 0 ? DateUtils.RANGE_WEEK_CENTER * -1 : DateUtils.RANGE_WEEK_CENTER" />
    <mutant id="mutant_9463" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="(mStyle)" to="(mStyle &gt;= 0 ? mStyle * -1 : mStyle)" />
    <mutant id="mutant_8134" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9464" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.hashCode()" from="31" to="(-1 * 31)" />
    <mutant id="mutant_8126" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK * -1 : Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_9458" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.equals(java.lang.Object)" from="(mStyle)" to="(mStyle &gt;= 0 ? mStyle : mStyle * -1)" />
    <mutant id="mutant_8125" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff : startCutoff * -1" />
    <mutant id="mutant_9459" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.equals(java.lang.Object)" from="(mStyle)" to="(mStyle &gt;= 0 ? mStyle * -1 : mStyle)" />
    <mutant id="mutant_8128" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="focus.get(Calendar.DAY_OF_WEEK)" to="focus.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? focus.get(Calendar.DAY_OF_WEEK) : focus.get(Calendar.DAY_OF_WEEK) * -1" />
    <mutant id="mutant_9456" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="style" to="style &gt;= 0 ? style : style * -1" />
    <mutant id="mutant_8127" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK : Calendar.DAY_OF_WEEK * -1)" />
    <mutant id="mutant_9457" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="style" to="style &gt;= 0 ? style * -1 : style" />
    <mutant id="mutant_8129" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="focus.get(Calendar.DAY_OF_WEEK)" to="focus.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? focus.get(Calendar.DAY_OF_WEEK) * -1 : focus.get(Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_9450" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="mStyle" to="mStyle &gt;= 0 ? mStyle * -1 : mStyle" />
    <mutant id="mutant_9451" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_8120" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.SUNDAY" to="Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY * -1 : Calendar.SUNDAY" />
    <mutant id="mutant_8122" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_RELATIVE" to="DateUtils.RANGE_WEEK_RELATIVE &gt;= 0 ? DateUtils.RANGE_WEEK_RELATIVE * -1 : DateUtils.RANGE_WEEK_RELATIVE" />
    <mutant id="mutant_9454" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="mStyle" to="mStyle &gt;= 0 ? mStyle : mStyle * -1" />
    <mutant id="mutant_8121" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.SUNDAY" to="Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY : Calendar.SUNDAY * -1" />
    <mutant id="mutant_9455" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="mStyle" to="mStyle &gt;= 0 ? mStyle * -1 : mStyle" />
    <mutant id="mutant_8124" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff" />
    <mutant id="mutant_9452" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_8123" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_RELATIVE" to="DateUtils.RANGE_WEEK_RELATIVE &gt;= 0 ? DateUtils.RANGE_WEEK_RELATIVE : DateUtils.RANGE_WEEK_RELATIVE * -1" />
    <mutant id="mutant_9453" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="-2147483648" to="(-1 * -2147483648)" />
    <mutant id="mutant_8115" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff : startCutoff * -1" />
    <mutant id="mutant_9447" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(mField)" to="(calendar.get(mField) &gt;= 0 ? calendar.get(mField) : calendar.get(mField) * -1)" />
    <mutant id="mutant_8114" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff" />
    <mutant id="mutant_9448" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(mField)" to="(calendar.get(mField) &gt;= 0 ? calendar.get(mField) * -1 : calendar.get(mField))" />
    <mutant id="mutant_8117" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.MONDAY" to="Calendar.MONDAY &gt;= 0 ? Calendar.MONDAY : Calendar.MONDAY * -1" />
    <mutant id="mutant_9445" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mField" to="(mField &gt;= 0 ? mField : mField * -1)" />
    <mutant id="mutant_8116" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.MONDAY" to="Calendar.MONDAY &gt;= 0 ? Calendar.MONDAY * -1 : Calendar.MONDAY" />
    <mutant id="mutant_9446" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TextField.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mField" to="(mField &gt;= 0 ? mField * -1 : mField)" />
    <mutant id="mutant_8119" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff" />
    <mutant id="mutant_8118" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff : endCutoff * -1" />
    <mutant id="mutant_9449" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)" from="mStyle" to="mStyle &gt;= 0 ? mStyle : mStyle * -1" />
    <mutant id="mutant_8195" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="(endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff)" />
    <mutant id="mutant_8194" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="(endCutoff &gt;= 0 ? endCutoff : endCutoff * -1)" />
    <mutant id="mutant_8197" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_8196" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_8199" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Date,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle : rangeStyle * -1)" />
    <mutant id="mutant_8198" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8191" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK : Calendar.DAY_OF_WEEK * -1)" />
    <mutant id="mutant_8190" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK * -1 : Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_8193" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(end.get(Calendar.DAY_OF_WEEK))" to="(end.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? end.get(Calendar.DAY_OF_WEEK) * -1 : end.get(Calendar.DAY_OF_WEEK))" />
    <mutant id="mutant_8192" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(end.get(Calendar.DAY_OF_WEEK))" to="(end.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? end.get(Calendar.DAY_OF_WEEK) : end.get(Calendar.DAY_OF_WEEK) * -1)" />
    <mutant id="mutant_8184" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(start.get(Calendar.DAY_OF_WEEK))" to="(start.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? start.get(Calendar.DAY_OF_WEEK) * -1 : start.get(Calendar.DAY_OF_WEEK))" />
    <mutant id="mutant_8183" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(start.get(Calendar.DAY_OF_WEEK))" to="(start.get(Calendar.DAY_OF_WEEK) &gt;= 0 ? start.get(Calendar.DAY_OF_WEEK) : start.get(Calendar.DAY_OF_WEEK) * -1)" />
    <mutant id="mutant_8186" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="(startCutoff &gt;= 0 ? startCutoff : startCutoff * -1)" />
    <mutant id="mutant_8185" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="(startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff)" />
    <mutant id="mutant_8188" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_8187" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_8189" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8180" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="7" to="-1 * 7" />
    <mutant id="mutant_8182" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK : Calendar.DAY_OF_WEEK * -1)" />
    <mutant id="mutant_8181" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DAY_OF_WEEK" to="(Calendar.DAY_OF_WEEK &gt;= 0 ? Calendar.DAY_OF_WEEK * -1 : Calendar.DAY_OF_WEEK)" />
    <mutant id="mutant_8173" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="7" to="-1 * 7" />
    <mutant id="mutant_8172" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff" />
    <mutant id="mutant_8175" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="(endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff)" />
    <mutant id="mutant_8174" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="(endCutoff &gt;= 0 ? endCutoff : endCutoff * -1)" />
    <mutant id="mutant_8177" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(Calendar.SATURDAY)" to="(Calendar.SATURDAY &gt;= 0 ? Calendar.SATURDAY * -1 : Calendar.SATURDAY)" />
    <mutant id="mutant_8176" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(Calendar.SATURDAY)" to="(Calendar.SATURDAY &gt;= 0 ? Calendar.SATURDAY : Calendar.SATURDAY * -1)" />
    <mutant id="mutant_8179" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff" />
    <mutant id="mutant_8178" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff : endCutoff * -1" />
    <mutant id="mutant_8171" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff : endCutoff * -1" />
    <mutant id="mutant_8170" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(Calendar.SUNDAY)" to="(Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY : Calendar.SUNDAY * -1)" />
    <mutant id="mutant_8169" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(Calendar.SUNDAY)" to="(Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY * -1 : Calendar.SUNDAY)" />
    <mutant id="mutant_8162" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(Calendar.SATURDAY)" to="(Calendar.SATURDAY &gt;= 0 ? Calendar.SATURDAY : Calendar.SATURDAY * -1)" />
    <mutant id="mutant_9494" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.ZONE_OFFSET" to="(Calendar.ZONE_OFFSET &gt;= 0 ? Calendar.ZONE_OFFSET : Calendar.ZONE_OFFSET * -1)" />
    <mutant id="mutant_8161" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="(startCutoff &gt;= 0 ? startCutoff : startCutoff * -1)" />
    <mutant id="mutant_9495" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.ZONE_OFFSET" to="(Calendar.ZONE_OFFSET &gt;= 0 ? Calendar.ZONE_OFFSET * -1 : Calendar.ZONE_OFFSET)" />
    <mutant id="mutant_8164" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff" />
    <mutant id="mutant_9492" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mStyle" to="(mStyle &gt;= 0 ? mStyle * -1 : mStyle)" />
    <mutant id="mutant_8163" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(Calendar.SATURDAY)" to="(Calendar.SATURDAY &gt;= 0 ? Calendar.SATURDAY * -1 : Calendar.SATURDAY)" />
    <mutant id="mutant_9493" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.estimateLength()" from="5" to="-1 * 5" />
    <mutant id="mutant_8166" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="7" to="-1 * 7" />
    <mutant id="mutant_9498" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.DST_OFFSET" to="(Calendar.DST_OFFSET &gt;= 0 ? Calendar.DST_OFFSET : Calendar.DST_OFFSET * -1)" />
    <mutant id="mutant_8165" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff : startCutoff * -1" />
    <mutant id="mutant_9499" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.DST_OFFSET" to="(Calendar.DST_OFFSET &gt;= 0 ? Calendar.DST_OFFSET * -1 : Calendar.DST_OFFSET)" />
    <mutant id="mutant_8168" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="(endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff)" />
    <mutant id="mutant_9496" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET))" to="(calendar.get(Calendar.ZONE_OFFSET) &gt;= 0 ? calendar.get(Calendar.ZONE_OFFSET) : calendar.get(Calendar.ZONE_OFFSET) * -1)" />
    <mutant id="mutant_8167" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="(endCutoff &gt;= 0 ? endCutoff : endCutoff * -1)" />
    <mutant id="mutant_9497" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNumberRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.ZONE_OFFSET))" to="(calendar.get(Calendar.ZONE_OFFSET) &gt;= 0 ? calendar.get(Calendar.ZONE_OFFSET) * -1 : calendar.get(Calendar.ZONE_OFFSET))" />
    <mutant id="mutant_9490" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mStyle" to="(mStyle &gt;= 0 ? mStyle * -1 : mStyle)" />
    <mutant id="mutant_9491" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mStyle" to="(mStyle &gt;= 0 ? mStyle : mStyle * -1)" />
    <mutant id="mutant_8160" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="(startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff)" />
    <mutant id="mutant_8159" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="7" to="-1 * 7" />
    <mutant id="mutant_8158" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff : startCutoff * -1" />
    <mutant id="mutant_9489" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="mStyle" to="(mStyle &gt;= 0 ? mStyle : mStyle * -1)" />
    <mutant id="mutant_17816" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_17815" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17814" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17813" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17819" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="boundary" to="(boundary &gt;= 0 ? boundary : boundary * -1)" />
    <mutant id="mutant_17818" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="boundary" to="(boundary &gt;= 0 ? boundary * -1 : boundary)" />
    <mutant id="mutant_17817" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_17812" viable="false" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17811" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="boundary" to="(boundary &gt;= 0 ? boundary : boundary * -1)" />
    <mutant id="mutant_17810" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="boundary" to="(boundary &gt;= 0 ? boundary * -1 : boundary)" />
    <mutant id="mutant_17827" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_17826" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_17825" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_17824" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_17829" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_17828" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_17823" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_17822" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_17821" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="p.length" to="(p.length &gt;= 0 ? p.length : p.length * -1)" />
    <mutant id="mutant_17820" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="p.length" to="(p.length &gt;= 0 ? p.length * -1 : p.length)" />
    <mutant id="mutant_17805" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold))" to="(Math.min(n, threshold) &gt;= 0 ? Math.min(n, threshold) * -1 : Math.min(n, threshold))" />
    <mutant id="mutant_17804" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(n, threshold))" to="(Math.min(n, threshold) &gt;= 0 ? Math.min(n, threshold) : Math.min(n, threshold) * -1)" />
    <mutant id="mutant_17803" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold : threshold * -1)" />
    <mutant id="mutant_17802" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold * -1 : threshold)" />
    <mutant id="mutant_17809" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17808" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17807" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17806" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17801" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_17800" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15318" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16649" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15319" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_15316" viable="false" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16647" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_17979" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15317" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16648" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17978" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_15310" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16641" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_17973" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_15311" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16642" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17972" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLast" to="(csLast &gt;= 0 ? csLast * -1 : csLast)" />
    <mutant id="mutant_17971" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLast" to="(csLast &gt;= 0 ? csLast : csLast * -1)" />
    <mutant id="mutant_16640" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_17970" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15314" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16645" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_17977" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_15315" viable="false" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16646" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_17976" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLast" to="(searchLast &gt;= 0 ? searchLast : searchLast * -1)" />
    <mutant id="mutant_15312" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16643" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(value.ordinal())" to="(value.ordinal() &gt;= 0 ? value.ordinal() : value.ordinal() * -1)" />
    <mutant id="mutant_17975" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLast" to="(searchLast &gt;= 0 ? searchLast * -1 : searchLast)" />
    <mutant id="mutant_15313" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16644" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(value.ordinal())" to="(value.ordinal() &gt;= 0 ? value.ordinal() * -1 : value.ordinal())" />
    <mutant id="mutant_17974" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_15329" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_15327" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_16658" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15328" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_16659" viable="true" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_17989" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_15321" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16652" viable="false" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17984" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_15322" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16653" viable="false" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17983" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_16650" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="(locales.size())" to="(locales.size() &gt;= 0 ? locales.size() : locales.size() * -1)" />
    <mutant id="mutant_17982" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15320" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16651" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="(locales.size())" to="(locales.size() &gt;= 0 ? locales.size() * -1 : locales.size())" />
    <mutant id="mutant_17981" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_15325" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16656" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="(locale.getCountry().length())" to="(locale.getCountry().length() &gt;= 0 ? locale.getCountry().length() : locale.getCountry().length() * -1)" />
    <mutant id="mutant_17988" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_15326" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="255" to="(-1 * 255)" />
    <mutant id="mutant_16657" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="(locale.getCountry().length())" to="(locale.getCountry().length() &gt;= 0 ? locale.getCountry().length() * -1 : locale.getCountry().length())" />
    <mutant id="mutant_17987" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_15323" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16654" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17986" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_15324" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16655" viable="true" in="org.apache.commons.lang3.LocaleUtils.countriesByLanguage(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17985" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_17980" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16627" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17959" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16628" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(value.ordinal())" to="(value.ordinal() &gt;= 0 ? value.ordinal() : value.ordinal() * -1)" />
    <mutant id="mutant_17958" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16625" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_17957" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16626" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_17956" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16629" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(value.ordinal())" to="(value.ordinal() &gt;= 0 ? value.ordinal() * -1 : value.ordinal())" />
    <mutant id="mutant_17951" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_16620" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_17950" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16623" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(value.ordinal())" to="(value.ordinal() &gt;= 0 ? value.ordinal() : value.ordinal() * -1)" />
    <mutant id="mutant_17955" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen : csLen * -1)" />
    <mutant id="mutant_16624" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(value.ordinal())" to="(value.ordinal() &gt;= 0 ? value.ordinal() * -1 : value.ordinal())" />
    <mutant id="mutant_17954" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen * -1 : csLen)" />
    <mutant id="mutant_16621" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_17953" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16622" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17952" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15307" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16638" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(value.ordinal())" to="(value.ordinal() &gt;= 0 ? value.ordinal() : value.ordinal() * -1)" />
    <mutant id="mutant_15308" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16639" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(value.ordinal())" to="(value.ordinal() &gt;= 0 ? value.ordinal() * -1 : value.ordinal())" />
    <mutant id="mutant_17969" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_15305" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16636" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_17968" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_15306" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_16637" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17967" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_15309" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_16630" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_17962" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_15300" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16631" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_17961" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_17960" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_15303" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16634" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17966" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_15304" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16635" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_17965" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_15301" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16632" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(enumClass.getEnumConstants().length)" to="(enumClass.getEnumConstants().length &gt;= 0 ? enumClass.getEnumConstants().length * -1 : enumClass.getEnumConstants().length)" />
    <mutant id="mutant_17964" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_15302" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16633" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,java.lang.Iterable)" from="(enumClass.getEnumConstants().length)" to="(enumClass.getEnumConstants().length &gt;= 0 ? enumClass.getEnumConstants().length : enumClass.getEnumConstants().length * -1)" />
    <mutant id="mutant_17963" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_14029" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14022" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_15354" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16685" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_14021" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_15355" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16686" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_14024" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_15352" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16683" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_14023" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_15353" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16684" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14026" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15358" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16689" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14025" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15359" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_14028" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15356" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16687" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14027" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15357" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="255" to="(-1 * 255)" />
    <mutant id="mutant_16688" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_15350" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_16681" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_15351" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16682" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14020" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16680" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14033" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15365" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16696" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_14032" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15366" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="src.getMostSignificantBits()" to="(src.getMostSignificantBits() &gt;= 0 ? src.getMostSignificantBits() * -1 : src.getMostSignificantBits())" />
    <mutant id="mutant_16697" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_14035" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15363" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16694" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_14034" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_15364" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16695" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14037" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_15369" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_14036" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14039" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_15367" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="src.getMostSignificantBits()" to="(src.getMostSignificantBits() &gt;= 0 ? src.getMostSignificantBits() : src.getMostSignificantBits() * -1)" />
    <mutant id="mutant_16698" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14038" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_15368" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16699" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="(split.length)" to="(split.length &gt;= 0 ? split.length * -1 : split.length)" />
    <mutant id="mutant_15361" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16692" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_15362" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16693" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="5" to="(-1 * 5)" />
    <mutant id="mutant_14031" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_16690" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_14030" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15360" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16691" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_14008" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_14007" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_15338" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16669" viable="true" in="org.apache.commons.lang3.LocaleUtils.localeLookupList(java.util.Locale,java.util.Locale)" from="(locale.getVariant().length())" to="(locale.getVariant().length() &gt;= 0 ? locale.getVariant().length() : locale.getVariant().length() * -1)" />
    <mutant id="mutant_14009" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_15339" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14000" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_15332" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16663" viable="true" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="(locales.size())" to="(locales.size() &gt;= 0 ? locales.size() * -1 : locales.size())" />
    <mutant id="mutant_17995" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_15333" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16664" viable="false" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17994" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE" />
    <mutant id="mutant_14002" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_15330" viable="true" in="org.apache.commons.lang3.Conversion.longToByteArray(long,int,byte[],int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16661" viable="true" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17993" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1" />
    <mutant id="mutant_14001" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_15331" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16662" viable="true" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="(locales.size())" to="(locales.size() &gt;= 0 ? locales.size() : locales.size() * -1)" />
    <mutant id="mutant_17992" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="searchStrs.length" to="searchStrs.length &gt;= 0 ? searchStrs.length : searchStrs.length * -1" />
    <mutant id="mutant_14004" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_15336" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16667" viable="true" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17999" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_14003" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_15337" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_16668" viable="true" in="org.apache.commons.lang3.LocaleUtils.localeLookupList(java.util.Locale,java.util.Locale)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_17998" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14006" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_15334" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16665" viable="false" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17997" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14005" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_15335" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16666" viable="true" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17996" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_17991" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="searchStrs.length" to="searchStrs.length &gt;= 0 ? searchStrs.length * -1 : searchStrs.length" />
    <mutant id="mutant_16660" viable="true" in="org.apache.commons.lang3.LocaleUtils.languagesByCountry(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17990" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_14019" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14018" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15349" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14011" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15343" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16674" viable="true" in="org.apache.commons.lang3.LocaleUtils.localeLookupList(java.util.Locale,java.util.Locale)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14010" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_15344" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16675" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_14013" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_15341" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16672" viable="true" in="org.apache.commons.lang3.LocaleUtils.localeLookupList(java.util.Locale,java.util.Locale)" from="(locale.getCountry().length())" to="(locale.getCountry().length() &gt;= 0 ? locale.getCountry().length() : locale.getCountry().length() * -1)" />
    <mutant id="mutant_14012" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15342" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16673" viable="true" in="org.apache.commons.lang3.LocaleUtils.localeLookupList(java.util.Locale,java.util.Locale)" from="(locale.getCountry().length())" to="(locale.getCountry().length() &gt;= 0 ? locale.getCountry().length() * -1 : locale.getCountry().length())" />
    <mutant id="mutant_14015" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_15347" viable="false" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16678" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14014" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_15348" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16679" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_14017" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_15345" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16676" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_14016" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_15346" viable="false" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16677" viable="true" in="org.apache.commons.lang3.LocaleUtils.toLocale(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_16670" viable="true" in="org.apache.commons.lang3.LocaleUtils.localeLookupList(java.util.Locale,java.util.Locale)" from="(locale.getVariant().length())" to="(locale.getVariant().length() &gt;= 0 ? locale.getVariant().length() * -1 : locale.getVariant().length())" />
    <mutant id="mutant_15340" viable="true" in="org.apache.commons.lang3.Conversion.shortToByteArray(short,int,byte[],int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16671" viable="true" in="org.apache.commons.lang3.LocaleUtils.localeLookupList(java.util.Locale,java.util.Locale)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14066" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_15398" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_14065" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_15399" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="beSrcPos" to="(beSrcPos &gt;= 0 ? beSrcPos : beSrcPos * -1)" />
    <mutant id="mutant_14068" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_15396" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_14067" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15397" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_14069" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_15390" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_15391" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_14060" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14062" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_15394" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_14061" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_15395" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14064" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_15392" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_14063" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_15393" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_14077" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14076" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_14079" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_14078" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14071" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_14070" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_14073" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_14072" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_14075" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_14074" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_14044" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_15376" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="nBytes &gt;= 0 ? nBytes : nBytes * -1" />
    <mutant id="mutant_14043" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_15377" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_14046" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_15374" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="8" to="-1 * 8" />
    <mutant id="mutant_14045" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_15375" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="nBytes &gt;= 0 ? nBytes * -1 : nBytes" />
    <mutant id="mutant_14048" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14047" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_15378" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_14049" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_15379" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_14040" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_15372" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_15373" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_14042" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_15370" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_14041" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_15371" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_14055" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset * -1 : n_offset" />
    <mutant id="mutant_15387" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_14054" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_15388" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_14057" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_15385" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_14056" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="n_offset &gt;= 0 ? n_offset : n_offset * -1" />
    <mutant id="mutant_15386" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_14059" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14058" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_15389" viable="true" in="org.apache.commons.lang3.Conversion.binaryBeMsb0ToHexDigit(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_15380" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="src.getLeastSignificantBits()" to="(src.getLeastSignificantBits() &gt;= 0 ? src.getLeastSignificantBits() * -1 : src.getLeastSignificantBits())" />
    <mutant id="mutant_14051" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_15383" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_14050" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_15384" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_14053" viable="false" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_15381" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="src.getLeastSignificantBits()" to="(src.getLeastSignificantBits() &gt;= 0 ? src.getLeastSignificantBits() : src.getLeastSignificantBits() * -1)" />
    <mutant id="mutant_14052" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_15382" viable="true" in="org.apache.commons.lang3.Conversion.uuidToByteArray(java.util.UUID,byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9322" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(patternMatcher.regionStart())" to="(patternMatcher.regionStart() &gt;= 0 ? patternMatcher.regionStart() : patternMatcher.regionStart() * -1)" />
    <mutant id="mutant_9323" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="collector.size()" to="collector.size() &gt;= 0 ? collector.size() : collector.size() * -1" />
    <mutant id="mutant_9320" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(patternMatcher.regionEnd())" to="(patternMatcher.regionEnd() &gt;= 0 ? patternMatcher.regionEnd() : patternMatcher.regionEnd() * -1)" />
    <mutant id="mutant_9321" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(patternMatcher.regionStart())" to="(patternMatcher.regionStart() &gt;= 0 ? patternMatcher.regionStart() * -1 : patternMatcher.regionStart())" />
    <mutant id="mutant_9315" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="patternMatcher.regionEnd()" to="(patternMatcher.regionEnd() &gt;= 0 ? patternMatcher.regionEnd() * -1 : patternMatcher.regionEnd())" />
    <mutant id="mutant_9316" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="patternMatcher.regionEnd()" to="(patternMatcher.regionEnd() &gt;= 0 ? patternMatcher.regionEnd() : patternMatcher.regionEnd() * -1)" />
    <mutant id="mutant_9313" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="patternMatcher.end()" to="(patternMatcher.end() &gt;= 0 ? patternMatcher.end() : patternMatcher.end() * -1)" />
    <mutant id="mutant_9314" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="patternMatcher.end()" to="(patternMatcher.end() &gt;= 0 ? patternMatcher.end() * -1 : patternMatcher.end())" />
    <mutant id="mutant_9319" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(patternMatcher.regionEnd())" to="(patternMatcher.regionEnd() &gt;= 0 ? patternMatcher.regionEnd() * -1 : patternMatcher.regionEnd())" />
    <mutant id="mutant_9317" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(patternMatcher.regionStart())" to="(patternMatcher.regionStart() &gt;= 0 ? patternMatcher.regionStart() * -1 : patternMatcher.regionStart())" />
    <mutant id="mutant_9318" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="(patternMatcher.regionStart())" to="(patternMatcher.regionStart() &gt;= 0 ? patternMatcher.regionStart() : patternMatcher.regionStart() * -1)" />
    <mutant id="mutant_9311" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="patternMatcher.regionStart()" to="(patternMatcher.regionStart() &gt;= 0 ? patternMatcher.regionStart() * -1 : patternMatcher.regionStart())" />
    <mutant id="mutant_9312" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="patternMatcher.regionStart()" to="(patternMatcher.regionStart() &gt;= 0 ? patternMatcher.regionStart() : patternMatcher.regionStart() * -1)" />
    <mutant id="mutant_9310" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.ZONE_OFFSET" to="(Calendar.ZONE_OFFSET &gt;= 0 ? Calendar.ZONE_OFFSET * -1 : Calendar.ZONE_OFFSET)" />
    <mutant id="mutant_9304" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="(formatField.length())" to="(formatField.length() &gt;= 0 ? formatField.length() : formatField.length() * -1)" />
    <mutant id="mutant_9305" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="(formatField.length())" to="(formatField.length() &gt;= 0 ? formatField.length() * -1 : formatField.length())" />
    <mutant id="mutant_9302" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.AM_PM" to="(Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM : Calendar.AM_PM * -1)" />
    <mutant id="mutant_9303" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.AM_PM" to="(Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM * -1 : Calendar.AM_PM)" />
    <mutant id="mutant_9308" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="formatField.length()" to="(formatField.length() &gt;= 0 ? formatField.length() * -1 : formatField.length())" />
    <mutant id="mutant_9309" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.ZONE_OFFSET" to="(Calendar.ZONE_OFFSET &gt;= 0 ? Calendar.ZONE_OFFSET : Calendar.ZONE_OFFSET * -1)" />
    <mutant id="mutant_9306" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_9307" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="formatField.length()" to="(formatField.length() &gt;= 0 ? formatField.length() : formatField.length() * -1)" />
    <mutant id="mutant_9300" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_9301" viable="true" in="org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String,java.util.Calendar)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_14088" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 * -1 : offset2)" />
    <mutant id="mutant_14087" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int)" from="offset2" to="(offset2 &gt;= 0 ? offset2 : offset2 * -1)" />
    <mutant id="mutant_14089" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14080" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_14082" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset : n_offset * -1)" />
    <mutant id="mutant_14081" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="n_offset" to="(n_offset &gt;= 0 ? n_offset * -1 : n_offset)" />
    <mutant id="mutant_14084" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_14083" viable="true" in="org.apache.commons.lang3.ArrayUtils.shift(short[],int,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_14086" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_14085" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_14099" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14098" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 * -1 : offset1)" />
    <mutant id="mutant_14091" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14090" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_14093" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_14092" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_14095" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_14094" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_14097" viable="true" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="offset1" to="(offset1 &gt;= 0 ? offset1 : offset1 * -1)" />
    <mutant id="mutant_14096" viable="false" in="org.apache.commons.lang3.ArrayUtils.swap(boolean[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8030" viable="true" in="org.apache.commons.lang3.time.DateUtils.setDays(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_9362" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_9363" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_8032" viable="true" in="org.apache.commons.lang3.time.DateUtils.setHours(java.util.Date,int)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_9360" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8031" viable="true" in="org.apache.commons.lang3.time.DateUtils.setDays(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9361" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8034" viable="true" in="org.apache.commons.lang3.time.DateUtils.setHours(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_9366" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_8033" viable="true" in="org.apache.commons.lang3.time.DateUtils.setHours(java.util.Date,int)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_9367" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(length)" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_8036" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMilliseconds(java.util.Date,int)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_9364" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="1000" to="(-1 * 1000)" />
    <mutant id="mutant_8035" viable="true" in="org.apache.commons.lang3.time.DateUtils.setHours(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9365" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_8027" viable="true" in="org.apache.commons.lang3.time.DateUtils.set(java.util.Date,int,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9359" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8026" viable="true" in="org.apache.commons.lang3.time.DateUtils.set(java.util.Date,int,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_8029" viable="true" in="org.apache.commons.lang3.time.DateUtils.setDays(java.util.Date,int)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_9357" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_8028" viable="true" in="org.apache.commons.lang3.time.DateUtils.setDays(java.util.Date,int)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_9358" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_9351" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.DST_OFFSET) &gt;= 0 ? calendar.get(Calendar.DST_OFFSET) * -1 : calendar.get(Calendar.DST_OFFSET))" />
    <mutant id="mutant_9352" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(calendar.get(Calendar.DST_OFFSET))" to="(calendar.get(Calendar.DST_OFFSET) &gt;= 0 ? calendar.get(Calendar.DST_OFFSET) : calendar.get(Calendar.DST_OFFSET) * -1)" />
    <mutant id="mutant_8021" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_8020" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9350" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.DST_OFFSET" to="(Calendar.DST_OFFSET &gt;= 0 ? Calendar.DST_OFFSET * -1 : Calendar.DST_OFFSET)" />
    <mutant id="mutant_8023" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.util.Date,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9355" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8022" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.util.Date,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9356" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_8025" viable="true" in="org.apache.commons.lang3.time.DateUtils.set(java.util.Date,int,int)" from="calendarField" to="(calendarField &gt;= 0 ? calendarField : calendarField * -1)" />
    <mutant id="mutant_9353" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8024" viable="true" in="org.apache.commons.lang3.time.DateUtils.set(java.util.Date,int,int)" from="calendarField" to="(calendarField &gt;= 0 ? calendarField * -1 : calendarField)" />
    <mutant id="mutant_9354" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8016" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(str2.length())" to="(str2.length() &gt;= 0 ? str2.length() * -1 : str2.length())" />
    <mutant id="mutant_9348" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset" to="(zoneOffset &gt;= 0 ? zoneOffset * -1 : zoneOffset)" />
    <mutant id="mutant_8015" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(str2.length())" to="(str2.length() &gt;= 0 ? str2.length() : str2.length() * -1)" />
    <mutant id="mutant_9349" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.DST_OFFSET" to="(Calendar.DST_OFFSET &gt;= 0 ? Calendar.DST_OFFSET : Calendar.DST_OFFSET * -1)" />
    <mutant id="mutant_8018" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9346" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8017" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9347" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset" to="(zoneOffset &gt;= 0 ? zoneOffset : zoneOffset * -1)" />
    <mutant id="mutant_8019" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9340" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.ZONE_OFFSET" to="(Calendar.ZONE_OFFSET &gt;= 0 ? Calendar.ZONE_OFFSET : Calendar.ZONE_OFFSET * -1)" />
    <mutant id="mutant_9341" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="Calendar.ZONE_OFFSET" to="(Calendar.ZONE_OFFSET &gt;= 0 ? Calendar.ZONE_OFFSET * -1 : Calendar.ZONE_OFFSET)" />
    <mutant id="mutant_8010" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_8012" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9344" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset" to="(zoneOffset &gt;= 0 ? zoneOffset : zoneOffset * -1)" />
    <mutant id="mutant_8011" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_9345" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="zoneOffset" to="(zoneOffset &gt;= 0 ? zoneOffset * -1 : zoneOffset)" />
    <mutant id="mutant_8014" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_9342" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(Calendar.ZONE_OFFSET)" to="calendar.get(Calendar.ZONE_OFFSET) &gt;= 0 ? calendar.get(Calendar.ZONE_OFFSET) : calendar.get(Calendar.ZONE_OFFSET) * -1" />
    <mutant id="mutant_8013" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_9343" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="calendar.get(Calendar.ZONE_OFFSET)" to="calendar.get(Calendar.ZONE_OFFSET) &gt;= 0 ? calendar.get(Calendar.ZONE_OFFSET) * -1 : calendar.get(Calendar.ZONE_OFFSET)" />
    <mutant id="mutant_8005" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.util.Date,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9337" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.getRule(int)" from="1" to="-1 * 1" />
    <mutant id="mutant_8004" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9338" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.getRule(int)" from="2" to="-1 * 2" />
    <mutant id="mutant_8007" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9335" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.getRule(int)" from="tokenLen" to="tokenLen &gt;= 0 ? tokenLen * -1 : tokenLen" />
    <mutant id="mutant_8006" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.util.Date,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9336" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.getRule(int)" from="tokenLen" to="tokenLen &gt;= 0 ? tokenLen : tokenLen * -1" />
    <mutant id="mutant_8009" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_8008" viable="true" in="org.apache.commons.lang3.time.DateUtils.parseDateWithLeniency(java.lang.String,java.util.Locale,java.lang.String[],boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_9339" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.getRule(int)" from="3" to="-1 * 3" />
    <mutant id="mutant_9330" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule(int)" from="this.length" to="this.length &gt;= 0 ? this.length : this.length * -1" />
    <mutant id="mutant_8001" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9333" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.estimateLength()" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_8000" viable="true" in="org.apache.commons.lang3.time.DateUtils.addYears(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9334" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.estimateLength()" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_8003" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9331" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule(int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_8002" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9332" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule(int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_9326" viable="false" in="?" from="3" to="(-1 * 3)" />
    <mutant id="mutant_9327" viable="false" in="?" from="5" to="(-1 * 5)" />
    <mutant id="mutant_9324" viable="true" in="org.apache.commons.lang3.time.FastDateParser.init(java.util.Calendar)" from="collector.size()" to="collector.size() &gt;= 0 ? collector.size() * -1 : collector.size()" />
    <mutant id="mutant_9325" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral.estimateLength()" from="1" to="-1 * 1" />
    <mutant id="mutant_9328" viable="false" in="?" from="6" to="(-1 * 6)" />
    <mutant id="mutant_9329" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule(int)" from="this.length" to="this.length &gt;= 0 ? this.length * -1 : this.length" />
    <mutant id="mutant_8074" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_MONTH_MONDAY" to="DateUtils.RANGE_MONTH_MONDAY &gt;= 0 ? DateUtils.RANGE_MONTH_MONDAY : DateUtils.RANGE_MONTH_MONDAY * -1" />
    <mutant id="mutant_8073" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_MONTH_SUNDAY" to="DateUtils.RANGE_MONTH_SUNDAY &gt;= 0 ? DateUtils.RANGE_MONTH_SUNDAY : DateUtils.RANGE_MONTH_SUNDAY * -1" />
    <mutant id="mutant_8076" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_8075" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_MONTH_MONDAY" to="DateUtils.RANGE_MONTH_MONDAY &gt;= 0 ? DateUtils.RANGE_MONTH_MONDAY * -1 : DateUtils.RANGE_MONTH_MONDAY" />
    <mutant id="mutant_8078" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_8077" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_8079" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_8070" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="rangeStyle" to="rangeStyle &gt;= 0 ? rangeStyle : rangeStyle * -1" />
    <mutant id="mutant_8072" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_MONTH_SUNDAY" to="DateUtils.RANGE_MONTH_SUNDAY &gt;= 0 ? DateUtils.RANGE_MONTH_SUNDAY * -1 : DateUtils.RANGE_MONTH_SUNDAY" />
    <mutant id="mutant_8071" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="rangeStyle" to="rangeStyle &gt;= 0 ? rangeStyle * -1 : rangeStyle" />
    <mutant id="mutant_8063" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle * -1 : rangeStyle)" />
    <mutant id="mutant_9395" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_8062" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle : rangeStyle * -1)" />
    <mutant id="mutant_9396" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="digit" to="(digit &gt;= 0 ? digit * -1 : digit)" />
    <mutant id="mutant_8065" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle * -1 : rangeStyle)" />
    <mutant id="mutant_9393" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.estimateLength()" from="mSize" to="mSize &gt;= 0 ? mSize * -1 : mSize" />
    <mutant id="mutant_8064" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.lang.Object,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle : rangeStyle * -1)" />
    <mutant id="mutant_9394" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.estimateLength()" from="mSize" to="mSize &gt;= 0 ? mSize : mSize * -1" />
    <mutant id="mutant_8067" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.SUNDAY" to="Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY : Calendar.SUNDAY * -1" />
    <mutant id="mutant_9399" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(mSize)" to="(mSize &gt;= 0 ? mSize : mSize * -1)" />
    <mutant id="mutant_8066" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.SUNDAY" to="Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY * -1 : Calendar.SUNDAY" />
    <mutant id="mutant_8069" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.SATURDAY" to="Calendar.SATURDAY &gt;= 0 ? Calendar.SATURDAY * -1 : Calendar.SATURDAY" />
    <mutant id="mutant_9397" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="digit" to="(digit &gt;= 0 ? digit : digit * -1)" />
    <mutant id="mutant_8068" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.SATURDAY" to="Calendar.SATURDAY &gt;= 0 ? Calendar.SATURDAY : Calendar.SATURDAY * -1" />
    <mutant id="mutant_9398" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.appendTo(java.lang.StringBuffer,int)" from="(mSize)" to="(mSize &gt;= 0 ? mSize * -1 : mSize)" />
    <mutant id="mutant_9391" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_9392" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_8061" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.util.Date,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_8060" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.util.Date,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9390" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="mSize" to="mSize &gt;= 0 ? mSize : mSize * -1" />
    <mutant id="mutant_8059" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_8052" viable="true" in="org.apache.commons.lang3.time.DateUtils.setYears(java.util.Date,int)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_9384" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_8051" viable="true" in="org.apache.commons.lang3.time.DateUtils.setSeconds(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9385" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="mField" to="mField &gt;= 0 ? mField * -1 : mField" />
    <mutant id="mutant_8054" viable="true" in="org.apache.commons.lang3.time.DateUtils.setYears(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_9382" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_8053" viable="true" in="org.apache.commons.lang3.time.DateUtils.setYears(java.util.Date,int)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_9383" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_8056" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9388" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="field" to="field &gt;= 0 ? field : field * -1" />
    <mutant id="mutant_8055" viable="true" in="org.apache.commons.lang3.time.DateUtils.setYears(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9389" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="mSize" to="mSize &gt;= 0 ? mSize * -1 : mSize" />
    <mutant id="mutant_8058" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_9386" viable="false" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="mField" to="mField &gt;= 0 ? mField : mField * -1" />
    <mutant id="mutant_8057" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.lang.Object,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_9387" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)" from="field" to="field &gt;= 0 ? field * -1 : field" />
    <mutant id="mutant_9380" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_9381" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_8050" viable="true" in="org.apache.commons.lang3.time.DateUtils.setSeconds(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_8049" viable="true" in="org.apache.commons.lang3.time.DateUtils.setSeconds(java.util.Date,int)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_8048" viable="true" in="org.apache.commons.lang3.time.DateUtils.setSeconds(java.util.Date,int)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_9379" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_8041" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMinutes(java.util.Date,int)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_9373" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_8040" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMinutes(java.util.Date,int)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_9374" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_8043" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMinutes(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9371" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(length)" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_8042" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMinutes(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_9372" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="6" to="(-1 * 6)" />
    <mutant id="mutant_8045" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMonths(java.util.Date,int)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_9377" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_8044" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMonths(java.util.Date,int)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_9378" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_8047" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMonths(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9375" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_8046" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMonths(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_9376" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="1000" to="(-1 * 1000)" />
    <mutant id="mutant_9370" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(length)" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_8038" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMilliseconds(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_8037" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMilliseconds(java.util.Date,int)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_9368" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="(length)" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_8039" viable="true" in="org.apache.commons.lang3.time.DateUtils.setMilliseconds(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_9369" viable="true" in="org.apache.commons.lang3.time.FastDatePrinter$Iso8601_Rule.appendTo(java.lang.StringBuffer,java.util.Calendar)" from="5" to="(-1 * 5)" />
    <mutant id="mutant_17909" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold : threshold * -1)" />
    <mutant id="mutant_17904" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="(Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]) &gt;= 0 ? Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]) * -1 : Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" />
    <mutant id="mutant_17903" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17902" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17901" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17908" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="threshold" to="(threshold &gt;= 0 ? threshold * -1 : threshold)" />
    <mutant id="mutant_17907" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_17906" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_17905" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]))" to="(Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]) &gt;= 0 ? Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]) : Math.min(Math.min(d[(i - 1)], p[i]), p[(i - 1)]) * -1)" />
    <mutant id="mutant_17900" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="Math.min(d[(i - 1)], p[i])" to="(Math.min(d[(i - 1)], p[i]) &gt;= 0 ? Math.min(d[(i - 1)], p[i]) * -1 : Math.min(d[(i - 1)], p[i]))" />
    <mutant id="mutant_8096" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_SUNDAY" to="DateUtils.RANGE_WEEK_SUNDAY &gt;= 0 ? DateUtils.RANGE_WEEK_SUNDAY : DateUtils.RANGE_WEEK_SUNDAY * -1" />
    <mutant id="mutant_8095" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.SUNDAY" to="Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY : Calendar.SUNDAY * -1" />
    <mutant id="mutant_8098" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_MONDAY" to="DateUtils.RANGE_WEEK_MONDAY &gt;= 0 ? DateUtils.RANGE_WEEK_MONDAY : DateUtils.RANGE_WEEK_MONDAY * -1" />
    <mutant id="mutant_8097" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_SUNDAY" to="DateUtils.RANGE_WEEK_SUNDAY &gt;= 0 ? DateUtils.RANGE_WEEK_SUNDAY * -1 : DateUtils.RANGE_WEEK_SUNDAY" />
    <mutant id="mutant_8099" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="DateUtils.RANGE_WEEK_MONDAY" to="DateUtils.RANGE_WEEK_MONDAY &gt;= 0 ? DateUtils.RANGE_WEEK_MONDAY * -1 : DateUtils.RANGE_WEEK_MONDAY" />
    <mutant id="mutant_8090" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.MONDAY" to="Calendar.MONDAY &gt;= 0 ? Calendar.MONDAY * -1 : Calendar.MONDAY" />
    <mutant id="mutant_8092" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff : endCutoff * -1" />
    <mutant id="mutant_8091" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.MONDAY" to="Calendar.MONDAY &gt;= 0 ? Calendar.MONDAY : Calendar.MONDAY * -1" />
    <mutant id="mutant_8094" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.SUNDAY" to="Calendar.SUNDAY &gt;= 0 ? Calendar.SUNDAY * -1 : Calendar.SUNDAY" />
    <mutant id="mutant_8093" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="endCutoff" to="endCutoff &gt;= 0 ? endCutoff * -1 : endCutoff" />
    <mutant id="mutant_8085" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle * -1 : rangeStyle)" />
    <mutant id="mutant_8084" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="rangeStyle" to="(rangeStyle &gt;= 0 ? rangeStyle : rangeStyle * -1)" />
    <mutant id="mutant_8087" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(DateUtils.RANGE_MONTH_MONDAY)" to="(DateUtils.RANGE_MONTH_MONDAY &gt;= 0 ? DateUtils.RANGE_MONTH_MONDAY * -1 : DateUtils.RANGE_MONTH_MONDAY)" />
    <mutant id="mutant_8086" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="(DateUtils.RANGE_MONTH_MONDAY)" to="(DateUtils.RANGE_MONTH_MONDAY &gt;= 0 ? DateUtils.RANGE_MONTH_MONDAY : DateUtils.RANGE_MONTH_MONDAY * -1)" />
    <mutant id="mutant_8089" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff : startCutoff * -1" />
    <mutant id="mutant_8088" viable="false" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="startCutoff" to="startCutoff &gt;= 0 ? startCutoff * -1 : startCutoff" />
    <mutant id="mutant_8081" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_8080" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8083" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8082" viable="true" in="org.apache.commons.lang3.time.DateUtils.iterator(java.util.Calendar,int)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_16605" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE * -1 : Long.SIZE)" />
    <mutant id="mutant_17937" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="CharSequenceUtils.indexOf(seq, searchSeq, startPos)" to="CharSequenceUtils.indexOf(seq, searchSeq, startPos) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchSeq, startPos) * -1 : CharSequenceUtils.indexOf(seq, searchSeq, startPos)" />
    <mutant id="mutant_16606" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17936" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_16603" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal())" to="(constant.ordinal() &gt;= 0 ? constant.ordinal() * -1 : constant.ordinal())" />
    <mutant id="mutant_17935" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_16604" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(Long.SIZE)" to="(Long.SIZE &gt;= 0 ? Long.SIZE : Long.SIZE * -1)" />
    <mutant id="mutant_17934" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_16609" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,java.lang.Iterable)" from="0" to="-1 * 0" />
    <mutant id="mutant_16607" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,E[])" from="org.apache.commons.lang3.EnumUtils.generateBitVector(enumClass, java.util.Arrays.&lt;E&gt;asList(values))" to="org.apache.commons.lang3.EnumUtils.generateBitVector(enumClass, java.util.Arrays.&lt;E&gt;asList(values)) &gt;= 0 ? org.apache.commons.lang3.EnumUtils.generateBitVector(enumClass, java.util.Arrays.&lt;E&gt;asList(values)) * -1 : org.apache.commons.lang3.EnumUtils.generateBitVector(enumClass, java.util.Arrays.&lt;E&gt;asList(values))" />
    <mutant id="mutant_17939" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_16608" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,E[])" from="org.apache.commons.lang3.EnumUtils.generateBitVector(enumClass, java.util.Arrays.&lt;E&gt;asList(values))" to="org.apache.commons.lang3.EnumUtils.generateBitVector(enumClass, java.util.Arrays.&lt;E&gt;asList(values)) &gt;= 0 ? org.apache.commons.lang3.EnumUtils.generateBitVector(enumClass, java.util.Arrays.&lt;E&gt;asList(values)) : org.apache.commons.lang3.EnumUtils.generateBitVector(enumClass, java.util.Arrays.&lt;E&gt;asList(values)) * -1" />
    <mutant id="mutant_17938" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="CharSequenceUtils.indexOf(seq, searchSeq, startPos)" to="CharSequenceUtils.indexOf(seq, searchSeq, startPos) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchSeq, startPos) : CharSequenceUtils.indexOf(seq, searchSeq, startPos) * -1" />
    <mutant id="mutant_16601" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17933" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_16602" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="(constant.ordinal())" to="(constant.ordinal() &gt;= 0 ? constant.ordinal() : constant.ordinal() * -1)" />
    <mutant id="mutant_17932" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence)" from="CharSequenceUtils.indexOf(seq, searchSeq, 0)" to="CharSequenceUtils.indexOf(seq, searchSeq, 0) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchSeq, 0) * -1 : CharSequenceUtils.indexOf(seq, searchSeq, 0)" />
    <mutant id="mutant_17931" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence)" from="CharSequenceUtils.indexOf(seq, searchSeq, 0)" to="CharSequenceUtils.indexOf(seq, searchSeq, 0) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchSeq, 0) : CharSequenceUtils.indexOf(seq, searchSeq, 0) * -1" />
    <mutant id="mutant_16600" viable="true" in="org.apache.commons.lang3.EnumUtils.processBitVectors(java.lang.Class,long[])" from="block" to="(block &gt;= 0 ? block * -1 : block)" />
    <mutant id="mutant_17930" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16616" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,java.lang.Iterable)" from="total" to="total &gt;= 0 ? total * -1 : total" />
    <mutant id="mutant_17948" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_16617" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(enumClass.getEnumConstants().length)" to="(enumClass.getEnumConstants().length &gt;= 0 ? enumClass.getEnumConstants().length * -1 : enumClass.getEnumConstants().length)" />
    <mutant id="mutant_17947" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchChars.length" to="searchChars.length &gt;= 0 ? searchChars.length : searchChars.length * -1" />
    <mutant id="mutant_16614" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,java.lang.Iterable)" from="(constant.ordinal())" to="(constant.ordinal() &gt;= 0 ? constant.ordinal() * -1 : constant.ordinal())" />
    <mutant id="mutant_17946" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchChars.length" to="searchChars.length &gt;= 0 ? searchChars.length * -1 : searchChars.length" />
    <mutant id="mutant_16615" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,java.lang.Iterable)" from="total" to="total &gt;= 0 ? total : total * -1" />
    <mutant id="mutant_17945" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16618" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="(enumClass.getEnumConstants().length)" to="(enumClass.getEnumConstants().length &gt;= 0 ? enumClass.getEnumConstants().length : enumClass.getEnumConstants().length * -1)" />
    <mutant id="mutant_16619" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVectors(java.lang.Class,E[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17949" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_17940" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_16612" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,java.lang.Iterable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17944" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen : csLen * -1)" />
    <mutant id="mutant_16613" viable="true" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,java.lang.Iterable)" from="(constant.ordinal())" to="(constant.ordinal() &gt;= 0 ? constant.ordinal() : constant.ordinal() * -1)" />
    <mutant id="mutant_17943" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen * -1 : csLen)" />
    <mutant id="mutant_16610" viable="false" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,java.lang.Iterable)" from="total" to="total &gt;= 0 ? total : total * -1" />
    <mutant id="mutant_17942" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_16611" viable="false" in="org.apache.commons.lang3.EnumUtils.generateBitVector(java.lang.Class,java.lang.Iterable)" from="total" to="total &gt;= 0 ? total * -1 : total" />
    <mutant id="mutant_17941" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,char[])" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_17915" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_17914" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_17913" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_17912" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17919" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int)" from="CharSequenceUtils.indexOf(seq, searchChar, 0)" to="CharSequenceUtils.indexOf(seq, searchChar, 0) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchChar, 0) * -1 : CharSequenceUtils.indexOf(seq, searchChar, 0)" />
    <mutant id="mutant_17918" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int)" from="CharSequenceUtils.indexOf(seq, searchChar, 0)" to="CharSequenceUtils.indexOf(seq, searchChar, 0) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchChar, 0) : CharSequenceUtils.indexOf(seq, searchChar, 0) * -1" />
    <mutant id="mutant_17917" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17916" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_17911" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_17910" viable="true" in="org.apache.commons.lang3.StringUtils.getLevenshteinDistance(java.lang.CharSequence,java.lang.CharSequence,int)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_17926" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.indexOf(seq, searchChar, startPos)" to="CharSequenceUtils.indexOf(seq, searchChar, startPos) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchChar, startPos) * -1 : CharSequenceUtils.indexOf(seq, searchChar, startPos)" />
    <mutant id="mutant_17925" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int,int)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_17924" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int,int)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_17923" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_17929" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_17928" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_17927" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.indexOf(seq, searchChar, startPos)" to="CharSequenceUtils.indexOf(seq, searchChar, startPos) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchChar, startPos) : CharSequenceUtils.indexOf(seq, searchChar, startPos) * -1" />
    <mutant id="mutant_17922" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_17921" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_17920" viable="true" in="org.apache.commons.lang3.StringUtils.indexOf(java.lang.CharSequence,int,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_569" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator * -1 : denominator" />
    <mutant id="mutant_565" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator * -1 : numerator" />
    <mutant id="mutant_566" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator : numerator * -1" />
    <mutant id="mutant_5680" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_567" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_5681" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_568" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_5682" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_3020" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4351" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="text" to="(text &gt;= 0 ? text : text * -1)" />
    <mutant id="mutant_4350" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="text" to="(text &gt;= 0 ? text * -1 : text)" />
    <mutant id="mutant_3017" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="iConstant" to="iConstant &gt;= 0 ? iConstant : iConstant * -1" />
    <mutant id="mutant_4348" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="depth" to="(depth &gt;= 0 ? depth * -1 : depth)" />
    <mutant id="mutant_3016" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="iConstant" to="iConstant &gt;= 0 ? iConstant * -1 : iConstant" />
    <mutant id="mutant_4347" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="depth" to="(depth &gt;= 0 ? depth : depth * -1)" />
    <mutant id="mutant_3015" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4346" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="depth" to="(depth &gt;= 0 ? depth * -1 : depth)" />
    <mutant id="mutant_3014" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_4345" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="depth" to="(depth &gt;= 0 ? depth : depth * -1)" />
    <mutant id="mutant_3013" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="multiplierOddNumber" to="(multiplierOddNumber &gt;= 0 ? multiplierOddNumber * -1 : multiplierOddNumber)" />
    <mutant id="mutant_4344" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="depth" to="(depth &gt;= 0 ? depth * -1 : depth)" />
    <mutant id="mutant_3012" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="multiplierOddNumber" to="(multiplierOddNumber &gt;= 0 ? multiplierOddNumber : multiplierOddNumber * -1)" />
    <mutant id="mutant_4343" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="depth" to="(depth &gt;= 0 ? depth : depth * -1)" />
    <mutant id="mutant_3011" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4342" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_3010" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_4341" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_561" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_5672" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(int,int,char)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_562" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_5673" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(int,int,char)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_563" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_5674" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(int,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_564" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_5675" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(int,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_5676" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5677" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_3019" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="multiplierOddNumber" to="multiplierOddNumber &gt;= 0 ? multiplierOddNumber * -1 : multiplierOddNumber" />
    <mutant id="mutant_5678" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_560" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_3018" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="multiplierOddNumber" to="multiplierOddNumber &gt;= 0 ? multiplierOddNumber : multiplierOddNumber * -1" />
    <mutant id="mutant_4349" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5679" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_576" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_577" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_578" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_5670" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_579" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5671" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_4340" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_19808" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19809" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19804" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19805" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19806" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19807" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_3006" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder()" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4337" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5669" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_19800" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_3005" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder()" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4336" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="1" to="-1 * 1" />
    <mutant id="mutant_19801" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_3004" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder()" from="37" to="-1 * 37" />
    <mutant id="mutant_4335" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1" />
    <mutant id="mutant_19802" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_3003" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder()" from="iConstant" to="iConstant &gt;= 0 ? iConstant : iConstant * -1" />
    <mutant id="mutant_4334" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex()" />
    <mutant id="mutant_19803" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_3002" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder()" from="iConstant" to="iConstant &gt;= 0 ? iConstant * -1 : iConstant" />
    <mutant id="mutant_4333" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1" />
    <mutant id="mutant_3001" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_4332" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex()" />
    <mutant id="mutant_3000" viable="false" in="?" from="37" to="-1 * 37" />
    <mutant id="mutant_4331" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="depth" to="(depth &gt;= 0 ? depth * -1 : depth)" />
    <mutant id="mutant_4330" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="depth" to="(depth &gt;= 0 ? depth : depth * -1)" />
    <mutant id="mutant_572" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_5661" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6992" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_573" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_5662" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6993" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.nextIndex()" from="tokenPos" to="tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos" />
    <mutant id="mutant_574" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_5663" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6994" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.nextIndex()" from="tokenPos" to="tokenPos &gt;= 0 ? tokenPos : tokenPos * -1" />
    <mutant id="mutant_575" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_5664" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6995" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos)" />
    <mutant id="mutant_5665" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6996" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos : tokenPos * -1)" />
    <mutant id="mutant_3009" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="initialOddNumber" to="(initialOddNumber &gt;= 0 ? initialOddNumber : initialOddNumber * -1)" />
    <mutant id="mutant_5666" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6997" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.previousIndex()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_570" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator : denominator * -1" />
    <mutant id="mutant_3008" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="initialOddNumber" to="(initialOddNumber &gt;= 0 ? initialOddNumber * -1 : initialOddNumber)" />
    <mutant id="mutant_4339" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_5667" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6998" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_571" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_3007" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder()" from="17" to="-1 * 17" />
    <mutant id="mutant_4338" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5668" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6999" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.readNextToken(char[],int,int,org.apache.commons.lang3.text.StrBuilder,java.util.List)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_587" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="whole" to="(whole &gt;= 0 ? whole * -1 : whole)" />
    <mutant id="mutant_588" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_589" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numeratorValue" to="numeratorValue &gt;= 0 ? numeratorValue * -1 : numeratorValue" />
    <mutant id="mutant_6990" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="quoteStart" to="(quoteStart &gt;= 0 ? quoteStart : quoteStart * -1)" />
    <mutant id="mutant_5660" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6991" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4326" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="fe" to="(fe &gt;= 0 ? fe * -1 : fe)" />
    <mutant id="mutant_5658" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6989" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="quoteStart" to="(quoteStart &gt;= 0 ? quoteStart * -1 : quoteStart)" />
    <mutant id="mutant_4325" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5659" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_4324" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="depth" to="(depth &gt;= 0 ? depth * -1 : depth)" />
    <mutant id="mutant_4323" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="depth" to="(depth &gt;= 0 ? depth : depth * -1)" />
    <mutant id="mutant_4322" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="readArgumentIndex(pattern, next(pos))" to="(readArgumentIndex(pattern, next(pos)) &gt;= 0 ? readArgumentIndex(pattern, next(pos)) * -1 : readArgumentIndex(pattern, next(pos)))" />
    <mutant id="mutant_4321" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="readArgumentIndex(pattern, next(pos))" to="(readArgumentIndex(pattern, next(pos)) &gt;= 0 ? readArgumentIndex(pattern, next(pos)) : readArgumentIndex(pattern, next(pos)) * -1)" />
    <mutant id="mutant_4320" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="depth" to="(depth &gt;= 0 ? depth * -1 : depth)" />
    <mutant id="mutant_583" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_5650" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6981" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_584" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_5651" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6982" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_585" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5652" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6983" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_586" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="whole" to="(whole &gt;= 0 ? whole : whole * -1)" />
    <mutant id="mutant_5653" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6984" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5654" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6985" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_580" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_4329" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="fe" to="(fe &gt;= 0 ? fe : fe * -1)" />
    <mutant id="mutant_5655" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6986" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_581" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_4328" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="fe" to="(fe &gt;= 0 ? fe * -1 : fe)" />
    <mutant id="mutant_5656" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6987" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_582" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4327" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="fe" to="(fe &gt;= 0 ? fe : fe * -1)" />
    <mutant id="mutant_5657" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6988" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_598" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numeratorValue" to="numeratorValue &gt;= 0 ? numeratorValue : numeratorValue * -1" />
    <mutant id="mutant_599" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="whole" to="(whole &gt;= 0 ? whole : whole * -1)" />
    <mutant id="mutant_6980" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_4315" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_5647" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6978" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4314" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5648" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6979" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_4313" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5649" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_4312" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="0" to="-1 * 0" />
    <mutant id="mutant_4311" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4310" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_594" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="((long)(denominator))" to="(((long)(denominator)) &gt;= 0 ? ((long)(denominator)) : ((long)(denominator)) * -1)" />
    <mutant id="mutant_6970" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.hasPrevious()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos : tokenPos * -1)" />
    <mutant id="mutant_595" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_5640" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_6971" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.hasPrevious()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_596" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_5641" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6972" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_597" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numeratorValue" to="numeratorValue &gt;= 0 ? numeratorValue * -1 : numeratorValue" />
    <mutant id="mutant_5642" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6973" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_590" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numeratorValue" to="numeratorValue &gt;= 0 ? numeratorValue : numeratorValue * -1" />
    <mutant id="mutant_4319" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="depth" to="(depth &gt;= 0 ? depth : depth * -1)" />
    <mutant id="mutant_5643" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6974" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_591" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="whole" to="(whole &gt;= 0 ? whole : whole * -1)" />
    <mutant id="mutant_4318" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5644" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6975" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen * -1 : quoteLen)" />
    <mutant id="mutant_592" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="whole" to="(whole &gt;= 0 ? whole * -1 : whole)" />
    <mutant id="mutant_4317" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5645" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6976" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="quoteLen" to="(quoteLen &gt;= 0 ? quoteLen : quoteLen * -1)" />
    <mutant id="mutant_593" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="((long)(denominator))" to="(((long)(denominator)) &gt;= 0 ? ((long)(denominator)) * -1 : ((long)(denominator)))" />
    <mutant id="mutant_4316" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_5646" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6977" viable="false" in="org.apache.commons.lang3.text.StrTokenizer.isQuote(char[],int,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3064" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4395" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pattern.length()" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_18509" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_3063" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.build()" from="Integer.valueOf(toHashCode())" to="Integer.valueOf(toHashCode()) &gt;= 0 ? Integer.valueOf(toHashCode()) * -1 : Integer.valueOf(toHashCode())" />
    <mutant id="mutant_4394" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pattern.length()" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_18508" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_3062" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.build()" from="Integer.valueOf(toHashCode())" to="Integer.valueOf(toHashCode()) &gt;= 0 ? Integer.valueOf(toHashCode()) : Integer.valueOf(toHashCode()) * -1" />
    <mutant id="mutant_4393" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18507" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_3061" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.build()" from="toHashCode()" to="(toHashCode() &gt;= 0 ? toHashCode() : toHashCode() * -1)" />
    <mutant id="mutant_4392" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_18506" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_3060" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.build()" from="toHashCode()" to="(toHashCode() &gt;= 0 ? toHashCode() * -1 : toHashCode())" />
    <mutant id="mutant_4391" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_19837" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_4390" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19838" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_19839" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_18501" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_19833" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="str.lastIndexOf(separator)" to="str.lastIndexOf(separator) &gt;= 0 ? str.lastIndexOf(separator) * -1 : str.lastIndexOf(separator)" />
    <mutant id="mutant_18500" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_19834" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="str.lastIndexOf(separator)" to="str.lastIndexOf(separator) &gt;= 0 ? str.lastIndexOf(separator) : str.lastIndexOf(separator) * -1" />
    <mutant id="mutant_3059" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.toHashCode()" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_19835" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3058" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.toHashCode()" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4389" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19836" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3057" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,java.util.Collection)" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields))" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) * -1 : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields))" />
    <mutant id="mutant_4388" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18505" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_3056" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,java.util.Collection)" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields))" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(object, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) * -1" />
    <mutant id="mutant_4387" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18504" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="7" to="(-1 * 7)" />
    <mutant id="mutant_19830" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3055" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,java.lang.String[])" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, false, null, excludeFields)" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, false, null, excludeFields) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, false, null, excludeFields) * -1 : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, false, null, excludeFields)" />
    <mutant id="mutant_4386" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18503" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_19831" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(separator.length())" to="(separator.length() &gt;= 0 ? separator.length() : separator.length() * -1)" />
    <mutant id="mutant_3054" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,java.lang.String[])" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, false, null, excludeFields)" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, false, null, excludeFields) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, false, null, excludeFields) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, false, null, excludeFields) * -1" />
    <mutant id="mutant_4385" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18502" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_19832" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(separator.length())" to="(separator.length() &gt;= 0 ? separator.length() * -1 : separator.length())" />
    <mutant id="mutant_3053" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,java.lang.String[])" from="HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE" to="(HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE &gt;= 0 ? HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE * -1 : HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE)" />
    <mutant id="mutant_4384" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3052" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,java.lang.String[])" from="HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE" to="(HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE &gt;= 0 ? HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE : HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE * -1)" />
    <mutant id="mutant_4383" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18519" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_3051" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,java.lang.String[])" from="HashCodeBuilder.DEFAULT_INITIAL_VALUE" to="(HashCodeBuilder.DEFAULT_INITIAL_VALUE &gt;= 0 ? HashCodeBuilder.DEFAULT_INITIAL_VALUE * -1 : HashCodeBuilder.DEFAULT_INITIAL_VALUE)" />
    <mutant id="mutant_4382" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18518" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_3050" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,java.lang.String[])" from="HashCodeBuilder.DEFAULT_INITIAL_VALUE" to="(HashCodeBuilder.DEFAULT_INITIAL_VALUE &gt;= 0 ? HashCodeBuilder.DEFAULT_INITIAL_VALUE : HashCodeBuilder.DEFAULT_INITIAL_VALUE * -1)" />
    <mutant id="mutant_4381" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT)" to="desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT) &gt;= 0 ? desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT) : desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT) * -1" />
    <mutant id="mutant_18517" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_4380" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.getFormat(java.lang.String)" from="desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT)" to="desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT) &gt;= 0 ? desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT) * -1 : desc.indexOf(org.apache.commons.lang3.text.ExtendedMessageFormat.START_FMT)" />
    <mutant id="mutant_19848" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(separator.length())" to="(separator.length() &gt;= 0 ? separator.length() * -1 : separator.length())" />
    <mutant id="mutant_19849" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="str.indexOf(separator)" to="str.indexOf(separator) &gt;= 0 ? str.indexOf(separator) * -1 : str.indexOf(separator)" />
    <mutant id="mutant_18512" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_19844" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(separator.length())" to="(separator.length() &gt;= 0 ? separator.length() * -1 : separator.length())" />
    <mutant id="mutant_3049" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,boolean)" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, testTransients, null)" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, testTransients, null) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, testTransients, null) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, testTransients, null) * -1" />
    <mutant id="mutant_18511" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19845" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3048" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,boolean)" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, testTransients, null)" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, testTransients, null) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, testTransients, null) * -1 : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_INITIAL_VALUE, org.apache.commons.lang3.builder.HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE, object, testTransients, null)" />
    <mutant id="mutant_4379" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18510" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19846" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3047" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,boolean)" from="HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE" to="(HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE &gt;= 0 ? HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE * -1 : HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE)" />
    <mutant id="mutant_4378" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19847" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(separator.length())" to="(separator.length() &gt;= 0 ? separator.length() : separator.length() * -1)" />
    <mutant id="mutant_3046" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,boolean)" from="HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE" to="(HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE &gt;= 0 ? HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE : HashCodeBuilder.DEFAULT_MULTIPLIER_VALUE * -1)" />
    <mutant id="mutant_4377" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="lastHold" to="(lastHold &gt;= 0 ? lastHold * -1 : lastHold)" />
    <mutant id="mutant_18516" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_19840" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3045" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,boolean)" from="HashCodeBuilder.DEFAULT_INITIAL_VALUE" to="(HashCodeBuilder.DEFAULT_INITIAL_VALUE &gt;= 0 ? HashCodeBuilder.DEFAULT_INITIAL_VALUE * -1 : HashCodeBuilder.DEFAULT_INITIAL_VALUE)" />
    <mutant id="mutant_4376" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="lastHold" to="(lastHold &gt;= 0 ? lastHold : lastHold * -1)" />
    <mutant id="mutant_18515" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_19841" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_3044" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(java.lang.Object,boolean)" from="HashCodeBuilder.DEFAULT_INITIAL_VALUE" to="(HashCodeBuilder.DEFAULT_INITIAL_VALUE &gt;= 0 ? HashCodeBuilder.DEFAULT_INITIAL_VALUE : HashCodeBuilder.DEFAULT_INITIAL_VALUE * -1)" />
    <mutant id="mutant_4375" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_18514" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_19842" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_3043" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object,boolean)" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null)" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null) * -1 : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null)" />
    <mutant id="mutant_4374" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_18513" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_19843" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfterLast(java.lang.String,java.lang.String)" from="(separator.length())" to="(separator.length() &gt;= 0 ? separator.length() : separator.length() * -1)" />
    <mutant id="mutant_3042" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object,boolean)" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null)" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, testTransients, null) * -1" />
    <mutant id="mutant_4373" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="lastHold" to="(lastHold &gt;= 0 ? lastHold * -1 : lastHold)" />
    <mutant id="mutant_19819" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_3041" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object,boolean)" from="multiplierNonZeroOddNumber" to="(multiplierNonZeroOddNumber &gt;= 0 ? multiplierNonZeroOddNumber : multiplierNonZeroOddNumber * -1)" />
    <mutant id="mutant_4372" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="lastHold" to="(lastHold &gt;= 0 ? lastHold : lastHold * -1)" />
    <mutant id="mutant_3040" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object,boolean)" from="multiplierNonZeroOddNumber" to="(multiplierNonZeroOddNumber &gt;= 0 ? multiplierNonZeroOddNumber * -1 : multiplierNonZeroOddNumber)" />
    <mutant id="mutant_4371" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_4370" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_19815" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19816" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_19817" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_19818" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_3039" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object,boolean)" from="initialNonZeroOddNumber" to="(initialNonZeroOddNumber &gt;= 0 ? initialNonZeroOddNumber * -1 : initialNonZeroOddNumber)" />
    <mutant id="mutant_19811" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_3038" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object,boolean)" from="initialNonZeroOddNumber" to="(initialNonZeroOddNumber &gt;= 0 ? initialNonZeroOddNumber : initialNonZeroOddNumber * -1)" />
    <mutant id="mutant_4369" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19812" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_3037" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object)" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null)" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null) * -1 : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null)" />
    <mutant id="mutant_4368" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19813" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_3036" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object)" from="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null)" to="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null) &gt;= 0 ? org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null) : org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(initialNonZeroOddNumber, multiplierNonZeroOddNumber, object, false, null) * -1" />
    <mutant id="mutant_4367" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_19814" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_3035" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object)" from="multiplierNonZeroOddNumber" to="(multiplierNonZeroOddNumber &gt;= 0 ? multiplierNonZeroOddNumber : multiplierNonZeroOddNumber * -1)" />
    <mutant id="mutant_4366" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_3034" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object)" from="multiplierNonZeroOddNumber" to="(multiplierNonZeroOddNumber &gt;= 0 ? multiplierNonZeroOddNumber * -1 : multiplierNonZeroOddNumber)" />
    <mutant id="mutant_4365" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3033" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object)" from="initialNonZeroOddNumber" to="(initialNonZeroOddNumber &gt;= 0 ? initialNonZeroOddNumber * -1 : initialNonZeroOddNumber)" />
    <mutant id="mutant_4364" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3032" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,java.lang.Object)" from="initialNonZeroOddNumber" to="(initialNonZeroOddNumber &gt;= 0 ? initialNonZeroOddNumber : initialNonZeroOddNumber * -1)" />
    <mutant id="mutant_4363" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1" />
    <mutant id="mutant_19810" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_5694" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5695" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5696" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5697" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5698" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_5699" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_5690" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5691" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5692" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_5693" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_3031" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.hashCode()" from="toHashCode()" to="toHashCode() &gt;= 0 ? toHashCode() : toHashCode() * -1" />
    <mutant id="mutant_4362" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex()" />
    <mutant id="mutant_3030" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.hashCode()" from="toHashCode()" to="toHashCode() &gt;= 0 ? toHashCode() * -1 : toHashCode()" />
    <mutant id="mutant_4361" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_4360" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_19826" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_19827" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_19828" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_19829" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3028" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,java.lang.Class,java.lang.String[])" from="builder.toHashCode()" to="builder.toHashCode() &gt;= 0 ? builder.toHashCode() * -1 : builder.toHashCode()" />
    <mutant id="mutant_4359" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1" />
    <mutant id="mutant_19822" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_3027" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,java.lang.Class,java.lang.String[])" from="multiplierNonZeroOddNumber" to="(multiplierNonZeroOddNumber &gt;= 0 ? multiplierNonZeroOddNumber : multiplierNonZeroOddNumber * -1)" />
    <mutant id="mutant_4358" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex()" />
    <mutant id="mutant_19823" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="str.indexOf(separator)" to="str.indexOf(separator) &gt;= 0 ? str.indexOf(separator) * -1 : str.indexOf(separator)" />
    <mutant id="mutant_3026" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,java.lang.Class,java.lang.String[])" from="multiplierNonZeroOddNumber" to="(multiplierNonZeroOddNumber &gt;= 0 ? multiplierNonZeroOddNumber * -1 : multiplierNonZeroOddNumber)" />
    <mutant id="mutant_4357" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_19824" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="str.indexOf(separator)" to="str.indexOf(separator) &gt;= 0 ? str.indexOf(separator) : str.indexOf(separator) * -1" />
    <mutant id="mutant_3025" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,java.lang.Class,java.lang.String[])" from="initialNonZeroOddNumber" to="(initialNonZeroOddNumber &gt;= 0 ? initialNonZeroOddNumber * -1 : initialNonZeroOddNumber)" />
    <mutant id="mutant_4356" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.appendQuotedString(java.lang.String,java.text.ParsePosition,java.lang.StringBuilder)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_19825" viable="true" in="org.apache.commons.lang3.StringUtils.substringAfter(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3024" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,java.lang.Class,java.lang.String[])" from="initialNonZeroOddNumber" to="(initialNonZeroOddNumber &gt;= 0 ? initialNonZeroOddNumber : initialNonZeroOddNumber * -1)" />
    <mutant id="mutant_4355" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_3023" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="initialOddNumber" to="initialOddNumber &gt;= 0 ? initialOddNumber : initialOddNumber * -1" />
    <mutant id="mutant_4354" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_3022" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="initialOddNumber" to="initialOddNumber &gt;= 0 ? initialOddNumber * -1 : initialOddNumber" />
    <mutant id="mutant_4353" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_19820" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_3021" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder(int,int)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4352" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.parseFormatDescription(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_19821" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_5683" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_5684" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_5685" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_5686" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5687" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5688" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_5689" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_3029" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionHashCode(int,int,T,boolean,java.lang.Class,java.lang.String[])" from="builder.toHashCode()" to="builder.toHashCode() &gt;= 0 ? builder.toHashCode() : builder.toHashCode() * -1" />
    <mutant id="mutant_17219" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17214" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_18545" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_19877" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.indexOf(close, (start + (open.length())))" to="str.indexOf(close, (start + (open.length()))) &gt;= 0 ? str.indexOf(close, (start + (open.length()))) * -1 : str.indexOf(close, (start + (open.length())))" />
    <mutant id="mutant_17213" viable="false" in="?" from="8192" to="-1 * 8192" />
    <mutant id="mutant_18544" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="targetSting" to="(targetSting &gt;= 0 ? targetSting : targetSting * -1)" />
    <mutant id="mutant_19878" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.indexOf(close, (start + (open.length())))" to="str.indexOf(close, (start + (open.length()))) &gt;= 0 ? str.indexOf(close, (start + (open.length()))) : str.indexOf(close, (start + (open.length()))) * -1" />
    <mutant id="mutant_17212" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18543" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="targetSting" to="(targetSting &gt;= 0 ? targetSting * -1 : targetSting)" />
    <mutant id="mutant_19879" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_17211" viable="false" in="?" from="159" to="(-1 * 159)" />
    <mutant id="mutant_18542" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_17218" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,int)" from="(CharSequenceUtils.indexOf(seq, searchChar, 0))" to="(CharSequenceUtils.indexOf(seq, searchChar, 0) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchChar, 0) * -1 : CharSequenceUtils.indexOf(seq, searchChar, 0))" />
    <mutant id="mutant_18549" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="startOffset" to="(startOffset &gt;= 0 ? startOffset * -1 : startOffset)" />
    <mutant id="mutant_19873" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_17217" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,int)" from="(CharSequenceUtils.indexOf(seq, searchChar, 0))" to="(CharSequenceUtils.indexOf(seq, searchChar, 0) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchChar, 0) : CharSequenceUtils.indexOf(seq, searchChar, 0) * -1)" />
    <mutant id="mutant_18548" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19874" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_3099" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_17216" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18547" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_19875" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(open.length())" to="(open.length() &gt;= 0 ? open.length() : open.length() * -1)" />
    <mutant id="mutant_3098" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_17215" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_18546" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_19876" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(open.length())" to="(open.length() &gt;= 0 ? open.length() * -1 : open.length())" />
    <mutant id="mutant_19870" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19871" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_19872" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_17210" viable="false" in="?" from="134" to="(-1 * 134)" />
    <mutant id="mutant_18541" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_18540" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_3097" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_3096" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_3095" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_3094" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_3093" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_3092" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_3091" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_3090" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_17225" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_18556" viable="false" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_19888" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_17224" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_18555" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19889" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_17223" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18554" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(suffixes.length)" to="(suffixes.length &gt;= 0 ? suffixes.length : suffixes.length * -1)" />
    <mutant id="mutant_17222" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,java.lang.CharSequence)" from="(CharSequenceUtils.indexOf(seq, searchSeq, 0))" to="(CharSequenceUtils.indexOf(seq, searchSeq, 0) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchSeq, 0) * -1 : CharSequenceUtils.indexOf(seq, searchSeq, 0))" />
    <mutant id="mutant_18553" viable="true" in="org.apache.commons.lang3.StringUtils.appendIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(suffixes.length)" to="(suffixes.length &gt;= 0 ? suffixes.length * -1 : suffixes.length)" />
    <mutant id="mutant_17229" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength" to="(csLength &gt;= 0 ? csLength * -1 : csLength)" />
    <mutant id="mutant_19884" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_3089" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_17228" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength" to="(csLength &gt;= 0 ? csLength : csLength * -1)" />
    <mutant id="mutant_18559" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_19885" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(open.length())" to="(open.length() &gt;= 0 ? open.length() : open.length() * -1)" />
    <mutant id="mutant_3088" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_17227" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchChars.length" to="searchChars.length &gt;= 0 ? searchChars.length : searchChars.length * -1" />
    <mutant id="mutant_18558" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_19886" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(open.length())" to="(open.length() &gt;= 0 ? open.length() * -1 : open.length())" />
    <mutant id="mutant_3087" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_17226" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchChars.length" to="searchChars.length &gt;= 0 ? searchChars.length * -1 : searchChars.length" />
    <mutant id="mutant_18557" viable="false" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_19887" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19880" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19881" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_19882" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_19883" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_17221" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,java.lang.CharSequence)" from="(CharSequenceUtils.indexOf(seq, searchSeq, 0))" to="(CharSequenceUtils.indexOf(seq, searchSeq, 0) &gt;= 0 ? CharSequenceUtils.indexOf(seq, searchSeq, 0) : CharSequenceUtils.indexOf(seq, searchSeq, 0) * -1)" />
    <mutant id="mutant_18552" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="endOffset" to="(endOffset &gt;= 0 ? endOffset * -1 : endOffset)" />
    <mutant id="mutant_17220" viable="true" in="org.apache.commons.lang3.StringUtils.contains(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18551" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="endOffset" to="(endOffset &gt;= 0 ? endOffset : endOffset * -1)" />
    <mutant id="mutant_18550" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="startOffset" to="(startOffset &gt;= 0 ? startOffset : startOffset * -1)" />
    <mutant id="mutant_3086" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_3085" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_3084" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_18529" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(middle.length())" to="(middle.length() &gt;= 0 ? middle.length() * -1 : middle.length())" />
    <mutant id="mutant_3083" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_18528" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(middle.length())" to="(middle.length() &gt;= 0 ? middle.length() : middle.length() * -1)" />
    <mutant id="mutant_3082" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_19859" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="str.lastIndexOf(separator)" to="str.lastIndexOf(separator) &gt;= 0 ? str.lastIndexOf(separator) : str.lastIndexOf(separator) * -1" />
    <mutant id="mutant_3081" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_3080" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_18523" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_19855" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18522" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_19856" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_18521" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_19857" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_18520" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_19858" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="str.lastIndexOf(separator)" to="str.lastIndexOf(separator) &gt;= 0 ? str.lastIndexOf(separator) * -1 : str.lastIndexOf(separator)" />
    <mutant id="mutant_3079" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_18527" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_19851" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3078" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(byte)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_18526" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_19852" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3077" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_18525" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19853" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_3076" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_18524" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19854" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_19850" viable="true" in="org.apache.commons.lang3.StringUtils.substringBefore(java.lang.String,java.lang.String)" from="str.indexOf(separator)" to="str.indexOf(separator) &gt;= 0 ? str.indexOf(separator) : str.indexOf(separator) * -1" />
    <mutant id="mutant_3075" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_3074" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_3073" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_17209" viable="false" in="?" from="132" to="(-1 * 132)" />
    <mutant id="mutant_3072" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_17208" viable="false" in="?" from="127" to="(-1 * 127)" />
    <mutant id="mutant_18539" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="targetSting" to="(targetSting &gt;= 0 ? targetSting : targetSting * -1)" />
    <mutant id="mutant_3071" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_3070" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_17203" viable="false" in="?" from="159" to="(-1 * 159)" />
    <mutant id="mutant_18534" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(middle.length())" to="(middle.length() &gt;= 0 ? middle.length() * -1 : middle.length())" />
    <mutant id="mutant_19866" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_17202" viable="false" in="?" from="134" to="(-1 * 134)" />
    <mutant id="mutant_18533" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="(middle.length())" to="(middle.length() &gt;= 0 ? middle.length() : middle.length() * -1)" />
    <mutant id="mutant_19867" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.indexOf(open)" to="str.indexOf(open) &gt;= 0 ? str.indexOf(open) * -1 : str.indexOf(open)" />
    <mutant id="mutant_17201" viable="false" in="?" from="132" to="(-1 * 132)" />
    <mutant id="mutant_18532" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_19868" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.indexOf(open)" to="str.indexOf(open) &gt;= 0 ? str.indexOf(open) : str.indexOf(open) * -1" />
    <mutant id="mutant_3069" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_17200" viable="false" in="?" from="127" to="(-1 * 127)" />
    <mutant id="mutant_18531" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_19869" viable="true" in="org.apache.commons.lang3.StringUtils.substringBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_3068" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4399" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_17207" viable="false" in="?" from="31" to="(-1 * 31)" />
    <mutant id="mutant_18538" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="targetSting" to="(targetSting &gt;= 0 ? targetSting * -1 : targetSting)" />
    <mutant id="mutant_19862" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_3067" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4398" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_17206" viable="false" in="?" from="14" to="(-1 * 14)" />
    <mutant id="mutant_18537" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_19863" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_3066" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4397" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_17205" viable="false" in="?" from="8" to="(-1 * 8)" />
    <mutant id="mutant_18536" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="targetSting" to="(targetSting &gt;= 0 ? targetSting : targetSting * -1)" />
    <mutant id="mutant_19864" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3065" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(boolean)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4396" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17204" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18535" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="targetSting" to="(targetSting &gt;= 0 ? targetSting * -1 : targetSting)" />
    <mutant id="mutant_19865" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_19860" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_19861" viable="true" in="org.apache.commons.lang3.StringUtils.substringBeforeLast(java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_18530" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviateMiddle(java.lang.String,java.lang.String,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_17258" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLast" to="(csLast &gt;= 0 ? csLast : csLast * -1)" />
    <mutant id="mutant_18589" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_17257" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18588" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_17256" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18587" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_17255" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLast" to="(searchLast &gt;= 0 ? searchLast : searchLast * -1)" />
    <mutant id="mutant_18586" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_17259" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLast" to="(csLast &gt;= 0 ? csLast * -1 : csLast)" />
    <mutant id="mutant_17250" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18581" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_18580" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_17254" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLast" to="(searchLast &gt;= 0 ? searchLast * -1 : searchLast)" />
    <mutant id="mutant_18585" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_17253" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18584" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_17252" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18583" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_17251" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18582" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17269" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_17268" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_18599" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_17267" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="searchStr.length()" to="searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1" />
    <mutant id="mutant_18598" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_17266" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="searchStr.length()" to="searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length()" />
    <mutant id="mutant_18597" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_17261" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18592" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17260" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18591" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_18590" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_17265" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18596" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_17264" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18595" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_17263" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18594" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_17262" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18593" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_17236" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18567" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_19899" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17235" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18566" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_17234" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_18565" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17233" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18564" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19895" viable="false" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17239" viable="false" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19896" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17238" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength" to="(csLength &gt;= 0 ? csLength * -1 : csLength)" />
    <mutant id="mutant_18569" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_19897" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17237" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="csLength" to="(csLength &gt;= 0 ? csLength : csLength * -1)" />
    <mutant id="mutant_18568" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19898" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19891" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19892" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_19893" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_19894" viable="false" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17232" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength" to="(searchLength &gt;= 0 ? searchLength * -1 : searchLength)" />
    <mutant id="mutant_18563" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_17231" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength" to="(searchLength &gt;= 0 ? searchLength : searchLength * -1)" />
    <mutant id="mutant_18562" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_17230" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18561" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18560" viable="true" in="org.apache.commons.lang3.StringUtils.capitalize(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19890" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17247" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength" to="(searchLength &gt;= 0 ? searchLength * -1 : searchLength)" />
    <mutant id="mutant_18578" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_17246" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="searchLength" to="(searchLength &gt;= 0 ? searchLength : searchLength * -1)" />
    <mutant id="mutant_18577" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_17245" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18576" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_17244" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18575" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_17249" viable="false" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_17248" viable="false" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18579" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_18570" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_17243" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_18574" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_17242" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18573" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17241" viable="true" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18572" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_17240" viable="false" in="org.apache.commons.lang3.StringUtils.containsAny(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18571" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_17180" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17179" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17178" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_17173" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_17172" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Character.codePointCount(input, 0, input.length())" to="Character.codePointCount(input, 0, input.length()) &gt;= 0 ? Character.codePointCount(input, 0, input.length()) : Character.codePointCount(input, 0, input.length()) * -1" />
    <mutant id="mutant_17171" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Character.codePointCount(input, 0, input.length())" to="Character.codePointCount(input, 0, input.length()) &gt;= 0 ? Character.codePointCount(input, 0, input.length()) * -1 : Character.codePointCount(input, 0, input.length())" />
    <mutant id="mutant_17170" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_17177" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_17176" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17175" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17174" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_17191" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_17190" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_17189" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17184" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Character.codePointCount(input, 0, input.length())" to="Character.codePointCount(input, 0, input.length()) &gt;= 0 ? Character.codePointCount(input, 0, input.length()) : Character.codePointCount(input, 0, input.length()) * -1" />
    <mutant id="mutant_17183" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Character.codePointCount(input, 0, input.length())" to="Character.codePointCount(input, 0, input.length()) &gt;= 0 ? Character.codePointCount(input, 0, input.length()) * -1 : Character.codePointCount(input, 0, input.length())" />
    <mutant id="mutant_17182" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_17181" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_17188" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17187" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_17186" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_17185" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17159" viable="false" in="org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)" from="long.class" to="(long.class &gt;= 0 ? long.class * -1 : long.class)" />
    <mutant id="mutant_17158" viable="false" in="org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)" from="long.class" to="(long.class &gt;= 0 ? long.class : long.class * -1)" />
    <mutant id="mutant_18489" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_17157" viable="false" in="org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)" from="int.class" to="(int.class &gt;= 0 ? int.class * -1 : int.class)" />
    <mutant id="mutant_18488" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_17156" viable="false" in="org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)" from="int.class" to="(int.class &gt;= 0 ? int.class : int.class * -1)" />
    <mutant id="mutant_18487" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_17151" viable="true" in="org.apache.commons.lang3.Range.intersectionWith(org.apache.commons.lang3.Range)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18482" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_17150" viable="true" in="org.apache.commons.lang3.Range.intersectionWith(org.apache.commons.lang3.Range)" from="(getComparator().compare(minimum, other.minimum))" to="(getComparator().compare(minimum, other.minimum) &gt;= 0 ? getComparator().compare(minimum, other.minimum) : getComparator().compare(minimum, other.minimum) * -1)" />
    <mutant id="mutant_18481" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_18480" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_17155" viable="false" in="?" from="4029025366392702726L" to="-1 * 4029025366392702726L" />
    <mutant id="mutant_18486" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_17154" viable="true" in="org.apache.commons.lang3.Range.intersectionWith(org.apache.commons.lang3.Range)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18485" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_17153" viable="true" in="org.apache.commons.lang3.Range.intersectionWith(org.apache.commons.lang3.Range)" from="(getComparator().compare(maximum, other.maximum))" to="(getComparator().compare(maximum, other.maximum) &gt;= 0 ? getComparator().compare(maximum, other.maximum) * -1 : getComparator().compare(maximum, other.maximum))" />
    <mutant id="mutant_18484" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_17152" viable="true" in="org.apache.commons.lang3.Range.intersectionWith(org.apache.commons.lang3.Range)" from="(getComparator().compare(maximum, other.maximum))" to="(getComparator().compare(maximum, other.maximum) &gt;= 0 ? getComparator().compare(maximum, other.maximum) : getComparator().compare(maximum, other.maximum) * -1)" />
    <mutant id="mutant_18483" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_17169" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_17168" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18499" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_17167" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18498" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17162" viable="false" in="org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)" from="double.class" to="(double.class &gt;= 0 ? double.class : double.class * -1)" />
    <mutant id="mutant_18493" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_17161" viable="false" in="org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)" from="float.class" to="(float.class &gt;= 0 ? float.class * -1 : float.class)" />
    <mutant id="mutant_18492" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_17160" viable="false" in="org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)" from="float.class" to="(float.class &gt;= 0 ? float.class : float.class * -1)" />
    <mutant id="mutant_18491" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_18490" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_17166" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_18497" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_17165" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvEscaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_18496" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_17164" viable="true" in="org.apache.commons.lang3.SerializationUtils.serialize(java.io.Serializable)" from="512" to="(-1 * 512)" />
    <mutant id="mutant_18495" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_17163" viable="false" in="org.apache.commons.lang3.SerializationUtils$ClassLoaderAwareObjectInputStream(java.io.InputStream,java.lang.ClassLoader)" from="double.class" to="(double.class &gt;= 0 ? double.class * -1 : double.class)" />
    <mutant id="mutant_18494" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_17195" viable="false" in="?" from="127" to="(-1 * 127)" />
    <mutant id="mutant_17194" viable="false" in="?" from="32" to="(-1 * 32)" />
    <mutant id="mutant_17193" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Character.codePointCount(input, 0, input.length())" to="Character.codePointCount(input, 0, input.length()) &gt;= 0 ? Character.codePointCount(input, 0, input.length()) : Character.codePointCount(input, 0, input.length()) * -1" />
    <mutant id="mutant_17192" viable="true" in="org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Character.codePointCount(input, 0, input.length())" to="Character.codePointCount(input, 0, input.length()) &gt;= 0 ? Character.codePointCount(input, 0, input.length()) * -1 : Character.codePointCount(input, 0, input.length())" />
    <mutant id="mutant_17199" viable="false" in="?" from="127" to="(-1 * 127)" />
    <mutant id="mutant_17198" viable="false" in="?" from="32" to="(-1 * 32)" />
    <mutant id="mutant_17197" viable="false" in="?" from="127" to="(-1 * 127)" />
    <mutant id="mutant_17196" viable="false" in="?" from="32" to="(-1 * 32)" />
    <mutant id="mutant_5713" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_5714" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5715" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5716" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5717" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_5718" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_5719" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_5710" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5711" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5712" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5702" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5703" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5704" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_5705" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_5706" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5707" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5708" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5709" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5700" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5701" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_503" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(denom2))" to="(((double)(denom2)) &gt;= 0 ? ((double)(denom2)) : ((double)(denom2)) * -1)" />
    <mutant id="mutant_504" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta2" to="delta2 &gt;= 0 ? delta2 * -1 : delta2" />
    <mutant id="mutant_505" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta2" to="delta2 &gt;= 0 ? delta2 : delta2 * -1" />
    <mutant id="mutant_506" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="Math.abs((value - fraction))" to="value - fraction &gt;= 0 ? value - fraction * -1 : value - fraction" />
    <mutant id="mutant_500" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2))" to="(((double)(numer2)) &gt;= 0 ? ((double)(numer2)) * -1 : ((double)(numer2)))" />
    <mutant id="mutant_501" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(numer2))" to="(((double)(numer2)) &gt;= 0 ? ((double)(numer2)) : ((double)(numer2)) * -1)" />
    <mutant id="mutant_502" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((double)(denom2))" to="(((double)(denom2)) &gt;= 0 ? ((double)(denom2)) * -1 : ((double)(denom2)))" />
    <mutant id="mutant_507" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="Math.abs((value - fraction))" to="value - fraction" />
    <mutant id="mutant_508" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a1" to="a1 &gt;= 0 ? a1 : a1 * -1" />
    <mutant id="mutant_509" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a1" to="a1 &gt;= 0 ? a1 * -1 : a1" />
    <mutant id="mutant_514" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x2" to="x2 &gt;= 0 ? x2 * -1 : x2" />
    <mutant id="mutant_515" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x2" to="x2 &gt;= 0 ? x2 : x2 * -1" />
    <mutant id="mutant_516" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y1" to="y1 &gt;= 0 ? y1 : y1 * -1" />
    <mutant id="mutant_517" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y1" to="y1 &gt;= 0 ? y1 * -1 : y1" />
    <mutant id="mutant_510" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a2" to="a2 &gt;= 0 ? a2 * -1 : a2" />
    <mutant id="mutant_511" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a2" to="a2 &gt;= 0 ? a2 : a2 * -1" />
    <mutant id="mutant_512" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1" to="x1 &gt;= 0 ? x1 * -1 : x1" />
    <mutant id="mutant_513" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1" to="x1 &gt;= 0 ? x1 : x1 * -1" />
    <mutant id="mutant_518" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y2" to="y2 &gt;= 0 ? y2 : y2 * -1" />
    <mutant id="mutant_519" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y2" to="y2 &gt;= 0 ? y2 * -1 : y2" />
    <mutant id="mutant_525" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom0" to="denom0 &gt;= 0 ? denom0 : denom0 * -1" />
    <mutant id="mutant_526" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom1" to="denom1 &gt;= 0 ? denom1 : denom1 * -1" />
    <mutant id="mutant_527" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom1" to="denom1 &gt;= 0 ? denom1 * -1 : denom1" />
    <mutant id="mutant_528" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer1" to="numer1 &gt;= 0 ? numer1 : numer1 * -1" />
    <mutant id="mutant_521" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer0" to="numer0 &gt;= 0 ? numer0 : numer0 * -1" />
    <mutant id="mutant_522" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer1" to="numer1 &gt;= 0 ? numer1 : numer1 * -1" />
    <mutant id="mutant_523" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer1" to="numer1 &gt;= 0 ? numer1 * -1 : numer1" />
    <mutant id="mutant_524" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom0" to="denom0 &gt;= 0 ? denom0 * -1 : denom0" />
    <mutant id="mutant_529" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer1" to="numer1 &gt;= 0 ? numer1 * -1 : numer1" />
    <mutant id="mutant_4425" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_5757" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_4424" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_5758" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_4423" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5759" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4422" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_4421" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="fmtCount" to="(fmtCount &gt;= 0 ? fmtCount * -1 : fmtCount)" />
    <mutant id="mutant_4420" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="fmtCount" to="(fmtCount &gt;= 0 ? fmtCount : fmtCount * -1)" />
    <mutant id="mutant_5750" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_5751" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_520" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer0" to="numer0 &gt;= 0 ? numer0 * -1 : numer0" />
    <mutant id="mutant_5752" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4429" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5753" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4428" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_5754" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_4427" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5755" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4426" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5756" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_536" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_537" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_538" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_539" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_532" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom1" to="denom1 &gt;= 0 ? denom1 : denom1 * -1" />
    <mutant id="mutant_533" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom1" to="denom1 &gt;= 0 ? denom1 * -1 : denom1" />
    <mutant id="mutant_534" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom2" to="denom2 &gt;= 0 ? denom2 * -1 : denom2" />
    <mutant id="mutant_535" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom2" to="denom2 &gt;= 0 ? denom2 : denom2 * -1" />
    <mutant id="mutant_4414" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(foundFormats.size())" to="(foundFormats.size() &gt;= 0 ? foundFormats.size() : foundFormats.size() * -1)" />
    <mutant id="mutant_5746" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_4413" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5747" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_4412" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5748" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_4411" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5749" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4410" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_530" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer2" to="numer2 &gt;= 0 ? numer2 * -1 : numer2" />
    <mutant id="mutant_5740" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_531" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer2" to="numer2 &gt;= 0 ? numer2 : numer2 * -1" />
    <mutant id="mutant_4419" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(foundDescriptions.size())" to="(foundDescriptions.size() &gt;= 0 ? foundDescriptions.size() * -1 : foundDescriptions.size())" />
    <mutant id="mutant_5741" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_4418" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(foundDescriptions.size())" to="(foundDescriptions.size() &gt;= 0 ? foundDescriptions.size() : foundDescriptions.size() * -1)" />
    <mutant id="mutant_5742" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_4417" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="fmtCount" to="(fmtCount &gt;= 0 ? fmtCount * -1 : fmtCount)" />
    <mutant id="mutant_5743" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4416" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="fmtCount" to="(fmtCount &gt;= 0 ? fmtCount : fmtCount * -1)" />
    <mutant id="mutant_5744" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4415" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(foundFormats.size())" to="(foundFormats.size() &gt;= 0 ? foundFormats.size() * -1 : foundFormats.size())" />
    <mutant id="mutant_5745" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_547" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="sign" to="(sign &gt;= 0 ? sign * -1 : sign)" />
    <mutant id="mutant_548" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="sign" to="(sign &gt;= 0 ? sign : sign * -1)" />
    <mutant id="mutant_549" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom0" to="(denom0 &gt;= 0 ? denom0 * -1 : denom0)" />
    <mutant id="mutant_543" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="wholeNumber" to="(wholeNumber &gt;= 0 ? wholeNumber : wholeNumber * -1)" />
    <mutant id="mutant_544" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="wholeNumber" to="(wholeNumber &gt;= 0 ? wholeNumber * -1 : wholeNumber)" />
    <mutant id="mutant_545" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom0" to="(denom0 &gt;= 0 ? denom0 * -1 : denom0)" />
    <mutant id="mutant_546" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom0" to="(denom0 &gt;= 0 ? denom0 : denom0 * -1)" />
    <mutant id="mutant_4403" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5735" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_4402" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5736" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_4401" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_5737" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_4400" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_5738" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5739" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_540" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="25" to="(-1 * 25)" />
    <mutant id="mutant_541" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer0" to="(numer0 &gt;= 0 ? numer0 * -1 : numer0)" />
    <mutant id="mutant_4409" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="readArgumentIndex(pattern, next(pos))" to="readArgumentIndex(pattern, next(pos)) &gt;= 0 ? readArgumentIndex(pattern, next(pos)) * -1 : readArgumentIndex(pattern, next(pos))" />
    <mutant id="mutant_542" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer0" to="(numer0 &gt;= 0 ? numer0 : numer0 * -1)" />
    <mutant id="mutant_4408" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="readArgumentIndex(pattern, next(pos))" to="readArgumentIndex(pattern, next(pos)) &gt;= 0 ? readArgumentIndex(pattern, next(pos)) : readArgumentIndex(pattern, next(pos)) * -1" />
    <mutant id="mutant_5730" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4407" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1" />
    <mutant id="mutant_5731" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4406" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex()" />
    <mutant id="mutant_5732" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_4405" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="fmtCount" to="(fmtCount &gt;= 0 ? fmtCount * -1 : fmtCount)" />
    <mutant id="mutant_5733" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_4404" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="fmtCount" to="(fmtCount &gt;= 0 ? fmtCount : fmtCount * -1)" />
    <mutant id="mutant_5734" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_558" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_559" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_554" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_555" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_556" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_557" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_5724" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(int,int,char)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_5725" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(int,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5726" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(int,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_5727" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5728" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_5729" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_550" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom0" to="(denom0 &gt;= 0 ? denom0 : denom0 * -1)" />
    <mutant id="mutant_551" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_552" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_553" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5720" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_5721" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="width &gt;= 0 ? width * -1 : width" />
    <mutant id="mutant_5722" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadLeft(java.lang.Object,int,char)" from="width" to="width &gt;= 0 ? width : width * -1" />
    <mutant id="mutant_5723" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(int,int,char)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_448" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta1" to="(delta1 &gt;= 0 ? delta1 * -1 : delta1)" />
    <mutant id="mutant_449" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta2" to="(delta2 &gt;= 0 ? delta2 * -1 : delta2)" />
    <mutant id="mutant_444" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="Double.MAX_VALUE" to="Double.MAX_VALUE &gt;= 0 ? Double.MAX_VALUE * -1 : Double.MAX_VALUE" />
    <mutant id="mutant_445" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="Double.MAX_VALUE" to="Double.MAX_VALUE &gt;= 0 ? Double.MAX_VALUE : Double.MAX_VALUE * -1" />
    <mutant id="mutant_6890" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_446" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="1" to="-1 * 1" />
    <mutant id="mutant_5560" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(buf.arrayOffset())" to="(buf.arrayOffset() &gt;= 0 ? buf.arrayOffset() : buf.arrayOffset() * -1)" />
    <mutant id="mutant_6891" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[])" from="source.length" to="(source.length &gt;= 0 ? source.length * -1 : source.length)" />
    <mutant id="mutant_447" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta1" to="(delta1 &gt;= 0 ? delta1 : delta1 * -1)" />
    <mutant id="mutant_5561" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(buf.position())" to="(buf.position() &gt;= 0 ? buf.position() * -1 : buf.position())" />
    <mutant id="mutant_6892" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[])" from="source.length" to="(source.length &gt;= 0 ? source.length : source.length * -1)" />
    <mutant id="mutant_4230" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19918" viable="true" in="org.apache.commons.lang3.StringUtils.split(java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19919" viable="true" in="org.apache.commons.lang3.StringUtils.split(java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_19914" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_19915" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_19916" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19917" viable="true" in="org.apache.commons.lang3.StringUtils.split(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4227" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5559" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(buf.arrayOffset())" to="(buf.arrayOffset() &gt;= 0 ? buf.arrayOffset() * -1 : buf.arrayOffset())" />
    <mutant id="mutant_19910" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_4226" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19911" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_4225" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19912" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4224" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19913" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4223" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_4222" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_4221" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_4220" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_440" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_5551" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="buf.remaining()" to="buf.remaining() &gt;= 0 ? buf.remaining() : buf.remaining() * -1" />
    <mutant id="mutant_6882" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen * -1 : endMatchLen" />
    <mutant id="mutant_441" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a1" to="(a1 &gt;= 0 ? a1 : a1 * -1)" />
    <mutant id="mutant_5552" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="buf.remaining()" to="buf.remaining() &gt;= 0 ? buf.remaining() * -1 : buf.remaining()" />
    <mutant id="mutant_6883" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen : endMatchLen * -1" />
    <mutant id="mutant_442" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a1" to="(a1 &gt;= 0 ? a1 * -1 : a1)" />
    <mutant id="mutant_5553" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6884" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="1" to="-1 * 1" />
    <mutant id="mutant_443" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="-1 * 0" />
    <mutant id="mutant_5554" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6885" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="-1 * 0" />
    <mutant id="mutant_5555" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6886" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="lengthChange" to="lengthChange &gt;= 0 ? lengthChange : lengthChange * -1" />
    <mutant id="mutant_5556" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6887" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="lengthChange" to="lengthChange &gt;= 0 ? lengthChange * -1 : lengthChange" />
    <mutant id="mutant_4229" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5557" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6888" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[])" from="source.length" to="(source.length &gt;= 0 ? source.length * -1 : source.length)" />
    <mutant id="mutant_4228" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5558" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6889" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[])" from="source.length" to="(source.length &gt;= 0 ? source.length : source.length * -1)" />
    <mutant id="mutant_459" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="25" to="(-1 * 25)" />
    <mutant id="mutant_455" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom2" to="(denom2 &gt;= 0 ? denom2 : denom2 * -1)" />
    <mutant id="mutant_456" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_457" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6880" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_458" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5550" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_6881" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_19929" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_19925" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="Character.getType(c[tokenStart])" to="Character.getType(c[tokenStart]) &gt;= 0 ? Character.getType(c[tokenStart]) * -1 : Character.getType(c[tokenStart])" />
    <mutant id="mutant_19926" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_19927" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_19928" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4216" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5548" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6879" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="nestedVarCount" to="(nestedVarCount &gt;= 0 ? nestedVarCount * -1 : nestedVarCount)" />
    <mutant id="mutant_19921" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_4215" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5549" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_19922" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_4214" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19923" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_4213" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19924" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="Character.getType(c[tokenStart])" to="Character.getType(c[tokenStart]) &gt;= 0 ? Character.getType(c[tokenStart]) : Character.getType(c[tokenStart]) * -1" />
    <mutant id="mutant_4212" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4211" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_4210" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19920" viable="true" in="org.apache.commons.lang3.StringUtils.split(java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_451" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom2" to="(denom2 &gt;= 0 ? denom2 * -1 : denom2)" />
    <mutant id="mutant_5540" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6871" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="lengthChange" to="lengthChange &gt;= 0 ? lengthChange : lengthChange * -1" />
    <mutant id="mutant_452" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom2" to="(denom2 &gt;= 0 ? denom2 : denom2 * -1)" />
    <mutant id="mutant_5541" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6872" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="lengthChange" to="lengthChange &gt;= 0 ? lengthChange * -1 : lengthChange" />
    <mutant id="mutant_453" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="10000" to="(-1 * 10000)" />
    <mutant id="mutant_5542" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6873" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="change &gt;= 0 ? change * -1 : change" />
    <mutant id="mutant_454" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom2" to="(denom2 &gt;= 0 ? denom2 * -1 : denom2)" />
    <mutant id="mutant_5543" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6874" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="change &gt;= 0 ? change : change * -1" />
    <mutant id="mutant_5544" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6875" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(priorVariables.size())" to="(priorVariables.size() &gt;= 0 ? priorVariables.size() : priorVariables.size() * -1)" />
    <mutant id="mutant_4219" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5545" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6876" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(priorVariables.size())" to="(priorVariables.size() &gt;= 0 ? priorVariables.size() * -1 : priorVariables.size())" />
    <mutant id="mutant_4218" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5546" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6877" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_450" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta2" to="(delta2 &gt;= 0 ? delta2 : delta2 * -1)" />
    <mutant id="mutant_4217" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5547" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6878" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="nestedVarCount" to="(nestedVarCount &gt;= 0 ? nestedVarCount : nestedVarCount * -1)" />
    <mutant id="mutant_466" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1" to="(x1 &gt;= 0 ? x1 * -1 : x1)" />
    <mutant id="mutant_467" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1" to="(x1 &gt;= 0 ? x1 : x1 * -1)" />
    <mutant id="mutant_468" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y1" to="(y1 &gt;= 0 ? y1 : y1 * -1)" />
    <mutant id="mutant_469" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y1" to="(y1 &gt;= 0 ? y1 * -1 : y1)" />
    <mutant id="mutant_6870" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="change &gt;= 0 ? change : change * -1" />
    <mutant id="mutant_4205" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5537" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6868" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="bufEnd &gt;= 0 ? bufEnd : bufEnd * -1" />
    <mutant id="mutant_4204" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5538" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6869" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="change &gt;= 0 ? change * -1 : change" />
    <mutant id="mutant_4203" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="2" to="-1 * 2" />
    <mutant id="mutant_5539" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4202" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4201" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_4200" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_462" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta2" to="delta2 &gt;= 0 ? delta2 * -1 : delta2" />
    <mutant id="mutant_6860" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endPos" to="(endPos &gt;= 0 ? endPos * -1 : endPos)" />
    <mutant id="mutant_463" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta2" to="delta2 &gt;= 0 ? delta2 : delta2 * -1" />
    <mutant id="mutant_5530" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6861" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_464" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a2" to="a2 &gt;= 0 ? a2 * -1 : a2" />
    <mutant id="mutant_5531" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6862" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_465" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a2" to="a2 &gt;= 0 ? a2 : a2 * -1" />
    <mutant id="mutant_5532" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6863" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_4209" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_5533" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6864" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_4208" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_5534" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6865" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="change &gt;= 0 ? change * -1 : change" />
    <mutant id="mutant_460" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta1" to="delta1 &gt;= 0 ? delta1 : delta1 * -1" />
    <mutant id="mutant_4207" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5535" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6866" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="change &gt;= 0 ? change : change * -1" />
    <mutant id="mutant_461" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="delta1" to="delta1 &gt;= 0 ? delta1 * -1 : delta1" />
    <mutant id="mutant_4206" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5536" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6867" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="bufEnd &gt;= 0 ? bufEnd * -1 : bufEnd" />
    <mutant id="mutant_477" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1" to="(x1 &gt;= 0 ? x1 : x1 * -1)" />
    <mutant id="mutant_478" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a2" to="(a2 &gt;= 0 ? a2 * -1 : a2)" />
    <mutant id="mutant_479" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a2" to="(a2 &gt;= 0 ? a2 : a2 * -1)" />
    <mutant id="mutant_19907" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_19908" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19909" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19903" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19904" viable="false" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_19905" viable="false" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_19906" viable="true" in="org.apache.commons.lang3.StringUtils.uncapitalize(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_5526" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6857" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="varLen" to="(varLen &gt;= 0 ? varLen : varLen * -1)" />
    <mutant id="mutant_5527" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6858" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="varLen" to="(varLen &gt;= 0 ? varLen * -1 : varLen)" />
    <mutant id="mutant_19900" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5528" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6859" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endPos" to="(endPos &gt;= 0 ? endPos : endPos * -1)" />
    <mutant id="mutant_19901" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5529" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19902" viable="true" in="org.apache.commons.lang3.StringUtils.swapCase(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_473" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y1" to="y1 &gt;= 0 ? y1 * -1 : y1" />
    <mutant id="mutant_474" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y2" to="y2 &gt;= 0 ? y2 : y2 * -1" />
    <mutant id="mutant_6850" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="varLen" to="(varLen &gt;= 0 ? varLen * -1 : varLen)" />
    <mutant id="mutant_475" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y2" to="y2 &gt;= 0 ? y2 * -1 : y2" />
    <mutant id="mutant_5520" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_6851" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="substitute(buf, startPos, varLen, priorVariables)" to="substitute(buf, startPos, varLen, priorVariables) &gt;= 0 ? substitute(buf, startPos, varLen, priorVariables) : substitute(buf, startPos, varLen, priorVariables) * -1" />
    <mutant id="mutant_476" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x1" to="(x1 &gt;= 0 ? x1 * -1 : x1)" />
    <mutant id="mutant_5521" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6852" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="substitute(buf, startPos, varLen, priorVariables)" to="substitute(buf, startPos, varLen, priorVariables) &gt;= 0 ? substitute(buf, startPos, varLen, priorVariables) * -1 : substitute(buf, startPos, varLen, priorVariables)" />
    <mutant id="mutant_5522" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6853" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="change &gt;= 0 ? change * -1 : change" />
    <mutant id="mutant_470" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x2" to="x2 &gt;= 0 ? x2 * -1 : x2" />
    <mutant id="mutant_5523" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6854" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="change &gt;= 0 ? change : change * -1" />
    <mutant id="mutant_471" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="x2" to="x2 &gt;= 0 ? x2 : x2 * -1" />
    <mutant id="mutant_5524" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6855" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="(change &gt;= 0 ? change * -1 : change)" />
    <mutant id="mutant_472" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y1" to="y1 &gt;= 0 ? y1 : y1 * -1" />
    <mutant id="mutant_5525" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6856" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="change" to="(change &gt;= 0 ? change : change * -1)" />
    <mutant id="mutant_488" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer0" to="(numer0 &gt;= 0 ? numer0 * -1 : numer0)" />
    <mutant id="mutant_489" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer0" to="(numer0 &gt;= 0 ? numer0 : numer0 * -1)" />
    <mutant id="mutant_4274" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_4273" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="(ObjectUtils.hashCode(registry))" to="(ObjectUtils.hashCode(registry) &gt;= 0 ? ObjectUtils.hashCode(registry) : ObjectUtils.hashCode(registry) * -1)" />
    <mutant id="mutant_18629" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_4272" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="(ObjectUtils.hashCode(registry))" to="(ObjectUtils.hashCode(registry) &gt;= 0 ? ObjectUtils.hashCode(registry) * -1 : ObjectUtils.hashCode(registry))" />
    <mutant id="mutant_18628" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_4271" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="(result &gt;= 0 ? result * -1 : result)" />
    <mutant id="mutant_18627" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_4270" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="(result &gt;= 0 ? result : result * -1)" />
    <mutant id="mutant_19958" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_19959" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_18622" viable="false" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_19954" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_18621" viable="false" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_19955" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_4269" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="(ExtendedMessageFormat.HASH_SEED)" to="(ExtendedMessageFormat.HASH_SEED &gt;= 0 ? ExtendedMessageFormat.HASH_SEED : ExtendedMessageFormat.HASH_SEED * -1)" />
    <mutant id="mutant_18620" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19956" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="newTokenStart" to="(newTokenStart &gt;= 0 ? newTokenStart * -1 : newTokenStart)" />
    <mutant id="mutant_4268" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="(ExtendedMessageFormat.HASH_SEED)" to="(ExtendedMessageFormat.HASH_SEED &gt;= 0 ? ExtendedMessageFormat.HASH_SEED * -1 : ExtendedMessageFormat.HASH_SEED)" />
    <mutant id="mutant_19957" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="newTokenStart" to="(newTokenStart &gt;= 0 ? newTokenStart : newTokenStart * -1)" />
    <mutant id="mutant_4267" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_18626" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_19950" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="newTokenStart" to="(newTokenStart &gt;= 0 ? newTokenStart * -1 : newTokenStart)" />
    <mutant id="mutant_4266" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_18625" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19951" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="newTokenStart" to="(newTokenStart &gt;= 0 ? newTokenStart : newTokenStart * -1)" />
    <mutant id="mutant_4265" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="super.hashCode()" to="super.hashCode() &gt;= 0 ? super.hashCode() * -1 : super.hashCode()" />
    <mutant id="mutant_18624" viable="false" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_19952" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_4264" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="super.hashCode()" to="super.hashCode() &gt;= 0 ? super.hashCode() : super.hashCode() * -1" />
    <mutant id="mutant_18623" viable="false" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_19953" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_484" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a1" to="(a1 &gt;= 0 ? a1 : a1 * -1)" />
    <mutant id="mutant_5595" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(buf.arrayOffset())" to="(buf.arrayOffset() &gt;= 0 ? buf.arrayOffset() * -1 : buf.arrayOffset())" />
    <mutant id="mutant_485" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a1" to="(a1 &gt;= 0 ? a1 * -1 : a1)" />
    <mutant id="mutant_5596" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(buf.arrayOffset())" to="(buf.arrayOffset() &gt;= 0 ? buf.arrayOffset() : buf.arrayOffset() * -1)" />
    <mutant id="mutant_486" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer1" to="(numer1 &gt;= 0 ? numer1 : numer1 * -1)" />
    <mutant id="mutant_5597" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(buf.position())" to="(buf.position() &gt;= 0 ? buf.position() * -1 : buf.position())" />
    <mutant id="mutant_487" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer1" to="(numer1 &gt;= 0 ? numer1 * -1 : numer1)" />
    <mutant id="mutant_5598" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="(buf.position())" to="(buf.position() &gt;= 0 ? buf.position() : buf.position() * -1)" />
    <mutant id="mutant_480" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y1" to="(y1 &gt;= 0 ? y1 : y1 * -1)" />
    <mutant id="mutant_5599" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_481" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="y1" to="(y1 &gt;= 0 ? y1 * -1 : y1)" />
    <mutant id="mutant_482" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer2" to="numer2 &gt;= 0 ? numer2 * -1 : numer2" />
    <mutant id="mutant_483" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="numer2" to="numer2 &gt;= 0 ? numer2 : numer2 * -1" />
    <mutant id="mutant_5590" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_499" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="fraction" to="fraction &gt;= 0 ? fraction * -1 : fraction" />
    <mutant id="mutant_5591" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5592" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5593" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5594" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_4263" viable="false" in="?" from="31" to="-1 * 31" />
    <mutant id="mutant_4262" viable="false" in="?" from="2362048321261811743L" to="(-1 * 2362048321261811743L)" />
    <mutant id="mutant_17309" viable="false" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_4261" viable="false" in="?" from="4329119827877627683L" to="(-1 * 4329119827877627683L)" />
    <mutant id="mutant_17308" viable="false" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18639" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_4260" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_17307" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_18638" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_19969" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_17302" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18633" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_19965" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_4259" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_17301" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18632" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_19966" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_4258" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_17300" viable="false" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18631" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_19967" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_490" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom2" to="denom2 &gt;= 0 ? denom2 * -1 : denom2" />
    <mutant id="mutant_4257" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnpairedSurrogateRemover.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_18630" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_19968" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_4256" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_17306" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_18637" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_19961" viable="false" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="tokenStart &gt;= 0 ? tokenStart : tokenStart * -1" />
    <mutant id="mutant_4255" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_17305" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18636" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19962" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="newTokenStart" to="newTokenStart &gt;= 0 ? newTokenStart * -1 : newTokenStart" />
    <mutant id="mutant_4254" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_17304" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18635" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19963" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="newTokenStart" to="newTokenStart &gt;= 0 ? newTokenStart : newTokenStart * -1" />
    <mutant id="mutant_4253" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_17303" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_18634" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_19964" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_495" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom1" to="(denom1 &gt;= 0 ? denom1 * -1 : denom1)" />
    <mutant id="mutant_5584" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_496" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom0" to="(denom0 &gt;= 0 ? denom0 * -1 : denom0)" />
    <mutant id="mutant_5585" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_497" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom0" to="(denom0 &gt;= 0 ? denom0 : denom0 * -1)" />
    <mutant id="mutant_5586" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_498" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="fraction" to="fraction &gt;= 0 ? fraction : fraction * -1" />
    <mutant id="mutant_5587" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="totalLength" to="(totalLength &gt;= 0 ? totalLength * -1 : totalLength)" />
    <mutant id="mutant_19960" viable="false" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart" />
    <mutant id="mutant_491" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom2" to="denom2 &gt;= 0 ? denom2 : denom2 * -1" />
    <mutant id="mutant_5588" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="totalLength" to="(totalLength &gt;= 0 ? totalLength : totalLength * -1)" />
    <mutant id="mutant_492" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a1" to="(a1 &gt;= 0 ? a1 : a1 * -1)" />
    <mutant id="mutant_5589" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_493" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="a1" to="(a1 &gt;= 0 ? a1 * -1 : a1)" />
    <mutant id="mutant_494" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="denom1" to="(denom1 &gt;= 0 ? denom1 : denom1 * -1)" />
    <mutant id="mutant_5580" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5581" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5582" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5583" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4252" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_18608" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4251" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_18607" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4250" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18606" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_18605" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_19936" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_19937" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="Character.getType(c[pos])" to="Character.getType(c[pos]) &gt;= 0 ? Character.getType(c[pos]) * -1 : Character.getType(c[pos])" />
    <mutant id="mutant_19938" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="Character.getType(c[pos])" to="Character.getType(c[pos]) &gt;= 0 ? Character.getType(c[pos]) : Character.getType(c[pos]) * -1" />
    <mutant id="mutant_18609" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19939" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="type" to="(type &gt;= 0 ? type * -1 : type)" />
    <mutant id="mutant_4249" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18600" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_19932" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(c.length)" to="(c.length &gt;= 0 ? c.length : c.length * -1)" />
    <mutant id="mutant_4248" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((char)(value))" to="(((char)(value)) &gt;= 0 ? ((char)(value)) * -1 : ((char)(value)))" />
    <mutant id="mutant_19933" viable="false" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_4247" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="((char)(value))" to="(((char)(value)) &gt;= 0 ? ((char)(value)) : ((char)(value)) * -1)" />
    <mutant id="mutant_19934" viable="false" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_4246" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Integer.parseInt(unicode.toString(), 16)" to="Integer.parseInt(unicode.toString(), 16) &gt;= 0 ? Integer.parseInt(unicode.toString(), 16) : Integer.parseInt(unicode.toString(), 16) * -1" />
    <mutant id="mutant_19935" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_4245" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Integer.parseInt(unicode.toString(), 16)" to="Integer.parseInt(unicode.toString(), 16) &gt;= 0 ? Integer.parseInt(unicode.toString(), 16) * -1 : Integer.parseInt(unicode.toString(), 16)" />
    <mutant id="mutant_18604" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_4244" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_18603" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_4243" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_18602" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_19930" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_4242" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18601" viable="true" in="org.apache.commons.lang3.StringUtils.center(java.lang.String,int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19931" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(c.length)" to="(c.length &gt;= 0 ? c.length * -1 : c.length)" />
    <mutant id="mutant_5573" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5574" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5575" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5576" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5577" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5578" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="totalLength" to="(totalLength &gt;= 0 ? totalLength * -1 : totalLength)" />
    <mutant id="mutant_5579" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="totalLength" to="(totalLength &gt;= 0 ? totalLength : totalLength * -1)" />
    <mutant id="mutant_5570" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_5571" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="buf.remaining()" to="buf.remaining() &gt;= 0 ? buf.remaining() : buf.remaining() * -1" />
    <mutant id="mutant_5572" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="buf.remaining()" to="buf.remaining() &gt;= 0 ? buf.remaining() * -1 : buf.remaining()" />
    <mutant id="mutant_4241" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18619" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_4240" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_18618" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_18617" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_18616" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_19947" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_19948" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_19949" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4238" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18611" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19943" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="type" to="(type &gt;= 0 ? type * -1 : type)" />
    <mutant id="mutant_4237" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18610" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19944" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="type" to="(type &gt;= 0 ? type : type * -1)" />
    <mutant id="mutant_4236" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_19945" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="currentType" to="(currentType &gt;= 0 ? currentType : currentType * -1)" />
    <mutant id="mutant_4235" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19946" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="currentType" to="(currentType &gt;= 0 ? currentType * -1 : currentType)" />
    <mutant id="mutant_4234" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_18615" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4233" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_18614" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19940" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="type" to="(type &gt;= 0 ? type : type * -1)" />
    <mutant id="mutant_4232" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_18613" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19941" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="currentType" to="(currentType &gt;= 0 ? currentType : currentType * -1)" />
    <mutant id="mutant_4231" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18612" viable="true" in="org.apache.commons.lang3.StringUtils.chomp(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19942" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="currentType" to="(currentType &gt;= 0 ? currentType * -1 : currentType)" />
    <mutant id="mutant_5562" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="(buf.position())" to="(buf.position() &gt;= 0 ? buf.position() : buf.position() * -1)" />
    <mutant id="mutant_6893" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5563" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6894" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5564" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6895" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5565" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6896" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5566" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6897" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5567" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6898" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5568" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6899" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4239" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5569" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_16009" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16003" viable="false" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17335" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_18666" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_19998" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_16004" viable="false" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17334" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_18665" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19999" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="separator.length()" to="separator.length() &gt;= 0 ? separator.length() : separator.length() * -1" />
    <mutant id="mutant_16001" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_17333" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid))" to="(org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid) * -1 : org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid))" />
    <mutant id="mutant_18664" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16002" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_17332" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid))" to="(org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid) : org.apache.commons.lang3.StringUtils.indexOfAnyBut(cs, valid) * -1)" />
    <mutant id="mutant_18663" viable="false" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_16007" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_17339" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19994" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_16008" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17338" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18669" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_19995" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_16005" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17337" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="seq.length()" to="seq.length() &gt;= 0 ? seq.length() : seq.length() * -1" />
    <mutant id="mutant_18668" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_19996" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16006" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17336" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="seq.length()" to="seq.length() &gt;= 0 ? seq.length() * -1 : seq.length()" />
    <mutant id="mutant_18667" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_19997" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_19990" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_19991" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_19992" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_19993" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_17331" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18662" viable="false" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_16000" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17330" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(valid.length)" to="(valid.length &gt;= 0 ? valid.length : valid.length * -1)" />
    <mutant id="mutant_18661" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18660" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16014" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17346" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18677" viable="true" in="org.apache.commons.lang3.StringUtils.difference(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_16015" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17345" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18676" viable="true" in="org.apache.commons.lang3.StringUtils.difference(java.lang.String,java.lang.String)" from="at" to="(at &gt;= 0 ? at : at * -1)" />
    <mutant id="mutant_16012" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_17344" viable="false" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18675" viable="true" in="org.apache.commons.lang3.StringUtils.difference(java.lang.String,java.lang.String)" from="at" to="(at &gt;= 0 ? at * -1 : at)" />
    <mutant id="mutant_16013" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17343" viable="false" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18674" viable="true" in="org.apache.commons.lang3.StringUtils.difference(java.lang.String,java.lang.String)" from="org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2)" to="org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2) * -1 : org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2)" />
    <mutant id="mutant_16018" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4299" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_16019" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append : append * -1)" />
    <mutant id="mutant_17349" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_4298" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="Integer.parseInt(result.toString())" to="Integer.parseInt(result.toString()) &gt;= 0 ? Integer.parseInt(result.toString()) : Integer.parseInt(result.toString()) * -1" />
    <mutant id="mutant_16016" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17348" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(suffix.length())" to="(suffix.length() &gt;= 0 ? suffix.length() : suffix.length() * -1)" />
    <mutant id="mutant_18679" viable="true" in="org.apache.commons.lang3.StringUtils.difference(java.lang.String,java.lang.String)" from="at" to="(at &gt;= 0 ? at * -1 : at)" />
    <mutant id="mutant_4297" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="Integer.parseInt(result.toString())" to="Integer.parseInt(result.toString()) &gt;= 0 ? Integer.parseInt(result.toString()) * -1 : Integer.parseInt(result.toString())" />
    <mutant id="mutant_16017" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17347" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(suffix.length())" to="(suffix.length() &gt;= 0 ? suffix.length() * -1 : suffix.length())" />
    <mutant id="mutant_18678" viable="true" in="org.apache.commons.lang3.StringUtils.difference(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_16010" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_17342" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_18673" viable="true" in="org.apache.commons.lang3.StringUtils.difference(java.lang.String,java.lang.String)" from="org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2)" to="org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2) : org.apache.commons.lang3.StringUtils.indexOfDifference(str1, str2) * -1" />
    <mutant id="mutant_16011" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_17341" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_18672" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_17340" viable="true" in="org.apache.commons.lang3.StringUtils.containsWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18671" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_18670" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4296" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4295" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(result.length())" to="(result.length() &gt;= 0 ? result.length() : result.length() * -1)" />
    <mutant id="mutant_4294" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(result.length())" to="(result.length() &gt;= 0 ? result.length() * -1 : result.length())" />
    <mutant id="mutant_17319" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLast" to="(csLast &gt;= 0 ? csLast * -1 : csLast)" />
    <mutant id="mutant_4293" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_17318" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLast" to="(csLast &gt;= 0 ? csLast : csLast * -1)" />
    <mutant id="mutant_18649" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_4292" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_4291" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_4290" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_17313" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18644" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19976" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="type" to="type &gt;= 0 ? type * -1 : type" />
    <mutant id="mutant_17312" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18643" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19977" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="type" to="type &gt;= 0 ? type : type * -1" />
    <mutant id="mutant_17311" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18642" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_19978" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_17310" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18641" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_19979" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_4289" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_17317" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18648" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_19972" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_4288" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_17316" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18647" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19973" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_4287" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_17315" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLast" to="(searchLast &gt;= 0 ? searchLast : searchLast * -1)" />
    <mutant id="mutant_18646" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_19974" viable="false" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="currentType" to="currentType &gt;= 0 ? currentType : currentType * -1" />
    <mutant id="mutant_4286" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_17314" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLast" to="(searchLast &gt;= 0 ? searchLast * -1 : searchLast)" />
    <mutant id="mutant_18645" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx * -1 : lastIdx)" />
    <mutant id="mutant_19975" viable="false" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="currentType" to="currentType &gt;= 0 ? currentType * -1 : currentType" />
    <mutant id="mutant_19970" viable="false" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart" />
    <mutant id="mutant_19971" viable="false" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="tokenStart &gt;= 0 ? tokenStart : tokenStart * -1" />
    <mutant id="mutant_18640" viable="true" in="org.apache.commons.lang3.StringUtils.chop(java.lang.String)" from="lastIdx" to="(lastIdx &gt;= 0 ? lastIdx : lastIdx * -1)" />
    <mutant id="mutant_4285" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1" />
    <mutant id="mutant_4284" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex()" />
    <mutant id="mutant_4283" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_4282" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_17329" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(valid.length)" to="(valid.length &gt;= 0 ? valid.length * -1 : valid.length)" />
    <mutant id="mutant_4281" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="(ObjectUtils.hashCode(toPattern))" to="(ObjectUtils.hashCode(toPattern) &gt;= 0 ? ObjectUtils.hashCode(toPattern) * -1 : ObjectUtils.hashCode(toPattern))" />
    <mutant id="mutant_4280" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="(ObjectUtils.hashCode(toPattern))" to="(ObjectUtils.hashCode(toPattern) &gt;= 0 ? ObjectUtils.hashCode(toPattern) : ObjectUtils.hashCode(toPattern) * -1)" />
    <mutant id="mutant_17324" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18655" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19987" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparator(java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_17323" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18654" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19988" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparator(java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_17322" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18653" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_19989" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorPreserveAllTokens(java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4279" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="(result &gt;= 0 ? result * -1 : result)" />
    <mutant id="mutant_17321" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18652" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_4278" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="(result &gt;= 0 ? result : result * -1)" />
    <mutant id="mutant_17328" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18659" viable="false" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19983" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart : tokenStart * -1)" />
    <mutant id="mutant_4277" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="(ExtendedMessageFormat.HASH_SEED)" to="(ExtendedMessageFormat.HASH_SEED &gt;= 0 ? ExtendedMessageFormat.HASH_SEED : ExtendedMessageFormat.HASH_SEED * -1)" />
    <mutant id="mutant_17327" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(cs.length())" to="(cs.length() &gt;= 0 ? cs.length() : cs.length() * -1)" />
    <mutant id="mutant_18658" viable="false" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19984" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="list.size()" to="list.size() &gt;= 0 ? list.size() : list.size() * -1" />
    <mutant id="mutant_4276" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="(ExtendedMessageFormat.HASH_SEED)" to="(ExtendedMessageFormat.HASH_SEED &gt;= 0 ? ExtendedMessageFormat.HASH_SEED * -1 : ExtendedMessageFormat.HASH_SEED)" />
    <mutant id="mutant_17326" viable="true" in="org.apache.commons.lang3.StringUtils.containsOnly(java.lang.CharSequence,char[])" from="(cs.length())" to="(cs.length() &gt;= 0 ? cs.length() * -1 : cs.length())" />
    <mutant id="mutant_18657" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_19985" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="list.size()" to="list.size() &gt;= 0 ? list.size() * -1 : list.size()" />
    <mutant id="mutant_4275" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_17325" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18656" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_19986" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparator(java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19980" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(c.length)" to="(c.length &gt;= 0 ? c.length * -1 : c.length)" />
    <mutant id="mutant_19981" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="(c.length)" to="(c.length &gt;= 0 ? c.length : c.length * -1)" />
    <mutant id="mutant_19982" viable="true" in="org.apache.commons.lang3.StringUtils.splitByCharacterType(java.lang.String,boolean)" from="tokenStart" to="(tokenStart &gt;= 0 ? tokenStart * -1 : tokenStart)" />
    <mutant id="mutant_17320" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18651" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="sz" to="sz &gt;= 0 ? sz * -1 : sz" />
    <mutant id="mutant_18650" viable="true" in="org.apache.commons.lang3.StringUtils.deleteWhitespace(java.lang.String)" from="sz" to="sz &gt;= 0 ? sz : sz * -1" />
    <mutant id="mutant_16047" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_17379" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16048" viable="false" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17378" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_16045" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17377" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_16046" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_17376" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_16049" viable="false" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17371" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str2.length())" to="(str2.length() &gt;= 0 ? str2.length() : str2.length() * -1)" />
    <mutant id="mutant_16040" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_17370" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str2.length())" to="(str2.length() &gt;= 0 ? str2.length() * -1 : str2.length())" />
    <mutant id="mutant_16043" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17375" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="str1.length()" to="(str1.length() &gt;= 0 ? str1.length() : str1.length() * -1)" />
    <mutant id="mutant_16044" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17374" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="str1.length()" to="(str1.length() &gt;= 0 ? str1.length() * -1 : str1.length())" />
    <mutant id="mutant_16041" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="sb.length()" to="sb.length() &gt;= 0 ? sb.length() * -1 : sb.length()" />
    <mutant id="mutant_17373" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16042" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="sb.length()" to="sb.length() &gt;= 0 ? sb.length() : sb.length() * -1" />
    <mutant id="mutant_17372" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16058" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16059" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17389" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_16056" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="src" to="(src &gt;= 0 ? src : src * -1)" />
    <mutant id="mutant_17388" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_16057" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="src" to="(src &gt;= 0 ? src * -1 : src)" />
    <mutant id="mutant_17387" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_16050" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17382" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_16051" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17381" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_17380" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16054" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17386" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16055" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_17385" viable="true" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16052" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_17384" viable="false" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16053" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17383" viable="false" in="org.apache.commons.lang3.StringUtils.isAllLowerCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16025" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17357" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18688" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_16026" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17356" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="strOffset" to="(strOffset &gt;= 0 ? strOffset : strOffset * -1)" />
    <mutant id="mutant_18687" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="smallestIndexOfDiff" to="(smallestIndexOfDiff &gt;= 0 ? smallestIndexOfDiff : smallestIndexOfDiff * -1)" />
    <mutant id="mutant_16023" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_17355" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="strOffset" to="(strOffset &gt;= 0 ? strOffset * -1 : strOffset)" />
    <mutant id="mutant_18686" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="smallestIndexOfDiff" to="(smallestIndexOfDiff &gt;= 0 ? smallestIndexOfDiff * -1 : smallestIndexOfDiff)" />
    <mutant id="mutant_16024" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_17354" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(suffix.length())" to="(suffix.length() &gt;= 0 ? suffix.length() : suffix.length() * -1)" />
    <mutant id="mutant_18685" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="org.apache.commons.lang3.StringUtils.indexOfDifference(strs)" to="org.apache.commons.lang3.StringUtils.indexOfDifference(strs) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfDifference(strs) : org.apache.commons.lang3.StringUtils.indexOfDifference(strs) * -1" />
    <mutant id="mutant_16029" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_16027" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17359" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="suffix.length()" to="(suffix.length() &gt;= 0 ? suffix.length() : suffix.length() * -1)" />
    <mutant id="mutant_16028" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17358" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="suffix.length()" to="(suffix.length() &gt;= 0 ? suffix.length() * -1 : suffix.length())" />
    <mutant id="mutant_18689" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_18680" viable="true" in="org.apache.commons.lang3.StringUtils.difference(java.lang.String,java.lang.String)" from="at" to="(at &gt;= 0 ? at : at * -1)" />
    <mutant id="mutant_16021" viable="false" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append : append * -1)" />
    <mutant id="mutant_17353" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(suffix.length())" to="(suffix.length() &gt;= 0 ? suffix.length() * -1 : suffix.length())" />
    <mutant id="mutant_18684" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="org.apache.commons.lang3.StringUtils.indexOfDifference(strs)" to="org.apache.commons.lang3.StringUtils.indexOfDifference(strs) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfDifference(strs) * -1 : org.apache.commons.lang3.StringUtils.indexOfDifference(strs)" />
    <mutant id="mutant_16022" viable="false" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append * -1 : append)" />
    <mutant id="mutant_17352" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_18683" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17351" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_18682" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="(strs.length)" to="(strs.length &gt;= 0 ? strs.length : strs.length * -1)" />
    <mutant id="mutant_16020" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append * -1 : append)" />
    <mutant id="mutant_17350" viable="true" in="org.apache.commons.lang3.StringUtils.endsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_18681" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="(strs.length)" to="(strs.length &gt;= 0 ? strs.length * -1 : strs.length)" />
    <mutant id="mutant_16036" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17368" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str1.length())" to="(str1.length() &gt;= 0 ? str1.length() * -1 : str1.length())" />
    <mutant id="mutant_18699" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16037" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_17367" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="Math.max(cs1.length(), cs2.length())" to="(Math.max(cs1.length(), cs2.length()) &gt;= 0 ? Math.max(cs1.length(), cs2.length()) * -1 : Math.max(cs1.length(), cs2.length()))" />
    <mutant id="mutant_18698" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="smallestIndexOfDiff" to="(smallestIndexOfDiff &gt;= 0 ? smallestIndexOfDiff : smallestIndexOfDiff * -1)" />
    <mutant id="mutant_16034" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_17366" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="Math.max(cs1.length(), cs2.length())" to="(Math.max(cs1.length(), cs2.length()) &gt;= 0 ? Math.max(cs1.length(), cs2.length()) : Math.max(cs1.length(), cs2.length()) * -1)" />
    <mutant id="mutant_18697" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="smallestIndexOfDiff" to="(smallestIndexOfDiff &gt;= 0 ? smallestIndexOfDiff * -1 : smallestIndexOfDiff)" />
    <mutant id="mutant_16035" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_17365" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs2.length()" to="(cs2.length() &gt;= 0 ? cs2.length() : cs2.length() * -1)" />
    <mutant id="mutant_18696" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16038" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16039" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17369" viable="true" in="org.apache.commons.lang3.StringUtils.equalsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="(str1.length())" to="(str1.length() &gt;= 0 ? str1.length() : str1.length() * -1)" />
    <mutant id="mutant_17360" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18691" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18690" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16032" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_17364" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs2.length()" to="(cs2.length() &gt;= 0 ? cs2.length() * -1 : cs2.length())" />
    <mutant id="mutant_18695" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16033" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_17363" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1.length()" to="(cs1.length() &gt;= 0 ? cs1.length() : cs1.length() * -1)" />
    <mutant id="mutant_18694" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16030" viable="true" in="org.apache.commons.lang3.Conversion.intToHex(int,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_17362" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1.length()" to="(cs1.length() &gt;= 0 ? cs1.length() * -1 : cs1.length())" />
    <mutant id="mutant_18693" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="smallestIndexOfDiff" to="(smallestIndexOfDiff &gt;= 0 ? smallestIndexOfDiff : smallestIndexOfDiff * -1)" />
    <mutant id="mutant_16031" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17361" viable="true" in="org.apache.commons.lang3.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18692" viable="true" in="org.apache.commons.lang3.StringUtils.getCommonPrefix(java.lang.String[])" from="smallestIndexOfDiff" to="(smallestIndexOfDiff &gt;= 0 ? smallestIndexOfDiff * -1 : smallestIndexOfDiff)" />
    <mutant id="mutant_17299" viable="false" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17294" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_17293" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17292" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_17291" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_17298" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen : csLen * -1)" />
    <mutant id="mutant_17297" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen * -1 : csLen)" />
    <mutant id="mutant_17296" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17295" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17279" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17278" viable="false" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17277" viable="false" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17272" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_17271" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_17270" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_17276" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_17275" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_17274" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17273" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17290" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchChars.length" to="searchChars.length &gt;= 0 ? searchChars.length : searchChars.length * -1" />
    <mutant id="mutant_17289" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="searchChars.length" to="searchChars.length &gt;= 0 ? searchChars.length * -1 : searchChars.length" />
    <mutant id="mutant_17288" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17283" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_17282" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_17281" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17280" viable="true" in="org.apache.commons.lang3.StringUtils.containsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17287" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen : csLen * -1)" />
    <mutant id="mutant_17286" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen * -1 : csLen)" />
    <mutant id="mutant_17285" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_17284" viable="true" in="org.apache.commons.lang3.StringUtils.containsNone(java.lang.CharSequence,char[])" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_6923" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6924" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6925" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6926" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6927" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6928" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6929" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6920" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6921" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6922" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6912" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6913" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6914" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.Object)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6915" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.Object)" from="buf.length()" to="(buf.length() &gt;= 0 ? buf.length() : buf.length() * -1)" />
    <mutant id="mutant_6916" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.Object)" from="buf.length()" to="(buf.length() &gt;= 0 ? buf.length() * -1 : buf.length())" />
    <mutant id="mutant_6917" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6918" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() : source.length() * -1)" />
    <mutant id="mutant_6919" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() * -1 : source.length())" />
    <mutant id="mutant_6910" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6911" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6909" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6901" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6902" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6903" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() * -1 : source.length())" />
    <mutant id="mutant_6904" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() : source.length() * -1)" />
    <mutant id="mutant_6905" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6906" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6907" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6908" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.CharSequence,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6900" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_404" viable="true" in="org.apache.commons.lang3.math.Fraction.divideBy(org.apache.commons.lang3.math.Fraction)" from="(fraction.numerator)" to="(fraction.numerator &gt;= 0 ? fraction.numerator * -1 : fraction.numerator)" />
    <mutant id="mutant_405" viable="true" in="org.apache.commons.lang3.math.Fraction.divideBy(org.apache.commons.lang3.math.Fraction)" from="(fraction.numerator)" to="(fraction.numerator &gt;= 0 ? fraction.numerator : fraction.numerator * -1)" />
    <mutant id="mutant_406" viable="true" in="org.apache.commons.lang3.math.Fraction.divideBy(org.apache.commons.lang3.math.Fraction)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_407" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_400" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d2" to="(d2 &gt;= 0 ? d2 * -1 : d2)" />
    <mutant id="mutant_401" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d2" to="(d2 &gt;= 0 ? d2 : d2 * -1)" />
    <mutant id="mutant_402" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d1), ((fraction.denominator) / d2))" to="(org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d1), ((fraction.denominator) / d2)) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d1), ((fraction.denominator) / d2)) : org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d1), ((fraction.denominator) / d2)) * -1)" />
    <mutant id="mutant_403" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d1), ((fraction.denominator) / d2))" to="(org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d1), ((fraction.denominator) / d2)) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d1), ((fraction.denominator) / d2)) * -1 : org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d1), ((fraction.denominator) / d2)))" />
    <mutant id="mutant_408" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_409" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4304" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5636" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6967" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.hasNext()" from="(tokens.length)" to="(tokens.length &gt;= 0 ? tokens.length * -1 : tokens.length)" />
    <mutant id="mutant_4303" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5637" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6968" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.hasNext()" from="(tokens.length)" to="(tokens.length &gt;= 0 ? tokens.length : tokens.length * -1)" />
    <mutant id="mutant_4302" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_5638" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6969" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.hasPrevious()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos)" />
    <mutant id="mutant_4301" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_5639" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4300" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_6960" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5630" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6961" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_4309" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_5631" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6962" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_4308" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_5632" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6963" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String,java.util.List)" from="256" to="(-1 * 256)" />
    <mutant id="mutant_4307" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.insertFormats(java.lang.String,java.util.ArrayList)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_5633" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_6964" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4306" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_5634" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_6965" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.hasNext()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos * -1 : tokenPos)" />
    <mutant id="mutant_4305" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String,java.text.ParsePosition)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_5635" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6966" viable="true" in="org.apache.commons.lang3.text.StrTokenizer.hasNext()" from="(tokenPos)" to="(tokenPos &gt;= 0 ? tokenPos : tokenPos * -1)" />
    <mutant id="mutant_415" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="Math.abs(value)" to="value" />
    <mutant id="mutant_416" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_417" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_418" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_411" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="1" to="-1 * 1" />
    <mutant id="mutant_412" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_413" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_414" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="Math.abs(value)" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_419" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_5625" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6956" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5626" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6957" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5627" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6958" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5628" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6959" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5629" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6950" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() * -1 : source.length())" />
    <mutant id="mutant_410" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5620" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6951" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5621" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6952" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder)" from="buf.length()" to="(buf.length() &gt;= 0 ? buf.length() : buf.length() * -1)" />
    <mutant id="mutant_5622" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6953" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder)" from="buf.length()" to="(buf.length() &gt;= 0 ? buf.length() * -1 : buf.length())" />
    <mutant id="mutant_5623" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6954" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5624" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6955" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_426" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="wholeNumber" to="wholeNumber &gt;= 0 ? wholeNumber : wholeNumber * -1" />
    <mutant id="mutant_427" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="wholeNumber" to="wholeNumber &gt;= 0 ? wholeNumber * -1 : wholeNumber" />
    <mutant id="mutant_428" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="-1 * 0" />
    <mutant id="mutant_429" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="1" to="-1 * 1" />
    <mutant id="mutant_422" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) : ((int)(value)) * -1" />
    <mutant id="mutant_423" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) * -1 : ((int)(value))" />
    <mutant id="mutant_424" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_425" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_5614" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_6945" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5615" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_6946" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5616" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_6947" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5617" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6948" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5618" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6949" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(org.apache.commons.lang3.text.StrBuilder)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() : source.length() * -1)" />
    <mutant id="mutant_5619" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_420" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_421" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_6940" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5610" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6941" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5611" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6942" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5612" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6943" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5613" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_6944" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_437" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="1" to="-1 * 1" />
    <mutant id="mutant_438" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="-1 * 0" />
    <mutant id="mutant_439" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_433" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="-1 * 0" />
    <mutant id="mutant_434" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) : ((int)(value)) * -1" />
    <mutant id="mutant_435" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) * -1 : ((int)(value))" />
    <mutant id="mutant_436" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="-1 * 0" />
    <mutant id="mutant_5603" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6934" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5604" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6935" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() : source.length() * -1)" />
    <mutant id="mutant_5605" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6936" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() * -1 : source.length())" />
    <mutant id="mutant_5606" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6937" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5607" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_6938" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer)" from="buf.length()" to="(buf.length() &gt;= 0 ? buf.length() : buf.length() * -1)" />
    <mutant id="mutant_5608" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_6939" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.StringBuffer)" from="buf.length()" to="(buf.length() &gt;= 0 ? buf.length() * -1 : buf.length())" />
    <mutant id="mutant_5609" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_430" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="1" to="-1 * 1" />
    <mutant id="mutant_431" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="-1 * 0" />
    <mutant id="mutant_432" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(double)" from="0" to="-1 * 0" />
    <mutant id="mutant_6930" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5600" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6931" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5601" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6932" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5602" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.nio.CharBuffer,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6933" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replace(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6770" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5440" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6771" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd * -1 : bufEnd)" />
    <mutant id="mutant_18707" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18706" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18705" viable="false" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18704" viable="false" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18709" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18708" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4106" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="remaining" to="(remaining &gt;= 0 ? remaining : remaining * -1)" />
    <mutant id="mutant_5438" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_6769" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_4105" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next" to="(next &gt;= 0 ? next * -1 : next)" />
    <mutant id="mutant_5439" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_4104" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next" to="(next &gt;= 0 ? next : next * -1)" />
    <mutant id="mutant_4103" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_4102" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_18703" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(first.length())" to="(first.length() &gt;= 0 ? first.length() : first.length() * -1)" />
    <mutant id="mutant_4101" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_18702" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(first.length())" to="(first.length() &gt;= 0 ? first.length() * -1 : first.length())" />
    <mutant id="mutant_4100" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_18701" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18700" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5430" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6761" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_5431" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6762" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_5432" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6763" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen * -1 : endMatchLen" />
    <mutant id="mutant_5433" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6764" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen : endMatchLen * -1" />
    <mutant id="mutant_5434" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6765" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen * -1 : endMatchLen" />
    <mutant id="mutant_4109" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next2" to="(next2 &gt;= 0 ? next2 : next2 * -1)" />
    <mutant id="mutant_5435" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_6766" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen : endMatchLen * -1" />
    <mutant id="mutant_4108" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5436" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_6767" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_4107" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="remaining" to="(remaining &gt;= 0 ? remaining * -1 : remaining)" />
    <mutant id="mutant_5437" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_6768" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_6760" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="nestedVarCount" to="(nestedVarCount &gt;= 0 ? nestedVarCount * -1 : nestedVarCount)" />
    <mutant id="mutant_18718" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18717" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18716" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18715" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18719" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="limit" to="(limit &gt;= 0 ? limit : limit * -1)" />
    <mutant id="mutant_5427" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6758" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18710" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5428" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6759" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="nestedVarCount" to="(nestedVarCount &gt;= 0 ? nestedVarCount : nestedVarCount * -1)" />
    <mutant id="mutant_5429" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_18714" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="Math.max(0, (i - limit))" to="Math.max(0, (i - limit)) &gt;= 0 ? Math.max(0, (i - limit)) * -1 : Math.max(0, (i - limit))" />
    <mutant id="mutant_18713" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="Math.max(0, (i - limit))" to="Math.max(0, (i - limit)) &gt;= 0 ? Math.max(0, (i - limit)) : Math.max(0, (i - limit)) * -1" />
    <mutant id="mutant_18712" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="limit" to="(limit &gt;= 0 ? limit * -1 : limit)" />
    <mutant id="mutant_18711" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="limit" to="(limit &gt;= 0 ? limit : limit * -1)" />
    <mutant id="mutant_6750" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5420" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6751" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5421" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6752" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5422" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6753" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5423" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6754" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd * -1 : bufEnd)" />
    <mutant id="mutant_5424" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6755" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd : bufEnd * -1)" />
    <mutant id="mutant_5425" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6756" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pfxMatcher.isMatch(chars, pos, offset, bufEnd)" to="pfxMatcher.isMatch(chars, pos, offset, bufEnd) &gt;= 0 ? pfxMatcher.isMatch(chars, pos, offset, bufEnd) * -1 : pfxMatcher.isMatch(chars, pos, offset, bufEnd)" />
    <mutant id="mutant_5426" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6757" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pfxMatcher.isMatch(chars, pos, offset, bufEnd)" to="pfxMatcher.isMatch(chars, pos, offset, bufEnd) &gt;= 0 ? pfxMatcher.isMatch(chars, pos, offset, bufEnd) : pfxMatcher.isMatch(chars, pos, offset, bufEnd) * -1" />
    <mutant id="mutant_5416" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6747" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd : bufEnd * -1)" />
    <mutant id="mutant_5417" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6748" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen * -1 : endMatchLen" />
    <mutant id="mutant_5418" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6749" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen : endMatchLen * -1" />
    <mutant id="mutant_5419" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6740" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startMatchLen" to="startMatchLen &gt;= 0 ? startMatchLen : startMatchLen * -1" />
    <mutant id="mutant_5410" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6741" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startMatchLen" to="startMatchLen &gt;= 0 ? startMatchLen * -1 : startMatchLen" />
    <mutant id="mutant_5411" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6742" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="-1 * 0" />
    <mutant id="mutant_5412" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6743" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="-1 * 0" />
    <mutant id="mutant_5413" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6744" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5414" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_6745" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5415" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6746" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd * -1 : bufEnd)" />
    <mutant id="mutant_5405" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_6736" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_5406" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6737" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_5407" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6738" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_5408" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6739" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_5409" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6730" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5400" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6731" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5401" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6732" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="lengthChange" to="(lengthChange &gt;= 0 ? lengthChange : lengthChange * -1)" />
    <mutant id="mutant_5402" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6733" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="lengthChange" to="(lengthChange &gt;= 0 ? lengthChange * -1 : lengthChange)" />
    <mutant id="mutant_5403" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6734" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd * -1 : bufEnd)" />
    <mutant id="mutant_5404" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6735" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd : bufEnd * -1)" />
    <mutant id="mutant_5480" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5481" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5482" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5483" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5484" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4153" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_4152" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_17419" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4151" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(below)" to="(below &gt;= 0 ? below : below * -1)" />
    <mutant id="mutant_17418" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18749" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_4150" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(below)" to="(below &gt;= 0 ? below * -1 : below)" />
    <mutant id="mutant_17417" viable="false" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18748" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_17412" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18743" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_4149" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_17411" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18742" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_4148" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_17410" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_18741" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_4147" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(above)" to="(above &gt;= 0 ? above : above * -1)" />
    <mutant id="mutant_18740" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4146" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(above)" to="(above &gt;= 0 ? above * -1 : above)" />
    <mutant id="mutant_17416" viable="false" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18747" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4145" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_17415" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_18746" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4144" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_17414" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_18745" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_4143" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(below)" to="(below &gt;= 0 ? below : below * -1)" />
    <mutant id="mutant_17413" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18744" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_5474" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5475" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5476" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_5477" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_5478" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5479" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5470" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5471" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_5472" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_5473" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_4142" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(below)" to="(below &gt;= 0 ? below * -1 : below)" />
    <mutant id="mutant_4141" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_4140" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_17429" viable="false" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17428" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_18759" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4139" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper(int,int,boolean)" from="above" to="above &gt;= 0 ? above : above * -1" />
    <mutant id="mutant_17423" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_18754" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4138" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper(int,int,boolean)" from="above" to="above &gt;= 0 ? above * -1 : above" />
    <mutant id="mutant_17422" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_18753" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4137" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper(int,int,boolean)" from="this.above" to="this.above &gt;= 0 ? this.above : this.above * -1" />
    <mutant id="mutant_17421" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18752" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4136" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper(int,int,boolean)" from="this.above" to="this.above &gt;= 0 ? this.above * -1 : this.above" />
    <mutant id="mutant_17420" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18751" viable="false" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4135" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper(int,int,boolean)" from="below" to="below &gt;= 0 ? below : below * -1" />
    <mutant id="mutant_17427" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_18758" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4134" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper(int,int,boolean)" from="below" to="below &gt;= 0 ? below * -1 : below" />
    <mutant id="mutant_17426" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18757" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4133" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper(int,int,boolean)" from="this.below" to="this.below &gt;= 0 ? this.below : this.below * -1" />
    <mutant id="mutant_17425" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18756" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4132" viable="false" in="org.apache.commons.lang3.text.translate.UnicodeEscaper(int,int,boolean)" from="this.below" to="this.below &gt;= 0 ? this.below * -1 : this.below" />
    <mutant id="mutant_17424" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18755" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5463" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6794" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufName.length()" to="(bufName.length() &gt;= 0 ? bufName.length() : bufName.length() * -1)" />
    <mutant id="mutant_5464" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6795" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufName.length()" to="(bufName.length() &gt;= 0 ? bufName.length() * -1 : bufName.length())" />
    <mutant id="mutant_5465" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6796" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_5466" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6797" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_5467" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6798" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen * -1 : endMatchLen" />
    <mutant id="mutant_18750" viable="false" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5468" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6799" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="endMatchLen &gt;= 0 ? endMatchLen : endMatchLen * -1" />
    <mutant id="mutant_5469" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6790" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_5460" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6791" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startMatchLen" to="(startMatchLen &gt;= 0 ? startMatchLen : startMatchLen * -1)" />
    <mutant id="mutant_5461" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6792" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startMatchLen" to="(startMatchLen &gt;= 0 ? startMatchLen * -1 : startMatchLen)" />
    <mutant id="mutant_5462" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_6793" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4131" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper()" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_18729" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_4130" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper()" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_18728" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18727" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18726" viable="false" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_4128" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_18721" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="second.length()" to="(second.length() &gt;= 0 ? second.length() * -1 : second.length())" />
    <mutant id="mutant_4127" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(builder.length())" to="(builder.length() &gt;= 0 ? builder.length() : builder.length() * -1)" />
    <mutant id="mutant_18720" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="limit" to="(limit &gt;= 0 ? limit * -1 : limit)" />
    <mutant id="mutant_4126" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(builder.length())" to="(builder.length() &gt;= 0 ? builder.length() * -1 : builder.length())" />
    <mutant id="mutant_4125" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4124" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Integer.parseInt(builder.toString(), 8)" to="(Integer.parseInt(builder.toString(), 8) &gt;= 0 ? Integer.parseInt(builder.toString(), 8) : Integer.parseInt(builder.toString(), 8) * -1)" />
    <mutant id="mutant_18725" viable="false" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_4123" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Integer.parseInt(builder.toString(), 8)" to="(Integer.parseInt(builder.toString(), 8) &gt;= 0 ? Integer.parseInt(builder.toString(), 8) * -1 : Integer.parseInt(builder.toString(), 8))" />
    <mutant id="mutant_18724" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min((i + limit), second.length()))" to="(Math.min((i + limit), second.length()) &gt;= 0 ? Math.min((i + limit), second.length()) * -1 : Math.min((i + limit), second.length()))" />
    <mutant id="mutant_4122" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_18723" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="(Math.min((i + limit), second.length()))" to="(Math.min((i + limit), second.length()) &gt;= 0 ? Math.min((i + limit), second.length()) : Math.min((i + limit), second.length()) * -1)" />
    <mutant id="mutant_4121" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next3" to="(next3 &gt;= 0 ? next3 : next3 * -1)" />
    <mutant id="mutant_18722" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="second.length()" to="(second.length() &gt;= 0 ? second.length() : second.length() * -1)" />
    <mutant id="mutant_5452" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6783" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_5453" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6784" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_5454" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6785" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startMatchLen" to="(startMatchLen &gt;= 0 ? startMatchLen : startMatchLen * -1)" />
    <mutant id="mutant_5455" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_6786" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startMatchLen" to="(startMatchLen &gt;= 0 ? startMatchLen * -1 : startMatchLen)" />
    <mutant id="mutant_5456" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_6787" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5457" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6788" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5458" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6789" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_4129" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5459" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6780" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="nestedVarCount" to="(nestedVarCount &gt;= 0 ? nestedVarCount : nestedVarCount * -1)" />
    <mutant id="mutant_5450" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6781" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="nestedVarCount" to="(nestedVarCount &gt;= 0 ? nestedVarCount * -1 : nestedVarCount)" />
    <mutant id="mutant_5451" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6782" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4120" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next3" to="(next3 &gt;= 0 ? next3 * -1 : next3)" />
    <mutant id="mutant_17409" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphaSpace(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_17408" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18739" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_17407" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18738" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_17406" viable="false" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18737" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4117" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next" to="(next &gt;= 0 ? next * -1 : next)" />
    <mutant id="mutant_5449" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_17401" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18732" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4116" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next" to="(next &gt;= 0 ? next : next * -1)" />
    <mutant id="mutant_17400" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18731" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4115" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_18730" viable="true" in="org.apache.commons.lang3.StringUtils.getSetOfMatchingCharacterWithin(java.lang.CharSequence,java.lang.CharSequence,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_4114" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="remaining" to="(remaining &gt;= 0 ? remaining * -1 : remaining)" />
    <mutant id="mutant_4113" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="remaining" to="(remaining &gt;= 0 ? remaining : remaining * -1)" />
    <mutant id="mutant_17405" viable="false" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18736" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4112" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next2" to="(next2 &gt;= 0 ? next2 * -1 : next2)" />
    <mutant id="mutant_17404" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_18735" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_4111" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next2" to="(next2 &gt;= 0 ? next2 : next2 * -1)" />
    <mutant id="mutant_17403" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_18734" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_4110" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next2" to="(next2 &gt;= 0 ? next2 * -1 : next2)" />
    <mutant id="mutant_17402" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18733" viable="true" in="org.apache.commons.lang3.StringUtils.join(byte[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_5441" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6772" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd : bufEnd * -1)" />
    <mutant id="mutant_5442" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6773" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="suffMatcher.isMatch(chars, pos, offset, bufEnd)" to="suffMatcher.isMatch(chars, pos, offset, bufEnd) &gt;= 0 ? suffMatcher.isMatch(chars, pos, offset, bufEnd) * -1 : suffMatcher.isMatch(chars, pos, offset, bufEnd)" />
    <mutant id="mutant_5443" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6774" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="suffMatcher.isMatch(chars, pos, offset, bufEnd)" to="suffMatcher.isMatch(chars, pos, offset, bufEnd) &gt;= 0 ? suffMatcher.isMatch(chars, pos, offset, bufEnd) : suffMatcher.isMatch(chars, pos, offset, bufEnd) * -1" />
    <mutant id="mutant_5444" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6775" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="(endMatchLen &gt;= 0 ? endMatchLen * -1 : endMatchLen)" />
    <mutant id="mutant_5445" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6776" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endMatchLen" to="(endMatchLen &gt;= 0 ? endMatchLen : endMatchLen * -1)" />
    <mutant id="mutant_5446" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6777" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4119" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next3" to="(next3 &gt;= 0 ? next3 : next3 * -1)" />
    <mutant id="mutant_5447" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6778" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_4118" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="next3" to="(next3 &gt;= 0 ? next3 * -1 : next3)" />
    <mutant id="mutant_5448" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6779" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_4197" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4196" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_4195" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_4194" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_4193" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_4192" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh * -1 : codepointHigh)" />
    <mutant id="mutant_4191" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh : codepointHigh * -1)" />
    <mutant id="mutant_4190" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow : codepointLow * -1)" />
    <mutant id="mutant_16124" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17456" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18787" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_16125" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17455" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18786" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_16122" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17454" viable="false" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18785" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16123" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_17453" viable="false" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18784" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16128" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_4189" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow * -1 : codepointLow)" />
    <mutant id="mutant_16129" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="org.apache.commons.lang3.Conversion.byteArrayToLong(src, srcPos, 0, 0, 8)" to="(org.apache.commons.lang3.Conversion.byteArrayToLong(src, srcPos, 0, 0, 8) &gt;= 0 ? org.apache.commons.lang3.Conversion.byteArrayToLong(src, srcPos, 0, 0, 8) : org.apache.commons.lang3.Conversion.byteArrayToLong(src, srcPos, 0, 0, 8) * -1)" />
    <mutant id="mutant_17459" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_4188" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.between(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh * -1 : codepointHigh)" />
    <mutant id="mutant_16126" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17458" viable="false" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_18789" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_4187" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.between(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh : codepointHigh * -1)" />
    <mutant id="mutant_16127" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17457" viable="false" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_18788" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_16120" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_17452" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_18783" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16121" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17451" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_18782" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_17450" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18781" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_18780" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4186" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.between(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow : codepointLow * -1)" />
    <mutant id="mutant_4185" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.between(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow * -1 : codepointLow)" />
    <mutant id="mutant_4184" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.below(int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_4183" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.below(int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_4182" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.below(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_4181" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.below(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_4180" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.above(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_16135" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17467" viable="false" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18798" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_16136" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_17466" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_18797" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16133" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_17465" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_18796" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_16134" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17464" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18795" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_4179" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.above(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_16139" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_4178" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.above(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4177" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_16137" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="org.apache.commons.lang3.Conversion.byteArrayToLong(src, (srcPos + 8), 0, 0, 8)" to="(org.apache.commons.lang3.Conversion.byteArrayToLong(src, (srcPos + 8), 0, 0, 8) &gt;= 0 ? org.apache.commons.lang3.Conversion.byteArrayToLong(src, (srcPos + 8), 0, 0, 8) : org.apache.commons.lang3.Conversion.byteArrayToLong(src, (srcPos + 8), 0, 0, 8) * -1)" />
    <mutant id="mutant_17469" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4176" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.toUtf16Escape(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_16138" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="org.apache.commons.lang3.Conversion.byteArrayToLong(src, (srcPos + 8), 0, 0, 8)" to="(org.apache.commons.lang3.Conversion.byteArrayToLong(src, (srcPos + 8), 0, 0, 8) &gt;= 0 ? org.apache.commons.lang3.Conversion.byteArrayToLong(src, (srcPos + 8), 0, 0, 8) * -1 : org.apache.commons.lang3.Conversion.byteArrayToLong(src, (srcPos + 8), 0, 0, 8))" />
    <mutant id="mutant_17468" viable="false" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18799" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_18790" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_16131" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17463" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18794" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16132" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17462" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18793" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_17461" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18792" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_16130" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="org.apache.commons.lang3.Conversion.byteArrayToLong(src, srcPos, 0, 0, 8)" to="(org.apache.commons.lang3.Conversion.byteArrayToLong(src, srcPos, 0, 0, 8) &gt;= 0 ? org.apache.commons.lang3.Conversion.byteArrayToLong(src, srcPos, 0, 0, 8) * -1 : org.apache.commons.lang3.Conversion.byteArrayToLong(src, srcPos, 0, 0, 8))" />
    <mutant id="mutant_17460" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_18791" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4175" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_4174" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_4173" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_16108" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append * -1 : append)" />
    <mutant id="mutant_4172" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_16109" viable="false" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append : append * -1)" />
    <mutant id="mutant_17439" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_4171" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_4170" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_16102" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17434" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_18765" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_16103" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17433" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_18764" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_16100" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_17432" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18763" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4169" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_16101" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17431" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18762" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_4168" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_16106" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17438" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_18769" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_4167" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_16107" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append : append * -1)" />
    <mutant id="mutant_17437" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18768" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_4166" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_16104" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17436" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18767" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4165" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_16105" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17435" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18766" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_5496" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_5497" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5498" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5499" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_17430" viable="false" in="org.apache.commons.lang3.StringUtils.isAlphanumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18761" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_18760" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_5490" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_5491" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_5492" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_5493" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_5494" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_5495" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_4164" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="15" to="(-1 * 15)" />
    <mutant id="mutant_4163" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="12" to="(-1 * 12)" />
    <mutant id="mutant_4162" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_16119" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToUuid(byte[],int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_4161" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_4160" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_16113" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17445" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18776" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_16114" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17444" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18775" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_4159" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_16111" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_17443" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18774" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4158" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="65535" to="(-1 * 65535)" />
    <mutant id="mutant_16112" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_17442" viable="true" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18773" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4157" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_16117" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_17449" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4156" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_16118" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_17448" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18779" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4155" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(above)" to="(above &gt;= 0 ? above : above * -1)" />
    <mutant id="mutant_16115" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17447" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_18778" viable="false" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4154" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeEscaper.translate(int,java.io.Writer)" from="(above)" to="(above &gt;= 0 ? above * -1 : above)" />
    <mutant id="mutant_16116" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17446" viable="true" in="org.apache.commons.lang3.StringUtils.isAsciiPrintable(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_18777" viable="false" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5485" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5486" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5487" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5488" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5489" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuffer,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_17441" viable="false" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18772" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_16110" viable="false" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append * -1 : append)" />
    <mutant id="mutant_17440" viable="false" in="org.apache.commons.lang3.StringUtils.isAlphanumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18771" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_18770" viable="true" in="org.apache.commons.lang3.StringUtils.join(char[],char,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16168" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16169" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17499" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_16166" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17498" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_16167" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17497" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16160" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17492" viable="false" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16161" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_17491" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_17490" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_16164" viable="false" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17496" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16165" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17495" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16162" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_17494" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16163" viable="false" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17493" viable="false" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16179" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16177" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="1L" to="(-1 * 1L)" />
    <mutant id="mutant_16178" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16171" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16172" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16170" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16175" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16176" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16173" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="1L" to="-1 * 1L" />
    <mutant id="mutant_16174" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16146" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_17478" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16147" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_17477" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16144" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17476" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_16145" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17475" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_16148" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_16149" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17479" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_17470" viable="true" in="org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16142" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17474" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_16143" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17473" viable="true" in="org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16140" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_17472" viable="true" in="org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)" from="(cs.length())" to="(cs.length() &gt;= 0 ? cs.length() : cs.length() * -1)" />
    <mutant id="mutant_16141" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17471" viable="true" in="org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)" from="(cs.length())" to="(cs.length() &gt;= 0 ? cs.length() * -1 : cs.length())" />
    <mutant id="mutant_16157" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17489" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16158" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17488" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16155" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_17487" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_16156" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_17486" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_4199" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_16159" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4198" viable="true" in="org.apache.commons.lang3.text.translate.UnicodeUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_17481" viable="false" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16150" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools : nBools * -1)" />
    <mutant id="mutant_17480" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_16153" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17485" viable="true" in="org.apache.commons.lang3.StringUtils.isNumericSpace(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_16154" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17484" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16151" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="nBools" to="(nBools &gt;= 0 ? nBools * -1 : nBools)" />
    <mutant id="mutant_17483" viable="true" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16152" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17482" viable="false" in="org.apache.commons.lang3.StringUtils.isNumeric(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16090" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16091" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_16089" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16083" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16084" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16081" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16082" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_16087" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="sb.length()" to="sb.length() &gt;= 0 ? sb.length() : sb.length() * -1" />
    <mutant id="mutant_16088" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_16085" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_16086" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="sb.length()" to="sb.length() &gt;= 0 ? sb.length() * -1 : sb.length()" />
    <mutant id="mutant_16094" viable="false" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16095" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16092" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_16093" viable="false" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16098" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16099" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16096" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16097" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_16069" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_16067" viable="false" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append * -1 : append)" />
    <mutant id="mutant_17399" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_16068" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_17398" viable="true" in="org.apache.commons.lang3.StringUtils.isAlpha(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_16061" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17393" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_16062" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17392" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_17391" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16060" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17390" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16065" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append * -1 : append)" />
    <mutant id="mutant_17397" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16066" viable="false" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append : append * -1)" />
    <mutant id="mutant_17396" viable="true" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16063" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17395" viable="false" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16064" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="append" to="(append &gt;= 0 ? append : append * -1)" />
    <mutant id="mutant_17394" viable="false" in="org.apache.commons.lang3.StringUtils.isAllUpperCase(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16080" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_16078" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs * -1 : nHexs)" />
    <mutant id="mutant_16079" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_16072" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16073" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16070" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_16071" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_16076" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16077" viable="true" in="org.apache.commons.lang3.Conversion.shortToHex(short,int,java.lang.String,int,int)" from="nHexs" to="(nHexs &gt;= 0 ? nHexs : nHexs * -1)" />
    <mutant id="mutant_16074" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_16075" viable="true" in="org.apache.commons.lang3.Conversion.longToHex(long,int,java.lang.String,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_701" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator : numerator * -1" />
    <mutant id="mutant_702" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="2" to="-1 * 2" />
    <mutant id="mutant_703" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator * -1 : denominator" />
    <mutant id="mutant_704" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator : denominator * -1" />
    <mutant id="mutant_700" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator * -1 : numerator" />
    <mutant id="mutant_709" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_705" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="2" to="-1 * 2" />
    <mutant id="mutant_706" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_707" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_708" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_712" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_713" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_714" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_715" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_710" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_711" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_716" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_717" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator * -1 : numerator" />
    <mutant id="mutant_718" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator : numerator * -1" />
    <mutant id="mutant_719" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_723" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_724" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_725" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_726" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_720" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_721" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator * -1 : denominator" />
    <mutant id="mutant_722" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator : denominator * -1" />
    <mutant id="mutant_727" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_728" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_729" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator) * -1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator)" />
    <mutant id="mutant_6802" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="-1 * 0" />
    <mutant id="mutant_6803" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="-1 * 0" />
    <mutant id="mutant_6804" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6805" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6806" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(varNameExprChars.length)" to="(varNameExprChars.length &gt;= 0 ? varNameExprChars.length * -1 : varNameExprChars.length)" />
    <mutant id="mutant_6807" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(varNameExprChars.length)" to="(varNameExprChars.length &gt;= 0 ? varNameExprChars.length : varNameExprChars.length * -1)" />
    <mutant id="mutant_6808" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6809" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6800" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_6801" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_734" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="gcd" to="gcd &gt;= 0 ? gcd : gcd * -1" />
    <mutant id="mutant_735" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator * -1 : denominator" />
    <mutant id="mutant_736" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator : denominator * -1" />
    <mutant id="mutant_737" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="gcd" to="gcd &gt;= 0 ? gcd * -1 : gcd" />
    <mutant id="mutant_730" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator) : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, denominator) * -1" />
    <mutant id="mutant_731" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator * -1 : numerator" />
    <mutant id="mutant_732" viable="false" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator : numerator * -1" />
    <mutant id="mutant_733" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="gcd" to="gcd &gt;= 0 ? gcd * -1 : gcd" />
    <mutant id="mutant_738" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="gcd" to="gcd &gt;= 0 ? gcd : gcd * -1" />
    <mutant id="mutant_739" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_745" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_746" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_747" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_748" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_741" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_742" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_743" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_744" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_749" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_740" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_756" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_757" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_758" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_759" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_752" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_753" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_754" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_755" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_750" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_751" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_767" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_768" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_769" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="fraction.denominator" to="(fraction.denominator &gt;= 0 ? fraction.denominator * -1 : fraction.denominator)" />
    <mutant id="mutant_763" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_764" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(fraction.numerator)" to="(fraction.numerator &gt;= 0 ? fraction.numerator * -1 : fraction.numerator)" />
    <mutant id="mutant_765" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(fraction.numerator)" to="(fraction.numerator &gt;= 0 ? fraction.numerator : fraction.numerator * -1)" />
    <mutant id="mutant_766" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5515" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6846" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endPos" to="(endPos &gt;= 0 ? endPos * -1 : endPos)" />
    <mutant id="mutant_5516" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6847" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_5517" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6848" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_5518" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6849" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="varLen" to="(varLen &gt;= 0 ? varLen : varLen * -1)" />
    <mutant id="mutant_5519" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_760" viable="true" in="org.apache.commons.lang3.math.Fraction.invert()" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_761" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_6840" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endPos" to="(endPos &gt;= 0 ? endPos * -1 : endPos)" />
    <mutant id="mutant_762" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_5510" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6841" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="varValue.length()" to="varValue.length() &gt;= 0 ? varValue.length() : varValue.length() * -1" />
    <mutant id="mutant_5511" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6842" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="varValue.length()" to="varValue.length() &gt;= 0 ? varValue.length() * -1 : varValue.length()" />
    <mutant id="mutant_5512" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_6843" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_5513" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_6844" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_5514" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6845" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endPos" to="(endPos &gt;= 0 ? endPos : endPos * -1)" />
    <mutant id="mutant_778" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.numerator, denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.numerator, denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.numerator, denominator) : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.numerator, denominator) * -1" />
    <mutant id="mutant_779" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_774" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="fraction.numerator" to="(fraction.numerator &gt;= 0 ? fraction.numerator : fraction.numerator * -1)" />
    <mutant id="mutant_775" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_776" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_777" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.numerator, denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.numerator, denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.numerator, denominator) * -1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(fraction.numerator, denominator)" />
    <mutant id="mutant_5504" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6835" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5505" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6836" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5506" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6837" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_5507" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6838" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_5508" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6839" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="endPos" to="(endPos &gt;= 0 ? endPos : endPos * -1)" />
    <mutant id="mutant_5509" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_770" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="fraction.denominator" to="(fraction.denominator &gt;= 0 ? fraction.denominator : fraction.denominator * -1)" />
    <mutant id="mutant_771" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, fraction.denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, fraction.denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, fraction.denominator) * -1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, fraction.denominator)" />
    <mutant id="mutant_772" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, fraction.denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, fraction.denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, fraction.denominator) : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(numerator, fraction.denominator) * -1" />
    <mutant id="mutant_773" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="fraction.numerator" to="(fraction.numerator &gt;= 0 ? fraction.numerator * -1 : fraction.numerator)" />
    <mutant id="mutant_6830" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5500" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6831" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="valueDelimiterMatchLen" to="(valueDelimiterMatchLen &gt;= 0 ? valueDelimiterMatchLen * -1 : valueDelimiterMatchLen)" />
    <mutant id="mutant_5501" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6832" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="valueDelimiterMatchLen" to="(valueDelimiterMatchLen &gt;= 0 ? valueDelimiterMatchLen : valueDelimiterMatchLen * -1)" />
    <mutant id="mutant_5502" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6833" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5503" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.StringBuilder)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6834" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_789" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_785" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="d2" to="(d2 &gt;= 0 ? d2 * -1 : d2)" />
    <mutant id="mutant_786" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="d2" to="(d2 &gt;= 0 ? d2 : d2 * -1)" />
    <mutant id="mutant_787" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="org.apache.commons.lang3.math.Fraction.mulAndCheck(((numerator) / d1), ((fraction.numerator) / d2))" to="(org.apache.commons.lang3.math.Fraction.mulAndCheck(((numerator) / d1), ((fraction.numerator) / d2)) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulAndCheck(((numerator) / d1), ((fraction.numerator) / d2)) * -1 : org.apache.commons.lang3.math.Fraction.mulAndCheck(((numerator) / d1), ((fraction.numerator) / d2)))" />
    <mutant id="mutant_788" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="org.apache.commons.lang3.math.Fraction.mulAndCheck(((numerator) / d1), ((fraction.numerator) / d2))" to="(org.apache.commons.lang3.math.Fraction.mulAndCheck(((numerator) / d1), ((fraction.numerator) / d2)) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulAndCheck(((numerator) / d1), ((fraction.numerator) / d2)) : org.apache.commons.lang3.math.Fraction.mulAndCheck(((numerator) / d1), ((fraction.numerator) / d2)) * -1)" />
    <mutant id="mutant_6824" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="valueDelimMatcher.isMatch(varNameExprChars, i)" to="valueDelimMatcher.isMatch(varNameExprChars, i) &gt;= 0 ? valueDelimMatcher.isMatch(varNameExprChars, i) : valueDelimMatcher.isMatch(varNameExprChars, i) * -1" />
    <mutant id="mutant_6825" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6826" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6827" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6828" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6829" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_781" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="d1" to="(d1 &gt;= 0 ? d1 : d1 * -1)" />
    <mutant id="mutant_782" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="d1" to="(d1 &gt;= 0 ? d1 * -1 : d1)" />
    <mutant id="mutant_783" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(fraction.numerator)" to="(fraction.numerator &gt;= 0 ? fraction.numerator * -1 : fraction.numerator)" />
    <mutant id="mutant_784" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(fraction.numerator)" to="(fraction.numerator &gt;= 0 ? fraction.numerator : fraction.numerator * -1)" />
    <mutant id="mutant_6820" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="valueDelimiterMatchLen" to="valueDelimiterMatchLen &gt;= 0 ? valueDelimiterMatchLen : valueDelimiterMatchLen * -1" />
    <mutant id="mutant_6821" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6822" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_780" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_6823" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="valueDelimMatcher.isMatch(varNameExprChars, i)" to="valueDelimMatcher.isMatch(varNameExprChars, i) &gt;= 0 ? valueDelimMatcher.isMatch(varNameExprChars, i) * -1 : valueDelimMatcher.isMatch(varNameExprChars, i)" />
    <mutant id="mutant_796" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="d1" to="(d1 &gt;= 0 ? d1 * -1 : d1)" />
    <mutant id="mutant_797" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d2), ((fraction.denominator) / d1))" to="(org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d2), ((fraction.denominator) / d1)) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d2), ((fraction.denominator) / d1)) * -1 : org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d2), ((fraction.denominator) / d1)))" />
    <mutant id="mutant_798" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d2), ((fraction.denominator) / d1))" to="(org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d2), ((fraction.denominator) / d1)) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d2), ((fraction.denominator) / d1)) : org.apache.commons.lang3.math.Fraction.mulPosAndCheck(((denominator) / d2), ((fraction.denominator) / d1)) * -1)" />
    <mutant id="mutant_799" viable="true" in="org.apache.commons.lang3.math.Fraction.negate()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_6813" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6814" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="varNameExprChars.length" to="(varNameExprChars.length &gt;= 0 ? varNameExprChars.length * -1 : varNameExprChars.length)" />
    <mutant id="mutant_6815" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="varNameExprChars.length" to="(varNameExprChars.length &gt;= 0 ? varNameExprChars.length : varNameExprChars.length * -1)" />
    <mutant id="mutant_6816" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length))" to="(pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length) &gt;= 0 ? pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length) * -1 : pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length))" />
    <mutant id="mutant_6817" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="(pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length))" to="(pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length) &gt;= 0 ? pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length) : pfxMatcher.isMatch(varNameExprChars, i, i, varNameExprChars.length) * -1)" />
    <mutant id="mutant_6818" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6819" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="valueDelimiterMatchLen" to="valueDelimiterMatchLen &gt;= 0 ? valueDelimiterMatchLen * -1 : valueDelimiterMatchLen" />
    <mutant id="mutant_792" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="d2" to="(d2 &gt;= 0 ? d2 : d2 * -1)" />
    <mutant id="mutant_793" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(fraction.denominator)" to="(fraction.denominator &gt;= 0 ? fraction.denominator * -1 : fraction.denominator)" />
    <mutant id="mutant_794" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(fraction.denominator)" to="(fraction.denominator &gt;= 0 ? fraction.denominator : fraction.denominator * -1)" />
    <mutant id="mutant_795" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="d1" to="(d1 &gt;= 0 ? d1 : d1 * -1)" />
    <mutant id="mutant_6810" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_790" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_6811" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_791" viable="true" in="org.apache.commons.lang3.math.Fraction.multiplyBy(org.apache.commons.lang3.math.Fraction)" from="d2" to="(d2 &gt;= 0 ? d2 * -1 : d2)" />
    <mutant id="mutant_6812" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_9" viable="false" in="?" from="2" to="(-1 * 2)" />
    <mutant id="mutant_8" viable="false" in="?" from="3" to="(-1 * 3)" />
    <mutant id="mutant_5" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_686" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_4" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_687" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_7" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_688" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7981" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMinutes(java.util.Date,int)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_6" viable="false" in="?" from="2" to="(-1 * 2)" />
    <mutant id="mutant_689" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_6650" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() * -1 : source.length())" />
    <mutant id="mutant_7980" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMilliseconds(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_85" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="second" to="(second &gt;= 0 ? second * -1 : second)" />
    <mutant id="mutant_18828" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_84" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="second" to="(second &gt;= 0 ? second : second * -1)" />
    <mutant id="mutant_18827" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_87" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="first" to="(first &gt;= 0 ? first * -1 : first)" />
    <mutant id="mutant_18826" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_86" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="0" to="-1 * 0" />
    <mutant id="mutant_18825" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_89" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="second" to="(second &gt;= 0 ? second : second * -1)" />
    <mutant id="mutant_88" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="first" to="(first &gt;= 0 ? first : first * -1)" />
    <mutant id="mutant_18829" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_5317" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6648" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18820" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_5318" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6649" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() : source.length() * -1)" />
    <mutant id="mutant_7979" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMilliseconds(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_90" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="second" to="(second &gt;= 0 ? second * -1 : second)" />
    <mutant id="mutant_5319" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_92" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="1" to="-1 * 1" />
    <mutant id="mutant_18824" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_91" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18823" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_94" viable="true" in="org.apache.commons.lang3.math.Fraction.getDenominator()" from="denominator" to="denominator &gt;= 0 ? denominator : denominator * -1" />
    <mutant id="mutant_18822" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_93" viable="true" in="org.apache.commons.lang3.math.Fraction.getDenominator()" from="denominator" to="denominator &gt;= 0 ? denominator * -1 : denominator" />
    <mutant id="mutant_18821" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1" viable="false" in="?" from="0" to="(-1 * 0)" />
    <mutant id="mutant_682" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="numer" to="(numer &gt;= 0 ? numer : numer * -1)" />
    <mutant id="mutant_6640" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[])" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_7972" viable="true" in="org.apache.commons.lang3.time.DateUtils.addDays(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_0" viable="false" in="?" from="65382027393090L" to="-1 * 65382027393090L" />
    <mutant id="mutant_683" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="numer" to="(numer &gt;= 0 ? numer * -1 : numer)" />
    <mutant id="mutant_5310" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6641" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[])" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_7971" viable="true" in="org.apache.commons.lang3.time.DateUtils.addDays(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_3" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_684" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="denom" to="(denom &gt;= 0 ? denom * -1 : denom)" />
    <mutant id="mutant_5311" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="chars.length" to="chars.length &gt;= 0 ? chars.length * -1 : chars.length" />
    <mutant id="mutant_6642" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7974" viable="true" in="org.apache.commons.lang3.time.DateUtils.addHours(java.util.Date,int)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_2" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_685" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="denom" to="(denom &gt;= 0 ? denom : denom * -1)" />
    <mutant id="mutant_5312" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="chars.length" to="chars.length &gt;= 0 ? chars.length : chars.length * -1" />
    <mutant id="mutant_6643" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7973" viable="true" in="org.apache.commons.lang3.time.DateUtils.addHours(java.util.Date,int)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_5313" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6644" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(java.lang.String)" from="(chars.length())" to="(chars.length() &gt;= 0 ? chars.length() : chars.length() * -1)" />
    <mutant id="mutant_7976" viable="true" in="org.apache.commons.lang3.time.DateUtils.addHours(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_5314" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6645" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(java.lang.String)" from="(chars.length())" to="(chars.length() &gt;= 0 ? chars.length() * -1 : chars.length())" />
    <mutant id="mutant_7975" viable="true" in="org.apache.commons.lang3.time.DateUtils.addHours(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_680" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring((pos + 1)))" to="Integer.parseInt(str.substring((pos + 1))) &gt;= 0 ? Integer.parseInt(str.substring((pos + 1))) : Integer.parseInt(str.substring((pos + 1))) * -1" />
    <mutant id="mutant_5315" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6646" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7978" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMilliseconds(java.util.Date,int)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_681" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring((pos + 1)))" to="Integer.parseInt(str.substring((pos + 1))) &gt;= 0 ? Integer.parseInt(str.substring((pos + 1))) * -1 : Integer.parseInt(str.substring((pos + 1)))" />
    <mutant id="mutant_5316" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6647" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7977" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMilliseconds(java.util.Date,int)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_697" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_698" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_699" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7970" viable="true" in="org.apache.commons.lang3.time.DateUtils.addDays(java.util.Date,int)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_74" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator))" to="(((long)(numerator)) &gt;= 0 ? ((long)(numerator)) * -1 : ((long)(numerator)))" />
    <mutant id="mutant_17508" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18839" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_73" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="0" to="-1 * 0" />
    <mutant id="mutant_17507" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18838" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_76" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.denominator))" to="(((long)(other.denominator)) &gt;= 0 ? ((long)(other.denominator)) * -1 : ((long)(other.denominator)))" />
    <mutant id="mutant_17506" viable="false" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18837" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_75" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(numerator))" to="(((long)(numerator)) &gt;= 0 ? ((long)(numerator)) : ((long)(numerator)) * -1)" />
    <mutant id="mutant_17505" viable="false" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18836" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_78" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator))" to="(((long)(other.numerator)) &gt;= 0 ? ((long)(other.numerator)) * -1 : ((long)(other.numerator)))" />
    <mutant id="mutant_77" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.denominator))" to="(((long)(other.denominator)) &gt;= 0 ? ((long)(other.denominator)) : ((long)(other.denominator)) * -1)" />
    <mutant id="mutant_79" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(other.numerator))" to="(((long)(other.numerator)) &gt;= 0 ? ((long)(other.numerator)) : ((long)(other.numerator)) * -1)" />
    <mutant id="mutant_17509" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(prefix.length())" to="(prefix.length() &gt;= 0 ? prefix.length() * -1 : prefix.length())" />
    <mutant id="mutant_5306" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6637" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[])" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_7969" viable="true" in="org.apache.commons.lang3.time.DateUtils.addDays(java.util.Date,int)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_17500" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18831" viable="false" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5307" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6638" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[])" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_7968" viable="true" in="org.apache.commons.lang3.time.DateUtils.add(java.util.Date,int,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_18830" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5308" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6639" viable="true" in="org.apache.commons.lang3.text.StrMatcher.charSetMatcher(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5309" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_81" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(denominator))" to="(((long)(denominator)) &gt;= 0 ? ((long)(denominator)) : ((long)(denominator)) * -1)" />
    <mutant id="mutant_17504" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_18835" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_80" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="((long)(denominator))" to="(((long)(denominator)) &gt;= 0 ? ((long)(denominator)) * -1 : ((long)(denominator)))" />
    <mutant id="mutant_17503" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_18834" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_83" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="first" to="(first &gt;= 0 ? first : first * -1)" />
    <mutant id="mutant_17502" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18833" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_82" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="first" to="(first &gt;= 0 ? first * -1 : first)" />
    <mutant id="mutant_17501" viable="true" in="org.apache.commons.lang3.StringUtils.isWhitespace(java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18832" viable="false" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_693" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_7961" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_694" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_6630" viable="true" in="org.apache.commons.lang3.text.StrMatcher.isMatch(char[],int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_7960" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_695" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_5300" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6631" viable="true" in="org.apache.commons.lang3.text.StrMatcher.isMatch(char[],int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7963" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_696" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_5301" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6632" viable="true" in="org.apache.commons.lang3.text.StrMatcher.isMatch(char[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7962" viable="true" in="org.apache.commons.lang3.time.DateUtils.round(java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_5302" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6633" viable="true" in="org.apache.commons.lang3.text.StrMatcher.isMatch(char[],int)" from="buffer.length" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_7965" viable="true" in="org.apache.commons.lang3.time.DateUtils.add(java.util.Date,int,int)" from="calendarField" to="(calendarField &gt;= 0 ? calendarField * -1 : calendarField)" />
    <mutant id="mutant_690" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_5303" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6634" viable="true" in="org.apache.commons.lang3.text.StrMatcher.isMatch(char[],int)" from="buffer.length" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_7964" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_691" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5304" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6635" viable="true" in="org.apache.commons.lang3.text.StrMatcher.isMatch(char[],int)" from="isMatch(buffer, pos, 0, buffer.length)" to="isMatch(buffer, pos, 0, buffer.length) &gt;= 0 ? isMatch(buffer, pos, 0, buffer.length) : isMatch(buffer, pos, 0, buffer.length) * -1" />
    <mutant id="mutant_7967" viable="true" in="org.apache.commons.lang3.time.DateUtils.add(java.util.Date,int,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_692" viable="true" in="org.apache.commons.lang3.math.Fraction.getReducedFraction(int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_5305" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6636" viable="true" in="org.apache.commons.lang3.text.StrMatcher.isMatch(char[],int)" from="isMatch(buffer, pos, 0, buffer.length)" to="isMatch(buffer, pos, 0, buffer.length) &gt;= 0 ? isMatch(buffer, pos, 0, buffer.length) * -1 : isMatch(buffer, pos, 0, buffer.length)" />
    <mutant id="mutant_7966" viable="true" in="org.apache.commons.lang3.time.DateUtils.add(java.util.Date,int,int)" from="calendarField" to="(calendarField &gt;= 0 ? calendarField : calendarField * -1)" />
    <mutant id="mutant_18806" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18805" viable="false" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18804" viable="false" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18803" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_18809" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_18808" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_18807" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6626" viable="true" in="org.apache.commons.lang3.text.StrMatcher$TrimMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7958" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date,java.util.Date,int)" from="truncatedDate1.compareTo(truncatedDate2)" to="truncatedDate1.compareTo(truncatedDate2) &gt;= 0 ? truncatedDate1.compareTo(truncatedDate2) * -1 : truncatedDate1.compareTo(truncatedDate2)" />
    <mutant id="mutant_6627" viable="true" in="org.apache.commons.lang3.text.StrMatcher$TrimMatcher.isMatch(char[],int,int,int)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_7957" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date,java.util.Date,int)" from="truncatedDate1.compareTo(truncatedDate2)" to="truncatedDate1.compareTo(truncatedDate2) &gt;= 0 ? truncatedDate1.compareTo(truncatedDate2) : truncatedDate1.compareTo(truncatedDate2) * -1" />
    <mutant id="mutant_6628" viable="true" in="org.apache.commons.lang3.text.StrMatcher$TrimMatcher.isMatch(char[],int,int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_6629" viable="true" in="org.apache.commons.lang3.text.StrMatcher$TrimMatcher.isMatch(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_7959" viable="true" in="org.apache.commons.lang3.time.DateUtils.ceiling(java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_18802" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_18801" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18800" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7950" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Calendar,java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_6620" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_7952" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Calendar,java.util.Calendar,int)" from="truncatedCal1.compareTo(truncatedCal2)" to="truncatedCal1.compareTo(truncatedCal2) &gt;= 0 ? truncatedCal1.compareTo(truncatedCal2) : truncatedCal1.compareTo(truncatedCal2) * -1" />
    <mutant id="mutant_6621" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7951" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Calendar,java.util.Calendar,int)" from="truncatedCal1.compareTo(truncatedCal2)" to="truncatedCal1.compareTo(truncatedCal2) &gt;= 0 ? truncatedCal1.compareTo(truncatedCal2) * -1 : truncatedCal1.compareTo(truncatedCal2)" />
    <mutant id="mutant_6622" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_7954" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date,java.util.Date,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_6623" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_7953" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date,java.util.Date,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_6624" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_7956" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date,java.util.Date,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_6625" viable="true" in="org.apache.commons.lang3.text.StrMatcher$TrimMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_7955" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Date,java.util.Date,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_96" viable="true" in="org.apache.commons.lang3.math.Fraction.getNumerator()" from="numerator" to="numerator &gt;= 0 ? numerator : numerator * -1" />
    <mutant id="mutant_18817" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_95" viable="true" in="org.apache.commons.lang3.math.Fraction.getNumerator()" from="numerator" to="numerator &gt;= 0 ? numerator * -1 : numerator" />
    <mutant id="mutant_18816" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_98" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="Math.abs(((numerator) % (denominator)))" to="(numerator) % (denominator) &gt;= 0 ? (numerator) % (denominator) * -1 : (numerator) % (denominator)" />
    <mutant id="mutant_18815" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_97" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperNumerator()" from="Math.abs(((numerator) % (denominator)))" to="(numerator) % (denominator)" />
    <mutant id="mutant_18814" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_99" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_18819" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_18818" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6615" viable="false" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7947" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Calendar,java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_6616" viable="false" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_7946" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Date,java.util.Date,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6617" viable="false" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7949" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Calendar,java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_6618" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7948" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(java.util.Calendar,java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_6619" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18813" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_18812" viable="true" in="org.apache.commons.lang3.StringUtils.join(float[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18811" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18810" viable="true" in="org.apache.commons.lang3.StringUtils.join(double[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7941" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Calendar,java.util.Calendar,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6610" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7940" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Calendar,java.util.Calendar,int)" from="(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field))" to="(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field) : org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field) * -1)" />
    <mutant id="mutant_6611" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7943" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Date,java.util.Date,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_6612" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_7942" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Date,java.util.Date,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_6613" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_7945" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Date,java.util.Date,int)" from="(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field))" to="(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field) : org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field) * -1)" />
    <mutant id="mutant_6614" viable="false" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7944" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Date,java.util.Date,int)" from="(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field))" to="(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field) * -1 : org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(date1, date2, field))" />
    <mutant id="mutant_6690" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5360" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6691" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5361" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6692" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5362" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6693" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5363" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6694" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_4032" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16209" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_4031" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_4030" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16207" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_17539" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(second.length())" to="(second.length() &gt;= 0 ? second.length() * -1 : second.length())" />
    <mutant id="mutant_16208" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_17538" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(first.length())" to="(first.length() &gt;= 0 ? first.length() : first.length() * -1)" />
    <mutant id="mutant_18869" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_4029" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16201" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_17533" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)))" to="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)) &gt;= 0 ? Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)) : Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)) * -1)" />
    <mutant id="mutant_18864" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4028" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16202" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_17532" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)))" to="(Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)) &gt;= 0 ? Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)) * -1 : Math.round(((jaro + ((DEFAULT_SCALING_FACTOR * cl) * (1.0 - jaro))) * 100.0)))" />
    <mutant id="mutant_18863" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4027" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_17531" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="100.0" to="(-1 * 100.0)" />
    <mutant id="mutant_18862" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4026" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16200" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17530" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="jaro" to="(jaro &gt;= 0 ? jaro * -1 : jaro)" />
    <mutant id="mutant_18861" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4025" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16205" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17537" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(first.length())" to="(first.length() &gt;= 0 ? first.length() * -1 : first.length())" />
    <mutant id="mutant_18868" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4024" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16206" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17536" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="matchScore" to="matchScore &gt;= 0 ? matchScore * -1 : matchScore" />
    <mutant id="mutant_18867" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4023" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16203" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17535" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="matchScore" to="matchScore &gt;= 0 ? matchScore : matchScore * -1" />
    <mutant id="mutant_18866" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4022" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="seqEnd" to="(seqEnd &gt;= 0 ? seqEnd : seqEnd * -1)" />
    <mutant id="mutant_16204" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_17534" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="100.0" to="(-1 * 100.0)" />
    <mutant id="mutant_18865" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5353" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6684" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(org.apache.commons.lang3.text.StrBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5354" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_6685" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(org.apache.commons.lang3.text.StrBuilder)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() : source.length() * -1)" />
    <mutant id="mutant_5355" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_6686" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(org.apache.commons.lang3.text.StrBuilder)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() * -1 : source.length())" />
    <mutant id="mutant_5356" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6687" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(org.apache.commons.lang3.text.StrBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5357" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6688" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(org.apache.commons.lang3.text.StrBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_18860" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5358" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6689" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5359" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6680" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5350" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6681" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_5351" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6682" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5352" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6683" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_4021" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="seqEnd" to="(seqEnd &gt;= 0 ? seqEnd * -1 : seqEnd)" />
    <mutant id="mutant_4020" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16218" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16219" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="8" to="(-1 * 8)" />
    <mutant id="mutant_17549" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m1.length())" to="(m1.length() &gt;= 0 ? m1.length() : m1.length() * -1)" />
    <mutant id="mutant_4018" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_16212" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17544" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18875" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4017" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_16213" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_17543" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_18874" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_4016" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_16210" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17542" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(shorter.length())" to="(shorter.length() &gt;= 0 ? shorter.length() * -1 : shorter.length())" />
    <mutant id="mutant_18873" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_4015" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="seqEnd" to="(seqEnd &gt;= 0 ? seqEnd : seqEnd * -1)" />
    <mutant id="mutant_16211" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17541" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(shorter.length())" to="(shorter.length() &gt;= 0 ? shorter.length() : shorter.length() * -1)" />
    <mutant id="mutant_18872" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4014" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="seqEnd" to="(seqEnd &gt;= 0 ? seqEnd * -1 : seqEnd)" />
    <mutant id="mutant_16216" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17548" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="halflength" to="(halflength &gt;= 0 ? halflength * -1 : halflength)" />
    <mutant id="mutant_18879" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_4013" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_16217" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17547" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="halflength" to="(halflength &gt;= 0 ? halflength : halflength * -1)" />
    <mutant id="mutant_18878" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_4012" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_16214" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_17546" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="halflength" to="(halflength &gt;= 0 ? halflength * -1 : halflength)" />
    <mutant id="mutant_18877" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_4011" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_16215" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17545" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="halflength" to="(halflength &gt;= 0 ? halflength : halflength * -1)" />
    <mutant id="mutant_18876" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_5342" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6673" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5343" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6674" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5344" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6675" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5345" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6676" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5346" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6677" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_17540" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(second.length())" to="(second.length() &gt;= 0 ? second.length() : second.length() * -1)" />
    <mutant id="mutant_18871" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5347" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_6678" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_18870" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5348" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_6679" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_4019" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_5349" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6670" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5340" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6671" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_5341" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6672" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_4010" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_17519" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.score(first, second)" to="org.apache.commons.lang3.StringUtils.score(first, second) &gt;= 0 ? org.apache.commons.lang3.StringUtils.score(first, second) : org.apache.commons.lang3.StringUtils.score(first, second) * -1" />
    <mutant id="mutant_17518" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.score(first, second)" to="org.apache.commons.lang3.StringUtils.score(first, second) &gt;= 0 ? org.apache.commons.lang3.StringUtils.score(first, second) * -1 : org.apache.commons.lang3.StringUtils.score(first, second)" />
    <mutant id="mutant_18849" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_17517" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="0.1" to="-1 * 0.1" />
    <mutant id="mutant_18848" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17516" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="prefix.length()" to="(prefix.length() &gt;= 0 ? prefix.length() : prefix.length() * -1)" />
    <mutant id="mutant_18847" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_4007" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_5339" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_17511" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_18842" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_4006" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_17510" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(prefix.length())" to="(prefix.length() &gt;= 0 ? prefix.length() : prefix.length() * -1)" />
    <mutant id="mutant_18841" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4005" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_18840" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4004" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4003" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_17515" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="prefix.length()" to="(prefix.length() &gt;= 0 ? prefix.length() * -1 : prefix.length())" />
    <mutant id="mutant_18846" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems : noOfItems * -1)" />
    <mutant id="mutant_4002" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_17514" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18845" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4001" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_17513" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18844" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4000" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="seqEnd" to="(seqEnd &gt;= 0 ? seqEnd : seqEnd * -1)" />
    <mutant id="mutant_17512" viable="true" in="org.apache.commons.lang3.StringUtils.startsWith(java.lang.CharSequence,java.lang.CharSequence,boolean)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_18843" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5331" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6662" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7994" viable="true" in="org.apache.commons.lang3.time.DateUtils.addWeeks(java.util.Date,int)" from="Calendar.WEEK_OF_YEAR" to="(Calendar.WEEK_OF_YEAR &gt;= 0 ? Calendar.WEEK_OF_YEAR * -1 : Calendar.WEEK_OF_YEAR)" />
    <mutant id="mutant_5332" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6663" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7993" viable="true" in="org.apache.commons.lang3.time.DateUtils.addWeeks(java.util.Date,int)" from="Calendar.WEEK_OF_YEAR" to="(Calendar.WEEK_OF_YEAR &gt;= 0 ? Calendar.WEEK_OF_YEAR : Calendar.WEEK_OF_YEAR * -1)" />
    <mutant id="mutant_5333" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6664" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7996" viable="true" in="org.apache.commons.lang3.time.DateUtils.addWeeks(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_5334" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6665" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7995" viable="true" in="org.apache.commons.lang3.time.DateUtils.addWeeks(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_5335" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6666" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7998" viable="true" in="org.apache.commons.lang3.time.DateUtils.addYears(java.util.Date,int)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_5336" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_6667" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() * -1 : source.length())" />
    <mutant id="mutant_7997" viable="true" in="org.apache.commons.lang3.time.DateUtils.addYears(java.util.Date,int)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_4009" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_5337" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_6668" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder)" from="source.length()" to="(source.length() &gt;= 0 ? source.length() : source.length() * -1)" />
    <mutant id="mutant_4008" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_5338" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6669" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7999" viable="true" in="org.apache.commons.lang3.time.DateUtils.addYears(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_7990" viable="true" in="org.apache.commons.lang3.time.DateUtils.addSeconds(java.util.Date,int)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_6660" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7992" viable="true" in="org.apache.commons.lang3.time.DateUtils.addSeconds(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_5330" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_6661" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7991" viable="true" in="org.apache.commons.lang3.time.DateUtils.addSeconds(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_17529" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="jaro" to="(jaro &gt;= 0 ? jaro : jaro * -1)" />
    <mutant id="mutant_17528" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="1.0" to="(-1 * 1.0)" />
    <mutant id="mutant_18859" viable="false" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17527" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="cl" to="(cl &gt;= 0 ? cl : cl * -1)" />
    <mutant id="mutant_18858" viable="false" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5328" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6659" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_17522" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="jaro" to="(jaro &gt;= 0 ? jaro : jaro * -1)" />
    <mutant id="mutant_18853" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_5329" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_17521" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second)" to="org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second) &gt;= 0 ? org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second) : org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second) * -1" />
    <mutant id="mutant_18852" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_17520" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second)" to="org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second) &gt;= 0 ? org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second) * -1 : org.apache.commons.lang3.StringUtils.commonPrefixLength(first, second)" />
    <mutant id="mutant_18851" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_18850" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="noOfItems" to="(noOfItems &gt;= 0 ? noOfItems * -1 : noOfItems)" />
    <mutant id="mutant_17526" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="cl" to="(cl &gt;= 0 ? cl * -1 : cl)" />
    <mutant id="mutant_18857" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_17525" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="DEFAULT_SCALING_FACTOR" to="(DEFAULT_SCALING_FACTOR &gt;= 0 ? DEFAULT_SCALING_FACTOR * -1 : DEFAULT_SCALING_FACTOR)" />
    <mutant id="mutant_18856" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_17524" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="DEFAULT_SCALING_FACTOR" to="(DEFAULT_SCALING_FACTOR &gt;= 0 ? DEFAULT_SCALING_FACTOR : DEFAULT_SCALING_FACTOR * -1)" />
    <mutant id="mutant_18855" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17523" viable="true" in="org.apache.commons.lang3.StringUtils.getJaroWinklerDistance(java.lang.CharSequence,java.lang.CharSequence)" from="jaro" to="(jaro &gt;= 0 ? jaro * -1 : jaro)" />
    <mutant id="mutant_18854" viable="true" in="org.apache.commons.lang3.StringUtils.join(int[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5320" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6651" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7983" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMinutes(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_5321" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6652" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7982" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMinutes(java.util.Date,int)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_5322" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6653" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_7985" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMonths(java.util.Date,int)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_5323" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6654" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_7984" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMinutes(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_5324" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6655" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7987" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMonths(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount : amount * -1)" />
    <mutant id="mutant_5325" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6656" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7986" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMonths(java.util.Date,int)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_5326" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6657" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7989" viable="true" in="org.apache.commons.lang3.time.DateUtils.addSeconds(java.util.Date,int)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_5327" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[])" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6658" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.replaceIn(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7988" viable="true" in="org.apache.commons.lang3.time.DateUtils.addMonths(java.util.Date,int)" from="amount" to="(amount &gt;= 0 ? amount * -1 : amount)" />
    <mutant id="mutant_4076" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_4075" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_4074" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_4073" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_4072" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_4071" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="(entityValue &gt;= 0 ? entityValue * -1 : entityValue)" />
    <mutant id="mutant_4070" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="(entityValue &gt;= 0 ? entityValue : entityValue * -1)" />
    <mutant id="mutant_16245" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_17577" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="3.0" to="(-1 * 3.0)" />
    <mutant id="mutant_16246" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17576" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((double)(m1.length()))" to="(((double)(m1.length())) &gt;= 0 ? ((double)(m1.length())) * -1 : ((double)(m1.length())))" />
    <mutant id="mutant_16243" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_17575" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((double)(m1.length()))" to="(((double)(m1.length())) &gt;= 0 ? ((double)(m1.length())) : ((double)(m1.length())) * -1)" />
    <mutant id="mutant_16244" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_17574" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions" to="(transpositions &gt;= 0 ? transpositions : transpositions * -1)" />
    <mutant id="mutant_4069" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_16249" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4068" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4067" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="(entityValue &gt;= 0 ? entityValue * -1 : entityValue)" />
    <mutant id="mutant_16247" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_17579" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="dist" to="dist &gt;= 0 ? dist : dist * -1" />
    <mutant id="mutant_4066" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="(entityValue &gt;= 0 ? entityValue : entityValue * -1)" />
    <mutant id="mutant_16248" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_17578" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="dist" to="dist &gt;= 0 ? dist * -1 : dist" />
    <mutant id="mutant_5397" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_5398" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_5399" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_16241" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_17573" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions" to="(transpositions &gt;= 0 ? transpositions * -1 : transpositions)" />
    <mutant id="mutant_16242" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17572" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m1.length())" to="(m1.length() &gt;= 0 ? m1.length() * -1 : m1.length())" />
    <mutant id="mutant_17571" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m1.length())" to="(m1.length() &gt;= 0 ? m1.length() : m1.length() * -1)" />
    <mutant id="mutant_16240" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_17570" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((double)(longer.length()))" to="(((double)(longer.length())) &gt;= 0 ? ((double)(longer.length())) * -1 : ((double)(longer.length())))" />
    <mutant id="mutant_5390" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5391" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5392" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_5393" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5394" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5395" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5396" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_4065" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="65535" to="(-1 * 65535)" />
    <mutant id="mutant_4064" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="(entityValue &gt;= 0 ? entityValue * -1 : entityValue)" />
    <mutant id="mutant_4063" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="(entityValue &gt;= 0 ? entityValue : entityValue * -1)" />
    <mutant id="mutant_4062" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_4061" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Integer.parseInt(input.subSequence(start, end).toString(), 10)" to="Integer.parseInt(input.subSequence(start, end).toString(), 10) &gt;= 0 ? Integer.parseInt(input.subSequence(start, end).toString(), 10) : Integer.parseInt(input.subSequence(start, end).toString(), 10) * -1" />
    <mutant id="mutant_4060" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Integer.parseInt(input.subSequence(start, end).toString(), 10)" to="Integer.parseInt(input.subSequence(start, end).toString(), 10) &gt;= 0 ? Integer.parseInt(input.subSequence(start, end).toString(), 10) * -1 : Integer.parseInt(input.subSequence(start, end).toString(), 10)" />
    <mutant id="mutant_16256" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_17588" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_16257" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17587" viable="true" in="org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_16254" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_17586" viable="true" in="org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_4059" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="10" to="(-1 * 10)" />
    <mutant id="mutant_16255" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit : dstInit * -1" />
    <mutant id="mutant_17585" viable="true" in="org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)" from="4" to="-1 * 4" />
    <mutant id="mutant_4058" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_4057" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_4056" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_16258" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4055" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_16259" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex : nHex * -1)" />
    <mutant id="mutant_17589" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_5386" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_17580" viable="true" in="org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length()" to="org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length() &gt;= 0 ? org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length() : org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length() * -1" />
    <mutant id="mutant_5387" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5388" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5389" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_16252" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17584" viable="true" in="org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_16253" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_17583" viable="true" in="org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)" from="result" to="(result &gt;= 0 ? result * -1 : result)" />
    <mutant id="mutant_16250" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_17582" viable="true" in="org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)" from="result" to="(result &gt;= 0 ? result : result * -1)" />
    <mutant id="mutant_16251" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17581" viable="true" in="org.apache.commons.lang3.StringUtils.commonPrefixLength(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length()" to="org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length() &gt;= 0 ? org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length() * -1 : org.apache.commons.lang3.StringUtils.getCommonPrefix(first.toString(), second.toString()).length()" />
    <mutant id="mutant_27" viable="false" in="org.apache.commons.lang3.math.Fraction(int,int)" from="this.numerator" to="this.numerator &gt;= 0 ? this.numerator : this.numerator * -1" />
    <mutant id="mutant_26" viable="false" in="org.apache.commons.lang3.math.Fraction(int,int)" from="this.numerator" to="this.numerator &gt;= 0 ? this.numerator * -1 : this.numerator" />
    <mutant id="mutant_29" viable="true" in="org.apache.commons.lang3.math.Fraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator : numerator * -1" />
    <mutant id="mutant_5380" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_28" viable="true" in="org.apache.commons.lang3.math.Fraction(int,int)" from="numerator" to="numerator &gt;= 0 ? numerator * -1 : numerator" />
    <mutant id="mutant_5381" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_5382" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_5383" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5384" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5385" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_4054" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="entityValue &gt;= 0 ? entityValue * -1 : entityValue" />
    <mutant id="mutant_4053" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="entityValue &gt;= 0 ? entityValue : entityValue * -1" />
    <mutant id="mutant_21" viable="false" in="?" from="3" to="(-1 * 3)" />
    <mutant id="mutant_4052" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Integer.parseInt(input.subSequence(start, end).toString(), 16)" to="Integer.parseInt(input.subSequence(start, end).toString(), 16) &gt;= 0 ? Integer.parseInt(input.subSequence(start, end).toString(), 16) : Integer.parseInt(input.subSequence(start, end).toString(), 16) * -1" />
    <mutant id="mutant_16229" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="255L" to="(-1 * 255L)" />
    <mutant id="mutant_20" viable="false" in="?" from="5" to="(-1 * 5)" />
    <mutant id="mutant_4051" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="Integer.parseInt(input.subSequence(start, end).toString(), 16)" to="Integer.parseInt(input.subSequence(start, end).toString(), 16) &gt;= 0 ? Integer.parseInt(input.subSequence(start, end).toString(), 16) * -1 : Integer.parseInt(input.subSequence(start, end).toString(), 16)" />
    <mutant id="mutant_23" viable="false" in="?" from="4" to="(-1 * 4)" />
    <mutant id="mutant_4050" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="16" to="(-1 * 16)" />
    <mutant id="mutant_22" viable="false" in="?" from="5" to="(-1 * 5)" />
    <mutant id="mutant_25" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_24" viable="false" in="?" from="5" to="(-1 * 5)" />
    <mutant id="mutant_16223" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17555" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="0.0" to="-1 * 0.0" />
    <mutant id="mutant_18886" viable="false" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16224" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17554" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18885" viable="false" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4049" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16221" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17553" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m2.length())" to="(m2.length() &gt;= 0 ? m2.length() * -1 : m2.length())" />
    <mutant id="mutant_18884" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_4048" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16222" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="255L" to="(-1 * 255L)" />
    <mutant id="mutant_17552" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m2.length())" to="(m2.length() &gt;= 0 ? m2.length() : m2.length() * -1)" />
    <mutant id="mutant_18883" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_4047" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_16227" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17559" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m2.length())" to="(m2.length() &gt;= 0 ? m2.length() * -1 : m2.length())" />
    <mutant id="mutant_4046" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_16228" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17558" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m2.length())" to="(m2.length() &gt;= 0 ? m2.length() : m2.length() * -1)" />
    <mutant id="mutant_18889" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4045" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="entityValue &gt;= 0 ? entityValue * -1 : entityValue" />
    <mutant id="mutant_16225" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_17557" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m1.length())" to="(m1.length() &gt;= 0 ? m1.length() * -1 : m1.length())" />
    <mutant id="mutant_18888" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4044" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="entityValue" to="entityValue &gt;= 0 ? entityValue : entityValue * -1" />
    <mutant id="mutant_16226" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_17556" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m1.length())" to="(m1.length() &gt;= 0 ? m1.length() : m1.length() * -1)" />
    <mutant id="mutant_18887" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5375" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_5376" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.CharSequence,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5377" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.CharSequence,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5378" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5379" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(java.lang.CharSequence,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_17551" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18882" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16220" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17550" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m1.length())" to="(m1.length() &gt;= 0 ? m1.length() * -1 : m1.length())" />
    <mutant id="mutant_18881" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18880" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_16" viable="false" in="?" from="4" to="(-1 * 4)" />
    <mutant id="mutant_15" viable="false" in="?" from="3" to="(-1 * 3)" />
    <mutant id="mutant_18" viable="false" in="?" from="5" to="(-1 * 5)" />
    <mutant id="mutant_17" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5370" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_5371" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_19" viable="false" in="?" from="2" to="(-1 * 2)" />
    <mutant id="mutant_5372" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(float)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_5373" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(float)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_5374" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4043" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_4042" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_10" viable="false" in="?" from="3" to="(-1 * 3)" />
    <mutant id="mutant_4041" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_4040" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="seqEnd" to="(seqEnd &gt;= 0 ? seqEnd : seqEnd * -1)" />
    <mutant id="mutant_12" viable="false" in="?" from="4" to="(-1 * 4)" />
    <mutant id="mutant_11" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_14" viable="false" in="?" from="4" to="(-1 * 4)" />
    <mutant id="mutant_13" viable="false" in="?" from="2" to="(-1 * 2)" />
    <mutant id="mutant_16234" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_17566" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((double)(shorter.length()))" to="(((double)(shorter.length())) &gt;= 0 ? ((double)(shorter.length())) * -1 : ((double)(shorter.length())))" />
    <mutant id="mutant_18897" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4039" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="seqEnd" to="(seqEnd &gt;= 0 ? seqEnd * -1 : seqEnd)" />
    <mutant id="mutant_16235" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_17565" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((double)(shorter.length()))" to="(((double)(shorter.length())) &gt;= 0 ? ((double)(shorter.length())) : ((double)(shorter.length())) * -1)" />
    <mutant id="mutant_18896" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4038" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16232" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_17564" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m1.length())" to="(m1.length() &gt;= 0 ? m1.length() * -1 : m1.length())" />
    <mutant id="mutant_18895" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4037" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16233" viable="false" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_17563" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m1.length())" to="(m1.length() &gt;= 0 ? m1.length() : m1.length() * -1)" />
    <mutant id="mutant_18894" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4036" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16238" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_4035" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16239" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_17569" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="((double)(longer.length()))" to="(((double)(longer.length())) &gt;= 0 ? ((double)(longer.length())) : ((double)(longer.length())) * -1)" />
    <mutant id="mutant_4034" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_16236" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_17568" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m2.length())" to="(m2.length() &gt;= 0 ? m2.length() * -1 : m2.length())" />
    <mutant id="mutant_18899" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_4033" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_16237" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_17567" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="(m2.length())" to="(m2.length() &gt;= 0 ? m2.length() : m2.length() * -1)" />
    <mutant id="mutant_18898" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],java.lang.String,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_5364" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6695" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(substitute(buf, offset, length, null))" to="(substitute(buf, offset, length, null) &gt;= 0 ? substitute(buf, offset, length, null) : substitute(buf, offset, length, null) * -1)" />
    <mutant id="mutant_5365" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6696" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int)" from="(substitute(buf, offset, length, null))" to="(substitute(buf, offset, length, null) &gt;= 0 ? substitute(buf, offset, length, null) * -1 : substitute(buf, offset, length, null))" />
    <mutant id="mutant_5366" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6697" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5367" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6698" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="-1 * 0" />
    <mutant id="mutant_5368" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_6699" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_16230" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17562" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.transpositions(m1, m2)" to="org.apache.commons.lang3.StringUtils.transpositions(m1, m2) &gt;= 0 ? org.apache.commons.lang3.StringUtils.transpositions(m1, m2) : org.apache.commons.lang3.StringUtils.transpositions(m1, m2) * -1" />
    <mutant id="mutant_18893" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5369" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(char[],int,int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_16231" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17561" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.transpositions(m1, m2)" to="org.apache.commons.lang3.StringUtils.transpositions(m1, m2) &gt;= 0 ? org.apache.commons.lang3.StringUtils.transpositions(m1, m2) * -1 : org.apache.commons.lang3.StringUtils.transpositions(m1, m2)" />
    <mutant id="mutant_18892" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17560" viable="true" in="org.apache.commons.lang3.StringUtils.score(java.lang.CharSequence,java.lang.CharSequence)" from="0.0" to="-1 * 0.0" />
    <mutant id="mutant_18891" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18890" viable="true" in="org.apache.commons.lang3.StringUtils.join(java.lang.Object[],char,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_49" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(denominator))" to="(((float)(denominator)) &gt;= 0 ? ((float)(denominator)) : ((float)(denominator)) * -1)" />
    <mutant id="mutant_48" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(denominator))" to="(((float)(denominator)) &gt;= 0 ? ((float)(denominator)) * -1 : ((float)(denominator)))" />
    <mutant id="mutant_41" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="(other.getDenominator())" to="(other.getDenominator() &gt;= 0 ? other.getDenominator() : other.getDenominator() * -1)" />
    <mutant id="mutant_40" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="(other.getDenominator())" to="(other.getDenominator() &gt;= 0 ? other.getDenominator() * -1 : other.getDenominator())" />
    <mutant id="mutant_43" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator))" to="(((double)(numerator)) &gt;= 0 ? ((double)(numerator)) : ((double)(numerator)) * -1)" />
    <mutant id="mutant_42" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(numerator))" to="(((double)(numerator)) &gt;= 0 ? ((double)(numerator)) * -1 : ((double)(numerator)))" />
    <mutant id="mutant_45" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(denominator))" to="(((double)(denominator)) &gt;= 0 ? ((double)(denominator)) : ((double)(denominator)) * -1)" />
    <mutant id="mutant_44" viable="true" in="org.apache.commons.lang3.math.Fraction.doubleValue()" from="((double)(denominator))" to="(((double)(denominator)) &gt;= 0 ? ((double)(denominator)) * -1 : ((double)(denominator)))" />
    <mutant id="mutant_47" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator))" to="(((float)(numerator)) &gt;= 0 ? ((float)(numerator)) : ((float)(numerator)) * -1)" />
    <mutant id="mutant_46" viable="true" in="org.apache.commons.lang3.math.Fraction.floatValue()" from="((float)(numerator))" to="(((float)(numerator)) &gt;= 0 ? ((float)(numerator)) * -1 : ((float)(numerator)))" />
    <mutant id="mutant_16289" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_16287" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_16288" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_50" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x))" to="(((long)(x)) &gt;= 0 ? ((long)(x)) : ((long)(x)) * -1)" />
    <mutant id="mutant_16281" viable="false" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_16282" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_16280" viable="false" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_16285" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_16286" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_16283" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_16284" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_38" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="(getDenominator())" to="(getDenominator() &gt;= 0 ? getDenominator() * -1 : getDenominator())" />
    <mutant id="mutant_37" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="(other.getNumerator())" to="(other.getNumerator() &gt;= 0 ? other.getNumerator() * -1 : other.getNumerator())" />
    <mutant id="mutant_39" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="(getDenominator())" to="(getDenominator() &gt;= 0 ? getDenominator() : getDenominator() * -1)" />
    <mutant id="mutant_30" viable="false" in="org.apache.commons.lang3.math.Fraction(int,int)" from="this.denominator" to="this.denominator &gt;= 0 ? this.denominator * -1 : this.denominator" />
    <mutant id="mutant_32" viable="true" in="org.apache.commons.lang3.math.Fraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator * -1 : denominator" />
    <mutant id="mutant_31" viable="false" in="org.apache.commons.lang3.math.Fraction(int,int)" from="this.denominator" to="this.denominator &gt;= 0 ? this.denominator : this.denominator * -1" />
    <mutant id="mutant_34" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="(getNumerator())" to="(getNumerator() &gt;= 0 ? getNumerator() : getNumerator() * -1)" />
    <mutant id="mutant_33" viable="true" in="org.apache.commons.lang3.math.Fraction(int,int)" from="denominator" to="denominator &gt;= 0 ? denominator : denominator * -1" />
    <mutant id="mutant_36" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="(other.getNumerator())" to="(other.getNumerator() &gt;= 0 ? other.getNumerator() : other.getNumerator() * -1)" />
    <mutant id="mutant_35" viable="true" in="org.apache.commons.lang3.math.Fraction.equals(java.lang.Object)" from="(getNumerator())" to="(getNumerator() &gt;= 0 ? getNumerator() * -1 : getNumerator())" />
    <mutant id="mutant_16298" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts : nInts * -1)" />
    <mutant id="mutant_16299" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_4099" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_16292" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16293" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16290" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16291" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16296" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16297" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="nInts" to="(nInts &gt;= 0 ? nInts * -1 : nInts)" />
    <mutant id="mutant_16294" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16295" viable="true" in="org.apache.commons.lang3.Conversion.intArrayToLong(int[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4090" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="remaining" to="(remaining &gt;= 0 ? remaining * -1 : remaining)" />
    <mutant id="mutant_63" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((int)(s))" to="((int)(s)) &gt;= 0 ? ((int)(s)) : ((int)(s)) * -1" />
    <mutant id="mutant_4098" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_62" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((int)(s))" to="((int)(s)) &gt;= 0 ? ((int)(s)) * -1 : ((int)(s))" />
    <mutant id="mutant_4097" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_65" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_4096" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_64" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="0" to="-1 * 0" />
    <mutant id="mutant_4095" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_67" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="(other.numerator)" to="(other.numerator &gt;= 0 ? other.numerator * -1 : other.numerator)" />
    <mutant id="mutant_4094" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_66" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_4093" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_69" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_4092" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_68" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="(other.numerator)" to="(other.numerator &gt;= 0 ? other.numerator : other.numerator * -1)" />
    <mutant id="mutant_4091" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16267" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos : dstPos * -1)" />
    <mutant id="mutant_17599" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_16268" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="15L" to="(-1 * 15L)" />
    <mutant id="mutant_17598" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16265" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_17597" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16266" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="dstPos" to="(dstPos &gt;= 0 ? dstPos * -1 : dstPos)" />
    <mutant id="mutant_17596" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_70" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_72" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="(other.denominator)" to="(other.denominator &gt;= 0 ? other.denominator : other.denominator * -1)" />
    <mutant id="mutant_4089" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="remaining" to="(remaining &gt;= 0 ? remaining : remaining * -1)" />
    <mutant id="mutant_16269" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_71" viable="true" in="org.apache.commons.lang3.math.Fraction.compareTo(org.apache.commons.lang3.math.Fraction)" from="(other.denominator)" to="(other.denominator &gt;= 0 ? other.denominator * -1 : other.denominator)" />
    <mutant id="mutant_4088" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_17591" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16260" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="nHex" to="(nHex &gt;= 0 ? nHex * -1 : nHex)" />
    <mutant id="mutant_17590" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_16263" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17595" viable="false" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_16264" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17594" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_16261" viable="false" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17593" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_16262" viable="false" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17592" viable="true" in="org.apache.commons.lang3.StringUtils.countMatches(java.lang.CharSequence,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_59" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="s" to="(s &gt;= 0 ? s : s * -1)" />
    <mutant id="mutant_52" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(y))" to="(((long)(y)) &gt;= 0 ? ((long)(y)) * -1 : ((long)(y)))" />
    <mutant id="mutant_4087" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_51" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(x))" to="(((long)(x)) &gt;= 0 ? ((long)(x)) * -1 : ((long)(x)))" />
    <mutant id="mutant_4086" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_54" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="s" to="(s &gt;= 0 ? s * -1 : s)" />
    <mutant id="mutant_4085" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_53" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="((long)(y))" to="(((long)(y)) &gt;= 0 ? ((long)(y)) : ((long)(y)) * -1)" />
    <mutant id="mutant_4084" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_56" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_4083" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_55" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="s" to="(s &gt;= 0 ? s : s * -1)" />
    <mutant id="mutant_4082" viable="true" in="org.apache.commons.lang3.text.translate.OctalUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_58" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="s" to="(s &gt;= 0 ? s * -1 : s)" />
    <mutant id="mutant_4081" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_57" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_4080" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_16278" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16279" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16276" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_16277" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="15L" to="(-1 * 15L)" />
    <mutant id="mutant_4079" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="-1 * 1" />
    <mutant id="mutant_61" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_4078" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_60" viable="true" in="org.apache.commons.lang3.math.Fraction.addAndCheck(int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_4077" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="-1 * 1" />
    <mutant id="mutant_16270" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_16271" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16274" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" to="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) &gt;= 0 ? org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) : org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) * -1)" />
    <mutant id="mutant_16275" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_16272" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16273" viable="true" in="org.apache.commons.lang3.Conversion.hexToLong(java.lang.String,int,long,int,int)" from="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" to="(org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) &gt;= 0 ? org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))) * -1 : org.apache.commons.lang3.Conversion.hexDigitToInt(src.charAt((i + srcPos))))" />
    <mutant id="mutant_16190" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length * -1 : src.length)" />
    <mutant id="mutant_16188" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_16189" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_16182" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="out" to="(out &gt;= 0 ? out * -1 : out)" />
    <mutant id="mutant_16183" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="out" to="(out &gt;= 0 ? out : out * -1)" />
    <mutant id="mutant_16180" viable="false" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="out" to="out &gt;= 0 ? out * -1 : out" />
    <mutant id="mutant_16181" viable="false" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="out" to="out &gt;= 0 ? out : out * -1" />
    <mutant id="mutant_16186" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits * -1 : bits)" />
    <mutant id="mutant_16187" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="bits" to="(bits &gt;= 0 ? bits : bits * -1)" />
    <mutant id="mutant_16184" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask : mask * -1)" />
    <mutant id="mutant_16185" viable="true" in="org.apache.commons.lang3.Conversion.binaryToLong(boolean[],int,long,int,int)" from="mask" to="(mask &gt;= 0 ? mask * -1 : mask)" />
    <mutant id="mutant_16199" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="dstInit" to="dstInit &gt;= 0 ? dstInit * -1 : dstInit" />
    <mutant id="mutant_16193" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos : srcPos * -1)" />
    <mutant id="mutant_16194" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="srcPos" to="(srcPos &gt;= 0 ? srcPos * -1 : srcPos)" />
    <mutant id="mutant_16191" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="(src.length)" to="(src.length &gt;= 0 ? src.length : src.length * -1)" />
    <mutant id="mutant_16192" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16197" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes * -1 : nBytes)" />
    <mutant id="mutant_16198" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="nBytes" to="(nBytes &gt;= 0 ? nBytes : nBytes * -1)" />
    <mutant id="mutant_16195" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_16196" viable="true" in="org.apache.commons.lang3.Conversion.byteArrayToLong(byte[],int,long,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_602" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="((long)(denominator))" to="(((long)(denominator)) &gt;= 0 ? ((long)(denominator)) : ((long)(denominator)) * -1)" />
    <mutant id="mutant_603" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_604" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_605" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numeratorValue" to="(numeratorValue &gt;= 0 ? numeratorValue * -1 : numeratorValue)" />
    <mutant id="mutant_600" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="whole" to="(whole &gt;= 0 ? whole * -1 : whole)" />
    <mutant id="mutant_601" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="((long)(denominator))" to="(((long)(denominator)) &gt;= 0 ? ((long)(denominator)) * -1 : ((long)(denominator)))" />
    <mutant id="mutant_606" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numeratorValue" to="(numeratorValue &gt;= 0 ? numeratorValue : numeratorValue * -1)" />
    <mutant id="mutant_607" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_608" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_609" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numeratorValue" to="(numeratorValue &gt;= 0 ? numeratorValue * -1 : numeratorValue)" />
    <mutant id="mutant_613" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="((int)(numeratorValue))" to="(((int)(numeratorValue)) &gt;= 0 ? ((int)(numeratorValue)) * -1 : ((int)(numeratorValue)))" />
    <mutant id="mutant_614" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="((int)(numeratorValue))" to="(((int)(numeratorValue)) &gt;= 0 ? ((int)(numeratorValue)) : ((int)(numeratorValue)) * -1)" />
    <mutant id="mutant_615" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_616" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_610" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="numeratorValue" to="(numeratorValue &gt;= 0 ? numeratorValue : numeratorValue * -1)" />
    <mutant id="mutant_611" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_612" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(int,int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_617" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="str.indexOf('.')" to="str.indexOf('.') &gt;= 0 ? str.indexOf('.') : str.indexOf('.') * -1" />
    <mutant id="mutant_618" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="str.indexOf('.')" to="str.indexOf('.') &gt;= 0 ? str.indexOf('.') * -1 : str.indexOf('.')" />
    <mutant id="mutant_619" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_624" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_625" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_626" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="str.indexOf(' ')" to="str.indexOf(' ') &gt;= 0 ? str.indexOf(' ') * -1 : str.indexOf(' ')" />
    <mutant id="mutant_627" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="str.indexOf(' ')" to="str.indexOf(' ') &gt;= 0 ? str.indexOf(' ') : str.indexOf(' ') * -1" />
    <mutant id="mutant_620" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_621" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_622" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Double.parseDouble(str)" to="(Double.parseDouble(str) &gt;= 0 ? Double.parseDouble(str) : Double.parseDouble(str) * -1)" />
    <mutant id="mutant_623" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Double.parseDouble(str)" to="(Double.parseDouble(str) &gt;= 0 ? Double.parseDouble(str) * -1 : Double.parseDouble(str))" />
    <mutant id="mutant_628" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_629" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_635" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring(0, pos))" to="Integer.parseInt(str.substring(0, pos)) &gt;= 0 ? Integer.parseInt(str.substring(0, pos)) * -1 : Integer.parseInt(str.substring(0, pos))" />
    <mutant id="mutant_636" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_637" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_638" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_631" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_632" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_633" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_634" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring(0, pos))" to="Integer.parseInt(str.substring(0, pos)) &gt;= 0 ? Integer.parseInt(str.substring(0, pos)) : Integer.parseInt(str.substring(0, pos)) * -1" />
    <mutant id="mutant_639" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_630" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_646" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_647" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_648" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_649" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring(0, pos))" to="Integer.parseInt(str.substring(0, pos)) &gt;= 0 ? Integer.parseInt(str.substring(0, pos)) : Integer.parseInt(str.substring(0, pos)) * -1" />
    <mutant id="mutant_642" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="str.indexOf('/')" to="str.indexOf('/') &gt;= 0 ? str.indexOf('/') : str.indexOf('/') * -1" />
    <mutant id="mutant_643" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_644" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_645" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6725" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6726" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_6727" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_6728" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6729" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_640" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_641" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="str.indexOf('/')" to="str.indexOf('/') &gt;= 0 ? str.indexOf('/') * -1 : str.indexOf('/')" />
    <mutant id="mutant_6720" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_6721" viable="false" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_6722" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_6723" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_6724" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_657" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="whole" to="(whole &gt;= 0 ? whole * -1 : whole)" />
    <mutant id="mutant_658" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="numer" to="(numer &gt;= 0 ? numer : numer * -1)" />
    <mutant id="mutant_659" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="numer" to="(numer &gt;= 0 ? numer * -1 : numer)" />
    <mutant id="mutant_653" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_654" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring((pos + 1)))" to="Integer.parseInt(str.substring((pos + 1))) &gt;= 0 ? Integer.parseInt(str.substring((pos + 1))) : Integer.parseInt(str.substring((pos + 1))) * -1" />
    <mutant id="mutant_655" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring((pos + 1)))" to="Integer.parseInt(str.substring((pos + 1))) &gt;= 0 ? Integer.parseInt(str.substring((pos + 1))) * -1 : Integer.parseInt(str.substring((pos + 1)))" />
    <mutant id="mutant_656" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="whole" to="(whole &gt;= 0 ? whole : whole * -1)" />
    <mutant id="mutant_6714" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd : bufEnd * -1)" />
    <mutant id="mutant_6715" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pfxMatcher.isMatch(chars, pos, offset, bufEnd)" to="pfxMatcher.isMatch(chars, pos, offset, bufEnd) &gt;= 0 ? pfxMatcher.isMatch(chars, pos, offset, bufEnd) * -1 : pfxMatcher.isMatch(chars, pos, offset, bufEnd)" />
    <mutant id="mutant_6716" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pfxMatcher.isMatch(chars, pos, offset, bufEnd)" to="pfxMatcher.isMatch(chars, pos, offset, bufEnd) &gt;= 0 ? pfxMatcher.isMatch(chars, pos, offset, bufEnd) : pfxMatcher.isMatch(chars, pos, offset, bufEnd) * -1" />
    <mutant id="mutant_6717" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startMatchLen" to="(startMatchLen &gt;= 0 ? startMatchLen : startMatchLen * -1)" />
    <mutant id="mutant_6718" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="startMatchLen" to="(startMatchLen &gt;= 0 ? startMatchLen * -1 : startMatchLen)" />
    <mutant id="mutant_6719" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_650" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring(0, pos))" to="Integer.parseInt(str.substring(0, pos)) &gt;= 0 ? Integer.parseInt(str.substring(0, pos)) * -1 : Integer.parseInt(str.substring(0, pos))" />
    <mutant id="mutant_651" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_652" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_6710" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_6711" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_6712" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6713" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd * -1 : bufEnd)" />
    <mutant id="mutant_668" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_669" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str)" to="(Integer.parseInt(str) &gt;= 0 ? Integer.parseInt(str) : Integer.parseInt(str) * -1)" />
    <mutant id="mutant_664" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="str.indexOf('/')" to="str.indexOf('/') &gt;= 0 ? str.indexOf('/') * -1 : str.indexOf('/')" />
    <mutant id="mutant_665" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="str.indexOf('/')" to="str.indexOf('/') &gt;= 0 ? str.indexOf('/') : str.indexOf('/') * -1" />
    <mutant id="mutant_666" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_667" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_6703" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_6704" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_6705" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_6706" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_6707" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd * -1 : bufEnd)" />
    <mutant id="mutant_6708" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="bufEnd" to="(bufEnd &gt;= 0 ? bufEnd : bufEnd * -1)" />
    <mutant id="mutant_6709" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_660" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="denom" to="(denom &gt;= 0 ? denom * -1 : denom)" />
    <mutant id="mutant_661" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="denom" to="(denom &gt;= 0 ? denom : denom * -1)" />
    <mutant id="mutant_662" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_663" viable="false" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_6700" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_6701" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6702" viable="true" in="org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder,int,int,java.util.List)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_679" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_675" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring(0, pos))" to="Integer.parseInt(str.substring(0, pos)) &gt;= 0 ? Integer.parseInt(str.substring(0, pos)) : Integer.parseInt(str.substring(0, pos)) * -1" />
    <mutant id="mutant_676" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str.substring(0, pos))" to="Integer.parseInt(str.substring(0, pos)) &gt;= 0 ? Integer.parseInt(str.substring(0, pos)) * -1 : Integer.parseInt(str.substring(0, pos))" />
    <mutant id="mutant_677" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_678" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_671" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_672" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_673" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_674" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_670" viable="true" in="org.apache.commons.lang3.math.Fraction.getFraction(java.lang.String)" from="Integer.parseInt(str)" to="(Integer.parseInt(str) &gt;= 0 ? Integer.parseInt(str) * -1 : Integer.parseInt(str))" />
    <mutant id="mutant_7860" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.YEAR))" to="(cal1.get(Calendar.YEAR) &gt;= 0 ? cal1.get(Calendar.YEAR) * -1 : cal1.get(Calendar.YEAR))" />
    <mutant id="mutant_6527" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7859" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.YEAR))" to="(cal1.get(Calendar.YEAR) &gt;= 0 ? cal1.get(Calendar.YEAR) : cal1.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_6528" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7858" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_6529" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(length())" to="(length() &gt;= 0 ? length() : length() * -1)" />
    <mutant id="mutant_7851" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.ERA))" to="(cal1.get(Calendar.ERA) &gt;= 0 ? cal1.get(Calendar.ERA) : cal1.get(Calendar.ERA) * -1)" />
    <mutant id="mutant_6520" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7850" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA * -1 : Calendar.ERA)" />
    <mutant id="mutant_6521" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7853" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA : Calendar.ERA * -1)" />
    <mutant id="mutant_6522" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7852" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.ERA))" to="(cal1.get(Calendar.ERA) &gt;= 0 ? cal1.get(Calendar.ERA) * -1 : cal1.get(Calendar.ERA))" />
    <mutant id="mutant_6523" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7855" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.ERA))" to="(cal2.get(Calendar.ERA) &gt;= 0 ? cal2.get(Calendar.ERA) : cal2.get(Calendar.ERA) * -1)" />
    <mutant id="mutant_6524" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7854" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA * -1 : Calendar.ERA)" />
    <mutant id="mutant_6525" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7857" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_6526" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7856" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.ERA))" to="(cal2.get(Calendar.ERA) &gt;= 0 ? cal2.get(Calendar.ERA) * -1 : cal2.get(Calendar.ERA))" />
    <mutant id="mutant_6516" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_7848" viable="false" in="?" from="6" to="-1 * 6" />
    <mutant id="mutant_6517" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_7847" viable="false" in="?" from="5" to="-1 * 5" />
    <mutant id="mutant_6518" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_6519" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7849" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA : Calendar.ERA * -1)" />
    <mutant id="mutant_7840" viable="false" in="?" from="Calendar.YEAR" to="Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR" />
    <mutant id="mutant_6510" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7842" viable="false" in="?" from="Calendar.ERA" to="Calendar.ERA &gt;= 0 ? Calendar.ERA * -1 : Calendar.ERA" />
    <mutant id="mutant_6511" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7841" viable="false" in="?" from="Calendar.ERA" to="Calendar.ERA &gt;= 0 ? Calendar.ERA : Calendar.ERA * -1" />
    <mutant id="mutant_6512" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7844" viable="false" in="?" from="2" to="-1 * 2" />
    <mutant id="mutant_6513" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7843" viable="false" in="?" from="1" to="-1 * 1" />
    <mutant id="mutant_6514" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7846" viable="false" in="?" from="4" to="-1 * 4" />
    <mutant id="mutant_6515" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7845" viable="false" in="?" from="3" to="-1 * 3" />
    <mutant id="mutant_6505" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7837" viable="false" in="?" from="DateUtils.SEMI_MONTH" to="DateUtils.SEMI_MONTH &gt;= 0 ? DateUtils.SEMI_MONTH * -1 : DateUtils.SEMI_MONTH" />
    <mutant id="mutant_6506" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7836" viable="false" in="?" from="Calendar.MONTH" to="Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH" />
    <mutant id="mutant_6507" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7839" viable="false" in="?" from="Calendar.YEAR" to="Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1" />
    <mutant id="mutant_6508" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7838" viable="false" in="?" from="DateUtils.SEMI_MONTH" to="DateUtils.SEMI_MONTH &gt;= 0 ? DateUtils.SEMI_MONTH : DateUtils.SEMI_MONTH * -1" />
    <mutant id="mutant_6509" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteImpl(int,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7831" viable="false" in="?" from="Calendar.DAY_OF_MONTH" to="Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH" />
    <mutant id="mutant_6500" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7830" viable="false" in="?" from="Calendar.DATE" to="Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE" />
    <mutant id="mutant_6501" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7833" viable="false" in="?" from="Calendar.AM_PM" to="Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM : Calendar.AM_PM * -1" />
    <mutant id="mutant_6502" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7832" viable="false" in="?" from="Calendar.DAY_OF_MONTH" to="Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1" />
    <mutant id="mutant_6503" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7835" viable="false" in="?" from="Calendar.MONTH" to="Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1" />
    <mutant id="mutant_6504" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7834" viable="false" in="?" from="Calendar.AM_PM" to="Calendar.AM_PM &gt;= 0 ? Calendar.AM_PM * -1 : Calendar.AM_PM" />
    <mutant id="mutant_7826" viable="false" in="?" from="Calendar.HOUR_OF_DAY" to="Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1" />
    <mutant id="mutant_7825" viable="false" in="?" from="Calendar.HOUR_OF_DAY" to="Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY" />
    <mutant id="mutant_7828" viable="false" in="?" from="Calendar.HOUR" to="Calendar.HOUR &gt;= 0 ? Calendar.HOUR : Calendar.HOUR * -1" />
    <mutant id="mutant_7827" viable="false" in="?" from="Calendar.HOUR" to="Calendar.HOUR &gt;= 0 ? Calendar.HOUR * -1 : Calendar.HOUR" />
    <mutant id="mutant_7829" viable="false" in="?" from="Calendar.DATE" to="Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1" />
    <mutant id="mutant_7820" viable="false" in="?" from="Calendar.MILLISECOND" to="Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND" />
    <mutant id="mutant_7822" viable="false" in="?" from="Calendar.SECOND" to="Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1" />
    <mutant id="mutant_7821" viable="false" in="?" from="Calendar.SECOND" to="Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND" />
    <mutant id="mutant_7824" viable="false" in="?" from="Calendar.MINUTE" to="Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE" />
    <mutant id="mutant_7823" viable="false" in="?" from="Calendar.MINUTE" to="Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1" />
    <mutant id="mutant_6570" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_5240" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6571" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen : insertLen * -1)" />
    <mutant id="mutant_5241" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6572" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen * -1 : insertLen)" />
    <mutant id="mutant_5242" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6573" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5232" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6563" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7895" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.SECOND))" to="(cal2.get(Calendar.SECOND) &gt;= 0 ? cal2.get(Calendar.SECOND) * -1 : cal2.get(Calendar.SECOND))" />
    <mutant id="mutant_5233" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6564" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7894" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_5234" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6565" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7897" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_5235" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6566" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7896" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.SECOND))" to="(cal2.get(Calendar.SECOND) &gt;= 0 ? cal2.get(Calendar.SECOND) : cal2.get(Calendar.SECOND) * -1)" />
    <mutant id="mutant_5236" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6567" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7899" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.MINUTE))" to="(cal1.get(Calendar.MINUTE) &gt;= 0 ? cal1.get(Calendar.MINUTE) : cal1.get(Calendar.MINUTE) * -1)" />
    <mutant id="mutant_5237" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6568" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_7898" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_5238" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6569" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_5239" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7891" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.SECOND))" to="(cal1.get(Calendar.SECOND) &gt;= 0 ? cal1.get(Calendar.SECOND) * -1 : cal1.get(Calendar.SECOND))" />
    <mutant id="mutant_6560" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7890" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND : Calendar.SECOND * -1)" />
    <mutant id="mutant_5230" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6561" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen : insertLen * -1)" />
    <mutant id="mutant_7893" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_5231" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6562" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen * -1 : insertLen)" />
    <mutant id="mutant_7892" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.SECOND))" to="(cal1.get(Calendar.SECOND) &gt;= 0 ? cal1.get(Calendar.SECOND) : cal1.get(Calendar.SECOND) * -1)" />
    <mutant id="mutant_5229" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5221" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6552" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen * -1 : insertLen)" />
    <mutant id="mutant_7884" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.MILLISECOND))" to="(cal1.get(Calendar.MILLISECOND) &gt;= 0 ? cal1.get(Calendar.MILLISECOND) * -1 : cal1.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_5222" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6553" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen * -1 : removeLen)" />
    <mutant id="mutant_7883" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.MILLISECOND))" to="(cal1.get(Calendar.MILLISECOND) &gt;= 0 ? cal1.get(Calendar.MILLISECOND) : cal1.get(Calendar.MILLISECOND) * -1)" />
    <mutant id="mutant_5223" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6554" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen : removeLen * -1)" />
    <mutant id="mutant_7886" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_5224" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6555" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_7885" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_5225" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6556" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_7888" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.MILLISECOND))" to="(cal2.get(Calendar.MILLISECOND) &gt;= 0 ? cal2.get(Calendar.MILLISECOND) * -1 : cal2.get(Calendar.MILLISECOND))" />
    <mutant id="mutant_5226" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6557" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7887" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.MILLISECOND))" to="(cal2.get(Calendar.MILLISECOND) &gt;= 0 ? cal2.get(Calendar.MILLISECOND) : cal2.get(Calendar.MILLISECOND) * -1)" />
    <mutant id="mutant_5227" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6558" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5228" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6559" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7889" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.SECOND" to="(Calendar.SECOND &gt;= 0 ? Calendar.SECOND * -1 : Calendar.SECOND)" />
    <mutant id="mutant_7880" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Date,java.util.Date)" from="(date2.getTime())" to="(date2.getTime() &gt;= 0 ? date2.getTime() * -1 : date2.getTime())" />
    <mutant id="mutant_6550" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen * -1 : insertLen)" />
    <mutant id="mutant_7882" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND * -1 : Calendar.MILLISECOND)" />
    <mutant id="mutant_5220" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6551" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen : insertLen * -1)" />
    <mutant id="mutant_7881" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.MILLISECOND" to="(Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1)" />
    <mutant id="mutant_5218" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6549" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen : insertLen * -1)" />
    <mutant id="mutant_5219" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5210" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6541" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7873" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Calendar,java.util.Calendar)" from="(cal1.getTime().getTime())" to="(cal1.getTime().getTime() &gt;= 0 ? cal1.getTime().getTime() : cal1.getTime().getTime() * -1)" />
    <mutant id="mutant_5211" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6542" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7872" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.DAY_OF_YEAR))" to="(cal2.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? cal2.get(Calendar.DAY_OF_YEAR) * -1 : cal2.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_5212" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6543" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7875" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Calendar,java.util.Calendar)" from="(cal2.getTime().getTime())" to="(cal2.getTime().getTime() &gt;= 0 ? cal2.getTime().getTime() : cal2.getTime().getTime() * -1)" />
    <mutant id="mutant_5213" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6544" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7874" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Calendar,java.util.Calendar)" from="(cal1.getTime().getTime())" to="(cal1.getTime().getTime() &gt;= 0 ? cal1.getTime().getTime() * -1 : cal1.getTime().getTime())" />
    <mutant id="mutant_5214" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6545" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7877" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Date,java.util.Date)" from="(date1.getTime())" to="(date1.getTime() &gt;= 0 ? date1.getTime() : date1.getTime() * -1)" />
    <mutant id="mutant_5215" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6546" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7876" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Calendar,java.util.Calendar)" from="(cal2.getTime().getTime())" to="(cal2.getTime().getTime() &gt;= 0 ? cal2.getTime().getTime() * -1 : cal2.getTime().getTime())" />
    <mutant id="mutant_5216" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6547" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen * -1 : removeLen)" />
    <mutant id="mutant_7879" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Date,java.util.Date)" from="(date2.getTime())" to="(date2.getTime() &gt;= 0 ? date2.getTime() : date2.getTime() * -1)" />
    <mutant id="mutant_5217" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6548" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen : removeLen * -1)" />
    <mutant id="mutant_7878" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameInstant(java.util.Date,java.util.Date)" from="(date1.getTime())" to="(date1.getTime() &gt;= 0 ? date1.getTime() * -1 : date1.getTime())" />
    <mutant id="mutant_7871" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.DAY_OF_YEAR))" to="(cal2.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? cal2.get(Calendar.DAY_OF_YEAR) : cal2.get(Calendar.DAY_OF_YEAR) * -1)" />
    <mutant id="mutant_6540" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="destinationIndex" to="(destinationIndex &gt;= 0 ? destinationIndex : destinationIndex * -1)" />
    <mutant id="mutant_7870" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_5207" viable="false" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_6538" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5208" viable="false" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_6539" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="destinationIndex" to="(destinationIndex &gt;= 0 ? destinationIndex * -1 : destinationIndex)" />
    <mutant id="mutant_7869" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_5209" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_6530" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="(length())" to="(length() &gt;= 0 ? length() * -1 : length())" />
    <mutant id="mutant_7862" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_5200" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6531" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7861" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_5201" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6532" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7864" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.YEAR))" to="(cal2.get(Calendar.YEAR) &gt;= 0 ? cal2.get(Calendar.YEAR) * -1 : cal2.get(Calendar.YEAR))" />
    <mutant id="mutant_5202" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6533" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7863" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.YEAR))" to="(cal2.get(Calendar.YEAR) &gt;= 0 ? cal2.get(Calendar.YEAR) : cal2.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_5203" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6534" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7866" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_5204" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6535" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7865" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_5205" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6536" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7868" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.DAY_OF_YEAR))" to="(cal1.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? cal1.get(Calendar.DAY_OF_YEAR) * -1 : cal1.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_5206" viable="true" in="org.apache.commons.lang3.text.StrBuilder.midString(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6537" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(int,int,char[],int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7867" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameDay(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.DAY_OF_YEAR))" to="(cal1.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? cal1.get(Calendar.DAY_OF_YEAR) : cal1.get(Calendar.DAY_OF_YEAR) * -1)" />
    <mutant id="mutant_5280" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5281" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5282" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_5283" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5284" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5285" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5286" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5276" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuilder()" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5277" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuilder()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5278" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuilder()" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5279" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuilder()" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5270" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuffer()" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5271" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuffer()" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5272" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuffer()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5273" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuffer()" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5274" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuffer()" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5275" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toStringBuilder()" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19408" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="(searchLength &gt;= 0 ? searchLength : searchLength * -1)" />
    <mutant id="mutant_19409" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="(searchLength &gt;= 0 ? searchLength * -1 : searchLength)" />
    <mutant id="mutant_19404" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="(searchLength &gt;= 0 ? searchLength : searchLength * -1)" />
    <mutant id="mutant_19405" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="(searchLength &gt;= 0 ? searchLength * -1 : searchLength)" />
    <mutant id="mutant_19406" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replacementLength" to="(replacementLength &gt;= 0 ? replacementLength * -1 : replacementLength)" />
    <mutant id="mutant_19407" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replacementLength" to="(replacementLength &gt;= 0 ? replacementLength : replacementLength * -1)" />
    <mutant id="mutant_19400" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchList.length" to="searchList.length &gt;= 0 ? searchList.length * -1 : searchList.length" />
    <mutant id="mutant_19401" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchList.length" to="searchList.length &gt;= 0 ? searchList.length : searchList.length * -1" />
    <mutant id="mutant_19402" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replacementList.length" to="replacementList.length &gt;= 0 ? replacementList.length * -1 : replacementList.length" />
    <mutant id="mutant_19403" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replacementList.length" to="replacementList.length &gt;= 0 ? replacementList.length : replacementList.length * -1" />
    <mutant id="mutant_5265" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6596" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.isMatch(char[],int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5266" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6597" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.isMatch(char[],int,int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_5267" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toString()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6598" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.isMatch(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_5268" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toString()" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6599" viable="true" in="org.apache.commons.lang3.text.StrMatcher$NoMatcher.isMatch(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_5269" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toString()" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6590" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharMatcher.isMatch(char[],int,int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_5260" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) * -1 : validateRange(startIndex, endIndex)" />
    <mutant id="mutant_6591" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharMatcher.isMatch(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_5261" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6592" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5262" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6593" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5263" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_6594" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.isMatch(char[],int,int,int)" from="(Arrays.binarySearch(chars, buffer[pos]))" to="(Arrays.binarySearch(chars, buffer[pos]) &gt;= 0 ? Arrays.binarySearch(chars, buffer[pos]) : Arrays.binarySearch(chars, buffer[pos]) * -1)" />
    <mutant id="mutant_5264" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_6595" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.isMatch(char[],int,int,int)" from="(Arrays.binarySearch(chars, buffer[pos]))" to="(Arrays.binarySearch(chars, buffer[pos]) &gt;= 0 ? Arrays.binarySearch(chars, buffer[pos]) * -1 : Arrays.binarySearch(chars, buffer[pos]))" />
    <mutant id="mutant_5254" viable="false" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex : endIndex * -1" />
    <mutant id="mutant_6585" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5255" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6586" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5256" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6587" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5257" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_6588" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5258" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_6589" viable="true" in="org.apache.commons.lang3.text.StrMatcher$CharMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5259" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) : validateRange(startIndex, endIndex) * -1" />
    <mutant id="mutant_6580" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5250" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_6581" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5251" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6582" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5252" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6583" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5253" viable="false" in="org.apache.commons.lang3.text.StrBuilder.substring(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex * -1 : endIndex" />
    <mutant id="mutant_6584" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5243" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6574" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5244" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6575" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen : insertLen * -1)" />
    <mutant id="mutant_5245" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6576" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen * -1 : insertLen)" />
    <mutant id="mutant_5246" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6577" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5247" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_6578" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(int,int,int,java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5248" viable="true" in="org.apache.commons.lang3.text.StrBuilder.rightString(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_6579" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateIndex(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5249" viable="true" in="org.apache.commons.lang3.text.StrBuilder.substring(int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20430" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_18105" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19437" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="text.indexOf(searchList[i])" to="text.indexOf(searchList[i]) &gt;= 0 ? text.indexOf(searchList[i]) * -1 : text.indexOf(searchList[i])" />
    <mutant id="mutant_20437" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_18104" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19438" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="(tempIndex &gt;= 0 ? tempIndex : tempIndex * -1)" />
    <mutant id="mutant_20438" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_18103" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_19439" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="(tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex)" />
    <mutant id="mutant_20435" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_18102" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_20436" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_18109" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(CharSequenceUtils.indexOf(searchChars, ch2, 0))" to="(CharSequenceUtils.indexOf(searchChars, ch2, 0) &gt;= 0 ? CharSequenceUtils.indexOf(searchChars, ch2, 0) * -1 : CharSequenceUtils.indexOf(searchChars, ch2, 0))" />
    <mutant id="mutant_19433" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex" />
    <mutant id="mutant_20433" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18108" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(CharSequenceUtils.indexOf(searchChars, ch2, 0))" to="(CharSequenceUtils.indexOf(searchChars, ch2, 0) &gt;= 0 ? CharSequenceUtils.indexOf(searchChars, ch2, 0) : CharSequenceUtils.indexOf(searchChars, ch2, 0) * -1)" />
    <mutant id="mutant_19434" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20434" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18107" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19435" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20431" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_18106" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19436" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="text.indexOf(searchList[i])" to="text.indexOf(searchList[i]) &gt;= 0 ? text.indexOf(searchList[i]) : text.indexOf(searchList[i]) * -1" />
    <mutant id="mutant_20432" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_19430" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19431" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19432" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex : tempIndex * -1" />
    <mutant id="mutant_18101" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18100" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20439" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_18116" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19448" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex : textIndex * -1)" />
    <mutant id="mutant_20426" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18115" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19449" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex * -1 : textIndex)" />
    <mutant id="mutant_20427" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_18114" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_20424" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_18113" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_20425" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19444" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex * -1 : textIndex)" />
    <mutant id="mutant_20422" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_18119" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_19445" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20423" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_18118" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19446" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="(tempIndex &gt;= 0 ? tempIndex : tempIndex * -1)" />
    <mutant id="mutant_20420" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18117" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19447" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="(tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex)" />
    <mutant id="mutant_20421" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19440" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19441" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19442" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19443" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex : textIndex * -1)" />
    <mutant id="mutant_18112" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_18111" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_18110" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20428" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_20429" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19419" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19415" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20415" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19416" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20416" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19417" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_20413" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_19418" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20414" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_19411" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replacementLength" to="(replacementLength &gt;= 0 ? replacementLength : replacementLength * -1)" />
    <mutant id="mutant_20411" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19412" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="searchLength &gt;= 0 ? searchLength : searchLength * -1" />
    <mutant id="mutant_20412" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19413" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="searchLength &gt;= 0 ? searchLength * -1 : searchLength" />
    <mutant id="mutant_19414" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20410" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_5298" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5299" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_19410" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replacementLength" to="(replacementLength &gt;= 0 ? replacementLength * -1 : replacementLength)" />
    <mutant id="mutant_20419" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20417" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_20418" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_5290" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5291" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5292" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5293" viable="true" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="5" to="(-1 * 5)" />
    <mutant id="mutant_5294" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5295" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5296" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5297" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_19426" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20404" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19427" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20405" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_19428" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20402" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_19429" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20403" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19422" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20400" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19423" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20401" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_19424" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19425" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5287" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5288" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5289" viable="false" in="org.apache.commons.lang3.text.StrBuilder.append(boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19420" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="(searchLength &gt;= 0 ? searchLength : searchLength * -1)" />
    <mutant id="mutant_19421" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="(searchLength &gt;= 0 ? searchLength * -1 : searchLength)" />
    <mutant id="mutant_20408" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20409" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_20406" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_20407" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20352" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20353" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable)" from="(value.compareTo(start))" to="(value.compareTo(start) &gt;= 0 ? value.compareTo(start) * -1 : value.compareTo(start))" />
    <mutant id="mutant_20350" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="(value.compareTo(end))" to="(value.compareTo(end) &gt;= 0 ? value.compareTo(end) : value.compareTo(end) * -1)" />
    <mutant id="mutant_20351" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="(value.compareTo(end))" to="(value.compareTo(end) &gt;= 0 ? value.compareTo(end) * -1 : value.compareTo(end))" />
    <mutant id="mutant_18028" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="ret &gt;= 0 ? ret : ret * -1" />
    <mutant id="mutant_18027" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18026" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_20358" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18025" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_20359" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="(value.compareTo(start))" to="(value.compareTo(start) &gt;= 0 ? value.compareTo(start) * -1 : value.compareTo(start))" />
    <mutant id="mutant_19356" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_20356" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable)" from="(value.compareTo(end))" to="(value.compareTo(end) &gt;= 0 ? value.compareTo(end) : value.compareTo(end) * -1)" />
    <mutant id="mutant_19357" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_20357" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable)" from="(value.compareTo(end))" to="(value.compareTo(end) &gt;= 0 ? value.compareTo(end) * -1 : value.compareTo(end))" />
    <mutant id="mutant_19358" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20354" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable)" from="(value.compareTo(start))" to="(value.compareTo(start) &gt;= 0 ? value.compareTo(start) : value.compareTo(start) * -1)" />
    <mutant id="mutant_18029" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="ret &gt;= 0 ? ret * -1 : ret" />
    <mutant id="mutant_19359" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20355" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18020" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_19352" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="replLength" to="(replLength &gt;= 0 ? replLength * -1 : replLength)" />
    <mutant id="mutant_19353" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_19354" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_19355" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18024" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_18023" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="(ret &gt;= 0 ? ret * -1 : ret)" />
    <mutant id="mutant_18022" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="(ret &gt;= 0 ? ret : ret * -1)" />
    <mutant id="mutant_19350" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_18021" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_19351" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="replLength" to="(replLength &gt;= 0 ? replLength : replLength * -1)" />
    <mutant id="mutant_20341" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable)" from="(value.compareTo(start))" to="(value.compareTo(start) &gt;= 0 ? value.compareTo(start) * -1 : value.compareTo(start))" />
    <mutant id="mutant_20342" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable)" from="(value.compareTo(start))" to="(value.compareTo(start) &gt;= 0 ? value.compareTo(start) : value.compareTo(start) * -1)" />
    <mutant id="mutant_20340" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int,java.lang.String,java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_18039" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen : csLen * -1)" />
    <mutant id="mutant_20349" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18038" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen * -1 : csLen)" />
    <mutant id="mutant_18037" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_20347" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="(value.compareTo(start))" to="(value.compareTo(start) &gt;= 0 ? value.compareTo(start) * -1 : value.compareTo(start))" />
    <mutant id="mutant_18036" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_20348" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="(value.compareTo(start))" to="(value.compareTo(start) &gt;= 0 ? value.compareTo(start) : value.compareTo(start) * -1)" />
    <mutant id="mutant_19367" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_20345" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable)" from="(value.compareTo(end))" to="(value.compareTo(end) &gt;= 0 ? value.compareTo(end) * -1 : value.compareTo(end))" />
    <mutant id="mutant_19368" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="strLength" to="(strLength &gt;= 0 ? strLength * -1 : strLength)" />
    <mutant id="mutant_20346" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19369" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="strLength" to="(strLength &gt;= 0 ? strLength : strLength * -1)" />
    <mutant id="mutant_20343" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20344" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(T,T,java.lang.Comparable)" from="(value.compareTo(end))" to="(value.compareTo(end) &gt;= 0 ? value.compareTo(end) : value.compareTo(end) * -1)" />
    <mutant id="mutant_18031" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.String)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19363" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18030" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.String)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19364" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="replaceChars.length()" to="replaceChars.length() &gt;= 0 ? replaceChars.length() : replaceChars.length() * -1" />
    <mutant id="mutant_19365" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="replaceChars.length()" to="replaceChars.length() &gt;= 0 ? replaceChars.length() * -1 : replaceChars.length()" />
    <mutant id="mutant_19366" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_18035" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18034" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19360" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="text.indexOf(searchString, start)" to="text.indexOf(searchString, start) &gt;= 0 ? text.indexOf(searchString, start) * -1 : text.indexOf(searchString, start)" />
    <mutant id="mutant_18033" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.String)" from="org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray())" to="org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray()) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray()) * -1 : org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray())" />
    <mutant id="mutant_19361" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="text.indexOf(searchString, start)" to="text.indexOf(searchString, start) &gt;= 0 ? text.indexOf(searchString, start) : text.indexOf(searchString, start) * -1" />
    <mutant id="mutant_18032" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.String)" from="org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray())" to="org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray()) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray()) : org.apache.commons.lang3.StringUtils.indexOfAny(cs, searchChars.toCharArray()) * -1" />
    <mutant id="mutant_19362" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_900" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_901" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_902" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_907" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_20330" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_908" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_20331" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_909" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_903" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="b" to="b &gt;= 0 ? b : b * -1" />
    <mutant id="mutant_904" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="b" to="b &gt;= 0 ? b * -1 : b" />
    <mutant id="mutant_905" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_906" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_18006" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_19338" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="(increase &gt;= 0 ? increase * -1 : increase)" />
    <mutant id="mutant_20338" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_18005" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_19339" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20339" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int,java.lang.String,java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_18004" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20336" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18003" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20337" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19334" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_20334" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_18009" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="CharSequenceUtils.indexOf(str, search, 0)" to="CharSequenceUtils.indexOf(str, search, 0) &gt;= 0 ? CharSequenceUtils.indexOf(str, search, 0) * -1 : CharSequenceUtils.indexOf(str, search, 0)" />
    <mutant id="mutant_19335" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(text.length())" to="(text.length() &gt;= 0 ? text.length() : text.length() * -1)" />
    <mutant id="mutant_20335" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_18008" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="CharSequenceUtils.indexOf(str, search, 0)" to="CharSequenceUtils.indexOf(str, search, 0) &gt;= 0 ? CharSequenceUtils.indexOf(str, search, 0) : CharSequenceUtils.indexOf(str, search, 0) * -1" />
    <mutant id="mutant_19336" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(text.length())" to="(text.length() &gt;= 0 ? text.length() * -1 : text.length())" />
    <mutant id="mutant_20332" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int)" from="Integer.valueOf(index)" to="(Integer.valueOf(index) &gt;= 0 ? Integer.valueOf(index) : Integer.valueOf(index) * -1)" />
    <mutant id="mutant_18007" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19337" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="(increase &gt;= 0 ? increase : increase * -1)" />
    <mutant id="mutant_20333" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int)" from="Integer.valueOf(index)" to="(Integer.valueOf(index) &gt;= 0 ? Integer.valueOf(index) * -1 : Integer.valueOf(index))" />
    <mutant id="mutant_19330" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_19331" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="64" to="(-1 * 64)" />
    <mutant id="mutant_19332" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="64" to="-1 * 64" />
    <mutant id="mutant_19333" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_18002" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18001" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18000" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_910" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_911" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_912" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_913" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="Math.min(a, b)" to="Math.min(a, b) &gt;= 0 ? Math.min(a, b) : Math.min(a, b) * -1" />
    <mutant id="mutant_918" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_919" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="org.apache.commons.lang3.math.IEEE754rUtils.min(a, b)" to="(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.min(a, b))" />
    <mutant id="mutant_20320" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_914" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double)" from="Math.min(a, b)" to="Math.min(a, b) &gt;= 0 ? Math.min(a, b) * -1 : Math.min(a, b)" />
    <mutant id="mutant_915" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_916" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_917" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_18017" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="(ret &gt;= 0 ? ret * -1 : ret)" />
    <mutant id="mutant_19349" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20327" viable="true" in="org.apache.commons.lang3.Validate.notEmpty(T[],java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18016" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="(ret &gt;= 0 ? ret : ret * -1)" />
    <mutant id="mutant_20328" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_18015" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="(tmp &gt;= 0 ? tmp * -1 : tmp)" />
    <mutant id="mutant_20325" viable="true" in="org.apache.commons.lang3.Validate.notEmpty(T[],java.lang.String,java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_18014" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="(tmp &gt;= 0 ? tmp : tmp * -1)" />
    <mutant id="mutant_20326" viable="true" in="org.apache.commons.lang3.Validate.notEmpty(T[],java.lang.String,java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_19345" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20323" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="Integer.valueOf(i)" to="(Integer.valueOf(i) &gt;= 0 ? Integer.valueOf(i) * -1 : Integer.valueOf(i))" />
    <mutant id="mutant_19346" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20324" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="Integer.valueOf(i)" to="(Integer.valueOf(i) &gt;= 0 ? Integer.valueOf(i) : Integer.valueOf(i) * -1)" />
    <mutant id="mutant_18019" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="ret &gt;= 0 ? ret * -1 : ret" />
    <mutant id="mutant_19347" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_20321" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18018" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="ret &gt;= 0 ? ret : ret * -1" />
    <mutant id="mutant_19348" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_20322" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19341" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_19342" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_19343" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19344" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18013" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_18012" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_18011" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="(tmp &gt;= 0 ? tmp * -1 : tmp)" />
    <mutant id="mutant_20329" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_18010" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="(tmp &gt;= 0 ? tmp : tmp * -1)" />
    <mutant id="mutant_19340" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_921" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_922" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_923" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c)" to="org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) : org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) * -1" />
    <mutant id="mutant_924" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c)" to="org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c)" />
    <mutant id="mutant_18071" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLast" to="(searchLast &gt;= 0 ? searchLast : searchLast * -1)" />
    <mutant id="mutant_18070" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLast" to="(searchLast &gt;= 0 ? searchLast * -1 : searchLast)" />
    <mutant id="mutant_920" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double,double,double)" from="org.apache.commons.lang3.math.IEEE754rUtils.min(a, b)" to="(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) : org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) * -1)" />
    <mutant id="mutant_929" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="1" to="-1 * 1" />
    <mutant id="mutant_20396" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_20397" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20394" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20395" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_925" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_20392" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_926" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_20393" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_927" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20390" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_928" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20391" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_18069" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_20398" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20399" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_18064" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19396" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18063" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_19397" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="timeToLive" to="(timeToLive &gt;= 0 ? timeToLive * -1 : timeToLive)" />
    <mutant id="mutant_18062" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_19398" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="timeToLive" to="(timeToLive &gt;= 0 ? timeToLive : timeToLive * -1)" />
    <mutant id="mutant_18061" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_19399" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18068" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_19392" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(searchList.length)" to="(searchList.length &gt;= 0 ? searchList.length : searchList.length * -1)" />
    <mutant id="mutant_18067" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLast" to="(csLast &gt;= 0 ? csLast * -1 : csLast)" />
    <mutant id="mutant_19393" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18066" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLast" to="(csLast &gt;= 0 ? csLast : csLast * -1)" />
    <mutant id="mutant_19394" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList.length)" to="(replacementList.length &gt;= 0 ? replacementList.length * -1 : replacementList.length)" />
    <mutant id="mutant_18065" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19395" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList.length)" to="(replacementList.length &gt;= 0 ? replacementList.length : replacementList.length * -1)" />
    <mutant id="mutant_932" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_933" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_934" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_935" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18082" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_18081" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_930" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18080" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_931" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20385" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20386" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20383" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_20384" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_936" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_20381" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_937" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_20382" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_938" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_939" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20380" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_20389" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20387" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_20388" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_18075" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18074" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18073" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18072" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18079" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_18078" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_18077" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18076" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_943" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min)" to="org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) : org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) * -1" />
    <mutant id="mutant_944" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_945" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_946" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_19380" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="searchChars.indexOf(ch)" to="searchChars.indexOf(ch) &gt;= 0 ? searchChars.indexOf(ch) : searchChars.indexOf(ch) * -1" />
    <mutant id="mutant_940" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_941" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_942" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(double[])" from="org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min)" to="org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min)" />
    <mutant id="mutant_20374" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_20375" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20372" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20373" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_947" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_20370" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_948" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="b" to="b &gt;= 0 ? b : b * -1" />
    <mutant id="mutant_20371" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_949" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="b" to="b &gt;= 0 ? b * -1 : b" />
    <mutant id="mutant_18049" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen * -1 : csLen)" />
    <mutant id="mutant_18048" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18047" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19378" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20378" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19379" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="searchChars.indexOf(ch)" to="searchChars.indexOf(ch) &gt;= 0 ? searchChars.indexOf(ch) * -1 : searchChars.indexOf(ch)" />
    <mutant id="mutant_20379" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double,java.lang.String)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_20376" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20377" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_18042" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchChars.length" to="searchChars.length &gt;= 0 ? searchChars.length : searchChars.length * -1" />
    <mutant id="mutant_19374" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="strLength" to="(strLength &gt;= 0 ? strLength : strLength * -1)" />
    <mutant id="mutant_18041" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchChars.length" to="searchChars.length &gt;= 0 ? searchChars.length * -1 : searchChars.length" />
    <mutant id="mutant_19375" viable="false" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18040" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19376" viable="false" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19377" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18046" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19370" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_18045" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19371" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18044" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_19372" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18043" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_19373" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="strLength" to="(strLength &gt;= 0 ? strLength * -1 : strLength)" />
    <mutant id="mutant_954" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_955" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_956" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_19390" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_957" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_19391" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(searchList.length)" to="(searchList.length &gt;= 0 ? searchList.length * -1 : searchList.length)" />
    <mutant id="mutant_950" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_18060" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_951" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_952" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_953" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_20363" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="(value.compareTo(end))" to="(value.compareTo(end) &gt;= 0 ? value.compareTo(end) * -1 : value.compareTo(end))" />
    <mutant id="mutant_20364" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20361" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20362" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="(value.compareTo(end))" to="(value.compareTo(end) &gt;= 0 ? value.compareTo(end) : value.compareTo(end) * -1)" />
    <mutant id="mutant_958" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="Math.max(a, b)" to="Math.max(a, b) &gt;= 0 ? Math.max(a, b) : Math.max(a, b) * -1" />
    <mutant id="mutant_959" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float)" from="Math.max(a, b)" to="Math.max(a, b) &gt;= 0 ? Math.max(a, b) * -1 : Math.max(a, b)" />
    <mutant id="mutant_20360" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(T,T,java.lang.Comparable,java.lang.String,java.lang.Object[])" from="(value.compareTo(start))" to="(value.compareTo(start) &gt;= 0 ? value.compareTo(start) : value.compareTo(start) * -1)" />
    <mutant id="mutant_18059" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_20369" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_18058" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_19389" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_20367" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20368" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20365" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_20366" viable="true" in="org.apache.commons.lang3.Validate.exclusiveBetween(double,double,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_18053" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19385" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_18052" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19386" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="replaceCharsLength" to="(replaceCharsLength &gt;= 0 ? replaceCharsLength : replaceCharsLength * -1)" />
    <mutant id="mutant_18051" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19387" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="replaceCharsLength" to="(replaceCharsLength &gt;= 0 ? replaceCharsLength * -1 : replaceCharsLength)" />
    <mutant id="mutant_18050" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="csLen" to="(csLen &gt;= 0 ? csLen : csLen * -1)" />
    <mutant id="mutant_19388" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_18057" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_19381" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_18056" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_19382" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_18055" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19383" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18054" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19384" viable="true" in="org.apache.commons.lang3.StringUtils.replaceChars(java.lang.String,java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_965" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="org.apache.commons.lang3.math.IEEE754rUtils.max(a, b)" to="(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.max(a, b))" />
    <mutant id="mutant_966" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_967" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_968" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c)" to="org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) : org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) * -1" />
    <mutant id="mutant_961" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_962" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_963" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_964" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="org.apache.commons.lang3.math.IEEE754rUtils.max(a, b)" to="(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) : org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) * -1)" />
    <mutant id="mutant_969" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c)" to="org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c)" />
    <mutant id="mutant_960" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float,float,float)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_976" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_977" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_978" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_979" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_972" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_973" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_974" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="1" to="-1 * 1" />
    <mutant id="mutant_975" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_970" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_971" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_987" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max)" to="org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) : org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) * -1" />
    <mutant id="mutant_988" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max)" to="org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max)" />
    <mutant id="mutant_989" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_983" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_18093" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_984" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18092" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_985" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_18091" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_986" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_18090" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_18086" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_980" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_18085" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="seq.length()" to="seq.length() &gt;= 0 ? seq.length() : seq.length() * -1" />
    <mutant id="mutant_981" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_18084" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="seq.length()" to="seq.length() &gt;= 0 ? seq.length() * -1 : seq.length()" />
    <mutant id="mutant_982" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_18083" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18089" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_18088" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18087" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_998" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_999" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_994" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="b" to="b &gt;= 0 ? b * -1 : b" />
    <mutant id="mutant_995" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_996" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_997" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_990" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(float[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_18097" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(CharSequenceUtils.indexOf(searchChars, ch, 0))" to="(CharSequenceUtils.indexOf(searchChars, ch, 0) &gt;= 0 ? CharSequenceUtils.indexOf(searchChars, ch, 0) : CharSequenceUtils.indexOf(searchChars, ch, 0) * -1)" />
    <mutant id="mutant_991" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_18096" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="(CharSequenceUtils.indexOf(searchChars, ch, 0))" to="(CharSequenceUtils.indexOf(searchChars, ch, 0) &gt;= 0 ? CharSequenceUtils.indexOf(searchChars, ch, 0) * -1 : CharSequenceUtils.indexOf(searchChars, ch, 0))" />
    <mutant id="mutant_992" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_18095" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_993" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="b" to="b &gt;= 0 ? b : b * -1" />
    <mutant id="mutant_18094" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18099" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18098" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfAnyBut(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6604" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7936" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.ERA))" to="(cal2.get(Calendar.ERA) &gt;= 0 ? cal2.get(Calendar.ERA) * -1 : cal2.get(Calendar.ERA))" />
    <mutant id="mutant_6605" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_7935" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.ERA))" to="(cal2.get(Calendar.ERA) &gt;= 0 ? cal2.get(Calendar.ERA) : cal2.get(Calendar.ERA) * -1)" />
    <mutant id="mutant_6606" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="bufferEnd" to="(bufferEnd &gt;= 0 ? bufferEnd : bufferEnd * -1)" />
    <mutant id="mutant_7938" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Calendar,java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field : field * -1)" />
    <mutant id="mutant_6607" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="bufferEnd" to="(bufferEnd &gt;= 0 ? bufferEnd * -1 : bufferEnd)" />
    <mutant id="mutant_7937" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Calendar,java.util.Calendar,int)" from="field" to="(field &gt;= 0 ? field * -1 : field)" />
    <mutant id="mutant_6608" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_6609" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_7939" viable="true" in="org.apache.commons.lang3.time.DateUtils.truncatedEquals(java.util.Calendar,java.util.Calendar,int)" from="(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field))" to="(org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field) &gt;= 0 ? org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field) * -1 : org.apache.commons.lang3.time.DateUtils.truncatedCompareTo(cal1, cal2, field))" />
    <mutant id="mutant_7930" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA * -1 : Calendar.ERA)" />
    <mutant id="mutant_6600" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="chars.length" to="chars.length &gt;= 0 ? chars.length * -1 : chars.length" />
    <mutant id="mutant_7932" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.ERA))" to="(cal1.get(Calendar.ERA) &gt;= 0 ? cal1.get(Calendar.ERA) * -1 : cal1.get(Calendar.ERA))" />
    <mutant id="mutant_6601" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="chars.length" to="chars.length &gt;= 0 ? chars.length : chars.length * -1" />
    <mutant id="mutant_7931" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.ERA))" to="(cal1.get(Calendar.ERA) &gt;= 0 ? cal1.get(Calendar.ERA) : cal1.get(Calendar.ERA) * -1)" />
    <mutant id="mutant_6602" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_7934" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA * -1 : Calendar.ERA)" />
    <mutant id="mutant_6603" viable="true" in="org.apache.commons.lang3.text.StrMatcher$StringMatcher.isMatch(char[],int,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7933" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA : Calendar.ERA * -1)" />
    <mutant id="mutant_7925" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_7924" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.YEAR))" to="(cal1.get(Calendar.YEAR) &gt;= 0 ? cal1.get(Calendar.YEAR) * -1 : cal1.get(Calendar.YEAR))" />
    <mutant id="mutant_7927" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.YEAR))" to="(cal2.get(Calendar.YEAR) &gt;= 0 ? cal2.get(Calendar.YEAR) : cal2.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_7926" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_7929" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.ERA" to="(Calendar.ERA &gt;= 0 ? Calendar.ERA : Calendar.ERA * -1)" />
    <mutant id="mutant_7928" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.YEAR))" to="(cal2.get(Calendar.YEAR) &gt;= 0 ? cal2.get(Calendar.YEAR) * -1 : cal2.get(Calendar.YEAR))" />
    <mutant id="mutant_7921" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_7920" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.DAY_OF_YEAR))" to="(cal2.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? cal2.get(Calendar.DAY_OF_YEAR) * -1 : cal2.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_7923" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.YEAR))" to="(cal1.get(Calendar.YEAR) &gt;= 0 ? cal1.get(Calendar.YEAR) : cal1.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_7922" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_7914" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_7913" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_7916" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.DAY_OF_YEAR))" to="(cal1.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? cal1.get(Calendar.DAY_OF_YEAR) * -1 : cal1.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_7915" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.DAY_OF_YEAR))" to="(cal1.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? cal1.get(Calendar.DAY_OF_YEAR) : cal1.get(Calendar.DAY_OF_YEAR) * -1)" />
    <mutant id="mutant_7918" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_7917" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_7919" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.DAY_OF_YEAR))" to="(cal2.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? cal2.get(Calendar.DAY_OF_YEAR) : cal2.get(Calendar.DAY_OF_YEAR) * -1)" />
    <mutant id="mutant_7910" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_7912" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.HOUR_OF_DAY))" to="(cal2.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? cal2.get(Calendar.HOUR_OF_DAY) * -1 : cal2.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_7911" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.HOUR_OF_DAY))" to="(cal2.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? cal2.get(Calendar.HOUR_OF_DAY) : cal2.get(Calendar.HOUR_OF_DAY) * -1)" />
    <mutant id="mutant_7903" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.MINUTE))" to="(cal2.get(Calendar.MINUTE) &gt;= 0 ? cal2.get(Calendar.MINUTE) : cal2.get(Calendar.MINUTE) * -1)" />
    <mutant id="mutant_7902" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE * -1 : Calendar.MINUTE)" />
    <mutant id="mutant_7905" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_7904" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal2.get(Calendar.MINUTE))" to="(cal2.get(Calendar.MINUTE) &gt;= 0 ? cal2.get(Calendar.MINUTE) * -1 : cal2.get(Calendar.MINUTE))" />
    <mutant id="mutant_7907" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.HOUR_OF_DAY))" to="(cal1.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? cal1.get(Calendar.HOUR_OF_DAY) : cal1.get(Calendar.HOUR_OF_DAY) * -1)" />
    <mutant id="mutant_7906" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY : Calendar.HOUR_OF_DAY * -1)" />
    <mutant id="mutant_7909" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.HOUR_OF_DAY" to="(Calendar.HOUR_OF_DAY &gt;= 0 ? Calendar.HOUR_OF_DAY * -1 : Calendar.HOUR_OF_DAY)" />
    <mutant id="mutant_7908" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.HOUR_OF_DAY))" to="(cal1.get(Calendar.HOUR_OF_DAY) &gt;= 0 ? cal1.get(Calendar.HOUR_OF_DAY) * -1 : cal1.get(Calendar.HOUR_OF_DAY))" />
    <mutant id="mutant_7901" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="Calendar.MINUTE" to="(Calendar.MINUTE &gt;= 0 ? Calendar.MINUTE : Calendar.MINUTE * -1)" />
    <mutant id="mutant_7900" viable="true" in="org.apache.commons.lang3.time.DateUtils.isSameLocalTime(java.util.Calendar,java.util.Calendar)" from="(cal1.get(Calendar.MINUTE))" to="(cal1.get(Calendar.MINUTE) &gt;= 0 ? cal1.get(Calendar.MINUTE) * -1 : cal1.get(Calendar.MINUTE))" />
    <mutant id="mutant_6406" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="rightIdx" to="(rightIdx &gt;= 0 ? rightIdx : rightIdx * -1)" />
    <mutant id="mutant_7738" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="(args.length)" to="(args.length &gt;= 0 ? args.length : args.length * -1)" />
    <mutant id="mutant_6407" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="rightIdx" to="(rightIdx &gt;= 0 ? rightIdx * -1 : rightIdx)" />
    <mutant id="mutant_7737" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="(args.length)" to="(args.length &gt;= 0 ? args.length * -1 : args.length)" />
    <mutant id="mutant_6408" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="rightIdx" to="(rightIdx &gt;= 0 ? rightIdx : rightIdx * -1)" />
    <mutant id="mutant_6409" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="rightIdx" to="(rightIdx &gt;= 0 ? rightIdx * -1 : rightIdx)" />
    <mutant id="mutant_7739" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7730" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" from="raw.getTypeParameters().length" to="(raw.getTypeParameters().length &gt;= 0 ? raw.getTypeParameters().length * -1 : raw.getTypeParameters().length)" />
    <mutant id="mutant_6400" viable="false" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="rightIdx" to="(rightIdx &gt;= 0 ? rightIdx : rightIdx * -1)" />
    <mutant id="mutant_7732" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" from="typeArguments.length" to="(typeArguments.length &gt;= 0 ? typeArguments.length * -1 : typeArguments.length)" />
    <mutant id="mutant_6401" viable="false" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="rightIdx" to="(rightIdx &gt;= 0 ? rightIdx * -1 : rightIdx)" />
    <mutant id="mutant_7731" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" from="raw.getTypeParameters().length" to="(raw.getTypeParameters().length &gt;= 0 ? raw.getTypeParameters().length : raw.getTypeParameters().length * -1)" />
    <mutant id="mutant_6402" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="leftIdx" to="(leftIdx &gt;= 0 ? leftIdx * -1 : leftIdx)" />
    <mutant id="mutant_7734" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="0" to="-1 * 0" />
    <mutant id="mutant_6403" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="leftIdx" to="(leftIdx &gt;= 0 ? leftIdx : leftIdx * -1)" />
    <mutant id="mutant_7733" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" from="typeArguments.length" to="(typeArguments.length &gt;= 0 ? typeArguments.length : typeArguments.length * -1)" />
    <mutant id="mutant_6404" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="leftIdx" to="(leftIdx &gt;= 0 ? leftIdx * -1 : leftIdx)" />
    <mutant id="mutant_7736" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6405" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="leftIdx" to="(leftIdx &gt;= 0 ? leftIdx : leftIdx * -1)" />
    <mutant id="mutant_7735" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7727" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" from="(raw.getTypeParameters().length)" to="(raw.getTypeParameters().length &gt;= 0 ? raw.getTypeParameters().length : raw.getTypeParameters().length * -1)" />
    <mutant id="mutant_7726" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" from="(raw.getTypeParameters().length)" to="(raw.getTypeParameters().length &gt;= 0 ? raw.getTypeParameters().length * -1 : raw.getTypeParameters().length)" />
    <mutant id="mutant_7729" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" from="(typeArguments.length)" to="(typeArguments.length &gt;= 0 ? typeArguments.length : typeArguments.length * -1)" />
    <mutant id="mutant_7728" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.Type[])" from="(typeArguments.length)" to="(typeArguments.length &gt;= 0 ? typeArguments.length * -1 : typeArguments.length)" />
    <mutant id="mutant_7721" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="(types.length)" to="(types.length &gt;= 0 ? types.length : types.length * -1)" />
    <mutant id="mutant_7720" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="(types.length)" to="(types.length &gt;= 0 ? types.length * -1 : types.length)" />
    <mutant id="mutant_7723" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7722" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7725" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7724" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7716" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7715" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7718" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7717" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="1" to="-1 * 1" />
    <mutant id="mutant_7719" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7710" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(upperBounds.length)" to="(upperBounds.length &gt;= 0 ? upperBounds.length : upperBounds.length * -1)" />
    <mutant id="mutant_7712" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7711" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7714" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="(types.length)" to="(types.length &gt;= 0 ? types.length : types.length * -1)" />
    <mutant id="mutant_7713" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])" from="(types.length)" to="(types.length &gt;= 0 ? types.length * -1 : types.length)" />
    <mutant id="mutant_7705" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7704" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7707" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(upperBounds.length)" to="(upperBounds.length &gt;= 0 ? upperBounds.length : upperBounds.length * -1)" />
    <mutant id="mutant_7706" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(upperBounds.length)" to="(upperBounds.length &gt;= 0 ? upperBounds.length * -1 : upperBounds.length)" />
    <mutant id="mutant_7709" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(upperBounds.length)" to="(upperBounds.length &gt;= 0 ? upperBounds.length * -1 : upperBounds.length)" />
    <mutant id="mutant_7708" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7701" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7700" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(lowerBounds.length)" to="(lowerBounds.length &gt;= 0 ? lowerBounds.length : lowerBounds.length * -1)" />
    <mutant id="mutant_7703" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(lowerBounds.length)" to="(lowerBounds.length &gt;= 0 ? lowerBounds.length : lowerBounds.length * -1)" />
    <mutant id="mutant_7702" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(lowerBounds.length)" to="(lowerBounds.length &gt;= 0 ? lowerBounds.length * -1 : lowerBounds.length)" />
    <mutant id="mutant_7781" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6450" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7780" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5120" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="remaining" to="(remaining &gt;= 0 ? remaining * -1 : remaining)" />
    <mutant id="mutant_6451" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7783" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="(typeParams.length)" to="(typeParams.length &gt;= 0 ? typeParams.length : typeParams.length * -1)" />
    <mutant id="mutant_5121" viable="false" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6452" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="newEnd" to="(newEnd &gt;= 0 ? newEnd * -1 : newEnd)" />
    <mutant id="mutant_7782" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="(typeParams.length)" to="(typeParams.length &gt;= 0 ? typeParams.length * -1 : typeParams.length)" />
    <mutant id="mutant_5119" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="remaining" to="(remaining &gt;= 0 ? remaining : remaining * -1)" />
    <mutant id="mutant_5111" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="cb.remaining()" to="cb.remaining() &gt;= 0 ? cb.remaining() : cb.remaining() * -1" />
    <mutant id="mutant_6442" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_7774" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5112" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="cb.remaining()" to="cb.remaining() &gt;= 0 ? cb.remaining() * -1 : cb.remaining()" />
    <mutant id="mutant_6443" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_7773" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5113" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6444" viable="false" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7776" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5114" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6445" viable="false" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_7775" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5115" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="remaining" to="(remaining &gt;= 0 ? remaining : remaining * -1)" />
    <mutant id="mutant_6446" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_7778" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5116" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="remaining" to="(remaining &gt;= 0 ? remaining * -1 : remaining)" />
    <mutant id="mutant_6447" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_7777" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5117" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6448" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="oldEnd" to="oldEnd &gt;= 0 ? oldEnd * -1 : oldEnd" />
    <mutant id="mutant_5118" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6449" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="oldEnd" to="oldEnd &gt;= 0 ? oldEnd : oldEnd * -1" />
    <mutant id="mutant_7779" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="0" to="-1 * 0" />
    <mutant id="mutant_7770" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="(result.length)" to="(result.length &gt;= 0 ? result.length : result.length * -1)" />
    <mutant id="mutant_6440" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7772" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5110" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6441" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_7771" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5108" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6439" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5109" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5100" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6431" viable="false" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_7763" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])" from="bounds.length" to="(bounds.length &gt;= 0 ? bounds.length : bounds.length * -1)" />
    <mutant id="mutant_5101" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="r.read(buffer, size, ((buffer.length) - (size)))" to="r.read(buffer, size, ((buffer.length) - (size))) &gt;= 0 ? r.read(buffer, size, ((buffer.length) - (size))) : r.read(buffer, size, ((buffer.length) - (size))) * -1" />
    <mutant id="mutant_6432" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="length &gt;= 0 ? length : length * -1" />
    <mutant id="mutant_7762" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])" from="bounds.length" to="(bounds.length &gt;= 0 ? bounds.length * -1 : bounds.length)" />
    <mutant id="mutant_5102" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="r.read(buffer, size, ((buffer.length) - (size)))" to="r.read(buffer, size, ((buffer.length) - (size))) &gt;= 0 ? r.read(buffer, size, ((buffer.length) - (size))) * -1 : r.read(buffer, size, ((buffer.length) - (size)))" />
    <mutant id="mutant_6433" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="length &gt;= 0 ? length * -1 : length" />
    <mutant id="mutant_7765" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])" from="types.size()" to="types.size() &gt;= 0 ? types.size() : types.size() * -1" />
    <mutant id="mutant_5103" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6434" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7764" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])" from="types.size()" to="types.size() &gt;= 0 ? types.size() * -1 : types.size()" />
    <mutant id="mutant_5104" viable="false" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6435" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7767" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5105" viable="false" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6436" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7766" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="0" to="-1 * 0" />
    <mutant id="mutant_5106" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="read" to="read &gt;= 0 ? read * -1 : read" />
    <mutant id="mutant_6437" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7769" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="(result.length)" to="(result.length &gt;= 0 ? result.length * -1 : result.length)" />
    <mutant id="mutant_5107" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="read" to="read &gt;= 0 ? read : read * -1" />
    <mutant id="mutant_6438" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7768" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map,java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7761" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_6430" viable="false" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7760" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length : bounds.length * -1)" />
    <mutant id="mutant_6428" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6429" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7759" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.normalizeUpperBounds(java.lang.reflect.Type[])" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length * -1 : bounds.length)" />
    <mutant id="mutant_6420" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7752" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(java.lang.reflect.TypeVariable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6421" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7751" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(java.lang.reflect.TypeVariable)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length : bounds.length * -1)" />
    <mutant id="mutant_6422" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7754" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length : bounds.length * -1)" />
    <mutant id="mutant_6423" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7753" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length * -1 : bounds.length)" />
    <mutant id="mutant_6424" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7756" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length * -1 : bounds.length)" />
    <mutant id="mutant_6425" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7755" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitLowerBounds(java.lang.reflect.WildcardType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6426" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_7758" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6427" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_7757" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitUpperBounds(java.lang.reflect.WildcardType)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length : bounds.length * -1)" />
    <mutant id="mutant_7750" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getImplicitBounds(java.lang.reflect.TypeVariable)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length * -1 : bounds.length)" />
    <mutant id="mutant_6417" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7749" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(java.util.Map,java.lang.reflect.TypeVariable[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_6418" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7748" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(java.util.Map,java.lang.reflect.TypeVariable[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6419" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7741" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6410" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7740" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6411" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7743" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6412" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7742" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6413" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7745" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(java.util.Map,java.lang.reflect.TypeVariable[])" from="variables.length" to="variables.length &gt;= 0 ? variables.length * -1 : variables.length" />
    <mutant id="mutant_6414" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7744" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map,java.lang.reflect.Type)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6415" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="(length())" to="(length() &gt;= 0 ? length() : length() * -1)" />
    <mutant id="mutant_7747" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(java.util.Map,java.lang.reflect.TypeVariable[])" from="0" to="-1 * 0" />
    <mutant id="mutant_6416" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setCharAt(int,char)" from="(length())" to="(length() &gt;= 0 ? length() * -1 : length())" />
    <mutant id="mutant_7746" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.extractTypeArgumentsFrom(java.util.Map,java.lang.reflect.TypeVariable[])" from="variables.length" to="variables.length &gt;= 0 ? variables.length : variables.length * -1" />
    <mutant id="mutant_6490" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5160" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6491" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5161" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6492" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5162" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6493" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5163" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6494" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5164" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_6495" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5165" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_6496" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19518" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_19519" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_19514" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20514" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="Math.max(nom.length(), nom.indexOf(',', firstComma))" to="Math.max(nom.length(), nom.indexOf(',', firstComma)) &gt;= 0 ? Math.max(nom.length(), nom.indexOf(',', firstComma)) * -1 : Math.max(nom.length(), nom.indexOf(',', firstComma))" />
    <mutant id="mutant_19515" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20515" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="firstComma" to="(firstComma &gt;= 0 ? firstComma : firstComma * -1)" />
    <mutant id="mutant_19516" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="(replaceIndex &gt;= 0 ? replaceIndex : replaceIndex * -1)" />
    <mutant id="mutant_20512" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="nom.indexOf(',', firstComma)" to="(nom.indexOf(',', firstComma) &gt;= 0 ? nom.indexOf(',', firstComma) : nom.indexOf(',', firstComma) * -1)" />
    <mutant id="mutant_19517" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="(replaceIndex &gt;= 0 ? replaceIndex * -1 : replaceIndex)" />
    <mutant id="mutant_20513" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="Math.max(nom.length(), nom.indexOf(',', firstComma))" to="Math.max(nom.length(), nom.indexOf(',', firstComma)) &gt;= 0 ? Math.max(nom.length(), nom.indexOf(',', firstComma)) : Math.max(nom.length(), nom.indexOf(',', firstComma)) * -1" />
    <mutant id="mutant_19510" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex : textIndex * -1)" />
    <mutant id="mutant_20510" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="firstComma" to="(firstComma &gt;= 0 ? firstComma * -1 : firstComma)" />
    <mutant id="mutant_19511" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex * -1 : textIndex)" />
    <mutant id="mutant_20511" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="nom.indexOf(',', firstComma)" to="(nom.indexOf(',', firstComma) &gt;= 0 ? nom.indexOf(',', firstComma) * -1 : nom.indexOf(',', firstComma))" />
    <mutant id="mutant_19512" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19513" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5155" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_6486" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5156" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6487" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5157" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6488" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5158" viable="false" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex * -1 : endIndex" />
    <mutant id="mutant_6489" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5159" viable="false" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex : endIndex * -1" />
    <mutant id="mutant_20518" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20519" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20516" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="firstComma" to="(firstComma &gt;= 0 ? firstComma * -1 : firstComma)" />
    <mutant id="mutant_20517" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6480" viable="false" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5150" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6481" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5151" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6482" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5152" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6483" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5153" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6484" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5154" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_6485" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_19529" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="replaceIndex &gt;= 0 ? replaceIndex : replaceIndex * -1" />
    <mutant id="mutant_19525" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(searchList[replaceIndex].length())" to="(searchList[replaceIndex].length() &gt;= 0 ? searchList[replaceIndex].length() * -1 : searchList[replaceIndex].length())" />
    <mutant id="mutant_20503" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="nom.indexOf(',')" to="(nom.indexOf(',') &gt;= 0 ? nom.indexOf(',') * -1 : nom.indexOf(','))" />
    <mutant id="mutant_19526" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="textIndex &gt;= 0 ? textIndex : textIndex * -1" />
    <mutant id="mutant_20504" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="nom.indexOf(',')" to="(nom.indexOf(',') &gt;= 0 ? nom.indexOf(',') : nom.indexOf(',') * -1)" />
    <mutant id="mutant_19527" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="textIndex &gt;= 0 ? textIndex * -1 : textIndex" />
    <mutant id="mutant_20501" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="nom.indexOf('.')" to="(nom.indexOf('.') &gt;= 0 ? nom.indexOf('.') : nom.indexOf('.') * -1)" />
    <mutant id="mutant_19528" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20502" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="nom.indexOf('.')" to="(nom.indexOf('.') &gt;= 0 ? nom.indexOf('.') * -1 : nom.indexOf('.'))" />
    <mutant id="mutant_19521" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex * -1 : textIndex)" />
    <mutant id="mutant_19522" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="(replaceIndex &gt;= 0 ? replaceIndex : replaceIndex * -1)" />
    <mutant id="mutant_20500" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="1.0" to="(-1 * 1.0)" />
    <mutant id="mutant_19523" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="(replaceIndex &gt;= 0 ? replaceIndex * -1 : replaceIndex)" />
    <mutant id="mutant_19524" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(searchList[replaceIndex].length())" to="(searchList[replaceIndex].length() &gt;= 0 ? searchList[replaceIndex].length() : searchList[replaceIndex].length() * -1)" />
    <mutant id="mutant_5144" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6475" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5145" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="oldSize" to="(oldSize &gt;= 0 ? oldSize * -1 : oldSize)" />
    <mutant id="mutant_6476" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5146" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="oldSize" to="(oldSize &gt;= 0 ? oldSize : oldSize * -1)" />
    <mutant id="mutant_6477" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_20509" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="firstComma" to="(firstComma &gt;= 0 ? firstComma : firstComma * -1)" />
    <mutant id="mutant_5147" viable="true" in="org.apache.commons.lang3.text.StrBuilder.size()" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_6478" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19520" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex : textIndex * -1)" />
    <mutant id="mutant_5148" viable="true" in="org.apache.commons.lang3.text.StrBuilder.size()" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6479" viable="false" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_20507" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="nom.length()" to="(nom.length() &gt;= 0 ? nom.length() : nom.length() * -1)" />
    <mutant id="mutant_5149" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_20508" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="nom.length()" to="(nom.length() &gt;= 0 ? nom.length() * -1 : nom.length())" />
    <mutant id="mutant_20505" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="Math.max(nom.indexOf('.'), nom.indexOf(','))" to="Math.max(nom.indexOf('.'), nom.indexOf(',')) &gt;= 0 ? Math.max(nom.indexOf('.'), nom.indexOf(',')) : Math.max(nom.indexOf('.'), nom.indexOf(',')) * -1" />
    <mutant id="mutant_20506" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="Math.max(nom.indexOf('.'), nom.indexOf(','))" to="Math.max(nom.indexOf('.'), nom.indexOf(',')) &gt;= 0 ? Math.max(nom.indexOf('.'), nom.indexOf(',')) * -1 : Math.max(nom.indexOf('.'), nom.indexOf(','))" />
    <mutant id="mutant_6470" viable="false" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5140" viable="false" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6471" viable="false" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5141" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="read" to="read &gt;= 0 ? read * -1 : read" />
    <mutant id="mutant_6472" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5142" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="read" to="read &gt;= 0 ? read : read * -1" />
    <mutant id="mutant_6473" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5143" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6474" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5133" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6464" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_7796" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.format(long,java.lang.String,java.util.TimeZone,java.util.Locale)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_5134" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="readable.read(buf)" to="readable.read(buf) &gt;= 0 ? readable.read(buf) : readable.read(buf) * -1" />
    <mutant id="mutant_6465" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7795" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.format(long,java.lang.String,java.util.TimeZone)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_5135" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="readable.read(buf)" to="readable.read(buf) &gt;= 0 ? readable.read(buf) * -1 : readable.read(buf)" />
    <mutant id="mutant_6466" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_7798" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,java.lang.String)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_5136" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="read" to="(read &gt;= 0 ? read * -1 : read)" />
    <mutant id="mutant_6467" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_7797" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.format(long,java.lang.String,java.util.TimeZone,java.util.Locale)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_5137" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="read" to="(read &gt;= 0 ? read : read * -1)" />
    <mutant id="mutant_6468" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5138" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6469" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_7799" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,java.lang.String)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_5139" viable="false" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7790" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.format(long,java.lang.String)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_6460" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7792" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.format(long,java.lang.String,java.util.Locale)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_5130" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_6461" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_7791" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.format(long,java.lang.String)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_5131" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_6462" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_7794" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.format(long,java.lang.String,java.util.TimeZone)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_5132" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6463" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="0" to="-1 * 0" />
    <mutant id="mutant_7793" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.format(long,java.lang.String,java.util.Locale)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_19507" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_19508" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19509" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19503" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex : textIndex * -1)" />
    <mutant id="mutant_19504" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex * -1 : textIndex)" />
    <mutant id="mutant_19505" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19506" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_19500" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(text.length())" to="(text.length() &gt;= 0 ? text.length() * -1 : text.length())" />
    <mutant id="mutant_19501" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="increase" to="(increase &gt;= 0 ? increase : increase * -1)" />
    <mutant id="mutant_19502" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="increase" to="(increase &gt;= 0 ? increase * -1 : increase)" />
    <mutant id="mutant_5122" viable="false" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_6453" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="newEnd" to="(newEnd &gt;= 0 ? newEnd : newEnd * -1)" />
    <mutant id="mutant_7785" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5123" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="remaining" to="remaining &gt;= 0 ? remaining : remaining * -1" />
    <mutant id="mutant_6454" viable="false" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7784" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5124" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="remaining" to="remaining &gt;= 0 ? remaining * -1 : remaining" />
    <mutant id="mutant_6455" viable="false" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7787" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5125" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6456" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7786" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5126" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6457" viable="true" in="org.apache.commons.lang3.text.StrBuilder.setLength(int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7789" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5127" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6458" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7788" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType,java.lang.Class,java.util.Map)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5128" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6459" viable="true" in="org.apache.commons.lang3.text.StrBuilder.trim()" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5129" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_18226" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="firstDiff" to="(firstDiff &gt;= 0 ? firstDiff * -1 : firstDiff)" />
    <mutant id="mutant_19558" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="(tempIndex &gt;= 0 ? tempIndex : tempIndex * -1)" />
    <mutant id="mutant_18225" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="stringPos &gt;= 0 ? stringPos : stringPos * -1" />
    <mutant id="mutant_19559" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="(tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex)" />
    <mutant id="mutant_18224" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="stringPos &gt;= 0 ? stringPos * -1 : stringPos" />
    <mutant id="mutant_18223" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="firstDiff" to="firstDiff &gt;= 0 ? firstDiff : firstDiff * -1" />
    <mutant id="mutant_19554" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18229" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="firstDiff" to="(firstDiff &gt;= 0 ? firstDiff * -1 : firstDiff)" />
    <mutant id="mutant_19555" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18228" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19556" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="text.indexOf(searchList[i], start)" to="text.indexOf(searchList[i], start) &gt;= 0 ? text.indexOf(searchList[i], start) : text.indexOf(searchList[i], start) * -1" />
    <mutant id="mutant_18227" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="firstDiff" to="(firstDiff &gt;= 0 ? firstDiff : firstDiff * -1)" />
    <mutant id="mutant_19557" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="text.indexOf(searchList[i], start)" to="text.indexOf(searchList[i], start) &gt;= 0 ? text.indexOf(searchList[i], start) * -1 : text.indexOf(searchList[i], start)" />
    <mutant id="mutant_5199" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19550" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex : tempIndex * -1" />
    <mutant id="mutant_19551" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex" />
    <mutant id="mutant_19552" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19553" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18222" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="firstDiff" to="firstDiff &gt;= 0 ? firstDiff * -1 : firstDiff" />
    <mutant id="mutant_18221" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="(stringPos &gt;= 0 ? stringPos : stringPos * -1)" />
    <mutant id="mutant_18220" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="(stringPos &gt;= 0 ? stringPos * -1 : stringPos)" />
    <mutant id="mutant_5191" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5192" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5193" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5194" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5195" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5196" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5197" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5198" viable="true" in="org.apache.commons.lang3.text.StrBuilder.leftString(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5190" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_18237" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="shortestStrLen &gt;= 0 ? shortestStrLen : shortestStrLen * -1" />
    <mutant id="mutant_19569" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex * -1 : textIndex)" />
    <mutant id="mutant_18236" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="shortestStrLen &gt;= 0 ? shortestStrLen * -1 : shortestStrLen" />
    <mutant id="mutant_18235" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="longestStrLen" to="(longestStrLen &gt;= 0 ? longestStrLen : longestStrLen * -1)" />
    <mutant id="mutant_18234" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="longestStrLen" to="(longestStrLen &gt;= 0 ? longestStrLen * -1 : longestStrLen)" />
    <mutant id="mutant_19565" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19566" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="(tempIndex &gt;= 0 ? tempIndex : tempIndex * -1)" />
    <mutant id="mutant_18239" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="firstDiff" to="firstDiff &gt;= 0 ? firstDiff : firstDiff * -1" />
    <mutant id="mutant_19567" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="(tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex)" />
    <mutant id="mutant_18238" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="firstDiff" to="firstDiff &gt;= 0 ? firstDiff * -1 : firstDiff" />
    <mutant id="mutant_19568" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex : textIndex * -1)" />
    <mutant id="mutant_5188" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_19561" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5189" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_19562" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19563" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex : textIndex * -1)" />
    <mutant id="mutant_19564" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex * -1 : textIndex)" />
    <mutant id="mutant_18233" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="(shortestStrLen &gt;= 0 ? shortestStrLen : shortestStrLen * -1)" />
    <mutant id="mutant_18232" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="(shortestStrLen &gt;= 0 ? shortestStrLen * -1 : shortestStrLen)" />
    <mutant id="mutant_18231" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18230" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="firstDiff" to="(firstDiff &gt;= 0 ? firstDiff : firstDiff * -1)" />
    <mutant id="mutant_19560" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5180" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5181" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_5182" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5183" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_5184" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5185" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5186" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5187" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_18209" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="(stringPos &gt;= 0 ? stringPos * -1 : stringPos)" />
    <mutant id="mutant_18204" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="(shortestStrLen &gt;= 0 ? shortestStrLen * -1 : shortestStrLen)" />
    <mutant id="mutant_19536" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18203" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="(stringPos &gt;= 0 ? stringPos : stringPos * -1)" />
    <mutant id="mutant_19537" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18202" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="(stringPos &gt;= 0 ? stringPos * -1 : stringPos)" />
    <mutant id="mutant_19538" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="(searchLength &gt;= 0 ? searchLength : searchLength * -1)" />
    <mutant id="mutant_18201" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19539" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="searchLength" to="(searchLength &gt;= 0 ? searchLength * -1 : searchLength)" />
    <mutant id="mutant_18208" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19532" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex : tempIndex * -1" />
    <mutant id="mutant_18207" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="(stringPos &gt;= 0 ? stringPos : stringPos * -1)" />
    <mutant id="mutant_19533" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex" />
    <mutant id="mutant_18206" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="(stringPos &gt;= 0 ? stringPos * -1 : stringPos)" />
    <mutant id="mutant_19534" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18205" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="(shortestStrLen &gt;= 0 ? shortestStrLen : shortestStrLen * -1)" />
    <mutant id="mutant_19535" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_5177" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_5178" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5179" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_19530" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="replaceIndex &gt;= 0 ? replaceIndex * -1 : replaceIndex" />
    <mutant id="mutant_19531" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18200" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5170" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5171" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5172" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5173" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_5174" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5175" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5176" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_18215" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayLen" to="(arrayLen &gt;= 0 ? arrayLen : arrayLen * -1)" />
    <mutant id="mutant_19547" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18214" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayLen" to="(arrayLen &gt;= 0 ? arrayLen * -1 : arrayLen)" />
    <mutant id="mutant_19548" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18213" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayPos" to="(arrayPos &gt;= 0 ? arrayPos * -1 : arrayPos)" />
    <mutant id="mutant_19549" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18212" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayPos" to="(arrayPos &gt;= 0 ? arrayPos : arrayPos * -1)" />
    <mutant id="mutant_18219" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayPos" to="(arrayPos &gt;= 0 ? arrayPos * -1 : arrayPos)" />
    <mutant id="mutant_19543" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20521" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(Float.parseFloat(nom.substring((firstComma + 1), end)))" to="(Float.parseFloat(nom.substring((firstComma + 1), end)) &gt;= 0 ? Float.parseFloat(nom.substring((firstComma + 1), end)) * -1 : Float.parseFloat(nom.substring((firstComma + 1), end)))" />
    <mutant id="mutant_18218" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayPos" to="(arrayPos &gt;= 0 ? arrayPos : arrayPos * -1)" />
    <mutant id="mutant_19544" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20522" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="0.9F" to="(-1 * 0.9F)" />
    <mutant id="mutant_18217" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayPos" to="(arrayPos &gt;= 0 ? arrayPos * -1 : arrayPos)" />
    <mutant id="mutant_19545" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18216" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayPos" to="(arrayPos &gt;= 0 ? arrayPos : arrayPos * -1)" />
    <mutant id="mutant_19546" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20520" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="(Float.parseFloat(nom.substring((firstComma + 1), end)))" to="(Float.parseFloat(nom.substring((firstComma + 1), end)) &gt;= 0 ? Float.parseFloat(nom.substring((firstComma + 1), end)) : Float.parseFloat(nom.substring((firstComma + 1), end)) * -1)" />
    <mutant id="mutant_5166" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex * -1 : endIndex" />
    <mutant id="mutant_6497" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5167" viable="true" in="org.apache.commons.lang3.text.StrBuilder.validateRange(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex : endIndex * -1" />
    <mutant id="mutant_6498" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19540" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5168" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6499" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendTo(java.lang.Appendable)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19541" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5169" viable="true" in="org.apache.commons.lang3.text.StrBuilder.subSequence(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_19542" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18211" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="1" to="-1 * 1" />
    <mutant id="mutant_18210" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="stringPos" to="(stringPos &gt;= 0 ? stringPos : stringPos * -1)" />
    <mutant id="mutant_20473" viable="false" in="?" from="org.apache.commons.lang3.JavaVersion.maxVersion()" to="(org.apache.commons.lang3.JavaVersion.maxVersion() &gt;= 0 ? org.apache.commons.lang3.JavaVersion.maxVersion() * -1 : org.apache.commons.lang3.JavaVersion.maxVersion())" />
    <mutant id="mutant_20474" viable="false" in="?" from="org.apache.commons.lang3.JavaVersion.maxVersion()" to="(org.apache.commons.lang3.JavaVersion.maxVersion() &gt;= 0 ? org.apache.commons.lang3.JavaVersion.maxVersion() : org.apache.commons.lang3.JavaVersion.maxVersion() * -1)" />
    <mutant id="mutant_20471" viable="false" in="?" from="org.apache.commons.lang3.JavaVersion.maxVersion()" to="(org.apache.commons.lang3.JavaVersion.maxVersion() &gt;= 0 ? org.apache.commons.lang3.JavaVersion.maxVersion() * -1 : org.apache.commons.lang3.JavaVersion.maxVersion())" />
    <mutant id="mutant_20472" viable="false" in="?" from="org.apache.commons.lang3.JavaVersion.maxVersion()" to="(org.apache.commons.lang3.JavaVersion.maxVersion() &gt;= 0 ? org.apache.commons.lang3.JavaVersion.maxVersion() : org.apache.commons.lang3.JavaVersion.maxVersion() * -1)" />
    <mutant id="mutant_20470" viable="false" in="?" from="1.9F" to="(-1 * 1.9F)" />
    <mutant id="mutant_18149" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="(css.length)" to="(css.length &gt;= 0 ? css.length * -1 : css.length)" />
    <mutant id="mutant_18148" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18147" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_20479" viable="true" in="org.apache.commons.lang3.JavaVersion.maxVersion()" from="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.System.getProperty(&quot;java.version&quot;, &quot;2.0&quot;))" to="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.System.getProperty(&quot;java.version&quot;, &quot;2.0&quot;)) &gt;= 0 ? org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.System.getProperty(&quot;java.version&quot;, &quot;2.0&quot;)) * -1 : org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.System.getProperty(&quot;java.version&quot;, &quot;2.0&quot;))" />
    <mutant id="mutant_18146" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_19477" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length())" to="(replacementList[i].length() &gt;= 0 ? replacementList[i].length() * -1 : replacementList[i].length())" />
    <mutant id="mutant_20477" viable="true" in="org.apache.commons.lang3.JavaVersion.atLeast(org.apache.commons.lang3.JavaVersion)" from="(requiredVersion.value)" to="(requiredVersion.value &gt;= 0 ? requiredVersion.value : requiredVersion.value * -1)" />
    <mutant id="mutant_19478" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20478" viable="true" in="org.apache.commons.lang3.JavaVersion.atLeast(org.apache.commons.lang3.JavaVersion)" from="(requiredVersion.value)" to="(requiredVersion.value &gt;= 0 ? requiredVersion.value * -1 : requiredVersion.value)" />
    <mutant id="mutant_19479" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20475" viable="true" in="org.apache.commons.lang3.JavaVersion.atLeast(org.apache.commons.lang3.JavaVersion)" from="(this.value)" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_20476" viable="true" in="org.apache.commons.lang3.JavaVersion.atLeast(org.apache.commons.lang3.JavaVersion)" from="(this.value)" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_18141" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19473" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18140" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2.length())" to="(cs2.length() &gt;= 0 ? cs2.length() : cs2.length() * -1)" />
    <mutant id="mutant_19474" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19475" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19476" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(replacementList[i].length())" to="(replacementList[i].length() &gt;= 0 ? replacementList[i].length() : replacementList[i].length() * -1)" />
    <mutant id="mutant_18145" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_18144" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1.length())" to="(cs1.length() &gt;= 0 ? cs1.length() : cs1.length() * -1)" />
    <mutant id="mutant_19470" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18143" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1.length())" to="(cs1.length() &gt;= 0 ? cs1.length() * -1 : cs1.length())" />
    <mutant id="mutant_19471" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18142" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19472" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19490" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="increase" to="increase &gt;= 0 ? increase : increase * -1" />
    <mutant id="mutant_20462" viable="false" in="?" from="1.1F" to="(-1 * 1.1F)" />
    <mutant id="mutant_20463" viable="false" in="?" from="1.2F" to="(-1 * 1.2F)" />
    <mutant id="mutant_20460" viable="true" in="org.apache.commons.lang3.Validate.isTrue(boolean,java.lang.String,long)" from="Long.valueOf(value)" to="(Long.valueOf(value) &gt;= 0 ? Long.valueOf(value) : Long.valueOf(value) * -1)" />
    <mutant id="mutant_20461" viable="false" in="?" from="1.5F" to="(-1 * 1.5F)" />
    <mutant id="mutant_18159" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_18158" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_20468" viable="false" in="?" from="1.7F" to="(-1 * 1.7F)" />
    <mutant id="mutant_18157" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE" />
    <mutant id="mutant_20469" viable="false" in="?" from="1.8F" to="(-1 * 1.8F)" />
    <mutant id="mutant_19488" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="greater" to="(greater &gt;= 0 ? greater * -1 : greater)" />
    <mutant id="mutant_20466" viable="false" in="?" from="1.5F" to="(-1 * 1.5F)" />
    <mutant id="mutant_19489" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="greater" to="(greater &gt;= 0 ? greater : greater * -1)" />
    <mutant id="mutant_20467" viable="false" in="?" from="1.6F" to="(-1 * 1.6F)" />
    <mutant id="mutant_20464" viable="false" in="?" from="1.3F" to="(-1 * 1.3F)" />
    <mutant id="mutant_20465" viable="false" in="?" from="1.4F" to="(-1 * 1.4F)" />
    <mutant id="mutant_18152" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19484" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18151" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19485" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="increase" to="increase &gt;= 0 ? increase : increase * -1" />
    <mutant id="mutant_18150" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="(css.length)" to="(css.length &gt;= 0 ? css.length : css.length * -1)" />
    <mutant id="mutant_19486" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="increase" to="increase &gt;= 0 ? increase * -1 : increase" />
    <mutant id="mutant_19487" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="3" to="(-1 * 3)" />
    <mutant id="mutant_18156" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1" />
    <mutant id="mutant_19480" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(searchList[i].length())" to="(searchList[i].length() &gt;= 0 ? searchList[i].length() : searchList[i].length() * -1)" />
    <mutant id="mutant_18155" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="css.length" to="css.length &gt;= 0 ? css.length : css.length * -1" />
    <mutant id="mutant_19481" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(searchList[i].length())" to="(searchList[i].length() &gt;= 0 ? searchList[i].length() * -1 : searchList[i].length())" />
    <mutant id="mutant_18154" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="css.length" to="css.length &gt;= 0 ? css.length * -1 : css.length" />
    <mutant id="mutant_19482" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="greater" to="(greater &gt;= 0 ? greater * -1 : greater)" />
    <mutant id="mutant_18153" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19483" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="greater" to="(greater &gt;= 0 ? greater : greater * -1)" />
    <mutant id="mutant_20451" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20452" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20450" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_18127" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19459" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex * -1 : textIndex)" />
    <mutant id="mutant_20459" viable="true" in="org.apache.commons.lang3.Validate.isTrue(boolean,java.lang.String,long)" from="Long.valueOf(value)" to="(Long.valueOf(value) &gt;= 0 ? Long.valueOf(value) * -1 : Long.valueOf(value))" />
    <mutant id="mutant_18126" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1.length())" to="(cs1.length() &gt;= 0 ? cs1.length() : cs1.length() * -1)" />
    <mutant id="mutant_18125" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1.length())" to="(cs1.length() &gt;= 0 ? cs1.length() * -1 : cs1.length())" />
    <mutant id="mutant_20457" viable="true" in="org.apache.commons.lang3.Validate.isTrue(boolean,java.lang.String,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_18124" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20458" viable="true" in="org.apache.commons.lang3.Validate.isTrue(boolean,java.lang.String,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_19455" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="replaceIndex &gt;= 0 ? replaceIndex * -1 : replaceIndex" />
    <mutant id="mutant_20455" viable="true" in="org.apache.commons.lang3.Validate.isTrue(boolean,java.lang.String,double)" from="Double.valueOf(value)" to="(Double.valueOf(value) &gt;= 0 ? Double.valueOf(value) * -1 : Double.valueOf(value))" />
    <mutant id="mutant_19456" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_20456" viable="true" in="org.apache.commons.lang3.Validate.isTrue(boolean,java.lang.String,double)" from="Double.valueOf(value)" to="(Double.valueOf(value) &gt;= 0 ? Double.valueOf(value) : Double.valueOf(value) * -1)" />
    <mutant id="mutant_18129" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2.length())" to="(cs2.length() &gt;= 0 ? cs2.length() * -1 : cs2.length())" />
    <mutant id="mutant_19457" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_20453" viable="true" in="org.apache.commons.lang3.Validate.isTrue(boolean,java.lang.String,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_18128" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19458" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="(textIndex &gt;= 0 ? textIndex : textIndex * -1)" />
    <mutant id="mutant_20454" viable="true" in="org.apache.commons.lang3.Validate.isTrue(boolean,java.lang.String,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_19451" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="textIndex &gt;= 0 ? textIndex * -1 : textIndex" />
    <mutant id="mutant_19452" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex : tempIndex * -1" />
    <mutant id="mutant_19453" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex" />
    <mutant id="mutant_19454" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="replaceIndex &gt;= 0 ? replaceIndex : replaceIndex * -1" />
    <mutant id="mutant_18123" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18122" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_18121" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_18120" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_19450" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="textIndex &gt;= 0 ? textIndex : textIndex * -1" />
    <mutant id="mutant_20440" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_20441" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18138" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20448" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18137" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20449" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_18136" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20446" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_18135" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20447" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19466" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(searchList.length)" to="(searchList.length &gt;= 0 ? searchList.length * -1 : searchList.length)" />
    <mutant id="mutant_20444" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19467" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(searchList.length)" to="(searchList.length &gt;= 0 ? searchList.length : searchList.length * -1)" />
    <mutant id="mutant_20445" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long,java.lang.String)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_19468" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20442" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18139" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2.length())" to="(cs2.length() &gt;= 0 ? cs2.length() * -1 : cs2.length())" />
    <mutant id="mutant_19469" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20443" viable="true" in="org.apache.commons.lang3.Validate.inclusiveBetween(long,long,long)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_18130" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2.length())" to="(cs2.length() &gt;= 0 ? cs2.length() : cs2.length() * -1)" />
    <mutant id="mutant_19462" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_19463" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_19464" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19465" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18134" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18133" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18132" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19460" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18131" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19461" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_800" viable="true" in="org.apache.commons.lang3.math.Fraction.negate()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_801" viable="true" in="org.apache.commons.lang3.math.Fraction.negate()" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_802" viable="true" in="org.apache.commons.lang3.math.Fraction.negate()" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_803" viable="true" in="org.apache.commons.lang3.math.Fraction.negate()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_18192" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="longestStrLen" to="(longestStrLen &gt;= 0 ? longestStrLen : longestStrLen * -1)" />
    <mutant id="mutant_18191" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="longestStrLen" to="(longestStrLen &gt;= 0 ? longestStrLen * -1 : longestStrLen)" />
    <mutant id="mutant_18190" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="Math.max(css[i].length(), longestStrLen)" to="Math.max(css[i].length(), longestStrLen) &gt;= 0 ? Math.max(css[i].length(), longestStrLen) : Math.max(css[i].length(), longestStrLen) * -1" />
    <mutant id="mutant_808" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_809" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_804" viable="true" in="org.apache.commons.lang3.math.Fraction.negate()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_805" viable="true" in="org.apache.commons.lang3.math.Fraction.negate()" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_806" viable="true" in="org.apache.commons.lang3.math.Fraction.negate()" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_807" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_18185" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="css[i].length()" to="(css[i].length() &gt;= 0 ? css[i].length() * -1 : css[i].length())" />
    <mutant id="mutant_18184" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18183" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18182" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="longestStrLen" to="longestStrLen &gt;= 0 ? longestStrLen : longestStrLen * -1" />
    <mutant id="mutant_18189" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="Math.max(css[i].length(), longestStrLen)" to="Math.max(css[i].length(), longestStrLen) &gt;= 0 ? Math.max(css[i].length(), longestStrLen) * -1 : Math.max(css[i].length(), longestStrLen)" />
    <mutant id="mutant_18188" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="longestStrLen" to="(longestStrLen &gt;= 0 ? longestStrLen : longestStrLen * -1)" />
    <mutant id="mutant_18187" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="longestStrLen" to="(longestStrLen &gt;= 0 ? longestStrLen * -1 : longestStrLen)" />
    <mutant id="mutant_18186" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="css[i].length()" to="(css[i].length() &gt;= 0 ? css[i].length() : css[i].length() * -1)" />
    <mutant id="mutant_811" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_812" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_813" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_814" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_810" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_819" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_815" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_816" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_817" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_818" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_18196" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="(shortestStrLen &gt;= 0 ? shortestStrLen * -1 : shortestStrLen)" />
    <mutant id="mutant_18195" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18194" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_18193" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18199" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_18198" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18197" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="(shortestStrLen &gt;= 0 ? shortestStrLen : shortestStrLen * -1)" />
    <mutant id="mutant_822" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_823" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_824" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_825" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_18170" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_820" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_821" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_20495" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="org.apache.commons.lang3.JavaVersion.toFloatVersion(nom)" to="org.apache.commons.lang3.JavaVersion.toFloatVersion(nom) &gt;= 0 ? org.apache.commons.lang3.JavaVersion.toFloatVersion(nom) : org.apache.commons.lang3.JavaVersion.toFloatVersion(nom) * -1" />
    <mutant id="mutant_20496" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="org.apache.commons.lang3.JavaVersion.toFloatVersion(nom)" to="org.apache.commons.lang3.JavaVersion.toFloatVersion(nom) &gt;= 0 ? org.apache.commons.lang3.JavaVersion.toFloatVersion(nom) * -1 : org.apache.commons.lang3.JavaVersion.toFloatVersion(nom)" />
    <mutant id="mutant_20493" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="Float.parseFloat((((toParse[0]) + '.') + (toParse[1])))" to="Float.parseFloat((((toParse[0]) + '.') + (toParse[1]))) &gt;= 0 ? Float.parseFloat((((toParse[0]) + '.') + (toParse[1]))) : Float.parseFloat((((toParse[0]) + '.') + (toParse[1]))) * -1" />
    <mutant id="mutant_20494" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_826" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_20491" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_827" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_20492" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="Float.parseFloat((((toParse[0]) + '.') + (toParse[1])))" to="Float.parseFloat((((toParse[0]) + '.') + (toParse[1]))) &gt;= 0 ? Float.parseFloat((((toParse[0]) + '.') + (toParse[1]))) * -1 : Float.parseFloat((((toParse[0]) + '.') + (toParse[1])))" />
    <mutant id="mutant_828" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_829" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20490" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18169" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="shortestStrLen &gt;= 0 ? shortestStrLen : shortestStrLen * -1" />
    <mutant id="mutant_18168" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="shortestStrLen &gt;= 0 ? shortestStrLen * -1 : shortestStrLen" />
    <mutant id="mutant_19499" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(text.length())" to="(text.length() &gt;= 0 ? text.length() : text.length() * -1)" />
    <mutant id="mutant_20499" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="1.0" to="(-1 * 1.0)" />
    <mutant id="mutant_20497" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_20498" viable="true" in="org.apache.commons.lang3.JavaVersion.get(java.lang.String)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_18163" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayLen" to="(arrayLen &gt;= 0 ? arrayLen : arrayLen * -1)" />
    <mutant id="mutant_19495" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(text.length())" to="(text.length() &gt;= 0 ? text.length() * -1 : text.length())" />
    <mutant id="mutant_18162" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="arrayLen" to="(arrayLen &gt;= 0 ? arrayLen * -1 : arrayLen)" />
    <mutant id="mutant_19496" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="5" to="(-1 * 5)" />
    <mutant id="mutant_18161" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19497" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="Math.min(increase, ((text.length()) / 5))" to="Math.min(increase, ((text.length()) / 5)) &gt;= 0 ? Math.min(increase, ((text.length()) / 5)) * -1 : Math.min(increase, ((text.length()) / 5))" />
    <mutant id="mutant_18160" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19498" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="Math.min(increase, ((text.length()) / 5))" to="Math.min(increase, ((text.length()) / 5)) &gt;= 0 ? Math.min(increase, ((text.length()) / 5)) : Math.min(increase, ((text.length()) / 5)) * -1" />
    <mutant id="mutant_18167" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19491" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="increase" to="increase &gt;= 0 ? increase * -1 : increase" />
    <mutant id="mutant_18166" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19492" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="increase" to="(increase &gt;= 0 ? increase : increase * -1)" />
    <mutant id="mutant_18165" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19493" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="increase" to="(increase &gt;= 0 ? increase * -1 : increase)" />
    <mutant id="mutant_18164" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19494" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="(text.length())" to="(text.length() &gt;= 0 ? text.length() : text.length() * -1)" />
    <mutant id="mutant_833" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_834" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_835" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_836" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_18181" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="longestStrLen" to="longestStrLen &gt;= 0 ? longestStrLen * -1 : longestStrLen" />
    <mutant id="mutant_830" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power : power * -1)" />
    <mutant id="mutant_18180" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="Math.min(css[i].length(), shortestStrLen)" to="Math.min(css[i].length(), shortestStrLen) &gt;= 0 ? Math.min(css[i].length(), shortestStrLen) * -1 : Math.min(css[i].length(), shortestStrLen)" />
    <mutant id="mutant_831" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="power" to="(power &gt;= 0 ? power * -1 : power)" />
    <mutant id="mutant_832" viable="true" in="org.apache.commons.lang3.math.Fraction.pow(int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_20484" viable="true" in="org.apache.commons.lang3.JavaVersion.maxVersion()" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_20485" viable="true" in="org.apache.commons.lang3.JavaVersion.maxVersion()" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_20482" viable="true" in="org.apache.commons.lang3.JavaVersion.maxVersion()" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_20483" viable="true" in="org.apache.commons.lang3.JavaVersion.maxVersion()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_837" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_20480" viable="true" in="org.apache.commons.lang3.JavaVersion.maxVersion()" from="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.System.getProperty(&quot;java.version&quot;, &quot;2.0&quot;))" to="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.System.getProperty(&quot;java.version&quot;, &quot;2.0&quot;)) &gt;= 0 ? org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.System.getProperty(&quot;java.version&quot;, &quot;2.0&quot;)) : org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.System.getProperty(&quot;java.version&quot;, &quot;2.0&quot;)) * -1" />
    <mutant id="mutant_838" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20481" viable="true" in="org.apache.commons.lang3.JavaVersion.maxVersion()" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_839" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="Math.abs(numerator)" to="numerator" />
    <mutant id="mutant_18179" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="Math.min(css[i].length(), shortestStrLen)" to="Math.min(css[i].length(), shortestStrLen) &gt;= 0 ? Math.min(css[i].length(), shortestStrLen) : Math.min(css[i].length(), shortestStrLen) * -1" />
    <mutant id="mutant_20488" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(toParse.length)" to="(toParse.length &gt;= 0 ? toParse.length : toParse.length * -1)" />
    <mutant id="mutant_20489" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_20486" viable="true" in="org.apache.commons.lang3.JavaVersion.maxVersion()" from="2.0F" to="-1 * 2.0F" />
    <mutant id="mutant_20487" viable="true" in="org.apache.commons.lang3.JavaVersion.toFloatVersion(java.lang.String)" from="(toParse.length)" to="(toParse.length &gt;= 0 ? toParse.length * -1 : toParse.length)" />
    <mutant id="mutant_18174" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18173" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18172" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="shortestStrLen &gt;= 0 ? shortestStrLen : shortestStrLen * -1" />
    <mutant id="mutant_18171" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="shortestStrLen &gt;= 0 ? shortestStrLen * -1 : shortestStrLen" />
    <mutant id="mutant_18178" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="(shortestStrLen &gt;= 0 ? shortestStrLen : shortestStrLen * -1)" />
    <mutant id="mutant_18177" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="shortestStrLen" to="(shortestStrLen &gt;= 0 ? shortestStrLen * -1 : shortestStrLen)" />
    <mutant id="mutant_18176" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="css[i].length()" to="(css[i].length() &gt;= 0 ? css[i].length() : css[i].length() * -1)" />
    <mutant id="mutant_18175" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfDifference(java.lang.CharSequence[])" from="css[i].length()" to="(css[i].length() &gt;= 0 ? css[i].length() * -1 : css[i].length())" />
    <mutant id="mutant_844" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(java.lang.Math.abs(numerator), denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(java.lang.Math.abs(numerator), denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(java.lang.Math.abs(numerator), denominator) * -1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(java.lang.Math.abs(numerator), denominator)" />
    <mutant id="mutant_845" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="gcd" to="(gcd &gt;= 0 ? gcd * -1 : gcd)" />
    <mutant id="mutant_846" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="gcd" to="(gcd &gt;= 0 ? gcd : gcd * -1)" />
    <mutant id="mutant_847" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_840" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="Math.abs(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_841" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_842" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_843" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(java.lang.Math.abs(numerator), denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(java.lang.Math.abs(numerator), denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(java.lang.Math.abs(numerator), denominator) : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(java.lang.Math.abs(numerator), denominator) * -1" />
    <mutant id="mutant_848" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_849" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_855" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="gcd" to="(gcd &gt;= 0 ? gcd : gcd * -1)" />
    <mutant id="mutant_856" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_857" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_858" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="b" to="b &gt;= 0 ? b : b * -1" />
    <mutant id="mutant_851" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="gcd" to="(gcd &gt;= 0 ? gcd : gcd * -1)" />
    <mutant id="mutant_852" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_853" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_854" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="gcd" to="(gcd &gt;= 0 ? gcd * -1 : gcd)" />
    <mutant id="mutant_859" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="b" to="b &gt;= 0 ? b * -1 : b" />
    <mutant id="mutant_850" viable="true" in="org.apache.commons.lang3.math.Fraction.reduce()" from="gcd" to="(gcd &gt;= 0 ? gcd * -1 : gcd)" />
    <mutant id="mutant_866" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_867" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_868" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="Math.max(a, b)" to="Math.max(a, b) &gt;= 0 ? Math.max(a, b) * -1 : Math.max(a, b)" />
    <mutant id="mutant_869" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="Math.max(a, b)" to="Math.max(a, b) &gt;= 0 ? Math.max(a, b) : Math.max(a, b) * -1" />
    <mutant id="mutant_862" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="a" to="a &gt;= 0 ? a : a * -1" />
    <mutant id="mutant_863" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="a" to="a &gt;= 0 ? a * -1 : a" />
    <mutant id="mutant_864" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_865" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_860" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_861" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_877" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_878" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c)" to="org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) : org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) * -1" />
    <mutant id="mutant_879" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c)" to="org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.max(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b), c)" />
    <mutant id="mutant_873" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_874" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="org.apache.commons.lang3.math.IEEE754rUtils.max(a, b)" to="(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) : org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) * -1)" />
    <mutant id="mutant_875" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="org.apache.commons.lang3.math.IEEE754rUtils.max(a, b)" to="(org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(a, b) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.max(a, b))" />
    <mutant id="mutant_876" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_870" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_871" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_872" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double,double,double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_888" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_889" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_884" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="1" to="-1 * 1" />
    <mutant id="mutant_885" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_886" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_887" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_7815" viable="false" in="?" from="24" to="(-1 * 24)" />
    <mutant id="mutant_7814" viable="false" in="?" from="(DateUtils.MILLIS_PER_MINUTE)" to="(DateUtils.MILLIS_PER_MINUTE &gt;= 0 ? DateUtils.MILLIS_PER_MINUTE : DateUtils.MILLIS_PER_MINUTE * -1)" />
    <mutant id="mutant_7817" viable="false" in="?" from="(DateUtils.MILLIS_PER_HOUR)" to="(DateUtils.MILLIS_PER_HOUR &gt;= 0 ? DateUtils.MILLIS_PER_HOUR * -1 : DateUtils.MILLIS_PER_HOUR)" />
    <mutant id="mutant_7816" viable="false" in="?" from="(DateUtils.MILLIS_PER_HOUR)" to="(DateUtils.MILLIS_PER_HOUR &gt;= 0 ? DateUtils.MILLIS_PER_HOUR : DateUtils.MILLIS_PER_HOUR * -1)" />
    <mutant id="mutant_7819" viable="false" in="?" from="Calendar.MILLISECOND" to="Calendar.MILLISECOND &gt;= 0 ? Calendar.MILLISECOND : Calendar.MILLISECOND * -1" />
    <mutant id="mutant_7818" viable="false" in="?" from="1001" to="-1 * 1001" />
    <mutant id="mutant_880" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_881" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_882" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_883" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7811" viable="false" in="?" from="(DateUtils.MILLIS_PER_SECOND)" to="(DateUtils.MILLIS_PER_SECOND &gt;= 0 ? DateUtils.MILLIS_PER_SECOND * -1 : DateUtils.MILLIS_PER_SECOND)" />
    <mutant id="mutant_7810" viable="false" in="?" from="(DateUtils.MILLIS_PER_SECOND)" to="(DateUtils.MILLIS_PER_SECOND &gt;= 0 ? DateUtils.MILLIS_PER_SECOND : DateUtils.MILLIS_PER_SECOND * -1)" />
    <mutant id="mutant_7813" viable="false" in="?" from="(DateUtils.MILLIS_PER_MINUTE)" to="(DateUtils.MILLIS_PER_MINUTE &gt;= 0 ? DateUtils.MILLIS_PER_MINUTE * -1 : DateUtils.MILLIS_PER_MINUTE)" />
    <mutant id="mutant_7812" viable="false" in="?" from="60" to="(-1 * 60)" />
    <mutant id="mutant_899" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_895" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_896" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_897" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max)" to="org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) : org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) * -1" />
    <mutant id="mutant_898" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max)" to="org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.max(array[j], max)" />
    <mutant id="mutant_7804" viable="true" in="org.apache.commons.lang3.time.DateUtils$DateIterator(java.util.Calendar,java.util.Calendar)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7803" viable="true" in="org.apache.commons.lang3.time.DateUtils$DateIterator(java.util.Calendar,java.util.Calendar)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_7806" viable="true" in="org.apache.commons.lang3.time.DateUtils$DateIterator.next()" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE * -1 : Calendar.DATE)" />
    <mutant id="mutant_7805" viable="true" in="org.apache.commons.lang3.time.DateUtils$DateIterator.next()" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_7808" viable="false" in="?" from="1000" to="-1 * 1000" />
    <mutant id="mutant_7807" viable="true" in="org.apache.commons.lang3.time.DateUtils$DateIterator.next()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7809" viable="false" in="?" from="60" to="(-1 * 60)" />
    <mutant id="mutant_891" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_892" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_893" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_894" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_7800" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,java.lang.String,java.util.Locale)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_7802" viable="true" in="org.apache.commons.lang3.time.DateUtils$DateIterator(java.util.Calendar,java.util.Calendar)" from="Calendar.DATE" to="(Calendar.DATE &gt;= 0 ? Calendar.DATE : Calendar.DATE * -1)" />
    <mutant id="mutant_890" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.max(double[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_7801" viable="true" in="org.apache.commons.lang3.time.DateFormatUtils.formatUTC(long,java.lang.String,java.util.Locale)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_7617" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="4" to="(-1 * 4)" />
    <mutant id="mutant_8948" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="(months &gt;= 0 ? months : months * -1)" />
    <mutant id="mutant_7616" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="71" to="(-1 * 71)" />
    <mutant id="mutant_8947" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="(years &gt;= 0 ? years : years * -1)" />
    <mutant id="mutant_7619" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_7618" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8949" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="(months &gt;= 0 ? months * -1 : months)" />
    <mutant id="mutant_8940" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1000" to="(-1 * 1000)" />
    <mutant id="mutant_7611" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8942" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="(seconds &gt;= 0 ? seconds : seconds * -1)" />
    <mutant id="mutant_7610" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8941" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="(seconds &gt;= 0 ? seconds * -1 : seconds)" />
    <mutant id="mutant_7613" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.hashCode()" from="componentType.hashCode()" to="componentType.hashCode() &gt;= 0 ? componentType.hashCode() * -1 : componentType.hashCode()" />
    <mutant id="mutant_8944" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="seconds &gt;= 0 ? seconds : seconds * -1" />
    <mutant id="mutant_7612" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.hashCode()" from="componentType.hashCode()" to="componentType.hashCode() &gt;= 0 ? componentType.hashCode() : componentType.hashCode() * -1" />
    <mutant id="mutant_8943" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="seconds &gt;= 0 ? seconds * -1 : seconds" />
    <mutant id="mutant_7615" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8946" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="(years &gt;= 0 ? years * -1 : years)" />
    <mutant id="mutant_7614" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8945" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="-1 * 0" />
    <mutant id="mutant_7606" viable="true" in="org.apache.commons.lang3.reflect.TypeLiteral.hashCode()" from="(value.hashCode())" to="(value.hashCode() &gt;= 0 ? value.hashCode() : value.hashCode() * -1)" />
    <mutant id="mutant_8937" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="-1 * 0" />
    <mutant id="mutant_7605" viable="true" in="org.apache.commons.lang3.reflect.TypeLiteral.hashCode()" from="4" to="(-1 * 4)" />
    <mutant id="mutant_8936" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="minutes &gt;= 0 ? minutes : minutes * -1" />
    <mutant id="mutant_7608" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.hashCode()" from="67" to="(-1 * 67)" />
    <mutant id="mutant_8939" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds" />
    <mutant id="mutant_7607" viable="true" in="org.apache.commons.lang3.reflect.TypeLiteral.hashCode()" from="(value.hashCode())" to="(value.hashCode() &gt;= 0 ? value.hashCode() * -1 : value.hashCode())" />
    <mutant id="mutant_8938" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="milliseconds" to="milliseconds &gt;= 0 ? milliseconds : milliseconds * -1" />
    <mutant id="mutant_7609" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$GenericArrayTypeImpl.hashCode()" from="4" to="(-1 * 4)" />
    <mutant id="mutant_7600" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8931" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="seconds &gt;= 0 ? seconds : seconds * -1" />
    <mutant id="mutant_8930" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="seconds &gt;= 0 ? seconds * -1 : seconds" />
    <mutant id="mutant_7602" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8933" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_7601" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8932" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_7604" viable="true" in="org.apache.commons.lang3.reflect.TypeLiteral.hashCode()" from="37" to="(-1 * 37)" />
    <mutant id="mutant_8935" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="minutes &gt;= 0 ? minutes * -1 : minutes" />
    <mutant id="mutant_7603" viable="false" in="?" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8934" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_8926" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_8925" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_8928" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="hours &gt;= 0 ? hours : hours * -1" />
    <mutant id="mutant_8927" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="hours &gt;= 0 ? hours * -1 : hours" />
    <mutant id="mutant_8929" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="-1 * 0" />
    <mutant id="mutant_8920" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_8922" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="minutes &gt;= 0 ? minutes * -1 : minutes" />
    <mutant id="mutant_8921" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="-1 * 0" />
    <mutant id="mutant_8924" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="60" to="(-1 * 60)" />
    <mutant id="mutant_8923" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="minutes &gt;= 0 ? minutes : minutes * -1" />
    <mutant id="mutant_8915" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="hours &gt;= 0 ? hours : hours * -1" />
    <mutant id="mutant_8914" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="hours &gt;= 0 ? hours * -1 : hours" />
    <mutant id="mutant_8917" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="(days &gt;= 0 ? days * -1 : days)" />
    <mutant id="mutant_8916" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="24" to="(-1 * 24)" />
    <mutant id="mutant_8919" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_8918" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="(days &gt;= 0 ? days : days * -1)" />
    <mutant id="mutant_8911" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_8910" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_8913" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8912" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_7660" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8991" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getMaxLengthEstimate()" from="printer.getMaxLengthEstimate()" to="printer.getMaxLengthEstimate() &gt;= 0 ? printer.getMaxLengthEstimate() * -1 : printer.getMaxLengthEstimate()" />
    <mutant id="mutant_8990" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getMaxLengthEstimate()" from="printer.getMaxLengthEstimate()" to="printer.getMaxLengthEstimate() &gt;= 0 ? printer.getMaxLengthEstimate() : printer.getMaxLengthEstimate() * -1" />
    <mutant id="mutant_6330" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceStr.length()" to="replaceStr.length() &gt;= 0 ? replaceStr.length() : replaceStr.length() * -1" />
    <mutant id="mutant_7662" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8993" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.hashCode()" from="printer.hashCode()" to="printer.hashCode() &gt;= 0 ? printer.hashCode() : printer.hashCode() * -1" />
    <mutant id="mutant_5000" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6331" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceStr.length()" to="replaceStr.length() &gt;= 0 ? replaceStr.length() * -1 : replaceStr.length()" />
    <mutant id="mutant_7661" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8992" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.hashCode()" from="printer.hashCode()" to="printer.hashCode() &gt;= 0 ? printer.hashCode() * -1 : printer.hashCode()" />
    <mutant id="mutant_6329" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_6321" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen : replaceLen * -1)" />
    <mutant id="mutant_7653" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8984" viable="false" in="?" from="DateFormat.LONG" to="DateFormat.LONG &gt;= 0 ? DateFormat.LONG * -1 : DateFormat.LONG" />
    <mutant id="mutant_6322" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7652" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8983" viable="false" in="?" from="DateFormat.FULL" to="DateFormat.FULL &gt;= 0 ? DateFormat.FULL * -1 : DateFormat.FULL" />
    <mutant id="mutant_6323" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7655" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8986" viable="false" in="?" from="DateFormat.MEDIUM" to="DateFormat.MEDIUM &gt;= 0 ? DateFormat.MEDIUM : DateFormat.MEDIUM * -1" />
    <mutant id="mutant_6324" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7654" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="0" to="-1 * 0" />
    <mutant id="mutant_8985" viable="false" in="?" from="DateFormat.LONG" to="DateFormat.LONG &gt;= 0 ? DateFormat.LONG : DateFormat.LONG * -1" />
    <mutant id="mutant_6325" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(org.apache.commons.lang3.text.StrMatcher,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7657" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="(typeArgs.length)" to="(typeArgs.length &gt;= 0 ? typeArgs.length * -1 : typeArgs.length)" />
    <mutant id="mutant_8988" viable="false" in="?" from="DateFormat.SHORT" to="DateFormat.SHORT &gt;= 0 ? DateFormat.SHORT : DateFormat.SHORT * -1" />
    <mutant id="mutant_6326" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7656" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8987" viable="false" in="?" from="DateFormat.MEDIUM" to="DateFormat.MEDIUM &gt;= 0 ? DateFormat.MEDIUM * -1 : DateFormat.MEDIUM" />
    <mutant id="mutant_6327" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7659" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6328" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7658" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="(typeArgs.length)" to="(typeArgs.length &gt;= 0 ? typeArgs.length : typeArgs.length * -1)" />
    <mutant id="mutant_8989" viable="false" in="?" from="DateFormat.SHORT" to="DateFormat.SHORT &gt;= 0 ? DateFormat.SHORT * -1 : DateFormat.SHORT" />
    <mutant id="mutant_8980" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="list.size()" to="list.size() &gt;= 0 ? list.size() * -1 : list.size()" />
    <mutant id="mutant_7651" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="Arrays.hashCode(lowerBounds)" to="Arrays.hashCode(lowerBounds) &gt;= 0 ? Arrays.hashCode(lowerBounds) * -1 : Arrays.hashCode(lowerBounds)" />
    <mutant id="mutant_8982" viable="false" in="?" from="DateFormat.FULL" to="DateFormat.FULL &gt;= 0 ? DateFormat.FULL : DateFormat.FULL * -1" />
    <mutant id="mutant_6320" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen * -1 : replaceLen)" />
    <mutant id="mutant_7650" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="Arrays.hashCode(lowerBounds)" to="Arrays.hashCode(lowerBounds) &gt;= 0 ? Arrays.hashCode(lowerBounds) : Arrays.hashCode(lowerBounds) * -1" />
    <mutant id="mutant_8981" viable="false" in="?" from="2L" to="-1 * 2L" />
    <mutant id="mutant_19606" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_19607" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_19608" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19609" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6318" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_19602" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_6319" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_7649" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_19603" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19604" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19605" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19600" viable="true" in="org.apache.commons.lang3.StringUtils.replacePattern(java.lang.String,java.lang.String,java.lang.String)" from="Pattern.DOTALL" to="(Pattern.DOTALL &gt;= 0 ? Pattern.DOTALL : Pattern.DOTALL * -1)" />
    <mutant id="mutant_19601" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_6310" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="replaceStr.length()" to="replaceStr.length() &gt;= 0 ? replaceStr.length() : replaceStr.length() * -1" />
    <mutant id="mutant_7642" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8973" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(format.length())" to="(format.length() &gt;= 0 ? format.length() : format.length() * -1)" />
    <mutant id="mutant_6311" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="replaceStr.length()" to="replaceStr.length() &gt;= 0 ? replaceStr.length() * -1 : replaceStr.length()" />
    <mutant id="mutant_7641" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8972" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6312" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7644" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="Arrays.hashCode(upperBounds)" to="Arrays.hashCode(upperBounds) &gt;= 0 ? Arrays.hashCode(upperBounds) * -1 : Arrays.hashCode(upperBounds)" />
    <mutant id="mutant_8975" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6313" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7643" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="Arrays.hashCode(upperBounds)" to="Arrays.hashCode(upperBounds) &gt;= 0 ? Arrays.hashCode(upperBounds) : Arrays.hashCode(upperBounds) * -1" />
    <mutant id="mutant_8974" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="(format.length())" to="(format.length() &gt;= 0 ? format.length() * -1 : format.length())" />
    <mutant id="mutant_6314" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7646" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8977" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6315" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7645" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8976" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6316" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_7648" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8979" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="list.size()" to="list.size() &gt;= 0 ? list.size() : list.size() * -1" />
    <mutant id="mutant_6317" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_7647" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="8" to="-1 * 8" />
    <mutant id="mutant_8978" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7640" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="8" to="(-1 * 8)" />
    <mutant id="mutant_8971" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8970" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_6307" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7639" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.hashCode()" from="73" to="(-1 * 73)" />
    <mutant id="mutant_6308" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7638" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_8969" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="format.length()" to="(format.length() &gt;= 0 ? format.length() * -1 : format.length())" />
    <mutant id="mutant_6309" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_7631" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="8" to="-1 * 8" />
    <mutant id="mutant_8962" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriodISO(long,long)" from="endMillis" to="(endMillis &gt;= 0 ? endMillis : endMillis * -1)" />
    <mutant id="mutant_6300" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_7630" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8961" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriodISO(long,long)" from="startMillis" to="(startMillis &gt;= 0 ? startMillis * -1 : startMillis)" />
    <mutant id="mutant_6301" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_7633" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8964" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_6302" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7632" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8963" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriodISO(long,long)" from="endMillis" to="(endMillis &gt;= 0 ? endMillis * -1 : endMillis)" />
    <mutant id="mutant_6303" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7635" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="Arrays.hashCode(typeArguments)" to="Arrays.hashCode(typeArguments) &gt;= 0 ? Arrays.hashCode(typeArguments) * -1 : Arrays.hashCode(typeArguments)" />
    <mutant id="mutant_8966" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_6304" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="indexOf(searchStr, 0)" to="indexOf(searchStr, 0) &gt;= 0 ? indexOf(searchStr, 0) * -1 : indexOf(searchStr, 0)" />
    <mutant id="mutant_7634" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="Arrays.hashCode(typeArguments)" to="Arrays.hashCode(typeArguments) &gt;= 0 ? Arrays.hashCode(typeArguments) : Arrays.hashCode(typeArguments) * -1" />
    <mutant id="mutant_8965" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_6305" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="indexOf(searchStr, 0)" to="indexOf(searchStr, 0) &gt;= 0 ? indexOf(searchStr, 0) : indexOf(searchStr, 0) * -1" />
    <mutant id="mutant_7637" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8968" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.lexx(java.lang.String)" from="format.length()" to="(format.length() &gt;= 0 ? format.length() : format.length() * -1)" />
    <mutant id="mutant_6306" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7636" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8967" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long,boolean,int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_8960" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriodISO(long,long)" from="startMillis" to="(startMillis &gt;= 0 ? startMillis : startMillis * -1)" />
    <mutant id="mutant_7628" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="ObjectUtils.hashCode(useOwner)" to="ObjectUtils.hashCode(useOwner) &gt;= 0 ? ObjectUtils.hashCode(useOwner) : ObjectUtils.hashCode(useOwner) * -1" />
    <mutant id="mutant_8959" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds * -1 : milliseconds)" />
    <mutant id="mutant_7627" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="ObjectUtils.hashCode(useOwner)" to="ObjectUtils.hashCode(useOwner) &gt;= 0 ? ObjectUtils.hashCode(useOwner) * -1 : ObjectUtils.hashCode(useOwner)" />
    <mutant id="mutant_8958" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="milliseconds" to="(milliseconds &gt;= 0 ? milliseconds : milliseconds * -1)" />
    <mutant id="mutant_7629" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_7620" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="raw.hashCode()" to="raw.hashCode() &gt;= 0 ? raw.hashCode() : raw.hashCode() * -1" />
    <mutant id="mutant_8951" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="(days &gt;= 0 ? days : days * -1)" />
    <mutant id="mutant_8950" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="(days &gt;= 0 ? days * -1 : days)" />
    <mutant id="mutant_7622" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8953" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="(hours &gt;= 0 ? hours : hours * -1)" />
    <mutant id="mutant_7621" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="raw.hashCode()" to="raw.hashCode() &gt;= 0 ? raw.hashCode() * -1 : raw.hashCode()" />
    <mutant id="mutant_8952" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="hours" to="(hours &gt;= 0 ? hours * -1 : hours)" />
    <mutant id="mutant_7624" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="4" to="-1 * 4" />
    <mutant id="mutant_8955" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="(minutes &gt;= 0 ? minutes : minutes * -1)" />
    <mutant id="mutant_7623" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8954" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="minutes" to="(minutes &gt;= 0 ? minutes * -1 : minutes)" />
    <mutant id="mutant_7626" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_8957" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="(seconds &gt;= 0 ? seconds : seconds * -1)" />
    <mutant id="mutant_7625" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils$ParameterizedTypeImpl.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_8956" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="seconds" to="(seconds &gt;= 0 ? seconds * -1 : seconds)" />
    <mutant id="mutant_6370" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen * -1 : replaceLen)" />
    <mutant id="mutant_5040" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6371" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen : replaceLen * -1)" />
    <mutant id="mutant_5041" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6372" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_5042" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6373" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_5043" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_6374" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5044" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_6375" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18309" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_18308" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_19639" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18303" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)" from="seq.length()" to="(seq.length() &gt;= 0 ? seq.length() : seq.length() * -1)" />
    <mutant id="mutant_19635" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_18302" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)" from="seq.length()" to="(seq.length() &gt;= 0 ? seq.length() * -1 : seq.length())" />
    <mutant id="mutant_19636" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_18301" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19637" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_18300" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19638" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_18307" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19631" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_18306" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19632" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_18305" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)" from="CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length())" to="CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length()) &gt;= 0 ? CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length()) * -1 : CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length())" />
    <mutant id="mutant_19633" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_18304" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence)" from="CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length())" to="CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length()) &gt;= 0 ? CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length()) : CharSequenceUtils.lastIndexOf(seq, searchSeq, seq.length()) * -1" />
    <mutant id="mutant_19634" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5034" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6365" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="to" to="to &gt;= 0 ? to : to * -1" />
    <mutant id="mutant_7697" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5035" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6366" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="to" to="(to &gt;= 0 ? to * -1 : to)" />
    <mutant id="mutant_7696" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length : bounds.length * -1)" />
    <mutant id="mutant_5036" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_6367" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="to" to="(to &gt;= 0 ? to : to * -1)" />
    <mutant id="mutant_7699" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.wildcardTypeToString(java.lang.reflect.WildcardType)" from="(lowerBounds.length)" to="(lowerBounds.length &gt;= 0 ? lowerBounds.length * -1 : lowerBounds.length)" />
    <mutant id="mutant_5037" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_6368" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen * -1 : removeLen)" />
    <mutant id="mutant_7698" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19630" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padStr.length()" to="padStr.length() &gt;= 0 ? padStr.length() * -1 : padStr.length()" />
    <mutant id="mutant_5038" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_6369" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen : removeLen * -1)" />
    <mutant id="mutant_5039" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_7691" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.toLongString(java.lang.reflect.TypeVariable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6360" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen * -1 : removeLen)" />
    <mutant id="mutant_7690" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.toLongString(java.lang.reflect.TypeVariable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5030" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_6361" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen : removeLen * -1)" />
    <mutant id="mutant_7693" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length : bounds.length * -1)" />
    <mutant id="mutant_5031" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_6362" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen * -1 : replaceLen)" />
    <mutant id="mutant_7692" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length * -1 : bounds.length)" />
    <mutant id="mutant_5032" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_6363" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen : replaceLen * -1)" />
    <mutant id="mutant_7695" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="(bounds.length)" to="(bounds.length &gt;= 0 ? bounds.length * -1 : bounds.length)" />
    <mutant id="mutant_5033" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_6364" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="to" to="to &gt;= 0 ? to * -1 : to" />
    <mutant id="mutant_7694" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.typeVariableToString(java.lang.reflect.TypeVariable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18319" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_18314" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="searchStrs.length" to="searchStrs.length &gt;= 0 ? searchStrs.length * -1 : searchStrs.length" />
    <mutant id="mutant_19646" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT : StringUtils.PAD_LIMIT * -1)" />
    <mutant id="mutant_18313" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19647" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_18312" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19648" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_18311" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos)" to="CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos) &gt;= 0 ? CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos) : CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos) * -1" />
    <mutant id="mutant_19649" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18318" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19642" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18317" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19643" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_18316" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19644" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_18315" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="searchStrs.length" to="searchStrs.length &gt;= 0 ? searchStrs.length : searchStrs.length * -1" />
    <mutant id="mutant_19645" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT * -1 : StringUtils.PAD_LIMIT)" />
    <mutant id="mutant_5023" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6354" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7686" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.classToString(java.lang.Class)" from="(c.getTypeParameters().length)" to="(c.getTypeParameters().length &gt;= 0 ? c.getTypeParameters().length * -1 : c.getTypeParameters().length)" />
    <mutant id="mutant_5024" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6355" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7685" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.getRawType(java.lang.reflect.Type,java.lang.reflect.Type)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5025" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_6356" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7688" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.classToString(java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19640" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_5026" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_6357" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7687" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.classToString(java.lang.Class)" from="(c.getTypeParameters().length)" to="(c.getTypeParameters().length &gt;= 0 ? c.getTypeParameters().length : c.getTypeParameters().length * -1)" />
    <mutant id="mutant_19641" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_5027" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_6358" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen * -1 : removeLen)" />
    <mutant id="mutant_18310" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos)" to="CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos) &gt;= 0 ? CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos) * -1 : CharSequenceUtils.lastIndexOf(seq, searchSeq, startPos)" />
    <mutant id="mutant_5028" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6359" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen : removeLen * -1)" />
    <mutant id="mutant_7689" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.toLongString(java.lang.reflect.TypeVariable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5029" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_7680" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6350" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="matcher.isMatch(buf, i, from, to)" to="matcher.isMatch(buf, i, from, to) &gt;= 0 ? matcher.isMatch(buf, i, from, to) * -1 : matcher.isMatch(buf, i, from, to)" />
    <mutant id="mutant_7682" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5020" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6351" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen * -1 : removeLen)" />
    <mutant id="mutant_7681" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5021" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6352" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="removeLen" to="(removeLen &gt;= 0 ? removeLen : removeLen * -1)" />
    <mutant id="mutant_7684" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5022" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6353" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7683" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19617" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19618" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_19619" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_19613" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19614" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_19615" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19616" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19610" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_19611" viable="true" in="org.apache.commons.lang3.StringUtils.right(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_19612" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5012" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6343" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7675" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5013" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="lastIndexOf(str.charAt(0), startIndex)" to="lastIndexOf(str.charAt(0), startIndex) &gt;= 0 ? lastIndexOf(str.charAt(0), startIndex) * -1 : lastIndexOf(str.charAt(0), startIndex)" />
    <mutant id="mutant_6344" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7674" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="0" to="-1 * 0" />
    <mutant id="mutant_5014" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="lastIndexOf(str.charAt(0), startIndex)" to="lastIndexOf(str.charAt(0), startIndex) &gt;= 0 ? lastIndexOf(str.charAt(0), startIndex) : lastIndexOf(str.charAt(0), startIndex) * -1" />
    <mutant id="mutant_6345" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="from" to="(from &gt;= 0 ? from * -1 : from)" />
    <mutant id="mutant_7677" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="(t1.length)" to="(t1.length &gt;= 0 ? t1.length * -1 : t1.length)" />
    <mutant id="mutant_5015" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6346" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="from" to="(from &gt;= 0 ? from : from * -1)" />
    <mutant id="mutant_7676" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5016" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6347" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="to" to="(to &gt;= 0 ? to * -1 : to)" />
    <mutant id="mutant_7679" viable="false" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5017" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6348" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="to" to="(to &gt;= 0 ? to : to * -1)" />
    <mutant id="mutant_7678" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="(t1.length)" to="(t1.length &gt;= 0 ? t1.length : t1.length * -1)" />
    <mutant id="mutant_5018" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6349" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="matcher.isMatch(buf, i, from, to)" to="matcher.isMatch(buf, i, from, to) &gt;= 0 ? matcher.isMatch(buf, i, from, to) : matcher.isMatch(buf, i, from, to) * -1" />
    <mutant id="mutant_5019" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_7671" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="(t1.length)" to="(t1.length &gt;= 0 ? t1.length : t1.length * -1)" />
    <mutant id="mutant_6340" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7670" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="(t1.length)" to="(t1.length &gt;= 0 ? t1.length * -1 : t1.length)" />
    <mutant id="mutant_5010" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6341" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7673" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="(t2.length)" to="(t2.length &gt;= 0 ? t2.length : t2.length * -1)" />
    <mutant id="mutant_5011" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6342" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7672" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type[],java.lang.reflect.Type[])" from="(t2.length)" to="(t2.length &gt;= 0 ? t2.length * -1 : t2.length)" />
    <mutant id="mutant_19628" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_19629" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padStr.length()" to="padStr.length() &gt;= 0 ? padStr.length() : padStr.length() * -1" />
    <mutant id="mutant_5009" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19624" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT : StringUtils.PAD_LIMIT * -1)" />
    <mutant id="mutant_19625" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_19626" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19627" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_19620" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19621" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_19622" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_19623" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,char)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT * -1 : StringUtils.PAD_LIMIT)" />
    <mutant id="mutant_5001" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6332" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="from" to="from &gt;= 0 ? from * -1 : from" />
    <mutant id="mutant_7664" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8995" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.format(long)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_5002" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6333" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="from" to="from &gt;= 0 ? from : from * -1" />
    <mutant id="mutant_7663" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.mapTypeVariablesToArguments(java.lang.Class,java.lang.reflect.ParameterizedType,java.util.Map)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8994" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.format(long)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_5003" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6334" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7666" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)" from="(((Class&lt;?&gt;)(type)).getTypeParameters().length)" to="(((Class&lt;?&gt;)(type)).getTypeParameters().length &gt;= 0 ? ((Class&lt;?&gt;)(type)).getTypeParameters().length : ((Class&lt;?&gt;)(type)).getTypeParameters().length * -1)" />
    <mutant id="mutant_8997" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.format(long,java.lang.StringBuffer)" from="millis" to="(millis &gt;= 0 ? millis * -1 : millis)" />
    <mutant id="mutant_5004" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6335" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7665" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)" from="(((Class&lt;?&gt;)(type)).getTypeParameters().length)" to="(((Class&lt;?&gt;)(type)).getTypeParameters().length &gt;= 0 ? ((Class&lt;?&gt;)(type)).getTypeParameters().length * -1 : ((Class&lt;?&gt;)(type)).getTypeParameters().length)" />
    <mutant id="mutant_8996" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.format(long,java.lang.StringBuffer)" from="millis" to="(millis &gt;= 0 ? millis : millis * -1)" />
    <mutant id="mutant_5005" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6336" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="to" to="(to &gt;= 0 ? to * -1 : to)" />
    <mutant id="mutant_7668" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8999" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int)" from="style" to="(style &gt;= 0 ? style * -1 : style)" />
    <mutant id="mutant_5006" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6337" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="to" to="(to &gt;= 0 ? to : to * -1)" />
    <mutant id="mutant_7667" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8998" viable="true" in="org.apache.commons.lang3.time.FastDateFormat.getDateInstance(int)" from="style" to="(style &gt;= 0 ? style : style * -1)" />
    <mutant id="mutant_5007" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6338" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceCount" to="(replaceCount &gt;= 0 ? replaceCount : replaceCount * -1)" />
    <mutant id="mutant_5008" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_6339" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceCount" to="(replaceCount &gt;= 0 ? replaceCount * -1 : replaceCount)" />
    <mutant id="mutant_7669" viable="true" in="org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5081" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(matcher.isMatch(buf, i, 0, endIndex))" to="(matcher.isMatch(buf, i, 0, endIndex) &gt;= 0 ? matcher.isMatch(buf, i, 0, endIndex) * -1 : matcher.isMatch(buf, i, 0, endIndex))" />
    <mutant id="mutant_5082" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5083" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_5084" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_5085" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5086" viable="true" in="org.apache.commons.lang3.text.StrBuilder.length()" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_5087" viable="true" in="org.apache.commons.lang3.text.StrBuilder.length()" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_5088" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_5080" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(matcher.isMatch(buf, i, 0, endIndex))" to="(matcher.isMatch(buf, i, 0, endIndex) &gt;= 0 ? matcher.isMatch(buf, i, 0, endIndex) : matcher.isMatch(buf, i, 0, endIndex) * -1)" />
    <mutant id="mutant_17016" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive" />
    <mutant id="mutant_18347" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="str.length()" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19679" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17015" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="startInclusive &gt;= 0 ? startInclusive : startInclusive * -1" />
    <mutant id="mutant_18346" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="str.length()" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_17014" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive : endInclusive * -1)" />
    <mutant id="mutant_18345" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_17013" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive * -1 : endInclusive)" />
    <mutant id="mutant_18344" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19675" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_17019" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive * -1 : endInclusive)" />
    <mutant id="mutant_19676" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_17018" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18349" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length())" to="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length()) &gt;= 0 ? org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length()) : org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length()) * -1" />
    <mutant id="mutant_19677" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_17017" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18348" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length())" to="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length()) &gt;= 0 ? org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length()) * -1 : org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(str, searchStr, str.length())" />
    <mutant id="mutant_19678" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_5078" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_19671" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5079" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_19672" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19673" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19674" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_17012" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18343" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="ret &gt;= 0 ? ret * -1 : ret" />
    <mutant id="mutant_17011" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18342" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="ret &gt;= 0 ? ret : ret * -1" />
    <mutant id="mutant_17010" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18341" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_18340" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_19670" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5070" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5071" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5072" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5073" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5074" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5075" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5076" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5077" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17027" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18358" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos : startPos * -1" />
    <mutant id="mutant_17026" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive * -1 : endInclusive)" />
    <mutant id="mutant_18357" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_17025" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive : endInclusive * -1)" />
    <mutant id="mutant_18356" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_17024" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(RandomUtils.RANDOM.nextDouble())" to="(RandomUtils.RANDOM.nextDouble() &gt;= 0 ? RandomUtils.RANDOM.nextDouble() : RandomUtils.RANDOM.nextDouble() * -1)" />
    <mutant id="mutant_18355" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19686" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_19687" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_17029" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_19688" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17028" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18359" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos * -1 : startPos" />
    <mutant id="mutant_19689" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_5067" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6398" viable="false" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="leftIdx" to="(leftIdx &gt;= 0 ? leftIdx * -1 : leftIdx)" />
    <mutant id="mutant_18350" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19682" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_5068" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_6399" viable="false" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="leftIdx" to="(leftIdx &gt;= 0 ? leftIdx : leftIdx * -1)" />
    <mutant id="mutant_19683" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5069" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_19684" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_19685" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17023" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="(RandomUtils.RANDOM.nextDouble())" to="(RandomUtils.RANDOM.nextDouble() &gt;= 0 ? RandomUtils.RANDOM.nextDouble() * -1 : RandomUtils.RANDOM.nextDouble())" />
    <mutant id="mutant_18354" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_17022" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18353" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_17021" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18352" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_19680" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17020" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive : endInclusive * -1)" />
    <mutant id="mutant_18351" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19681" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6390" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="0" to="-1 * 0" />
    <mutant id="mutant_5060" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_6391" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5061" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6392" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5062" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6393" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5063" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6394" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="leftIdx" to="(leftIdx &gt;= 0 ? leftIdx * -1 : leftIdx)" />
    <mutant id="mutant_5064" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6395" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="leftIdx" to="(leftIdx &gt;= 0 ? leftIdx : leftIdx * -1)" />
    <mutant id="mutant_5065" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6396" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="half" to="(half &gt;= 0 ? half * -1 : half)" />
    <mutant id="mutant_5066" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6397" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="half" to="(half &gt;= 0 ? half : half * -1)" />
    <mutant id="mutant_18325" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19657" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_18324" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19658" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18323" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_19659" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_18322" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_18329" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_19653" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_18328" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_19654" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_18327" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19655" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_18326" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19656" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_5056" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6387" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5057" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6388" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_19650" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_5058" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6389" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="2" to="(-1 * 2)" />
    <mutant id="mutant_19651" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_5059" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_19652" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_18321" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18320" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6380" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceCount" to="(replaceCount &gt;= 0 ? replaceCount * -1 : replaceCount)" />
    <mutant id="mutant_5050" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_6381" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5051" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_6382" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceCount" to="(replaceCount &gt;= 0 ? replaceCount : replaceCount * -1)" />
    <mutant id="mutant_5052" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_6383" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceCount" to="(replaceCount &gt;= 0 ? replaceCount * -1 : replaceCount)" />
    <mutant id="mutant_5053" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_6384" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5054" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6385" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5055" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6386" viable="true" in="org.apache.commons.lang3.text.StrBuilder.reverse()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17005" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive : endInclusive * -1)" />
    <mutant id="mutant_18336" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="(ret &gt;= 0 ? ret : ret * -1)" />
    <mutant id="mutant_19668" viable="false" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17004" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive * -1 : endInclusive)" />
    <mutant id="mutant_18335" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="(tmp &gt;= 0 ? tmp * -1 : tmp)" />
    <mutant id="mutant_19669" viable="false" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17003" viable="true" in="org.apache.commons.lang3.RandomUtils.nextBytes(int)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_18334" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="tmp" to="(tmp &gt;= 0 ? tmp : tmp * -1)" />
    <mutant id="mutant_17002" viable="true" in="org.apache.commons.lang3.RandomUtils.nextBytes(int)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_18333" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="CharSequenceUtils.lastIndexOf(str, search, str.length())" to="CharSequenceUtils.lastIndexOf(str, search, str.length()) &gt;= 0 ? CharSequenceUtils.lastIndexOf(str, search, str.length()) : CharSequenceUtils.lastIndexOf(str, search, str.length()) * -1" />
    <mutant id="mutant_17009" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_19664" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17008" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18339" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="ret &gt;= 0 ? ret * -1 : ret" />
    <mutant id="mutant_19665" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17007" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18338" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="ret &gt;= 0 ? ret : ret * -1" />
    <mutant id="mutant_19666" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_17006" viable="true" in="org.apache.commons.lang3.RandomUtils.nextDouble(double,double)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18337" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="ret" to="(ret &gt;= 0 ? ret * -1 : ret)" />
    <mutant id="mutant_19667" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_5045" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6376" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen * -1 : replaceLen)" />
    <mutant id="mutant_19660" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_5046" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6377" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen : replaceLen * -1)" />
    <mutant id="mutant_19661" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="pads &gt;= 0 ? pads * -1 : pads" />
    <mutant id="mutant_5047" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6378" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19662" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="pads" to="pads &gt;= 0 ? pads : pads * -1" />
    <mutant id="mutant_5048" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher)" from="lastIndexOf(matcher, size)" to="lastIndexOf(matcher, size) &gt;= 0 ? lastIndexOf(matcher, size) : lastIndexOf(matcher, size) * -1" />
    <mutant id="mutant_6379" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceImpl(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceCount" to="(replaceCount &gt;= 0 ? replaceCount : replaceCount * -1)" />
    <mutant id="mutant_19663" viable="true" in="org.apache.commons.lang3.StringUtils.rightPad(java.lang.String,int,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_5049" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher)" from="lastIndexOf(matcher, size)" to="lastIndexOf(matcher, size) &gt;= 0 ? lastIndexOf(matcher, size) * -1 : lastIndexOf(matcher, size)" />
    <mutant id="mutant_17001" viable="true" in="org.apache.commons.lang3.RandomUtils.nextBytes(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18332" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="CharSequenceUtils.lastIndexOf(str, search, str.length())" to="CharSequenceUtils.lastIndexOf(str, search, str.length()) &gt;= 0 ? CharSequenceUtils.lastIndexOf(str, search, str.length()) * -1 : CharSequenceUtils.lastIndexOf(str, search, str.length())" />
    <mutant id="mutant_17000" viable="true" in="org.apache.commons.lang3.RandomUtils.nextBytes(int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_18331" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="str.length()" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_18330" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfAny(java.lang.CharSequence,java.lang.CharSequence[])" from="str.length()" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_18269" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18268" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos * -1 : startPos" />
    <mutant id="mutant_18267" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos : startPos * -1" />
    <mutant id="mutant_19598" viable="true" in="org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String,java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19599" viable="true" in="org.apache.commons.lang3.StringUtils.replacePattern(java.lang.String,java.lang.String,java.lang.String)" from="Pattern.DOTALL" to="(Pattern.DOTALL &gt;= 0 ? Pattern.DOTALL * -1 : Pattern.DOTALL)" />
    <mutant id="mutant_18262" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_19594" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])" from="searchList.length" to="searchList.length &gt;= 0 ? searchList.length * -1 : searchList.length" />
    <mutant id="mutant_18261" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19595" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])" from="searchList.length" to="searchList.length &gt;= 0 ? searchList.length : searchList.length * -1" />
    <mutant id="mutant_18260" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19596" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])" from="timeToLive" to="(timeToLive &gt;= 0 ? timeToLive * -1 : timeToLive)" />
    <mutant id="mutant_19597" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])" from="timeToLive" to="(timeToLive &gt;= 0 ? timeToLive : timeToLive * -1)" />
    <mutant id="mutant_18266" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos * -1 : startPos" />
    <mutant id="mutant_19590" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="timeToLive" to="(timeToLive &gt;= 0 ? timeToLive * -1 : timeToLive)" />
    <mutant id="mutant_18265" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos : startPos * -1" />
    <mutant id="mutant_19591" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="timeToLive" to="(timeToLive &gt;= 0 ? timeToLive : timeToLive * -1)" />
    <mutant id="mutant_18264" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19592" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18263" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_19593" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEachRepeatedly(java.lang.String,java.lang.String[],java.lang.String[])" from="0" to="-1 * 0" />
    <mutant id="mutant_18280" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_18279" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="searchStr.length()" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_18278" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="searchStr.length()" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_18273" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18272" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="endLimit" to="(endLimit &gt;= 0 ? endLimit * -1 : endLimit)" />
    <mutant id="mutant_18271" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="endLimit" to="(endLimit &gt;= 0 ? endLimit : endLimit * -1)" />
    <mutant id="mutant_18270" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18277" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18276" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18275" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18274" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18248" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos : startPos * -1" />
    <mutant id="mutant_18247" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18246" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_18245" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_19576" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_19577" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_19578" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="text.length()" to="text.length() &gt;= 0 ? text.length() : text.length() * -1" />
    <mutant id="mutant_18249" viable="false" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos * -1 : startPos" />
    <mutant id="mutant_19579" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="text.length()" to="text.length() &gt;= 0 ? text.length() * -1 : text.length()" />
    <mutant id="mutant_18240" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19572" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex : tempIndex * -1" />
    <mutant id="mutant_19573" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="tempIndex" to="tempIndex &gt;= 0 ? tempIndex * -1 : tempIndex" />
    <mutant id="mutant_19574" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="replaceIndex &gt;= 0 ? replaceIndex : replaceIndex * -1" />
    <mutant id="mutant_19575" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="replaceIndex" to="replaceIndex &gt;= 0 ? replaceIndex * -1 : replaceIndex" />
    <mutant id="mutant_18244" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18243" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_18242" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0)" to="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0) * -1 : org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0)" />
    <mutant id="mutant_19570" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="textIndex &gt;= 0 ? textIndex : textIndex * -1" />
    <mutant id="mutant_18241" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)" from="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0)" to="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0) &gt;= 0 ? org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0) : org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(str, searchStr, 0) * -1" />
    <mutant id="mutant_19571" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textIndex" to="textIndex &gt;= 0 ? textIndex * -1 : textIndex" />
    <mutant id="mutant_5092" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5093" viable="false" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="read" to="read &gt;= 0 ? read * -1 : read" />
    <mutant id="mutant_5094" viable="false" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="read" to="read &gt;= 0 ? read : read * -1" />
    <mutant id="mutant_5095" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5096" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5097" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_5098" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_5099" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5090" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5091" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_18259" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="endLimit" to="(endLimit &gt;= 0 ? endLimit * -1 : endLimit)" />
    <mutant id="mutant_18258" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="endLimit" to="(endLimit &gt;= 0 ? endLimit : endLimit * -1)" />
    <mutant id="mutant_18257" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_18256" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_19587" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19588" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19589" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5089" viable="true" in="org.apache.commons.lang3.text.StrBuilder.readFrom(java.lang.Readable)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_18251" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19583" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18250" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_19584" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textLength" to="(textLength &gt;= 0 ? textLength * -1 : textLength)" />
    <mutant id="mutant_19585" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="textLength" to="(textLength &gt;= 0 ? textLength : textLength * -1)" />
    <mutant id="mutant_19586" viable="false" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18255" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18254" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_19580" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_18253" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_19581" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_18252" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19582" viable="true" in="org.apache.commons.lang3.StringUtils.replaceEach(java.lang.String,java.lang.String[],java.lang.String[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18291" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int)" from="CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length())" to="CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length()) &gt;= 0 ? CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length()) * -1 : CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length())" />
    <mutant id="mutant_18290" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int)" from="CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length())" to="CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length()) &gt;= 0 ? CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length()) : CharSequenceUtils.lastIndexOf(seq, searchChar, seq.length()) * -1" />
    <mutant id="mutant_18289" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int)" from="seq.length()" to="(seq.length() &gt;= 0 ? seq.length() : seq.length() * -1)" />
    <mutant id="mutant_18284" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_18283" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18282" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_18281" viable="true" in="org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_18288" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int)" from="seq.length()" to="(seq.length() &gt;= 0 ? seq.length() * -1 : seq.length())" />
    <mutant id="mutant_18287" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_18286" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_18285" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18295" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar : searchChar * -1)" />
    <mutant id="mutant_18294" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="searchChar" to="(searchChar &gt;= 0 ? searchChar * -1 : searchChar)" />
    <mutant id="mutant_18293" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_18292" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_18299" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.lastIndexOf(seq, searchChar, startPos)" to="CharSequenceUtils.lastIndexOf(seq, searchChar, startPos) &gt;= 0 ? CharSequenceUtils.lastIndexOf(seq, searchChar, startPos) * -1 : CharSequenceUtils.lastIndexOf(seq, searchChar, startPos)" />
    <mutant id="mutant_18298" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="CharSequenceUtils.lastIndexOf(seq, searchChar, startPos)" to="CharSequenceUtils.lastIndexOf(seq, searchChar, startPos) &gt;= 0 ? CharSequenceUtils.lastIndexOf(seq, searchChar, startPos) : CharSequenceUtils.lastIndexOf(seq, searchChar, startPos) * -1" />
    <mutant id="mutant_18297" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_18296" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOf(java.lang.CharSequence,int,int)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_8827" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_8826" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="-1 * 0" />
    <mutant id="mutant_8829" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="end.get(Calendar.YEAR)" to="end.get(Calendar.YEAR) &gt;= 0 ? end.get(Calendar.YEAR) : end.get(Calendar.YEAR) * -1" />
    <mutant id="mutant_8828" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_8821" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12" to="(-1 * 12)" />
    <mutant id="mutant_8820" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months * -1 : months" />
    <mutant id="mutant_8823" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="(years &gt;= 0 ? years : years * -1)" />
    <mutant id="mutant_8822" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="(years &gt;= 0 ? years * -1 : years)" />
    <mutant id="mutant_8825" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="years &gt;= 0 ? years : years * -1" />
    <mutant id="mutant_8824" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="years &gt;= 0 ? years * -1 : years" />
    <mutant id="mutant_8816" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="(years &gt;= 0 ? years * -1 : years)" />
    <mutant id="mutant_8815" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8818" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8817" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="(years &gt;= 0 ? years : years * -1)" />
    <mutant id="mutant_8819" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months : months * -1" />
    <mutant id="mutant_8810" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="years &gt;= 0 ? years * -1 : years" />
    <mutant id="mutant_8812" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_8811" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="years &gt;= 0 ? years : years * -1" />
    <mutant id="mutant_8814" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="(years &gt;= 0 ? years : years * -1)" />
    <mutant id="mutant_8813" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="(years &gt;= 0 ? years * -1 : years)" />
    <mutant id="mutant_8805" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="(months &gt;= 0 ? months * -1 : months)" />
    <mutant id="mutant_8804" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="(months &gt;= 0 ? months : months * -1)" />
    <mutant id="mutant_8807" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months : months * -1" />
    <mutant id="mutant_8806" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_8809" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="12" to="-1 * 12" />
    <mutant id="mutant_8808" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months * -1 : months" />
    <mutant id="mutant_8801" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_8800" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_8803" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8802" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_8870" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_7541" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8872" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_6210" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) * -1 : validateRange(startIndex, endIndex)" />
    <mutant id="mutant_7540" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="(srcArgs.length)" to="(srcArgs.length &gt;= 0 ? srcArgs.length : srcArgs.length * -1)" />
    <mutant id="mutant_8871" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_19716" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19717" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19718" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19719" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(stripChars.indexOf(str.charAt((end - 1))))" to="(stripChars.indexOf(str.charAt((end - 1))) &gt;= 0 ? stripChars.indexOf(str.charAt((end - 1))) * -1 : stripChars.indexOf(str.charAt((end - 1))))" />
    <mutant id="mutant_6208" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_19712" viable="false" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_6209" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) : validateRange(startIndex, endIndex) * -1" />
    <mutant id="mutant_7539" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="(srcArgs.length)" to="(srcArgs.length &gt;= 0 ? srcArgs.length * -1 : srcArgs.length)" />
    <mutant id="mutant_19713" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19714" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19715" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19710" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19711" viable="false" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_6200" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7532" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8863" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="29" to="(-1 * 29)" />
    <mutant id="mutant_6201" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7531" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8862" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.DAY_OF_MONTH))" to="(start.get(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.get(Calendar.DAY_OF_MONTH) * -1 : start.get(Calendar.DAY_OF_MONTH))" />
    <mutant id="mutant_6202" viable="true" in="org.apache.commons.lang3.text.StrBuilder.minimizeCapacity()" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7534" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost : cost * -1" />
    <mutant id="mutant_8865" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_6203" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="endIndex" to="endIndex &gt;= 0 ? endIndex * -1 : endIndex" />
    <mutant id="mutant_7533" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost * -1 : cost" />
    <mutant id="mutant_8864" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_6204" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="endIndex" to="endIndex &gt;= 0 ? endIndex : endIndex * -1" />
    <mutant id="mutant_7536" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="0" to="-1 * 0" />
    <mutant id="mutant_8867" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_6205" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7535" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="0.0F" to="-1 * 0.0F" />
    <mutant id="mutant_8866" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_6206" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7538" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8869" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6207" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7537" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8868" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_7530" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8861" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.DAY_OF_MONTH))" to="(start.get(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.get(Calendar.DAY_OF_MONTH) : start.get(Calendar.DAY_OF_MONTH) * -1)" />
    <mutant id="mutant_8860" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_19727" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19728" viable="false" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen : strLen * -1" />
    <mutant id="mutant_19729" viable="false" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="strLen" to="strLen &gt;= 0 ? strLen * -1 : strLen" />
    <mutant id="mutant_7529" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19723" viable="false" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_7528" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length)" to="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length &gt;= 0 ? MemberUtils.ORDERED_PRIMITIVE_TYPES.length : MemberUtils.ORDERED_PRIMITIVE_TYPES.length * -1)" />
    <mutant id="mutant_8859" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_19724" viable="false" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19725" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19726" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19720" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(stripChars.indexOf(str.charAt((end - 1))))" to="(stripChars.indexOf(str.charAt((end - 1))) &gt;= 0 ? stripChars.indexOf(str.charAt((end - 1))) : stripChars.indexOf(str.charAt((end - 1))) * -1)" />
    <mutant id="mutant_19721" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_19722" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_7521" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8852" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.DAY_OF_YEAR))" to="(start.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? start.get(Calendar.DAY_OF_YEAR) * -1 : start.get(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_7520" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8851" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.DAY_OF_YEAR))" to="(start.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? start.get(Calendar.DAY_OF_YEAR) : start.get(Calendar.DAY_OF_YEAR) * -1)" />
    <mutant id="mutant_7523" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost : cost * -1" />
    <mutant id="mutant_8854" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_7522" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost * -1 : cost" />
    <mutant id="mutant_8853" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_7525" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8856" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MONTH))" to="(start.get(Calendar.MONTH) &gt;= 0 ? start.get(Calendar.MONTH) * -1 : start.get(Calendar.MONTH))" />
    <mutant id="mutant_7524" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="0.1F" to="-1 * 0.1F" />
    <mutant id="mutant_8855" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MONTH))" to="(start.get(Calendar.MONTH) &gt;= 0 ? start.get(Calendar.MONTH) : start.get(Calendar.MONTH) * -1)" />
    <mutant id="mutant_7527" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length)" to="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length &gt;= 0 ? MemberUtils.ORDERED_PRIMITIVE_TYPES.length * -1 : MemberUtils.ORDERED_PRIMITIVE_TYPES.length)" />
    <mutant id="mutant_8858" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(Calendar.FEBRUARY)" to="(Calendar.FEBRUARY &gt;= 0 ? Calendar.FEBRUARY * -1 : Calendar.FEBRUARY)" />
    <mutant id="mutant_7526" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8857" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(Calendar.FEBRUARY)" to="(Calendar.FEBRUARY &gt;= 0 ? Calendar.FEBRUARY : Calendar.FEBRUARY * -1)" />
    <mutant id="mutant_8850" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_7518" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8849" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_7517" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length)" to="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length &gt;= 0 ? MemberUtils.ORDERED_PRIMITIVE_TYPES.length : MemberUtils.ORDERED_PRIMITIVE_TYPES.length * -1)" />
    <mutant id="mutant_8848" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR))" to="(start.getActualMaximum(Calendar.DAY_OF_YEAR) &gt;= 0 ? start.getActualMaximum(Calendar.DAY_OF_YEAR) : start.getActualMaximum(Calendar.DAY_OF_YEAR) * -1)" />
    <mutant id="mutant_7519" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7510" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost * -1 : cost" />
    <mutant id="mutant_8841" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="target" to="(target &gt;= 0 ? target * -1 : target)" />
    <mutant id="mutant_8840" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.YEAR))" to="(start.get(Calendar.YEAR) &gt;= 0 ? start.get(Calendar.YEAR) * -1 : start.get(Calendar.YEAR))" />
    <mutant id="mutant_7512" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="0.1F" to="-1 * 0.1F" />
    <mutant id="mutant_8843" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_7511" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost : cost * -1" />
    <mutant id="mutant_8842" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="target" to="(target &gt;= 0 ? target : target * -1)" />
    <mutant id="mutant_7514" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8845" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR : Calendar.DAY_OF_YEAR * -1)" />
    <mutant id="mutant_7513" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="0" to="-1 * 0" />
    <mutant id="mutant_8844" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_7516" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length)" to="(MemberUtils.ORDERED_PRIMITIVE_TYPES.length &gt;= 0 ? MemberUtils.ORDERED_PRIMITIVE_TYPES.length * -1 : MemberUtils.ORDERED_PRIMITIVE_TYPES.length)" />
    <mutant id="mutant_8847" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.getActualMaximum(Calendar.DAY_OF_YEAR))" to="(start.getActualMaximum(Calendar.DAY_OF_YEAR) &gt;= 0 ? start.getActualMaximum(Calendar.DAY_OF_YEAR) * -1 : start.getActualMaximum(Calendar.DAY_OF_YEAR))" />
    <mutant id="mutant_7515" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8846" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_19709" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19705" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19706" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19707" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19708" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_7507" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost * -1 : cost" />
    <mutant id="mutant_8838" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR * -1 : Calendar.YEAR)" />
    <mutant id="mutant_19701" viable="false" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_7506" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="1.5F" to="-1 * 1.5F" />
    <mutant id="mutant_8837" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.YEAR" to="(Calendar.YEAR &gt;= 0 ? Calendar.YEAR : Calendar.YEAR * -1)" />
    <mutant id="mutant_19702" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_7509" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getPrimitivePromotionCost(java.lang.Class,java.lang.Class)" from="0.0F" to="-1 * 0.0F" />
    <mutant id="mutant_19703" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_7508" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost : cost * -1" />
    <mutant id="mutant_8839" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.YEAR))" to="(start.get(Calendar.YEAR) &gt;= 0 ? start.get(Calendar.YEAR) : start.get(Calendar.YEAR) * -1)" />
    <mutant id="mutant_19704" viable="true" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19700" viable="false" in="org.apache.commons.lang3.StringUtils.stripEnd(java.lang.String,java.lang.String)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_8830" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="end.get(Calendar.YEAR)" to="end.get(Calendar.YEAR) &gt;= 0 ? end.get(Calendar.YEAR) * -1 : end.get(Calendar.YEAR)" />
    <mutant id="mutant_7501" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="0.25F" to="-1 * 0.25F" />
    <mutant id="mutant_8832" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="(months &gt;= 0 ? months * -1 : months)" />
    <mutant id="mutant_7500" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost : cost * -1" />
    <mutant id="mutant_8831" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="(months &gt;= 0 ? months : months * -1)" />
    <mutant id="mutant_7503" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="cost" to="(cost &gt;= 0 ? cost : cost * -1)" />
    <mutant id="mutant_8834" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="target" to="target &gt;= 0 ? target * -1 : target" />
    <mutant id="mutant_7502" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="cost" to="(cost &gt;= 0 ? cost * -1 : cost)" />
    <mutant id="mutant_8833" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7505" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost : cost * -1" />
    <mutant id="mutant_8836" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="-1 * 1" />
    <mutant id="mutant_7504" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(java.lang.Class,java.lang.Class)" from="cost" to="cost &gt;= 0 ? cost * -1 : cost" />
    <mutant id="mutant_8835" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="target" to="target &gt;= 0 ? target : target * -1" />
    <mutant id="mutant_7581" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6250" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="searchStr.length()" to="searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1" />
    <mutant id="mutant_7580" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="interfaces[i].getModifiers()" to="(interfaces[i].getModifiers() &gt;= 0 ? interfaces[i].getModifiers() * -1 : interfaces[i].getModifiers())" />
    <mutant id="mutant_6251" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="searchStr.length()" to="searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length()" />
    <mutant id="mutant_7583" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6252" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_7582" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6253" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_7585" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class,java.lang.String,java.lang.Class[])" from="parentClass.getModifiers()" to="(parentClass.getModifiers() &gt;= 0 ? parentClass.getModifiers() : parentClass.getModifiers() * -1)" />
    <mutant id="mutant_6254" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7584" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18429" viable="false" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_18424" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_19756" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18423" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19757" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18422" viable="false" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_19758" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18421" viable="false" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_19759" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_18428" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="CharSequenceUtils.lastIndexOf(str, searchStr, (index - (searchStr.length())))" to="CharSequenceUtils.lastIndexOf(str, searchStr, (index - (searchStr.length()))) &gt;= 0 ? CharSequenceUtils.lastIndexOf(str, searchStr, (index - (searchStr.length()))) * -1 : CharSequenceUtils.lastIndexOf(str, searchStr, (index - (searchStr.length())))" />
    <mutant id="mutant_19752" viable="false" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18427" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="CharSequenceUtils.lastIndexOf(str, searchStr, (index - (searchStr.length())))" to="CharSequenceUtils.lastIndexOf(str, searchStr, (index - (searchStr.length()))) &gt;= 0 ? CharSequenceUtils.lastIndexOf(str, searchStr, (index - (searchStr.length()))) : CharSequenceUtils.lastIndexOf(str, searchStr, (index - (searchStr.length()))) * -1" />
    <mutant id="mutant_19753" viable="false" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18426" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_19754" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18425" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_19755" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_6244" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7576" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6245" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7575" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6246" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7578" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19750" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_6247" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7577" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19751" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_6248" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18420" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="ordinal" to="(ordinal &gt;= 0 ? ordinal * -1 : ordinal)" />
    <mutant id="mutant_6249" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_7579" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="interfaces[i].getModifiers()" to="(interfaces[i].getModifiers() &gt;= 0 ? interfaces[i].getModifiers() : interfaces[i].getModifiers() * -1)" />
    <mutant id="mutant_7570" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="0" to="-1 * 0" />
    <mutant id="mutant_6240" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_7572" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6241" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_7571" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6242" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_7574" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="(interfaces.length)" to="(interfaces.length &gt;= 0 ? interfaces.length : interfaces.length * -1)" />
    <mutant id="mutant_6243" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_7573" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromInterfaceNest(java.lang.Class,java.lang.String,java.lang.Class[])" from="(interfaces.length)" to="(interfaces.length &gt;= 0 ? interfaces.length * -1 : interfaces.length)" />
    <mutant id="mutant_17109" viable="true" in="org.apache.commons.lang3.Range.isStartedBy(T)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17104" viable="true" in="org.apache.commons.lang3.Range.isEndedBy(T)" from="(comparator.compare(element, maximum))" to="(comparator.compare(element, maximum) &gt;= 0 ? comparator.compare(element, maximum) * -1 : comparator.compare(element, maximum))" />
    <mutant id="mutant_18435" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="CharSequenceUtils.indexOf(str, searchStr, (index + (searchStr.length())))" to="CharSequenceUtils.indexOf(str, searchStr, (index + (searchStr.length()))) &gt;= 0 ? CharSequenceUtils.indexOf(str, searchStr, (index + (searchStr.length()))) * -1 : CharSequenceUtils.indexOf(str, searchStr, (index + (searchStr.length())))" />
    <mutant id="mutant_19767" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17103" viable="true" in="org.apache.commons.lang3.Range.isBefore(T)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18434" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_19768" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_17102" viable="true" in="org.apache.commons.lang3.Range.isBefore(T)" from="(comparator.compare(element, maximum))" to="(comparator.compare(element, maximum) &gt;= 0 ? comparator.compare(element, maximum) : comparator.compare(element, maximum) * -1)" />
    <mutant id="mutant_18433" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_19769" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_17101" viable="true" in="org.apache.commons.lang3.Range.isBefore(T)" from="(comparator.compare(element, maximum))" to="(comparator.compare(element, maximum) &gt;= 0 ? comparator.compare(element, maximum) * -1 : comparator.compare(element, maximum))" />
    <mutant id="mutant_18432" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_17108" viable="true" in="org.apache.commons.lang3.Range.isStartedBy(T)" from="(comparator.compare(element, minimum))" to="(comparator.compare(element, minimum) &gt;= 0 ? comparator.compare(element, minimum) : comparator.compare(element, minimum) * -1)" />
    <mutant id="mutant_18439" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19763" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_17107" viable="true" in="org.apache.commons.lang3.Range.isStartedBy(T)" from="(comparator.compare(element, minimum))" to="(comparator.compare(element, minimum) &gt;= 0 ? comparator.compare(element, minimum) * -1 : comparator.compare(element, minimum))" />
    <mutant id="mutant_18438" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_19764" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_17106" viable="true" in="org.apache.commons.lang3.Range.isEndedBy(T)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18437" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19765" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_17105" viable="true" in="org.apache.commons.lang3.Range.isEndedBy(T)" from="(comparator.compare(element, maximum))" to="(comparator.compare(element, maximum) &gt;= 0 ? comparator.compare(element, maximum) : comparator.compare(element, maximum) * -1)" />
    <mutant id="mutant_18436" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="CharSequenceUtils.indexOf(str, searchStr, (index + (searchStr.length())))" to="CharSequenceUtils.indexOf(str, searchStr, (index + (searchStr.length()))) &gt;= 0 ? CharSequenceUtils.indexOf(str, searchStr, (index + (searchStr.length()))) : CharSequenceUtils.indexOf(str, searchStr, (index + (searchStr.length()))) * -1" />
    <mutant id="mutant_19766" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_6233" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7565" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="leftCost" to="(leftCost &gt;= 0 ? leftCost : leftCost * -1)" />
    <mutant id="mutant_8896" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months : months * -1" />
    <mutant id="mutant_6234" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7564" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="leftCost" to="(leftCost &gt;= 0 ? leftCost * -1 : leftCost)" />
    <mutant id="mutant_8895" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19760" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_6235" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7567" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="0" to="-1 * 0" />
    <mutant id="mutant_8898" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="-1 * 0" />
    <mutant id="mutant_19761" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_6236" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceCount" to="(replaceCount &gt;= 0 ? replaceCount : replaceCount * -1)" />
    <mutant id="mutant_7566" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="1" to="-1 * 1" />
    <mutant id="mutant_8897" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months * -1 : months" />
    <mutant id="mutant_19762" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6237" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="replaceCount" to="(replaceCount &gt;= 0 ? replaceCount * -1 : replaceCount)" />
    <mutant id="mutant_7569" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method)" from="cls.getModifiers()" to="(cls.getModifiers() &gt;= 0 ? cls.getModifiers() * -1 : cls.getModifiers())" />
    <mutant id="mutant_17100" viable="true" in="org.apache.commons.lang3.Range.isAfter(T)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18431" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_6238" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_7568" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethod(java.lang.reflect.Method)" from="cls.getModifiers()" to="(cls.getModifiers() &gt;= 0 ? cls.getModifiers() : cls.getModifiers() * -1)" />
    <mutant id="mutant_8899" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="(days &gt;= 0 ? days * -1 : days)" />
    <mutant id="mutant_18430" viable="false" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_6239" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(char,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8890" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_7561" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_8892" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="start.getActualMaximum(Calendar.DAY_OF_MONTH)" to="start.getActualMaximum(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.getActualMaximum(Calendar.DAY_OF_MONTH) * -1 : start.getActualMaximum(Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_6230" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) : validateRange(startIndex, endIndex) * -1" />
    <mutant id="mutant_7560" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="rightCost" to="(rightCost &gt;= 0 ? rightCost : rightCost * -1)" />
    <mutant id="mutant_8891" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="start.getActualMaximum(Calendar.DAY_OF_MONTH)" to="start.getActualMaximum(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.getActualMaximum(Calendar.DAY_OF_MONTH) : start.getActualMaximum(Calendar.DAY_OF_MONTH) * -1" />
    <mutant id="mutant_6231" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) * -1 : validateRange(startIndex, endIndex)" />
    <mutant id="mutant_7563" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="rightCost" to="(rightCost &gt;= 0 ? rightCost : rightCost * -1)" />
    <mutant id="mutant_8894" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_6232" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7562" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="rightCost" to="(rightCost &gt;= 0 ? rightCost * -1 : rightCost)" />
    <mutant id="mutant_8893" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_18409" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_18408" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18407" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_19738" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19739" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18402" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="ordinal" to="(ordinal &gt;= 0 ? ordinal * -1 : ordinal)" />
    <mutant id="mutant_19734" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18401" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="ordinal" to="(ordinal &gt;= 0 ? ordinal : ordinal * -1)" />
    <mutant id="mutant_19735" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18400" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false)" to="org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false) &gt;= 0 ? org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false) : org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false) * -1" />
    <mutant id="mutant_19736" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_19737" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_18406" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_19730" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_18405" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19731" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_18404" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19732" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18403" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19733" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_6222" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen : insertLen * -1)" />
    <mutant id="mutant_7554" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left)" to="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left) &gt;= 0 ? org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left) : org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left) * -1" />
    <mutant id="mutant_8885" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH))" to="(end.get(Calendar.MONTH) &gt;= 0 ? end.get(Calendar.MONTH) : end.get(Calendar.MONTH) * -1)" />
    <mutant id="mutant_6223" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="insertLen" to="(insertLen &gt;= 0 ? insertLen * -1 : insertLen)" />
    <mutant id="mutant_7553" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left)" to="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left) &gt;= 0 ? org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left) * -1 : org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, left)" />
    <mutant id="mutant_8884" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_6224" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex * -1 : endIndex" />
    <mutant id="mutant_7556" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right)" to="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right) &gt;= 0 ? org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right) * -1 : org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right)" />
    <mutant id="mutant_8887" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_6225" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex : endIndex * -1" />
    <mutant id="mutant_7555" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right)" to="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right) &gt;= 0 ? org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right) : org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(actual, right) * -1" />
    <mutant id="mutant_8886" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(end.get(Calendar.MONTH))" to="(end.get(Calendar.MONTH) &gt;= 0 ? end.get(Calendar.MONTH) * -1 : end.get(Calendar.MONTH))" />
    <mutant id="mutant_6226" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7558" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="leftCost" to="(leftCost &gt;= 0 ? leftCost : leftCost * -1)" />
    <mutant id="mutant_8889" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_6227" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7557" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="leftCost" to="(leftCost &gt;= 0 ? leftCost * -1 : leftCost)" />
    <mutant id="mutant_8888" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_6228" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_6229" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(org.apache.commons.lang3.text.StrMatcher,java.lang.String,int,int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7559" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.Class[],java.lang.Class[],java.lang.Class[])" from="rightCost" to="(rightCost &gt;= 0 ? rightCost * -1 : rightCost)" />
    <mutant id="mutant_7550" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass)" to="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass) &gt;= 0 ? org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass) * -1 : org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass)" />
    <mutant id="mutant_8881" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MONTH))" to="(start.get(Calendar.MONTH) &gt;= 0 ? start.get(Calendar.MONTH) : start.get(Calendar.MONTH) * -1)" />
    <mutant id="mutant_8880" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH * -1 : Calendar.MONTH)" />
    <mutant id="mutant_6220" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7552" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="totalCost" to="totalCost &gt;= 0 ? totalCost : totalCost * -1" />
    <mutant id="mutant_8883" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_6221" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7551" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="totalCost" to="totalCost &gt;= 0 ? totalCost * -1 : totalCost" />
    <mutant id="mutant_8882" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="(start.get(Calendar.MONTH))" to="(start.get(Calendar.MONTH) &gt;= 0 ? start.get(Calendar.MONTH) * -1 : start.get(Calendar.MONTH))" />
    <mutant id="mutant_18419" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="ordinal" to="(ordinal &gt;= 0 ? ordinal : ordinal * -1)" />
    <mutant id="mutant_18418" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_19749" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="(stripChars.indexOf(str.charAt(start)))" to="(stripChars.indexOf(str.charAt(start)) &gt;= 0 ? stripChars.indexOf(str.charAt(start)) * -1 : stripChars.indexOf(str.charAt(start)))" />
    <mutant id="mutant_6219" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_18413" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_19745" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_18412" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_19746" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18411" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_19747" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18410" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_19748" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="(stripChars.indexOf(str.charAt(start)))" to="(stripChars.indexOf(str.charAt(start)) &gt;= 0 ? stripChars.indexOf(str.charAt(start)) : stripChars.indexOf(str.charAt(start)) * -1)" />
    <mutant id="mutant_18417" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_19741" viable="false" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18416" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_19742" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_18415" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_19743" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_18414" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_19744" viable="true" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_6211" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_7543" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8874" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="start.get(Calendar.DAY_OF_YEAR)" to="start.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? start.get(Calendar.DAY_OF_YEAR) : start.get(Calendar.DAY_OF_YEAR) * -1" />
    <mutant id="mutant_6212" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="replaceStr.length()" to="replaceStr.length() &gt;= 0 ? replaceStr.length() : replaceStr.length() * -1" />
    <mutant id="mutant_7542" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8873" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_YEAR" to="(Calendar.DAY_OF_YEAR &gt;= 0 ? Calendar.DAY_OF_YEAR * -1 : Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_6213" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="replaceStr.length()" to="replaceStr.length() &gt;= 0 ? replaceStr.length() * -1 : replaceStr.length()" />
    <mutant id="mutant_7545" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_8876" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="years &gt;= 0 ? years * -1 : years" />
    <mutant id="mutant_6214" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_7544" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8875" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="start.get(Calendar.DAY_OF_YEAR)" to="start.get(Calendar.DAY_OF_YEAR) &gt;= 0 ? start.get(Calendar.DAY_OF_YEAR) * -1 : start.get(Calendar.DAY_OF_YEAR)" />
    <mutant id="mutant_19740" viable="false" in="org.apache.commons.lang3.StringUtils.stripStart(java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_6215" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_7547" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="totalCost" to="totalCost &gt;= 0 ? totalCost * -1 : totalCost" />
    <mutant id="mutant_8878" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="-1 * 0" />
    <mutant id="mutant_6216" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7546" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_8877" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="years" to="years &gt;= 0 ? years : years * -1" />
    <mutant id="mutant_6217" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_7549" viable="true" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass)" to="org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass) &gt;= 0 ? org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass) : org.apache.commons.lang3.reflect.MemberUtils.getObjectTransformationCost(srcClass, destClass) * -1" />
    <mutant id="mutant_6218" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replace(int,int,java.lang.String)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_7548" viable="false" in="org.apache.commons.lang3.reflect.MemberUtils.getTotalTransformationCost(java.lang.Class[],java.lang.Class[])" from="totalCost" to="totalCost &gt;= 0 ? totalCost : totalCost * -1" />
    <mutant id="mutant_8879" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.MONTH" to="(Calendar.MONTH &gt;= 0 ? Calendar.MONTH : Calendar.MONTH * -1)" />
    <mutant id="mutant_6291" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6292" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6293" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6294" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6295" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6296" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6297" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_6298" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="searchStr.length()" to="searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1" />
    <mutant id="mutant_6290" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_17137" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="37" to="(-1 * 37)" />
    <mutant id="mutant_18468" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_17136" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_18467" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_17135" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_18466" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_17134" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(minimum.hashCode())" to="(minimum.hashCode() &gt;= 0 ? minimum.hashCode() * -1 : minimum.hashCode())" />
    <mutant id="mutant_18465" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_19796" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19797" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_17139" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="(result &gt;= 0 ? result * -1 : result)" />
    <mutant id="mutant_19798" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_17138" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="(result &gt;= 0 ? result : result * -1)" />
    <mutant id="mutant_18469" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19799" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_6288" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_18460" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions" to="(transpositions &gt;= 0 ? transpositions * -1 : transpositions)" />
    <mutant id="mutant_19792" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6289" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19793" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19794" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19795" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_17133" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(minimum.hashCode())" to="(minimum.hashCode() &gt;= 0 ? minimum.hashCode() : minimum.hashCode() * -1)" />
    <mutant id="mutant_18464" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_17132" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="(result &gt;= 0 ? result * -1 : result)" />
    <mutant id="mutant_18463" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17131" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="(result &gt;= 0 ? result : result * -1)" />
    <mutant id="mutant_18462" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_19790" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_17130" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="37" to="(-1 * 37)" />
    <mutant id="mutant_18461" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions" to="(transpositions &gt;= 0 ? transpositions : transpositions * -1)" />
    <mutant id="mutant_19791" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_6280" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="indexOf(searchStr, (index + replaceLen))" to="indexOf(searchStr, (index + replaceLen)) &gt;= 0 ? indexOf(searchStr, (index + replaceLen)) : indexOf(searchStr, (index + replaceLen)) * -1" />
    <mutant id="mutant_6281" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="indexOf(searchStr, (index + replaceLen))" to="indexOf(searchStr, (index + replaceLen)) &gt;= 0 ? indexOf(searchStr, (index + replaceLen)) * -1 : indexOf(searchStr, (index + replaceLen))" />
    <mutant id="mutant_6282" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(org.apache.commons.lang3.text.StrMatcher,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6283" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(org.apache.commons.lang3.text.StrMatcher,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_6284" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(org.apache.commons.lang3.text.StrMatcher,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_6285" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(org.apache.commons.lang3.text.StrMatcher,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_6286" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_6287" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(char,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17148" viable="true" in="org.apache.commons.lang3.Range.toString()" from="32" to="(-1 * 32)" />
    <mutant id="mutant_18479" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_17147" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_18478" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="offset &gt;= 0 ? offset * -1 : offset" />
    <mutant id="mutant_17146" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_18477" viable="false" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="offset &gt;= 0 ? offset : offset * -1" />
    <mutant id="mutant_17145" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_18476" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_17149" viable="true" in="org.apache.commons.lang3.Range.intersectionWith(org.apache.commons.lang3.Range)" from="(getComparator().compare(minimum, other.minimum))" to="(getComparator().compare(minimum, other.minimum) &gt;= 0 ? getComparator().compare(minimum, other.minimum) * -1 : getComparator().compare(minimum, other.minimum))" />
    <mutant id="mutant_6277" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_17140" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(maximum.hashCode())" to="(maximum.hashCode() &gt;= 0 ? maximum.hashCode() : maximum.hashCode() * -1)" />
    <mutant id="mutant_18471" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth * -1 : maxWidth)" />
    <mutant id="mutant_6278" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen * -1 : replaceLen)" />
    <mutant id="mutant_18470" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6279" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen : replaceLen * -1)" />
    <mutant id="mutant_17144" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_18475" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_17143" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode * -1 : hashCode" />
    <mutant id="mutant_18474" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_17142" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode : hashCode * -1" />
    <mutant id="mutant_18473" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_17141" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(maximum.hashCode())" to="(maximum.hashCode() &gt;= 0 ? maximum.hashCode() * -1 : maximum.hashCode())" />
    <mutant id="mutant_18472" viable="true" in="org.apache.commons.lang3.StringUtils.abbreviate(java.lang.String,int,int)" from="maxWidth" to="(maxWidth &gt;= 0 ? maxWidth : maxWidth * -1)" />
    <mutant id="mutant_6270" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_6271" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_6272" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen * -1 : replaceLen)" />
    <mutant id="mutant_6273" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="replaceLen" to="(replaceLen &gt;= 0 ? replaceLen : replaceLen * -1)" />
    <mutant id="mutant_6274" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_6275" viable="false" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_6276" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_17115" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(hashCode)" to="(hashCode &gt;= 0 ? hashCode : hashCode * -1)" />
    <mutant id="mutant_18446" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_19778" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_17114" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode * -1 : hashCode" />
    <mutant id="mutant_18445" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_19779" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17113" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode : hashCode * -1" />
    <mutant id="mutant_18444" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_17112" viable="true" in="org.apache.commons.lang3.Range.elementCompareTo(T)" from="0" to="-1 * 0" />
    <mutant id="mutant_18443" viable="false" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_17119" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_19774" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_17118" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_18449" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19775" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_17117" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18448" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19776" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_17116" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(hashCode)" to="(hashCode &gt;= 0 ? hashCode * -1 : hashCode)" />
    <mutant id="mutant_18447" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_19777" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_6266" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7598" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19770" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_6267" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7597" viable="false" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19771" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_6268" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen : searchLen * -1)" />
    <mutant id="mutant_19772" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_6269" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="searchLen" to="(searchLen &gt;= 0 ? searchLen * -1 : searchLen)" />
    <mutant id="mutant_7599" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19773" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_17111" viable="true" in="org.apache.commons.lang3.Range.elementCompareTo(T)" from="1" to="-1 * 1" />
    <mutant id="mutant_18442" viable="false" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_17110" viable="true" in="org.apache.commons.lang3.Range.elementCompareTo(T)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_18441" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_18440" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int,boolean)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_7590" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(java.lang.Class,java.lang.Class)" from="annotatedMethodsList.size()" to="annotatedMethodsList.size() &gt;= 0 ? annotatedMethodsList.size() : annotatedMethodsList.size() * -1" />
    <mutant id="mutant_6260" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="indexOf(searchStr, 0)" to="indexOf(searchStr, 0) &gt;= 0 ? indexOf(searchStr, 0) : indexOf(searchStr, 0) * -1" />
    <mutant id="mutant_7592" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="0" to="-1 * 0" />
    <mutant id="mutant_6261" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7591" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getMethodsWithAnnotation(java.lang.Class,java.lang.Class)" from="annotatedMethodsList.size()" to="annotatedMethodsList.size() &gt;= 0 ? annotatedMethodsList.size() * -1 : annotatedMethodsList.size()" />
    <mutant id="mutant_6262" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7594" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6263" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7593" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_6264" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_7596" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="(parameterTypes.length)" to="(parameterTypes.length &gt;= 0 ? parameterTypes.length : parameterTypes.length * -1)" />
    <mutant id="mutant_6265" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_7595" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getOverrideHierarchy(java.lang.reflect.Method,org.apache.commons.lang3.ClassUtils$Interfaces)" from="(parameterTypes.length)" to="(parameterTypes.length &gt;= 0 ? parameterTypes.length * -1 : parameterTypes.length)" />
    <mutant id="mutant_17126" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(getClass().hashCode())" to="(getClass().hashCode() &gt;= 0 ? getClass().hashCode() : getClass().hashCode() * -1)" />
    <mutant id="mutant_18457" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19789" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_17125" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="(result &gt;= 0 ? result * -1 : result)" />
    <mutant id="mutant_18456" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17124" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="(result &gt;= 0 ? result : result * -1)" />
    <mutant id="mutant_18455" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17123" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="37" to="(-1 * 37)" />
    <mutant id="mutant_18454" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19785" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_17129" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_19786" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_17128" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_18459" viable="false" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions" to="(transpositions &gt;= 0 ? transpositions : transpositions * -1)" />
    <mutant id="mutant_19787" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_17127" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="(getClass().hashCode())" to="(getClass().hashCode() &gt;= 0 ? getClass().hashCode() * -1 : getClass().hashCode())" />
    <mutant id="mutant_18458" viable="false" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="transpositions" to="(transpositions &gt;= 0 ? transpositions * -1 : transpositions)" />
    <mutant id="mutant_19788" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_6255" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_7587" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes))" to="(MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes) &gt;= 0 ? MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes) : MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes) * -1)" />
    <mutant id="mutant_19781" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_6256" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="replaceStr.length()" to="replaceStr.length() &gt;= 0 ? replaceStr.length() : replaceStr.length() * -1" />
    <mutant id="mutant_7586" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getAccessibleMethodFromSuperclass(java.lang.Class,java.lang.String,java.lang.Class[])" from="parentClass.getModifiers()" to="(parentClass.getModifiers() &gt;= 0 ? parentClass.getModifiers() * -1 : parentClass.getModifiers())" />
    <mutant id="mutant_19782" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_6257" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="replaceStr.length()" to="replaceStr.length() &gt;= 0 ? replaceStr.length() * -1 : replaceStr.length()" />
    <mutant id="mutant_7589" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19783" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_6258" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_7588" viable="true" in="org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])" from="(MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes))" to="(MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes) &gt;= 0 ? MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes) * -1 : MemberUtils.compareParameterTypes(accessibleMethod.getParameterTypes(), bestMatch.getParameterTypes(), parameterTypes))" />
    <mutant id="mutant_19784" viable="true" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_6259" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceAll(java.lang.String,java.lang.String)" from="indexOf(searchStr, 0)" to="indexOf(searchStr, 0) &gt;= 0 ? indexOf(searchStr, 0) * -1 : indexOf(searchStr, 0)" />
    <mutant id="mutant_17122" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_18453" viable="false" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17121" viable="false" in="org.apache.commons.lang3.Range.hashCode()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_18452" viable="false" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17120" viable="true" in="org.apache.commons.lang3.Range.hashCode()" from="17" to="-1 * 17" />
    <mutant id="mutant_18451" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="(first.length())" to="(first.length() &gt;= 0 ? first.length() : first.length() * -1)" />
    <mutant id="mutant_18450" viable="true" in="org.apache.commons.lang3.StringUtils.transpositions(java.lang.CharSequence,java.lang.CharSequence)" from="(first.length())" to="(first.length() &gt;= 0 ? first.length() * -1 : first.length())" />
    <mutant id="mutant_19780" viable="false" in="org.apache.commons.lang3.StringUtils.substring(java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_18390" viable="true" in="org.apache.commons.lang3.StringUtils.lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="ordinal" to="(ordinal &gt;= 0 ? ordinal : ordinal * -1)" />
    <mutant id="mutant_17059" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_17058" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="startInclusive &gt;= 0 ? startInclusive : startInclusive * -1" />
    <mutant id="mutant_18389" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_17057" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive" />
    <mutant id="mutant_18388" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_17052" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18383" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17051" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18382" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17050" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18381" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_18380" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_17056" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive * -1 : endExclusive)" />
    <mutant id="mutant_18387" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_17055" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive : endExclusive * -1)" />
    <mutant id="mutant_18386" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_17054" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18385" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="searchStr.length()" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_17053" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18384" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="searchStr.length()" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_17070" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_17069" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_17068" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive : endExclusive * -1)" />
    <mutant id="mutant_18399" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false)" to="org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false) &gt;= 0 ? org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false) * -1 : org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, false)" />
    <mutant id="mutant_17063" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18394" viable="true" in="org.apache.commons.lang3.StringUtils.length(java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_17062" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive * -1 : endExclusive)" />
    <mutant id="mutant_18393" viable="true" in="org.apache.commons.lang3.StringUtils.lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true)" to="org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true) &gt;= 0 ? org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true) : org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true) * -1" />
    <mutant id="mutant_17061" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive : endExclusive * -1)" />
    <mutant id="mutant_18392" viable="true" in="org.apache.commons.lang3.StringUtils.lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true)" to="org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true) &gt;= 0 ? org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true) * -1 : org.apache.commons.lang3.StringUtils.ordinalIndexOf(str, searchStr, ordinal, true)" />
    <mutant id="mutant_17060" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18391" viable="true" in="org.apache.commons.lang3.StringUtils.lastOrdinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="ordinal" to="(ordinal &gt;= 0 ? ordinal * -1 : ordinal)" />
    <mutant id="mutant_17067" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive * -1 : endExclusive)" />
    <mutant id="mutant_18398" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="ordinal" to="(ordinal &gt;= 0 ? ordinal * -1 : ordinal)" />
    <mutant id="mutant_17066" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="(RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)) &gt;= 0 ? RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)) * -1 : RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" />
    <mutant id="mutant_18397" viable="true" in="org.apache.commons.lang3.StringUtils.ordinalIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)" from="ordinal" to="(ordinal &gt;= 0 ? ordinal : ordinal * -1)" />
    <mutant id="mutant_17065" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="(RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)))" to="(RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)) &gt;= 0 ? RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)) : RandomUtils.RANDOM.nextInt((endExclusive - startInclusive)) * -1)" />
    <mutant id="mutant_18396" viable="true" in="org.apache.commons.lang3.StringUtils.length(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() : cs.length() * -1" />
    <mutant id="mutant_17064" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18395" viable="true" in="org.apache.commons.lang3.StringUtils.length(java.lang.CharSequence)" from="cs.length()" to="cs.length() &gt;= 0 ? cs.length() * -1 : cs.length()" />
    <mutant id="mutant_17038" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18369" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_17037" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive" />
    <mutant id="mutant_18368" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_17036" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="startInclusive &gt;= 0 ? startInclusive : startInclusive * -1" />
    <mutant id="mutant_18367" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="StringUtils.INDEX_NOT_FOUND" to="StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_17035" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive * -1 : endInclusive)" />
    <mutant id="mutant_18366" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19697" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19698" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_19699" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_17039" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_17030" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18361" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19693" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_18360" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19694" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_19695" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_19696" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_17034" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive : endInclusive * -1)" />
    <mutant id="mutant_18365" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos * -1 : startPos)" />
    <mutant id="mutant_17033" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18364" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="(startPos &gt;= 0 ? startPos : startPos * -1)" />
    <mutant id="mutant_19690" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_17032" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18363" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_19691" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="shift" to="(shift &gt;= 0 ? shift : shift * -1)" />
    <mutant id="mutant_17031" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18362" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length())" />
    <mutant id="mutant_19692" viable="true" in="org.apache.commons.lang3.StringUtils.rotate(java.lang.String,int)" from="shift" to="(shift &gt;= 0 ? shift * -1 : shift)" />
    <mutant id="mutant_17049" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_17048" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18379" viable="false" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17047" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive * -1 : endExclusive)" />
    <mutant id="mutant_18378" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17046" viable="true" in="org.apache.commons.lang3.RandomUtils.nextInt(int,int)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive : endExclusive * -1)" />
    <mutant id="mutant_18377" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_6299" viable="true" in="org.apache.commons.lang3.text.StrBuilder.replaceFirst(java.lang.String,java.lang.String)" from="searchStr.length()" to="searchStr.length() &gt;= 0 ? searchStr.length() * -1 : searchStr.length()" />
    <mutant id="mutant_17041" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive * -1 : endInclusive)" />
    <mutant id="mutant_18372" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos : startPos * -1" />
    <mutant id="mutant_17040" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="endInclusive" to="(endInclusive &gt;= 0 ? endInclusive : endInclusive * -1)" />
    <mutant id="mutant_18371" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_18370" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="(searchStr.length())" to="(searchStr.length() &gt;= 0 ? searchStr.length() : searchStr.length() * -1)" />
    <mutant id="mutant_17045" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(RandomUtils.RANDOM.nextFloat())" to="(RandomUtils.RANDOM.nextFloat() &gt;= 0 ? RandomUtils.RANDOM.nextFloat() * -1 : RandomUtils.RANDOM.nextFloat())" />
    <mutant id="mutant_18376" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_17044" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="(RandomUtils.RANDOM.nextFloat())" to="(RandomUtils.RANDOM.nextFloat() &gt;= 0 ? RandomUtils.RANDOM.nextFloat() : RandomUtils.RANDOM.nextFloat() * -1)" />
    <mutant id="mutant_18375" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos * -1 : startPos" />
    <mutant id="mutant_17043" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_18374" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos : startPos * -1" />
    <mutant id="mutant_17042" viable="true" in="org.apache.commons.lang3.RandomUtils.nextFloat(float,float)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_18373" viable="true" in="org.apache.commons.lang3.StringUtils.lastIndexOfIgnoreCase(java.lang.CharSequence,java.lang.CharSequence,int)" from="startPos" to="startPos &gt;= 0 ? startPos * -1 : startPos" />
    <mutant id="mutant_17096" viable="true" in="org.apache.commons.lang3.Range.contains(T)" from="(comparator.compare(element, maximum))" to="(comparator.compare(element, maximum) &gt;= 0 ? comparator.compare(element, maximum) : comparator.compare(element, maximum) * -1)" />
    <mutant id="mutant_17095" viable="true" in="org.apache.commons.lang3.Range.contains(T)" from="(comparator.compare(element, maximum))" to="(comparator.compare(element, maximum) &gt;= 0 ? comparator.compare(element, maximum) * -1 : comparator.compare(element, maximum))" />
    <mutant id="mutant_17094" viable="true" in="org.apache.commons.lang3.Range.contains(T)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17093" viable="true" in="org.apache.commons.lang3.Range.contains(T)" from="(comparator.compare(element, minimum))" to="(comparator.compare(element, minimum) &gt;= 0 ? comparator.compare(element, minimum) : comparator.compare(element, minimum) * -1)" />
    <mutant id="mutant_17099" viable="true" in="org.apache.commons.lang3.Range.isAfter(T)" from="(comparator.compare(element, minimum))" to="(comparator.compare(element, minimum) &gt;= 0 ? comparator.compare(element, minimum) : comparator.compare(element, minimum) * -1)" />
    <mutant id="mutant_17098" viable="true" in="org.apache.commons.lang3.Range.isAfter(T)" from="(comparator.compare(element, minimum))" to="(comparator.compare(element, minimum) &gt;= 0 ? comparator.compare(element, minimum) * -1 : comparator.compare(element, minimum))" />
    <mutant id="mutant_17097" viable="true" in="org.apache.commons.lang3.Range.contains(T)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17081" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_17080" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_17079" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive" />
    <mutant id="mutant_17074" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_17073" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_17072" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_17071" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive : startInclusive * -1)" />
    <mutant id="mutant_17078" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="startInclusive &gt;= 0 ? startInclusive : startInclusive * -1" />
    <mutant id="mutant_17077" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive : endExclusive * -1)" />
    <mutant id="mutant_17076" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive * -1 : endExclusive)" />
    <mutant id="mutant_17075" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="startInclusive" to="(startInclusive &gt;= 0 ? startInclusive * -1 : startInclusive)" />
    <mutant id="mutant_17092" viable="true" in="org.apache.commons.lang3.Range.contains(T)" from="(comparator.compare(element, minimum))" to="(comparator.compare(element, minimum) &gt;= 0 ? comparator.compare(element, minimum) * -1 : comparator.compare(element, minimum))" />
    <mutant id="mutant_17091" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_17090" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(this.comparator.compare(element1, element2))" to="(this.comparator.compare(element1, element2) &gt;= 0 ? this.comparator.compare(element1, element2) * -1 : this.comparator.compare(element1, element2))" />
    <mutant id="mutant_17085" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="((long)(org.apache.commons.lang3.RandomUtils.nextDouble(startInclusive, endExclusive)))" to="((long)(org.apache.commons.lang3.RandomUtils.nextDouble(startInclusive, endExclusive))) &gt;= 0 ? ((long)(org.apache.commons.lang3.RandomUtils.nextDouble(startInclusive, endExclusive))) * -1 : ((long)(org.apache.commons.lang3.RandomUtils.nextDouble(startInclusive, endExclusive)))" />
    <mutant id="mutant_17084" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="((long)(org.apache.commons.lang3.RandomUtils.nextDouble(startInclusive, endExclusive)))" to="((long)(org.apache.commons.lang3.RandomUtils.nextDouble(startInclusive, endExclusive))) &gt;= 0 ? ((long)(org.apache.commons.lang3.RandomUtils.nextDouble(startInclusive, endExclusive))) : ((long)(org.apache.commons.lang3.RandomUtils.nextDouble(startInclusive, endExclusive))) * -1" />
    <mutant id="mutant_17083" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive : endExclusive * -1)" />
    <mutant id="mutant_17082" viable="true" in="org.apache.commons.lang3.RandomUtils.nextLong(long,long)" from="endExclusive" to="(endExclusive &gt;= 0 ? endExclusive * -1 : endExclusive)" />
    <mutant id="mutant_17089" viable="true" in="org.apache.commons.lang3.Range(T,T,java.util.Comparator)" from="(this.comparator.compare(element1, element2))" to="(this.comparator.compare(element1, element2) &gt;= 0 ? this.comparator.compare(element1, element2) : this.comparator.compare(element1, element2) * -1)" />
    <mutant id="mutant_17088" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_17087" viable="true" in="org.apache.commons.lang3.Range$ComparableComparator.compare(java.lang.Object,java.lang.Object)" from="((Comparable)(obj1)).compareTo(obj2)" to="((Comparable)(obj1)).compareTo(obj2) &gt;= 0 ? ((Comparable)(obj1)).compareTo(obj2) : ((Comparable)(obj1)).compareTo(obj2) * -1" />
    <mutant id="mutant_17086" viable="true" in="org.apache.commons.lang3.Range$ComparableComparator.compare(java.lang.Object,java.lang.Object)" from="((Comparable)(obj1)).compareTo(obj2)" to="((Comparable)(obj1)).compareTo(obj2) &gt;= 0 ? ((Comparable)(obj1)).compareTo(obj2) * -1 : ((Comparable)(obj1)).compareTo(obj2)" />
    <mutant id="mutant_8904" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH * -1 : Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_8903" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days : days * -1" />
    <mutant id="mutant_8906" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="start.getActualMaximum(Calendar.DAY_OF_MONTH)" to="start.getActualMaximum(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.getActualMaximum(Calendar.DAY_OF_MONTH) : start.getActualMaximum(Calendar.DAY_OF_MONTH) * -1" />
    <mutant id="mutant_8905" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="Calendar.DAY_OF_MONTH" to="(Calendar.DAY_OF_MONTH &gt;= 0 ? Calendar.DAY_OF_MONTH : Calendar.DAY_OF_MONTH * -1)" />
    <mutant id="mutant_8908" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months : months * -1" />
    <mutant id="mutant_8907" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="start.getActualMaximum(Calendar.DAY_OF_MONTH)" to="start.getActualMaximum(Calendar.DAY_OF_MONTH) &gt;= 0 ? start.getActualMaximum(Calendar.DAY_OF_MONTH) * -1 : start.getActualMaximum(Calendar.DAY_OF_MONTH)" />
    <mutant id="mutant_8909" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="months" to="months &gt;= 0 ? months * -1 : months" />
    <mutant id="mutant_8900" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="(days &gt;= 0 ? days : days * -1)" />
    <mutant id="mutant_8902" viable="false" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="days" to="days &gt;= 0 ? days * -1 : days" />
    <mutant id="mutant_8901" viable="true" in="org.apache.commons.lang3.time.DurationFormatUtils.formatPeriod(long,long,java.lang.String,boolean,java.util.TimeZone)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1298" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_1299" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_1296" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_1297" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_1294" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1295" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1292" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="Double.NaN" to="Double.NaN &gt;= 0 ? Double.NaN * -1 : Double.NaN" />
    <mutant id="mutant_1293" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="Double.NaN" to="Double.NaN &gt;= 0 ? Double.NaN : Double.NaN * -1" />
    <mutant id="mutant_1290" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1291" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1289" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1287" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_1288" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1285" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1286" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1283" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="1" to="-1 * 1" />
    <mutant id="mutant_1284" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11914" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11915" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_11916" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_11917" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_11918" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_11919" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11910" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11911" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_11912" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_11913" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11925" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11926" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11927" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_11928" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11929" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11920" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11921" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11922" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_11923" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11924" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11903" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11904" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11905" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11906" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11907" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11908" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11909" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11900" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11901" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11902" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10627" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11958" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int,int)" from="Integer.valueOf(element)" to="(Integer.valueOf(element) &gt;= 0 ? Integer.valueOf(element) * -1 : Integer.valueOf(element))" />
    <mutant id="mutant_10628" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11959" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10629" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11950" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10620" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11951" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="element" to="element &gt;= 0 ? element * -1 : element" />
    <mutant id="mutant_10621" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_11952" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="element" to="element &gt;= 0 ? element : element * -1" />
    <mutant id="mutant_10622" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11953" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10623" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11954" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10624" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11955" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int,int)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_10625" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11956" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int,int)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_10626" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11957" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int,int)" from="Integer.valueOf(element)" to="(Integer.valueOf(element) &gt;= 0 ? Integer.valueOf(element) : Integer.valueOf(element) * -1)" />
    <mutant id="mutant_10638" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_11969" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10639" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_10630" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11961" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_10631" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11962" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_10632" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_11963" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10633" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_11964" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10634" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],byte)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11965" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10635" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],int,byte)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11966" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10636" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(byte[],int,byte)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11967" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10637" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_11968" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_11960" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10605" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11936" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10606" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11937" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10607" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11938" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10608" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11939" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10609" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11930" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10600" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11931" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10601" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11932" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10602" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11933" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10603" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11934" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10604" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11935" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10616" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11947" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10617" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11948" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_10618" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11949" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(int[],int)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_10619" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[],boolean)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11940" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10610" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11941" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10611" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11942" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10612" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11943" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10613" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11944" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10614" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11945" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_10615" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11946" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_2608" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_2609" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3939" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10542" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_11873" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10543" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11874" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10544" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11875" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_10545" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11876" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10546" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11877" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10547" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11878" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_10548" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11879" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_10549" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_3930" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11870" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10540" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11871" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10541" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_11872" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2606" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3938" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_2607" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3937" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_2604" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3936" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_2605" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3935" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2602" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3934" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2603" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3933" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(shortest)" to="(shortest &gt;= 0 ? shortest * -1 : shortest)" />
    <mutant id="mutant_2600" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3932" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(shortest)" to="(shortest &gt;= 0 ? shortest : shortest * -1)" />
    <mutant id="mutant_2601" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3931" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3929" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_3928" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_10553" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_11884" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10554" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_11885" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10555" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11886" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10556" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11887" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10557" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_11888" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10558" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_11889" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10559" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11880" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_10550" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11881" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_10551" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11882" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_10552" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11883" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_3927" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_3926" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3925" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_3924" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_3923" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_3922" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_3921" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_3920" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_10528" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11859" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10529" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3919" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(longest)" to="(longest &gt;= 0 ? longest : longest * -1)" />
    <mutant id="mutant_3918" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="(longest)" to="(longest &gt;= 0 ? longest * -1 : longest)" />
    <mutant id="mutant_3917" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10520" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11851" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10521" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11852" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10522" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11853" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10523" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11854" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10524" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_11855" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10525" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11856" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10526" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11857" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10527" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11858" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11850" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_3916" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3915" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="longest" to="longest &gt;= 0 ? longest : longest * -1" />
    <mutant id="mutant_3914" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="longest" to="longest &gt;= 0 ? longest * -1 : longest" />
    <mutant id="mutant_3913" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_3912" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3911" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_longest" to="_longest &gt;= 0 ? _longest * -1 : _longest" />
    <mutant id="mutant_3910" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_longest" to="_longest &gt;= 0 ? _longest : _longest * -1" />
    <mutant id="mutant_10539" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_3909" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="longest" to="longest &gt;= 0 ? longest : longest * -1" />
    <mutant id="mutant_3908" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="longest" to="longest &gt;= 0 ? longest * -1 : longest" />
    <mutant id="mutant_3907" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_shortest" to="_shortest &gt;= 0 ? _shortest : _shortest * -1" />
    <mutant id="mutant_3906" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_shortest" to="_shortest &gt;= 0 ? _shortest * -1 : _shortest" />
    <mutant id="mutant_10531" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_11862" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10532" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_11863" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10533" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11864" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_10534" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11865" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10535" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11866" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10536" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11867" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10537" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11868" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10538" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11869" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11860" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10530" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11861" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3905" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="shortest" to="shortest &gt;= 0 ? shortest * -1 : shortest" />
    <mutant id="mutant_3904" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="shortest" to="shortest &gt;= 0 ? shortest : shortest * -1" />
    <mutant id="mutant_3903" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="sz" to="sz &gt;= 0 ? sz * -1 : sz" />
    <mutant id="mutant_3902" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="sz" to="sz &gt;= 0 ? sz : sz * -1" />
    <mutant id="mutant_3901" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_longest" to="_longest &gt;= 0 ? _longest * -1 : _longest" />
    <mutant id="mutant_3900" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_longest" to="_longest &gt;= 0 ? _longest : _longest * -1" />
    <mutant id="mutant_10586" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_10587" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_10588" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10589" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_1311" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String,double)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_2642" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_3974" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="10" to="(-1 * 10)" />
    <mutant id="mutant_1312" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String,double)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_2643" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="1" to="-1 * 1" />
    <mutant id="mutant_3973" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_2640" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_3972" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_10580" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1310" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String,double)" from="Double.parseDouble(str)" to="Double.parseDouble(str) &gt;= 0 ? Double.parseDouble(str) * -1 : Double.parseDouble(str)" />
    <mutant id="mutant_2641" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_3971" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(above)" to="(above &gt;= 0 ? above * -1 : above)" />
    <mutant id="mutant_10581" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_3970" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(above)" to="(above &gt;= 0 ? above : above * -1)" />
    <mutant id="mutant_10582" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_10583" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_10584" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10585" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_1319" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_1317" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="Math.max(a, b)" to="(Math.max(a, b) &gt;= 0 ? Math.max(a, b) : Math.max(a, b) * -1)" />
    <mutant id="mutant_2648" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1318" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="Math.max(a, b)" to="(Math.max(a, b) &gt;= 0 ? Math.max(a, b) * -1 : Math.max(a, b))" />
    <mutant id="mutant_2649" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3979" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.below(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_1315" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_2646" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3978" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.below(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_1316" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_2647" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3977" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.above(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_1313" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_2644" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="0" to="-1 * 0" />
    <mutant id="mutant_3976" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.above(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_1314" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_2645" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3975" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.above(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10597" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10598" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_10599" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_1300" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2631" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3963" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(above)" to="(above &gt;= 0 ? above * -1 : above)" />
    <mutant id="mutant_1301" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2632" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3962" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(above)" to="(above &gt;= 0 ? above : above * -1)" />
    <mutant id="mutant_10590" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_3961" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_10591" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_2630" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3960" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_10592" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10593" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_10594" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_10595" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10596" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_1308" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String,double)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_2639" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_1309" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String,double)" from="Double.parseDouble(str)" to="Double.parseDouble(str) &gt;= 0 ? Double.parseDouble(str) : Double.parseDouble(str) * -1" />
    <mutant id="mutant_1306" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0)" to="org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0) : org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0) * -1" />
    <mutant id="mutant_2637" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_3969" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_1307" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String,double)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_2638" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3968" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_1304" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String)" from="0.0" to="(-1 * 0.0)" />
    <mutant id="mutant_2635" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_3967" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(below)" to="(below &gt;= 0 ? below * -1 : below)" />
    <mutant id="mutant_1305" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toDouble(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0)" to="org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0) * -1 : org.apache.commons.lang3.math.NumberUtils.toDouble(str, 0.0)" />
    <mutant id="mutant_2636" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_3966" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(below)" to="(below &gt;= 0 ? below : below * -1)" />
    <mutant id="mutant_1302" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_2633" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3965" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_1303" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_2634" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_3964" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_10564" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_11895" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10565" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found) * -1" />
    <mutant id="mutant_11896" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10566" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.booleanValue(), found)" />
    <mutant id="mutant_11897" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10567" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_11898" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10568" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_11899" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10569" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2620" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3952" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper(int,int,boolean)" from="this.above" to="this.above &gt;= 0 ? this.above : this.above * -1" />
    <mutant id="mutant_2621" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3951" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper(int,int,boolean)" from="below" to="below &gt;= 0 ? below : below * -1" />
    <mutant id="mutant_3950" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper(int,int,boolean)" from="below" to="below &gt;= 0 ? below * -1 : below" />
    <mutant id="mutant_11890" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10560" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11891" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10561" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_11892" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10562" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_11893" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10563" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_11894" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(long[],long,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2628" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2629" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long,long)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3959" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(below)" to="(below &gt;= 0 ? below * -1 : below)" />
    <mutant id="mutant_2626" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3958" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="(below)" to="(below &gt;= 0 ? below : below * -1)" />
    <mutant id="mutant_2627" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3957" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_2624" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3956" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.translate(int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_2625" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3955" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper(int,int,boolean)" from="above" to="above &gt;= 0 ? above : above * -1" />
    <mutant id="mutant_2622" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3954" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper(int,int,boolean)" from="above" to="above &gt;= 0 ? above * -1 : above" />
    <mutant id="mutant_2623" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3953" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper(int,int,boolean)" from="this.above" to="this.above &gt;= 0 ? this.above * -1 : this.above" />
    <mutant id="mutant_2619" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_10575" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_10576" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_10577" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_10578" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_10579" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_3941" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2610" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3940" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10570" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10571" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(boolean[],boolean[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10572" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10573" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10574" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2617" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3949" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper(int,int,boolean)" from="this.below" to="this.below &gt;= 0 ? this.below * -1 : this.below" />
    <mutant id="mutant_2618" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3948" viable="false" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper(int,int,boolean)" from="this.below" to="this.below &gt;= 0 ? this.below : this.below * -1" />
    <mutant id="mutant_2615" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="0" to="-1 * 0" />
    <mutant id="mutant_3947" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper()" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_2616" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3946" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper()" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_2613" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3945" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2614" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3944" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_2611" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3943" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_2612" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3942" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_2690" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1355" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2686" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)" from="1" to="-1 * 1" />
    <mutant id="mutant_1356" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="1" to="-1 * 1" />
    <mutant id="mutant_2687" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)" from="0" to="-1 * 0" />
    <mutant id="mutant_1353" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="Math.min(Math.min(a, b), c)" to="Math.min(Math.min(a, b), c) &gt;= 0 ? Math.min(Math.min(a, b), c) * -1 : Math.min(Math.min(a, b), c)" />
    <mutant id="mutant_2684" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1354" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="Math.min(Math.min(a, b), c)" to="Math.min(Math.min(a, b), c) &gt;= 0 ? Math.min(Math.min(a, b), c) : Math.min(Math.min(a, b), c) * -1" />
    <mutant id="mutant_2685" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1351" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_2682" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1352" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_2683" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_2680" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1350" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="Math.min(a, b)" to="(Math.min(a, b) &gt;= 0 ? Math.min(a, b) : Math.min(a, b) * -1)" />
    <mutant id="mutant_2681" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short,short)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1359" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_1357" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2688" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1358" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2689" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1344" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_2675" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1345" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_2676" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1342" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2673" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1343" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_2674" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1340" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_2671" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1341" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2672" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_2670" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1348" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_2679" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1349" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="Math.min(a, b)" to="(Math.min(a, b) &gt;= 0 ? Math.min(a, b) * -1 : Math.min(a, b))" />
    <mutant id="mutant_1346" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_2677" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1347" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float,float,float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_2678" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1333" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="Float.NaN" to="Float.NaN &gt;= 0 ? Float.NaN * -1 : Float.NaN" />
    <mutant id="mutant_2664" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3996" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_1334" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="Float.NaN" to="Float.NaN &gt;= 0 ? Float.NaN : Float.NaN * -1" />
    <mutant id="mutant_2665" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3995" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_1331" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2662" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3994" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="input.length() &gt;= 0 ? input.length() : input.length() * -1" />
    <mutant id="mutant_1332" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2663" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3993" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="input.length()" to="input.length() &gt;= 0 ? input.length() * -1 : input.length()" />
    <mutant id="mutant_2660" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3992" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1330" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2661" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3991" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])" from="(options.length)" to="(options.length &gt;= 0 ? options.length : options.length * -1)" />
    <mutant id="mutant_3990" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper(org.apache.commons.lang3.text.translate.NumericEntityUnescaper$OPTION[])" from="(options.length)" to="(options.length &gt;= 0 ? options.length * -1 : options.length)" />
    <mutant id="mutant_1339" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_1337" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_2668" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1338" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_2669" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3999" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="seqEnd" to="(seqEnd &gt;= 0 ? seqEnd * -1 : seqEnd)" />
    <mutant id="mutant_1335" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2666" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="0" to="-1 * 0" />
    <mutant id="mutant_3998" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_1336" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2667" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3997" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityUnescaper.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_1322" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="Math.max(Math.max(a, b), c)" to="Math.max(Math.max(a, b), c) &gt;= 0 ? Math.max(Math.max(a, b), c) * -1 : Math.max(Math.max(a, b), c)" />
    <mutant id="mutant_2653" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3985" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh * -1 : codepointHigh)" />
    <mutant id="mutant_1323" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2654" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3984" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh : codepointHigh * -1)" />
    <mutant id="mutant_1320" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_2651" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3983" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow : codepointLow * -1)" />
    <mutant id="mutant_1321" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float,float,float)" from="Math.max(Math.max(a, b), c)" to="Math.max(Math.max(a, b), c) &gt;= 0 ? Math.max(Math.max(a, b), c) : Math.max(Math.max(a, b), c) * -1" />
    <mutant id="mutant_2652" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3982" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.between(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow * -1 : codepointLow)" />
    <mutant id="mutant_3981" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.below(int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_2650" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3980" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.below(int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_1328" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2659" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1329" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_1326" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2657" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3989" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh * -1 : codepointHigh)" />
    <mutant id="mutant_1327" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2658" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3988" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh : codepointHigh * -1)" />
    <mutant id="mutant_1324" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="1" to="-1 * 1" />
    <mutant id="mutant_2655" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3987" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow : codepointLow * -1)" />
    <mutant id="mutant_1325" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(float[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2656" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(long[],long[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3986" viable="true" in="org.apache.commons.lang3.text.translate.NumericEntityEscaper.outsideOf(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow * -1 : codepointLow)" />
    <mutant id="mutant_1399" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="y" to="(y &gt;= 0 ? y : y * -1)" />
    <mutant id="mutant_1397" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="x" to="(x &gt;= 0 ? x * -1 : x)" />
    <mutant id="mutant_1398" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(long,long)" from="x" to="(x &gt;= 0 ? x : x * -1)" />
    <mutant id="mutant_1395" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1396" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_1393" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="y" to="(y &gt;= 0 ? y * -1 : y)" />
    <mutant id="mutant_1394" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="y" to="(y &gt;= 0 ? y : y * -1)" />
    <mutant id="mutant_1391" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="x" to="(x &gt;= 0 ? x : x * -1)" />
    <mutant id="mutant_1392" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="x" to="(x &gt;= 0 ? x * -1 : x)" />
    <mutant id="mutant_1390" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_1388" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="y" to="(y &gt;= 0 ? y * -1 : y)" />
    <mutant id="mutant_1389" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="y" to="(y &gt;= 0 ? y : y * -1)" />
    <mutant id="mutant_1386" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="x" to="(x &gt;= 0 ? x : x * -1)" />
    <mutant id="mutant_1387" viable="true" in="org.apache.commons.lang3.math.NumberUtils.compare(int,int)" from="x" to="(x &gt;= 0 ? x * -1 : x)" />
    <mutant id="mutant_1384" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String,float)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_1385" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String,float)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_1382" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String,float)" from="Float.parseFloat(str)" to="Float.parseFloat(str) &gt;= 0 ? Float.parseFloat(str) * -1 : Float.parseFloat(str)" />
    <mutant id="mutant_1383" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String,float)" from="Float.parseFloat(str)" to="Float.parseFloat(str) &gt;= 0 ? Float.parseFloat(str) : Float.parseFloat(str) * -1" />
    <mutant id="mutant_1380" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String,float)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue * -1 : defaultValue" />
    <mutant id="mutant_1381" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String,float)" from="defaultValue" to="defaultValue &gt;= 0 ? defaultValue : defaultValue * -1" />
    <mutant id="mutant_1377" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String)" from="0.0F" to="(-1 * 0.0F)" />
    <mutant id="mutant_1378" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F)" to="org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F) * -1 : org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F)" />
    <mutant id="mutant_1375" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_1376" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_1373" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1374" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1371" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_1372" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_1379" viable="true" in="org.apache.commons.lang3.math.NumberUtils.toFloat(java.lang.String)" from="org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F)" to="org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F) &gt;= 0 ? org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F) : org.apache.commons.lang3.math.NumberUtils.toFloat(str, 0.0F) * -1" />
    <mutant id="mutant_1370" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_1366" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="Float.NaN" to="Float.NaN &gt;= 0 ? Float.NaN : Float.NaN * -1" />
    <mutant id="mutant_2697" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1367" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2698" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1364" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2695" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1365" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="Float.NaN" to="Float.NaN &gt;= 0 ? Float.NaN * -1 : Float.NaN" />
    <mutant id="mutant_2696" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1362" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2693" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1363" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2694" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1360" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2691" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1361" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2692" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1368" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2699" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(short[],short[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_1369" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(float[])" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_1199" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1197" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1198" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1195" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1196" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1193" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1194" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1191" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_1192" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1190" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_1188" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1189" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1186" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1187" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1184" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1185" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1182" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1183" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1180" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1181" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1179" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1177" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1178" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1175" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1176" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1173" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1174" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1171" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1172" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1170" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_1168" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2499" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1169" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_1166" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_2497" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1167" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2498" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1164" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2495" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1165" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_2496" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1162" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_2493" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1163" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2494" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_10704" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_10705" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10706" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10707" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found)" />
    <mutant id="mutant_10708" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.byteValue(), found) * -1" />
    <mutant id="mutant_10709" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10700" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_10701" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10702" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10703" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_10715" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10716" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10717" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_10718" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_10719" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_10710" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10711" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10712" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10713" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10714" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10748" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10749" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10740" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_10741" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_10742" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10743" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10744" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10745" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10746" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_10747" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="0" to="-1 * 0" />
    <mutant id="mutant_10759" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10751" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10752" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10753" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10754" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10755" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10756" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10757" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10758" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10750" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10726" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10727" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_10728" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_10729" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_10720" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_10721" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_10722" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10723" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10724" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_10725" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_10737" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10738" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10739" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10730" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10731" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10732" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_10733" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_10734" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10735" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_10736" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(byte[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_3819" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3818" viable="false" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_10663" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11994" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_10664" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11995" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_10665" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="1" to="-1 * 1" />
    <mutant id="mutant_11996" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10666" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11997" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10667" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11998" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_10668" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11999" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_10669" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11990" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10660" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11991" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10661" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11992" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_10662" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11993" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_3817" viable="false" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_3816" viable="false" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pt" to="(pt &gt;= 0 ? pt : pt * -1)" />
    <mutant id="mutant_3815" viable="false" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pt" to="(pt &gt;= 0 ? pt * -1 : pt)" />
    <mutant id="mutant_3814" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="consumed" to="(consumed &gt;= 0 ? consumed : consumed * -1)" />
    <mutant id="mutant_3813" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="consumed" to="(consumed &gt;= 0 ? consumed * -1 : consumed)" />
    <mutant id="mutant_3812" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pt" to="(pt &gt;= 0 ? pt : pt * -1)" />
    <mutant id="mutant_3811" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pt" to="(pt &gt;= 0 ? pt * -1 : pt)" />
    <mutant id="mutant_3810" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_3809" viable="false" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3808" viable="false" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3807" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_10674" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10675" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10676" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_10677" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_10678" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10679" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_19008" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padStr.length()" to="padStr.length() &gt;= 0 ? padStr.length() * -1 : padStr.length()" />
    <mutant id="mutant_19009" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_10670" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19004" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_10671" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19005" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_10672" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_19006" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_10673" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_19007" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padStr.length()" to="padStr.length() &gt;= 0 ? padStr.length() : padStr.length() * -1" />
    <mutant id="mutant_3806" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_19000" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_3805" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_19001" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT * -1 : StringUtils.PAD_LIMIT)" />
    <mutant id="mutant_3804" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_19002" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT : StringUtils.PAD_LIMIT * -1)" />
    <mutant id="mutant_3803" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_19003" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,char)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3802" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3801" viable="false" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3800" viable="false" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_10649" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_10641" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11972" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(int[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10642" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11973" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(int[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10643" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_11974" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_10644" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_11975" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_10645" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11976" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_10646" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_11977" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_10647" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_11978" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10648" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_11979" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11970" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_10640" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(byte[],byte[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_11971" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(int[],int[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_10652" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_11983" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10653" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_11984" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10654" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11985" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10655" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11986" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10656" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11987" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10657" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11988" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10658" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11989" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="1" to="-1 * 1" />
    <mutant id="mutant_10659" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11980" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10650" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(byte[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11981" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10651" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(byte[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11982" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(int[],int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_20033" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg * -1 : beg)" />
    <mutant id="mutant_20034" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg : beg * -1)" />
    <mutant id="mutant_20031" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_20032" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg : beg * -1)" />
    <mutant id="mutant_20030" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_2521" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3853" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2522" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3852" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3851" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20039" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="beg &gt;= 0 ? beg * -1 : beg" />
    <mutant id="mutant_2520" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3850" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19037" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_20037" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19038" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_20038" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="beg &gt;= 0 ? beg : beg * -1" />
    <mutant id="mutant_19039" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="pads &gt;= 0 ? pads * -1 : pads" />
    <mutant id="mutant_20035" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg * -1 : beg)" />
    <mutant id="mutant_20036" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_2529" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_19033" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_19034" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_2527" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3859" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_19035" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_2528" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3858" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper(int,int,boolean)" from="above" to="(above &gt;= 0 ? above : above * -1)" />
    <mutant id="mutant_19036" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2525" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3857" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper(int,int,boolean)" from="above" to="(above &gt;= 0 ? above * -1 : above)" />
    <mutant id="mutant_2526" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3856" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper(int,int,boolean)" from="below" to="(below &gt;= 0 ? below : below * -1)" />
    <mutant id="mutant_19030" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_2523" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3855" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper(int,int,boolean)" from="below" to="(below &gt;= 0 ? below * -1 : below)" />
    <mutant id="mutant_19031" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_2524" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3854" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19032" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_19050" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20022" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="numberOfSubstrings" to="numberOfSubstrings &gt;= 0 ? numberOfSubstrings : numberOfSubstrings * -1" />
    <mutant id="mutant_20023" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_20020" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg * -1 : beg)" />
    <mutant id="mutant_20021" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="numberOfSubstrings" to="numberOfSubstrings &gt;= 0 ? numberOfSubstrings * -1 : numberOfSubstrings" />
    <mutant id="mutant_2510" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3842" viable="false" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2511" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3841" viable="false" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3840" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_20028" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_20029" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_19048" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20026" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_19049" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20027" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_20024" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="numberOfSubstrings" to="(numberOfSubstrings &gt;= 0 ? numberOfSubstrings * -1 : numberOfSubstrings)" />
    <mutant id="mutant_20025" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="numberOfSubstrings" to="(numberOfSubstrings &gt;= 0 ? numberOfSubstrings : numberOfSubstrings * -1)" />
    <mutant id="mutant_2518" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_19044" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_2519" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3849" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19045" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_2516" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3848" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19046" viable="false" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2517" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3847" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19047" viable="false" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2514" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3846" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19040" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="pads &gt;= 0 ? pads : pads * -1" />
    <mutant id="mutant_2515" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3845" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19041" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_2512" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="0" to="-1 * 0" />
    <mutant id="mutant_3844" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19042" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2513" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3843" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19043" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2509" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_10685" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_20011" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg * -1 : beg)" />
    <mutant id="mutant_10686" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_20012" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="str.indexOf(separator, beg)" to="str.indexOf(separator, beg) &gt;= 0 ? str.indexOf(separator, beg) : str.indexOf(separator, beg) * -1" />
    <mutant id="mutant_10687" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10688" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_20010" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg : beg * -1)" />
    <mutant id="mutant_10689" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_3831" viable="true" in="org.apache.commons.lang3.text.translate.CodePointTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="1" to="-1 * 1" />
    <mutant id="mutant_19019" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_20019" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg : beg * -1)" />
    <mutant id="mutant_2500" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3830" viable="true" in="org.apache.commons.lang3.text.translate.CodePointTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_20017" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_10680" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_20018" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_10681" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(byte[],byte)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_19015" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_20015" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_10682" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_19016" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_20016" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10683" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_19017" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20013" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="str.indexOf(separator, beg)" to="str.indexOf(separator, beg) &gt;= 0 ? str.indexOf(separator, beg) * -1 : str.indexOf(separator, beg)" />
    <mutant id="mutant_10684" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(byte[],byte)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19018" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_20014" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_2507" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3839" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_19011" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_2508" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3838" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19012" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2505" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3837" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19013" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_2506" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3836" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="0" to="-1 * 0" />
    <mutant id="mutant_19014" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_2503" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3835" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="2" to="-1 * 2" />
    <mutant id="mutant_2504" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3834" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_2501" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3833" viable="true" in="org.apache.commons.lang3.text.translate.EntityArrays.invert(java.lang.String[][])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_2502" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3832" viable="true" in="org.apache.commons.lang3.text.translate.CodePointTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_19010" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_3829" viable="true" in="org.apache.commons.lang3.text.translate.CodePointTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_10696" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_20000" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="separator.length()" to="separator.length() &gt;= 0 ? separator.length() * -1 : separator.length()" />
    <mutant id="mutant_10697" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20001" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_10698" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10699" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_3820" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_20008" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_20009" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_10690" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="values.length" to="(values.length &gt;= 0 ? values.length * -1 : values.length)" />
    <mutant id="mutant_20006" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_10691" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="values.length" to="(values.length &gt;= 0 ? values.length : values.length * -1)" />
    <mutant id="mutant_20007" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_10692" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19026" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_20004" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_10693" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19027" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20005" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_10694" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19028" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_20002" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_10695" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(byte[],byte[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_19029" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_20003" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_3828" viable="true" in="org.apache.commons.lang3.text.translate.CodePointTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="Character.codePointAt(input, index)" to="Character.codePointAt(input, index) &gt;= 0 ? Character.codePointAt(input, index) : Character.codePointAt(input, index) * -1" />
    <mutant id="mutant_19022" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads : pads * -1)" />
    <mutant id="mutant_3827" viable="true" in="org.apache.commons.lang3.text.translate.CodePointTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="Character.codePointAt(input, index)" to="Character.codePointAt(input, index) &gt;= 0 ? Character.codePointAt(input, index) * -1 : Character.codePointAt(input, index)" />
    <mutant id="mutant_19023" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT * -1 : StringUtils.PAD_LIMIT)" />
    <mutant id="mutant_3826" viable="true" in="org.apache.commons.lang3.text.translate.CodePointTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_19024" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT : StringUtils.PAD_LIMIT * -1)" />
    <mutant id="mutant_3825" viable="true" in="org.apache.commons.lang3.text.translate.CodePointTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19025" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3824" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="Character.charCount(Character.codePointAt(input, pos))" to="Character.charCount(Character.codePointAt(input, pos)) &gt;= 0 ? Character.charCount(Character.codePointAt(input, pos)) : Character.charCount(Character.codePointAt(input, pos)) * -1" />
    <mutant id="mutant_3823" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="Character.charCount(Character.codePointAt(input, pos))" to="Character.charCount(Character.codePointAt(input, pos)) &gt;= 0 ? Character.charCount(Character.codePointAt(input, pos)) * -1 : Character.charCount(Character.codePointAt(input, pos))" />
    <mutant id="mutant_3822" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="Character.codePointAt(input, pos)" to="(Character.codePointAt(input, pos) &gt;= 0 ? Character.codePointAt(input, pos) * -1 : Character.codePointAt(input, pos))" />
    <mutant id="mutant_19020" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3821" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="Character.codePointAt(input, pos)" to="(Character.codePointAt(input, pos) &gt;= 0 ? Character.codePointAt(input, pos) : Character.codePointAt(input, pos) * -1)" />
    <mutant id="mutant_19021" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="pads" to="(pads &gt;= 0 ? pads * -1 : pads)" />
    <mutant id="mutant_19080" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_19081" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_20070" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="substrings.size()" to="substrings.size() &gt;= 0 ? substrings.size() * -1 : substrings.size()" />
    <mutant id="mutant_19082" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_19083" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_20077" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_20078" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_20075" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_20076" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_20073" viable="true" in="org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_20074" viable="true" in="org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_20071" viable="true" in="org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20072" viable="true" in="org.apache.commons.lang3.StringUtils.splitPreserveAllTokens(java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1234" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2565" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3897" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_1235" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2566" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3896" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_1232" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2563" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="0" to="-1 * 0" />
    <mutant id="mutant_3895" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="sz" to="sz &gt;= 0 ? sz * -1 : sz" />
    <mutant id="mutant_1233" viable="false" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2564" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3894" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="sz" to="sz &gt;= 0 ? sz : sz * -1" />
    <mutant id="mutant_1230" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2561" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3893" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_shortest" to="_shortest &gt;= 0 ? _shortest : _shortest * -1" />
    <mutant id="mutant_1231" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2562" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3892" viable="false" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_shortest" to="_shortest &gt;= 0 ? _shortest * -1 : _shortest" />
    <mutant id="mutant_3891" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_shortest" to="(_shortest &gt;= 0 ? _shortest : _shortest * -1)" />
    <mutant id="mutant_20079" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2560" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3890" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_shortest" to="(_shortest &gt;= 0 ? _shortest * -1 : _shortest)" />
    <mutant id="mutant_19077" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_19078" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_19079" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_1238" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2569" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_19073" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1239" viable="false" in="org.apache.commons.lang3.math.NumberUtils.toByte(java.lang.String)" from="((byte)(0))" to="(-1 * ((byte)(0)))" />
    <mutant id="mutant_19074" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1236" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2567" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3899" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_longest" to="(_longest &gt;= 0 ? _longest * -1 : _longest)" />
    <mutant id="mutant_19075" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1237" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2568" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3898" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="_longest" to="(_longest &gt;= 0 ? _longest : _longest * -1)" />
    <mutant id="mutant_19076" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_19091" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19092" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19093" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19094" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19090" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_20066" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_20067" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_20064" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg * -1 : beg)" />
    <mutant id="mutant_20065" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_20062" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="separatorLength" to="(separatorLength &gt;= 0 ? separatorLength : separatorLength * -1)" />
    <mutant id="mutant_20063" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg : beg * -1)" />
    <mutant id="mutant_20060" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20061" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="separatorLength" to="(separatorLength &gt;= 0 ? separatorLength * -1 : separatorLength)" />
    <mutant id="mutant_1223" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2554" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3886" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="seq[0].length()" to="seq[0].length() &gt;= 0 ? seq[0].length() * -1 : seq[0].length()" />
    <mutant id="mutant_1224" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2555" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3885" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1221" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2552" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3884" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1222" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2553" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3883" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2550" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3882" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1220" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2551" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3881" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3880" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="0" to="-1 * 0" />
    <mutant id="mutant_20068" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_20069" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="substrings.size()" to="substrings.size() &gt;= 0 ? substrings.size() : substrings.size() * -1" />
    <mutant id="mutant_19088" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19089" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1229" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1227" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2558" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_19084" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_1228" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(byte[])" from="1" to="-1 * 1" />
    <mutant id="mutant_2559" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3889" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_19085" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_1225" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2556" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3888" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_19086" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_1226" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2557" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3887" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="seq[0].length()" to="seq[0].length() &gt;= 0 ? seq[0].length() : seq[0].length() * -1" />
    <mutant id="mutant_19087" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_19060" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19061" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_20055" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg : beg * -1)" />
    <mutant id="mutant_20056" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="(beg &gt;= 0 ? beg * -1 : beg)" />
    <mutant id="mutant_20053" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_20054" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_20051" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_20052" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_20050" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_1212" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2543" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3875" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow : codepointLow * -1)" />
    <mutant id="mutant_1213" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2544" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3874" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow * -1 : codepointLow)" />
    <mutant id="mutant_1210" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2541" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_3873" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.between(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh * -1 : codepointHigh)" />
    <mutant id="mutant_1211" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2542" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3872" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.between(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh : codepointHigh * -1)" />
    <mutant id="mutant_3871" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.between(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow : codepointLow * -1)" />
    <mutant id="mutant_19059" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_20059" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_2540" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_3870" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.between(int,int)" from="codepointLow" to="(codepointLow &gt;= 0 ? codepointLow * -1 : codepointLow)" />
    <mutant id="mutant_20057" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="beg &gt;= 0 ? beg : beg * -1" />
    <mutant id="mutant_20058" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="beg" to="beg &gt;= 0 ? beg * -1 : beg" />
    <mutant id="mutant_19055" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_19056" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1218" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2549" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_19057" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1219" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_19058" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1216" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="1" to="-1 * 1" />
    <mutant id="mutant_2547" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3879" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE" />
    <mutant id="mutant_19051" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1217" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2548" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3878" viable="true" in="org.apache.commons.lang3.text.translate.LookupTranslator(java.lang.CharSequence[][])" from="Integer.MAX_VALUE" to="Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1" />
    <mutant id="mutant_19052" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen * -1 : padLen)" />
    <mutant id="mutant_1214" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isParsable(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2545" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3877" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh * -1 : codepointHigh)" />
    <mutant id="mutant_19053" viable="true" in="org.apache.commons.lang3.StringUtils.leftPad(java.lang.String,int,java.lang.String)" from="padLen" to="(padLen &gt;= 0 ? padLen : padLen * -1)" />
    <mutant id="mutant_1215" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2546" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3876" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.outsideOf(int,int)" from="codepointHigh" to="(codepointHigh &gt;= 0 ? codepointHigh : codepointHigh * -1)" />
    <mutant id="mutant_19054" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_19070" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_19071" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_19072" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_20044" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="numberOfSubstrings" to="numberOfSubstrings &gt;= 0 ? numberOfSubstrings * -1 : numberOfSubstrings" />
    <mutant id="mutant_20045" viable="false" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="numberOfSubstrings" to="numberOfSubstrings &gt;= 0 ? numberOfSubstrings : numberOfSubstrings * -1" />
    <mutant id="mutant_20042" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="separatorLength" to="(separatorLength &gt;= 0 ? separatorLength * -1 : separatorLength)" />
    <mutant id="mutant_20043" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="separatorLength" to="(separatorLength &gt;= 0 ? separatorLength : separatorLength * -1)" />
    <mutant id="mutant_20040" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20041" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_1201" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2532" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_3864" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.above(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_1202" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2533" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_3863" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.above(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2530" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3862" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1200" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2531" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_3861" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3860" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.toUtf16Escape(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_20048" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="numberOfSubstrings" to="(numberOfSubstrings &gt;= 0 ? numberOfSubstrings : numberOfSubstrings * -1)" />
    <mutant id="mutant_20049" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_20046" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_20047" viable="true" in="org.apache.commons.lang3.StringUtils.splitByWholeSeparatorWorker(java.lang.String,java.lang.String,int,boolean)" from="numberOfSubstrings" to="(numberOfSubstrings &gt;= 0 ? numberOfSubstrings * -1 : numberOfSubstrings)" />
    <mutant id="mutant_1209" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19066" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_19067" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_1207" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2538" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_19068" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_1208" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2539" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_3869" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.below(int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_19069" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1205" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2536" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_3868" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.below(int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_19062" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1206" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2537" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_3867" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.below(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_19063" viable="true" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1203" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2534" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_3866" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.below(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_19064" viable="false" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_1204" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2535" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3865" viable="true" in="org.apache.commons.lang3.text.translate.JavaUnicodeEscaper.above(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_19065" viable="false" in="org.apache.commons.lang3.StringUtils.mid(java.lang.String,int,int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_1281" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="Math.min(Math.min(a, b), c)" to="Math.min(Math.min(a, b), c) &gt;= 0 ? Math.min(Math.min(a, b), c) * -1 : Math.min(Math.min(a, b), c)" />
    <mutant id="mutant_1282" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1280" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="Math.min(Math.min(a, b), c)" to="Math.min(Math.min(a, b), c) &gt;= 0 ? Math.min(Math.min(a, b), c) : Math.min(Math.min(a, b), c) * -1" />
    <mutant id="mutant_1278" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_1279" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_1276" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="Math.min(a, b)" to="(Math.min(a, b) &gt;= 0 ? Math.min(a, b) : Math.min(a, b) * -1)" />
    <mutant id="mutant_1277" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="Math.min(a, b)" to="(Math.min(a, b) &gt;= 0 ? Math.min(a, b) * -1 : Math.min(a, b))" />
    <mutant id="mutant_1274" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_1275" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_1272" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_1273" viable="true" in="org.apache.commons.lang3.math.NumberUtils.min(double,double,double)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_1270" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_1271" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_1267" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="max" to="max &gt;= 0 ? max : max * -1" />
    <mutant id="mutant_2598" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1268" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2599" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1265" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_2596" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1266" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="max" to="max &gt;= 0 ? max * -1 : max" />
    <mutant id="mutant_2597" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1263" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2594" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1264" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_2595" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object[],java.lang.Object[],java.util.Comparator)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1261" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="Double.NaN" to="Double.NaN &gt;= 0 ? Double.NaN : Double.NaN * -1" />
    <mutant id="mutant_2592" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparator2.compare(lhs, rhs)" to="comparator2.compare(lhs, rhs) &gt;= 0 ? comparator2.compare(lhs, rhs) * -1 : comparator2.compare(lhs, rhs)" />
    <mutant id="mutant_1262" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2593" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparator2.compare(lhs, rhs)" to="comparator2.compare(lhs, rhs) &gt;= 0 ? comparator2.compare(lhs, rhs) : comparator2.compare(lhs, rhs) * -1" />
    <mutant id="mutant_1269" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_20091" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20092" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_20090" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2590" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_20099" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_1260" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="Double.NaN" to="Double.NaN &gt;= 0 ? Double.NaN * -1 : Double.NaN" />
    <mutant id="mutant_2591" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_20097" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20098" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20095" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20096" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20093" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_20094" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1256" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2587" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1257" viable="false" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2588" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparable.compareTo(rhs)" to="comparable.compareTo(rhs) &gt;= 0 ? comparable.compareTo(rhs) : comparable.compareTo(rhs) * -1" />
    <mutant id="mutant_1254" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2585" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1255" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2586" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1252" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2583" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1253" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2584" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1250" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2581" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1251" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="1" to="-1 * 1" />
    <mutant id="mutant_2582" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19099" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="32" to="-1 * 32" />
    <mutant id="mutant_19095" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19096" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_1258" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_2589" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparable.compareTo(rhs)" to="comparable.compareTo(rhs) &gt;= 0 ? comparable.compareTo(rhs) * -1 : comparable.compareTo(rhs)" />
    <mutant id="mutant_19097" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_1259" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double[])" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_19098" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="160" to="(-1 * 160)" />
    <mutant id="mutant_20080" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_20081" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_20088" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2580" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_20089" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20086" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20087" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20084" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_20085" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_20082" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20083" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1245" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="Math.max(a, b)" to="(Math.max(a, b) &gt;= 0 ? Math.max(a, b) : Math.max(a, b) * -1)" />
    <mutant id="mutant_2576" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1246" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_2577" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1243" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_2574" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1244" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="Math.max(a, b)" to="(Math.max(a, b) &gt;= 0 ? Math.max(a, b) * -1 : Math.max(a, b))" />
    <mutant id="mutant_2575" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1241" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_2572" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1242" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_2573" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2570" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1240" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_2571" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(int[],int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1249" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="Math.max(Math.max(a, b), c)" to="Math.max(Math.max(a, b), c) &gt;= 0 ? Math.max(Math.max(a, b), c) : Math.max(Math.max(a, b), c) * -1" />
    <mutant id="mutant_1247" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_2578" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1248" viable="true" in="org.apache.commons.lang3.math.NumberUtils.max(double,double,double)" from="Math.max(Math.max(a, b), c)" to="Math.max(Math.max(a, b), c) &gt;= 0 ? Math.max(Math.max(a, b), c) * -1 : Math.max(Math.max(a, b), c)" />
    <mutant id="mutant_2579" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.Object,java.lang.Object,java.util.Comparator)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1083" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1084" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1081" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1082" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1080" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1078" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_1079" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_1076" viable="false" in="?" from="Float.valueOf(-1.0F)" to="Float.valueOf(-1.0F) &gt;= 0 ? Float.valueOf(-1.0F) * -1 : Float.valueOf(-1.0F)" />
    <mutant id="mutant_1077" viable="false" in="?" from="Float.valueOf(-1.0F)" to="Float.valueOf(-1.0F) &gt;= 0 ? Float.valueOf(-1.0F) : Float.valueOf(-1.0F) * -1" />
    <mutant id="mutant_1074" viable="false" in="?" from="Float.valueOf(1.0F)" to="Float.valueOf(1.0F) &gt;= 0 ? Float.valueOf(1.0F) : Float.valueOf(1.0F) * -1" />
    <mutant id="mutant_1075" viable="false" in="?" from="1.0F" to="(-1 * 1.0F)" />
    <mutant id="mutant_1072" viable="false" in="?" from="1.0F" to="(-1 * 1.0F)" />
    <mutant id="mutant_1073" viable="false" in="?" from="Float.valueOf(1.0F)" to="Float.valueOf(1.0F) &gt;= 0 ? Float.valueOf(1.0F) * -1 : Float.valueOf(1.0F)" />
    <mutant id="mutant_1070" viable="false" in="?" from="Float.valueOf(0.0F)" to="Float.valueOf(0.0F) &gt;= 0 ? Float.valueOf(0.0F) * -1 : Float.valueOf(0.0F)" />
    <mutant id="mutant_1071" viable="false" in="?" from="Float.valueOf(0.0F)" to="Float.valueOf(0.0F) &gt;= 0 ? Float.valueOf(0.0F) : Float.valueOf(0.0F) * -1" />
    <mutant id="mutant_1069" viable="false" in="?" from="0.0F" to="(-1 * 0.0F)" />
    <mutant id="mutant_1067" viable="false" in="?" from="Double.valueOf(-1.0)" to="Double.valueOf(-1.0) &gt;= 0 ? Double.valueOf(-1.0) * -1 : Double.valueOf(-1.0)" />
    <mutant id="mutant_2398" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_1068" viable="false" in="?" from="Double.valueOf(-1.0)" to="Double.valueOf(-1.0) &gt;= 0 ? Double.valueOf(-1.0) : Double.valueOf(-1.0) * -1" />
    <mutant id="mutant_2399" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1065" viable="false" in="?" from="Double.valueOf(1.0)" to="Double.valueOf(1.0) &gt;= 0 ? Double.valueOf(1.0) * -1 : Double.valueOf(1.0)" />
    <mutant id="mutant_2396" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1066" viable="false" in="?" from="1.0" to="(-1 * 1.0)" />
    <mutant id="mutant_2397" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)" from="1" to="-1 * 1" />
    <mutant id="mutant_1063" viable="false" in="?" from="1.0" to="(-1 * 1.0)" />
    <mutant id="mutant_2394" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1064" viable="false" in="?" from="Double.valueOf(1.0)" to="Double.valueOf(1.0) &gt;= 0 ? Double.valueOf(1.0) : Double.valueOf(1.0) * -1" />
    <mutant id="mutant_2395" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1061" viable="false" in="?" from="Double.valueOf(0.0)" to="Double.valueOf(0.0) &gt;= 0 ? Double.valueOf(0.0) : Double.valueOf(0.0) * -1" />
    <mutant id="mutant_2392" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1062" viable="false" in="?" from="Double.valueOf(0.0)" to="Double.valueOf(0.0) &gt;= 0 ? Double.valueOf(0.0) * -1 : Double.valueOf(0.0)" />
    <mutant id="mutant_2393" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2390" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1060" viable="false" in="?" from="0.0" to="(-1 * 0.0)" />
    <mutant id="mutant_2391" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char,char)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1058" viable="false" in="?" from="((byte)(1))" to="(-1 * ((byte)(1)))" />
    <mutant id="mutant_2389" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1059" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1056" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2387" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1057" viable="false" in="?" from="((byte)(0))" to="(-1 * ((byte)(0)))" />
    <mutant id="mutant_2388" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1054" viable="false" in="?" from="((short)(0))" to="(-1 * ((short)(0)))" />
    <mutant id="mutant_2385" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1055" viable="false" in="?" from="((short)(1))" to="(-1 * ((short)(1)))" />
    <mutant id="mutant_2386" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1052" viable="false" in="?" from="Integer.valueOf(-1)" to="Integer.valueOf(-1) &gt;= 0 ? Integer.valueOf(-1) * -1 : Integer.valueOf(-1)" />
    <mutant id="mutant_2383" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1053" viable="false" in="?" from="Integer.valueOf(-1)" to="Integer.valueOf(-1) &gt;= 0 ? Integer.valueOf(-1) : Integer.valueOf(-1) * -1" />
    <mutant id="mutant_2384" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1050" viable="false" in="?" from="Integer.valueOf(1)" to="Integer.valueOf(1) &gt;= 0 ? Integer.valueOf(1) * -1 : Integer.valueOf(1)" />
    <mutant id="mutant_2381" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1051" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2382" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_2380" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1047" viable="false" in="?" from="Integer.valueOf(0)" to="Integer.valueOf(0) &gt;= 0 ? Integer.valueOf(0) * -1 : Integer.valueOf(0)" />
    <mutant id="mutant_2378" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1048" viable="false" in="?" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2379" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1045" viable="false" in="?" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2376" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1046" viable="false" in="?" from="Integer.valueOf(0)" to="Integer.valueOf(0) &gt;= 0 ? Integer.valueOf(0) : Integer.valueOf(0) * -1" />
    <mutant id="mutant_2377" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="0" to="-1 * 0" />
    <mutant id="mutant_1043" viable="false" in="?" from="Long.valueOf(-1L)" to="Long.valueOf(-1L) &gt;= 0 ? Long.valueOf(-1L) : Long.valueOf(-1L) * -1" />
    <mutant id="mutant_2374" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_1044" viable="false" in="?" from="Long.valueOf(-1L)" to="Long.valueOf(-1L) &gt;= 0 ? Long.valueOf(-1L) * -1 : Long.valueOf(-1L)" />
    <mutant id="mutant_2375" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1041" viable="false" in="?" from="Long.valueOf(1L)" to="Long.valueOf(1L) &gt;= 0 ? Long.valueOf(1L) * -1 : Long.valueOf(1L)" />
    <mutant id="mutant_2372" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1042" viable="false" in="?" from="1L" to="(-1 * 1L)" />
    <mutant id="mutant_2373" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_1049" viable="false" in="?" from="Integer.valueOf(1)" to="Integer.valueOf(1) &gt;= 0 ? Integer.valueOf(1) : Integer.valueOf(1) * -1" />
    <mutant id="mutant_1098" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1099" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1096" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1097" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1094" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_1095" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_1092" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1093" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1090" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1091" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isDigits(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_1089" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_1087" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1088" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_1085" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1086" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isAllZeros(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10825" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_10826" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10827" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10828" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10829" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10820" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10821" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10822" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_10823" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_10824" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_10836" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_10837" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_10838" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_10839" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10830" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10831" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(char[],char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10832" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="values.length" to="(values.length &gt;= 0 ? values.length * -1 : values.length)" />
    <mutant id="mutant_10833" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="values.length" to="(values.length &gt;= 0 ? values.length : values.length * -1)" />
    <mutant id="mutant_10834" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10835" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_10803" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10804" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10805" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10806" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10807" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="1" to="-1 * 1" />
    <mutant id="mutant_10808" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10809" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10800" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10801" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10802" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10814" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_10815" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_10816" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10817" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10818" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_10819" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_10810" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_10811" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_10812" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10813" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10869" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_10861" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_10862" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_10863" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_10864" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10865" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10866" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_10867" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_10868" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10860" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_10872" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10873" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10874" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_10875" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_10876" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10877" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_10878" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_10879" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_19206" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="(remove.length())" to="(remove.length() &gt;= 0 ? remove.length() * -1 : remove.length())" />
    <mutant id="mutant_19207" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19208" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_19209" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_19202" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19203" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_10870" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_19204" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_10871" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_19205" viable="true" in="org.apache.commons.lang3.StringUtils.removeEnd(java.lang.String,java.lang.String)" from="(remove.length())" to="(remove.length() &gt;= 0 ? remove.length() : remove.length() * -1)" />
    <mutant id="mutant_19200" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_19201" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10847" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10848" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10849" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found)" />
    <mutant id="mutant_10840" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10841" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_10842" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_10843" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10844" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10845" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_10846" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_10858" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10859" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_10850" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.charValue(), found) * -1" />
    <mutant id="mutant_10851" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10852" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10853" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10854" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10855" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(char[],char[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10856" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10857" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10784" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20110" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_10785" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_20111" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_10786" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10787" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10788" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10789" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_19118" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_20118" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="sizePlus1" to="(sizePlus1 &gt;= 0 ? sizePlus1 * -1 : sizePlus1)" />
    <mutant id="mutant_19119" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_20119" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="sizePlus1" to="(sizePlus1 &gt;= 0 ? sizePlus1 : sizePlus1 * -1)" />
    <mutant id="mutant_20116" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20117" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10780" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_19114" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="whitespacesCount" to="(whitespacesCount &gt;= 0 ? whitespacesCount * -1 : whitespacesCount)" />
    <mutant id="mutant_20114" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_10781" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_19115" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="whitespacesCount" to="(whitespacesCount &gt;= 0 ? whitespacesCount : whitespacesCount * -1)" />
    <mutant id="mutant_20115" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_10782" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_19116" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20112" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10783" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19117" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="1" to="-1 * 1" />
    <mutant id="mutant_20113" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19110" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="whitespacesCount" to="(whitespacesCount &gt;= 0 ? whitespacesCount : whitespacesCount * -1)" />
    <mutant id="mutant_19111" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19112" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_19113" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_10795" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_10796" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_20100" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10797" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10798" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10799" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_19129" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_20107" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_20108" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20105" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_10790" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_20106" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_10791" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_19125" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_20103" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="list.size()" to="list.size() &gt;= 0 ? list.size() * -1 : list.size()" />
    <mutant id="mutant_10792" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(char[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19126" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_20104" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_10793" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(char[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_19127" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20101" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10794" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(char[],char)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_19128" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20102" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,char,boolean)" from="list.size()" to="list.size() &gt;= 0 ? list.size() : list.size() * -1" />
    <mutant id="mutant_19121" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19122" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19123" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19124" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_20109" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="1" to="-1 * 1" />
    <mutant id="mutant_19120" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_10762" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_10763" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="0" to="-1 * 0" />
    <mutant id="mutant_10764" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10765" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10766" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10767" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10768" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10769" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10760" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10761" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10773" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10774" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_10775" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_10776" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10777" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],int,char)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10778" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(char[],int,char)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10779" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(char[],char[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_19107" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_19108" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19109" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="whitespacesCount" to="(whitespacesCount &gt;= 0 ? whitespacesCount * -1 : whitespacesCount)" />
    <mutant id="mutant_19103" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="whitespacesCount" to="(whitespacesCount &gt;= 0 ? whitespacesCount * -1 : whitespacesCount)" />
    <mutant id="mutant_10770" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19104" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="whitespacesCount" to="(whitespacesCount &gt;= 0 ? whitespacesCount : whitespacesCount * -1)" />
    <mutant id="mutant_10771" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19105" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10772" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Byte[],byte)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19106" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_19100" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="whitespacesCount" to="whitespacesCount &gt;= 0 ? whitespacesCount * -1 : whitespacesCount" />
    <mutant id="mutant_19101" viable="false" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="whitespacesCount" to="whitespacesCount &gt;= 0 ? whitespacesCount : whitespacesCount * -1" />
    <mutant id="mutant_19102" viable="true" in="org.apache.commons.lang3.StringUtils.normalizeSpace(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_19160" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_20154" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20155" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20152" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_20153" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_20150" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_20151" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_2400" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3732" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="causeFrameIndex" to="(causeFrameIndex &gt;= 0 ? causeFrameIndex : causeFrameIndex * -1)" />
    <mutant id="mutant_2401" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3731" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="causeFrameIndex" to="(causeFrameIndex &gt;= 0 ? causeFrameIndex * -1 : causeFrameIndex)" />
    <mutant id="mutant_3730" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="causeFrameIndex" to="(causeFrameIndex &gt;= 0 ? causeFrameIndex : causeFrameIndex * -1)" />
    <mutant id="mutant_19158" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_20158" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_19159" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_20159" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_20156" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20157" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2408" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_19154" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_2409" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3739" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_19155" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_2406" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3738" viable="false" in="?" from="4954918890077093841L" to="-1 * 4954918890077093841L" />
    <mutant id="mutant_19156" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_2407" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3737" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_19157" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_2404" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3736" viable="false" in="?" from="4954918890077093841L" to="-1 * 4954918890077093841L" />
    <mutant id="mutant_19150" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_2405" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3735" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="wrapperFrameIndex" to="(wrapperFrameIndex &gt;= 0 ? wrapperFrameIndex * -1 : wrapperFrameIndex)" />
    <mutant id="mutant_19151" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_2402" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3734" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="wrapperFrameIndex" to="(wrapperFrameIndex &gt;= 0 ? wrapperFrameIndex : wrapperFrameIndex * -1)" />
    <mutant id="mutant_19152" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_2403" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3733" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="causeFrameIndex" to="(causeFrameIndex &gt;= 0 ? causeFrameIndex * -1 : causeFrameIndex)" />
    <mutant id="mutant_19153" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_19170" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(overlay.length())" to="(overlay.length() &gt;= 0 ? overlay.length() * -1 : overlay.length())" />
    <mutant id="mutant_19171" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20143" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_20144" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20141" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20142" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_20140" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3721" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="causeFrameIndex" to="(causeFrameIndex &gt;= 0 ? causeFrameIndex * -1 : causeFrameIndex)" />
    <mutant id="mutant_3720" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="causeFrameIndex" to="(causeFrameIndex &gt;= 0 ? causeFrameIndex : causeFrameIndex * -1)" />
    <mutant id="mutant_20149" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_19169" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="(overlay.length())" to="(overlay.length() &gt;= 0 ? overlay.length() : overlay.length() * -1)" />
    <mutant id="mutant_20147" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="sizePlus1" to="(sizePlus1 &gt;= 0 ? sizePlus1 : sizePlus1 * -1)" />
    <mutant id="mutant_20148" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_20145" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20146" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="sizePlus1" to="(sizePlus1 &gt;= 0 ? sizePlus1 * -1 : sizePlus1)" />
    <mutant id="mutant_3729" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="wrapperFrameIndex" to="(wrapperFrameIndex &gt;= 0 ? wrapperFrameIndex * -1 : wrapperFrameIndex)" />
    <mutant id="mutant_19165" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_3728" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="wrapperFrameIndex" to="(wrapperFrameIndex &gt;= 0 ? wrapperFrameIndex : wrapperFrameIndex * -1)" />
    <mutant id="mutant_19166" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_3727" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="causeFrameIndex" to="(causeFrameIndex &gt;= 0 ? causeFrameIndex * -1 : causeFrameIndex)" />
    <mutant id="mutant_19167" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_3726" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="causeFrameIndex" to="(causeFrameIndex &gt;= 0 ? causeFrameIndex : causeFrameIndex * -1)" />
    <mutant id="mutant_19168" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_3725" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19161" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="temp" to="temp &gt;= 0 ? temp * -1 : temp" />
    <mutant id="mutant_3724" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="wrapperFrameIndex" to="(wrapperFrameIndex &gt;= 0 ? wrapperFrameIndex * -1 : wrapperFrameIndex)" />
    <mutant id="mutant_19162" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="temp" to="temp &gt;= 0 ? temp : temp * -1" />
    <mutant id="mutant_3723" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="wrapperFrameIndex" to="(wrapperFrameIndex &gt;= 0 ? wrapperFrameIndex : wrapperFrameIndex * -1)" />
    <mutant id="mutant_19163" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_3722" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19164" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3719" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20132" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20133" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20130" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_20131" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_3710" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20138" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20139" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19136" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20136" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="(separatorChars.length())" to="(separatorChars.length() &gt;= 0 ? separatorChars.length() : separatorChars.length() * -1)" />
    <mutant id="mutant_19137" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20137" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="(separatorChars.length())" to="(separatorChars.length() &gt;= 0 ? separatorChars.length() * -1 : separatorChars.length())" />
    <mutant id="mutant_19138" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_20134" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19139" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_20135" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3718" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size())" to="(wrapperFrames.size() &gt;= 0 ? wrapperFrames.size() * -1 : wrapperFrames.size())" />
    <mutant id="mutant_19132" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_3717" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(wrapperFrames.size())" to="(wrapperFrames.size() &gt;= 0 ? wrapperFrames.size() : wrapperFrames.size() * -1)" />
    <mutant id="mutant_19133" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_3716" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19134" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_3715" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size())" to="(causeFrames.size() &gt;= 0 ? causeFrames.size() * -1 : causeFrames.size())" />
    <mutant id="mutant_19135" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_3714" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.removeCommonFrames(java.util.List,java.util.List)" from="(causeFrames.size())" to="(causeFrames.size() &gt;= 0 ? causeFrames.size() : causeFrames.size() * -1)" />
    <mutant id="mutant_3713" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="at" to="(at &gt;= 0 ? at : at * -1)" />
    <mutant id="mutant_3712" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="at" to="(at &gt;= 0 ? at * -1 : at)" />
    <mutant id="mutant_19130" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3711" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19131" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_3709" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="at" to="(at &gt;= 0 ? at : at * -1)" />
    <mutant id="mutant_3708" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="at" to="(at &gt;= 0 ? at * -1 : at)" />
    <mutant id="mutant_20121" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_20122" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_20120" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_20129" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20127" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20128" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19147" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_20125" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_19148" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_20126" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19149" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20123" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_20124" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_3707" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="token.indexOf(&quot;at&quot;)" to="token.indexOf(&quot;at&quot;) &gt;= 0 ? token.indexOf(&quot;at&quot;) : token.indexOf(&quot;at&quot;) * -1" />
    <mutant id="mutant_19143" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_3706" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrameList(java.lang.Throwable)" from="token.indexOf(&quot;at&quot;)" to="token.indexOf(&quot;at&quot;) &gt;= 0 ? token.indexOf(&quot;at&quot;) * -1 : token.indexOf(&quot;at&quot;)" />
    <mutant id="mutant_19144" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3705" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(java.lang.Throwable)" from="list.size()" to="list.size() &gt;= 0 ? list.size() * -1 : list.size()" />
    <mutant id="mutant_19145" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end : end * -1" />
    <mutant id="mutant_3704" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getThrowables(java.lang.Throwable)" from="list.size()" to="list.size() &gt;= 0 ? list.size() : list.size() * -1" />
    <mutant id="mutant_19146" viable="false" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="end &gt;= 0 ? end * -1 : end" />
    <mutant id="mutant_3703" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3702" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="(list.size())" to="(list.size() &gt;= 0 ? list.size() * -1 : list.size())" />
    <mutant id="mutant_19140" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_3701" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="(list.size())" to="(list.size() &gt;= 0 ? list.size() : list.size() * -1)" />
    <mutant id="mutant_19141" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_3700" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_19142" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20190" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20191" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20198" viable="false" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="strsLen" to="strsLen &gt;= 0 ? strsLen * -1 : strsLen" />
    <mutant id="mutant_20199" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="strs.length" to="strs.length &gt;= 0 ? strs.length * -1 : strs.length" />
    <mutant id="mutant_20196" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="list.size()" to="list.size() &gt;= 0 ? list.size() * -1 : list.size()" />
    <mutant id="mutant_20197" viable="false" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="strsLen" to="strsLen &gt;= 0 ? strsLen : strsLen * -1" />
    <mutant id="mutant_20194" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20195" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="list.size()" to="list.size() &gt;= 0 ? list.size() : list.size() * -1" />
    <mutant id="mutant_20192" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20193" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1113" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_2444" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="Double.compare(lhs, rhs)" to="Double.compare(lhs, rhs) &gt;= 0 ? Double.compare(lhs, rhs) : Double.compare(lhs, rhs) * -1" />
    <mutant id="mutant_3776" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length)" to="(translators.length &gt;= 0 ? translators.length * -1 : translators.length)" />
    <mutant id="mutant_1114" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2445" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3775" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_1111" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_2442" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_3774" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() : input.length() * -1)" />
    <mutant id="mutant_1112" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2443" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="Double.compare(lhs, rhs)" to="Double.compare(lhs, rhs) &gt;= 0 ? Double.compare(lhs, rhs) * -1 : Double.compare(lhs, rhs)" />
    <mutant id="mutant_3773" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence)" from="(input.length())" to="(input.length() &gt;= 0 ? input.length() * -1 : input.length())" />
    <mutant id="mutant_2440" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_3772" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint * -1 : codepoint)" />
    <mutant id="mutant_1110" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2441" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_3771" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.hex(int)" from="codepoint" to="(codepoint &gt;= 0 ? codepoint : codepoint * -1)" />
    <mutant id="mutant_3770" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_19198" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19199" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1119" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_1117" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2448" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_19194" viable="false" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1118" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2449" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3779" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19195" viable="false" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1115" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2446" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3778" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19196" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1116" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_2447" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3777" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="(translators.length)" to="(translators.length &gt;= 0 ? translators.length : translators.length * -1)" />
    <mutant id="mutant_19197" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20180" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_20187" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20188" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20185" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_20186" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_20183" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20184" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20181" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20182" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_1102" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2433" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3765" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="consumed" to="(consumed &gt;= 0 ? consumed * -1 : consumed)" />
    <mutant id="mutant_1103" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="1" to="-1 * 1" />
    <mutant id="mutant_2434" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3764" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="translator.translate(input, index, out)" to="translator.translate(input, index, out) &gt;= 0 ? translator.translate(input, index, out) * -1 : translator.translate(input, index, out)" />
    <mutant id="mutant_1100" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="chars.length" to="chars.length &gt;= 0 ? chars.length * -1 : chars.length" />
    <mutant id="mutant_2431" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3763" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="translator.translate(input, index, out)" to="translator.translate(input, index, out) &gt;= 0 ? translator.translate(input, index, out) : translator.translate(input, index, out) * -1" />
    <mutant id="mutant_1101" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="chars.length" to="chars.length &gt;= 0 ? chars.length : chars.length * -1" />
    <mutant id="mutant_2432" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3762" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_3761" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_2430" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3760" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="getRight().hashCode()" to="getRight().hashCode() &gt;= 0 ? getRight().hashCode() * -1 : getRight().hashCode()" />
    <mutant id="mutant_20189" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1108" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_2439" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_1109" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1106" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_2437" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3769" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="consumed" to="consumed &gt;= 0 ? consumed : consumed * -1" />
    <mutant id="mutant_1107" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2438" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3768" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="consumed" to="consumed &gt;= 0 ? consumed * -1 : consumed" />
    <mutant id="mutant_1104" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_2435" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3767" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1105" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_2436" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double,double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3766" viable="true" in="org.apache.commons.lang3.text.translate.AggregateTranslator.translate(java.lang.CharSequence,int,java.io.Writer)" from="consumed" to="(consumed &gt;= 0 ? consumed : consumed * -1)" />
    <mutant id="mutant_19180" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="(str.indexOf(remove))" to="(str.indexOf(remove) &gt;= 0 ? str.indexOf(remove) : str.indexOf(remove) * -1)" />
    <mutant id="mutant_19181" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="(str.indexOf(remove))" to="(str.indexOf(remove) &gt;= 0 ? str.indexOf(remove) * -1 : str.indexOf(remove))" />
    <mutant id="mutant_19182" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_20176" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_20177" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_20174" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="sizePlus1" to="(sizePlus1 &gt;= 0 ? sizePlus1 : sizePlus1 * -1)" />
    <mutant id="mutant_20175" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_20172" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20173" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="sizePlus1" to="(sizePlus1 &gt;= 0 ? sizePlus1 * -1 : sizePlus1)" />
    <mutant id="mutant_20170" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="(separatorChars.indexOf(str.charAt(i)))" to="(separatorChars.indexOf(str.charAt(i)) &gt;= 0 ? separatorChars.indexOf(str.charAt(i)) : separatorChars.indexOf(str.charAt(i)) * -1)" />
    <mutant id="mutant_20171" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="(separatorChars.indexOf(str.charAt(i)))" to="(separatorChars.indexOf(str.charAt(i)) &gt;= 0 ? separatorChars.indexOf(str.charAt(i)) * -1 : separatorChars.indexOf(str.charAt(i)))" />
    <mutant id="mutant_2422" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3754" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="getLeft().hashCode()" to="getLeft().hashCode() &gt;= 0 ? getLeft().hashCode() * -1 : getLeft().hashCode()" />
    <mutant id="mutant_2423" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3753" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="getLeft().hashCode()" to="getLeft().hashCode() &gt;= 0 ? getLeft().hashCode() : getLeft().hashCode() * -1" />
    <mutant id="mutant_2420" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_3752" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_2421" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3751" viable="true" in="org.apache.commons.lang3.tuple.Triple.compareTo(org.apache.commons.lang3.tuple.Triple)" from="new CompareToBuilder().append(getLeft(), other.getLeft()).append(getMiddle(), other.getMiddle()).append(getRight(), other.getRight()).toComparison()" to="new CompareToBuilder().append(getLeft(), other.getLeft()).append(getMiddle(), other.getMiddle()).append(getRight(), other.getRight()).toComparison() &gt;= 0 ? new CompareToBuilder().append(getLeft(), other.getLeft()).append(getMiddle(), other.getMiddle()).append(getRight(), other.getRight()).toComparison() * -1 : new CompareToBuilder().append(getLeft(), other.getLeft()).append(getMiddle(), other.getMiddle()).append(getRight(), other.getRight()).toComparison()" />
    <mutant id="mutant_3750" viable="true" in="org.apache.commons.lang3.tuple.Triple.compareTo(org.apache.commons.lang3.tuple.Triple)" from="new CompareToBuilder().append(getLeft(), other.getLeft()).append(getMiddle(), other.getMiddle()).append(getRight(), other.getRight()).toComparison()" to="new CompareToBuilder().append(getLeft(), other.getLeft()).append(getMiddle(), other.getMiddle()).append(getRight(), other.getRight()).toComparison() &gt;= 0 ? new CompareToBuilder().append(getLeft(), other.getLeft()).append(getMiddle(), other.getMiddle()).append(getRight(), other.getRight()).toComparison() : new CompareToBuilder().append(getLeft(), other.getLeft()).append(getMiddle(), other.getMiddle()).append(getRight(), other.getRight()).toComparison() * -1" />
    <mutant id="mutant_20178" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_20179" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_19176" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19177" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefixes.length)" to="(prefixes.length &gt;= 0 ? prefixes.length * -1 : prefixes.length)" />
    <mutant id="mutant_2428" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19178" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="(prefixes.length)" to="(prefixes.length &gt;= 0 ? prefixes.length : prefixes.length * -1)" />
    <mutant id="mutant_2429" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3759" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="getRight().hashCode()" to="getRight().hashCode() &gt;= 0 ? getRight().hashCode() : getRight().hashCode() * -1" />
    <mutant id="mutant_19179" viable="true" in="org.apache.commons.lang3.StringUtils.prependIfMissing(java.lang.String,java.lang.CharSequence,boolean,java.lang.CharSequence[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2426" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3758" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_19172" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2427" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3757" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="getMiddle().hashCode()" to="getMiddle().hashCode() &gt;= 0 ? getMiddle().hashCode() * -1 : getMiddle().hashCode()" />
    <mutant id="mutant_19173" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2424" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3756" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="getMiddle().hashCode()" to="getMiddle().hashCode() &gt;= 0 ? getMiddle().hashCode() : getMiddle().hashCode() * -1" />
    <mutant id="mutant_19174" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_2425" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3755" viable="true" in="org.apache.commons.lang3.tuple.Triple.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_19175" viable="true" in="org.apache.commons.lang3.StringUtils.overlay(java.lang.String,java.lang.String,int,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19190" viable="false" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19191" viable="false" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19192" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19193" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20165" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20166" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_20163" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20164" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20161" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20162" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20160" viable="false" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2411" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3743" viable="true" in="org.apache.commons.lang3.tuple.Pair.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_2412" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3742" viable="true" in="org.apache.commons.lang3.tuple.Pair.compareTo(org.apache.commons.lang3.tuple.Pair)" from="new CompareToBuilder().append(getLeft(), other.getLeft()).append(getRight(), other.getRight()).toComparison()" to="new CompareToBuilder().append(getLeft(), other.getLeft()).append(getRight(), other.getRight()).toComparison() &gt;= 0 ? new CompareToBuilder().append(getLeft(), other.getLeft()).append(getRight(), other.getRight()).toComparison() * -1 : new CompareToBuilder().append(getLeft(), other.getLeft()).append(getRight(), other.getRight()).toComparison()" />
    <mutant id="mutant_3741" viable="true" in="org.apache.commons.lang3.tuple.Pair.compareTo(org.apache.commons.lang3.tuple.Pair)" from="new CompareToBuilder().append(getLeft(), other.getLeft()).append(getRight(), other.getRight()).toComparison()" to="new CompareToBuilder().append(getLeft(), other.getLeft()).append(getRight(), other.getRight()).toComparison() &gt;= 0 ? new CompareToBuilder().append(getLeft(), other.getLeft()).append(getRight(), other.getRight()).toComparison() : new CompareToBuilder().append(getLeft(), other.getLeft()).append(getRight(), other.getRight()).toComparison() * -1" />
    <mutant id="mutant_2410" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3740" viable="false" in="?" from="4954918890077093841L" to="-1 * 4954918890077093841L" />
    <mutant id="mutant_20169" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20167" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_20168" viable="true" in="org.apache.commons.lang3.StringUtils.splitWorker(java.lang.String,java.lang.String,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2419" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19187" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19188" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_2417" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3749" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_19189" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_2418" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3748" viable="true" in="org.apache.commons.lang3.tuple.Pair.hashCode()" from="getValue().hashCode()" to="getValue().hashCode() &gt;= 0 ? getValue().hashCode() * -1 : getValue().hashCode()" />
    <mutant id="mutant_2415" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3747" viable="true" in="org.apache.commons.lang3.tuple.Pair.hashCode()" from="getValue().hashCode()" to="getValue().hashCode() &gt;= 0 ? getValue().hashCode() : getValue().hashCode() * -1" />
    <mutant id="mutant_19183" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_2416" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3746" viable="true" in="org.apache.commons.lang3.tuple.Pair.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_19184" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_2413" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3745" viable="true" in="org.apache.commons.lang3.tuple.Pair.hashCode()" from="getKey().hashCode()" to="getKey().hashCode() &gt;= 0 ? getKey().hashCode() * -1 : getKey().hashCode()" />
    <mutant id="mutant_19185" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_2414" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(char[],char[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3744" viable="true" in="org.apache.commons.lang3.tuple.Pair.hashCode()" from="getKey().hashCode()" to="getKey().hashCode() &gt;= 0 ? getKey().hashCode() : getKey().hashCode() * -1" />
    <mutant id="mutant_19186" viable="true" in="org.apache.commons.lang3.StringUtils.remove(java.lang.String,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1160" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_2491" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1161" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_2492" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float[],float[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_2490" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="Float.compare(lhs, rhs)" to="Float.compare(lhs, rhs) &gt;= 0 ? Float.compare(lhs, rhs) : Float.compare(lhs, rhs) * -1" />
    <mutant id="mutant_1157" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2488" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="rhs" to="(rhs &gt;= 0 ? rhs * -1 : rhs)" />
    <mutant id="mutant_1158" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2489" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="Float.compare(lhs, rhs)" to="Float.compare(lhs, rhs) &gt;= 0 ? Float.compare(lhs, rhs) * -1 : Float.compare(lhs, rhs)" />
    <mutant id="mutant_1155" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2486" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="lhs" to="(lhs &gt;= 0 ? lhs : lhs * -1)" />
    <mutant id="mutant_1156" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2487" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="rhs" to="(rhs &gt;= 0 ? rhs : rhs * -1)" />
    <mutant id="mutant_1153" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2484" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1154" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2485" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="lhs" to="(lhs &gt;= 0 ? lhs * -1 : lhs)" />
    <mutant id="mutant_1151" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_2482" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1152" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_2483" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1159" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_2480" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1150" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2481" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(float,float)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1146" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2477" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1147" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_2478" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1144" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_2475" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1145" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2476" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1142" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2473" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1143" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_2474" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1140" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2471" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_1141" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2472" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1148" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2479" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1149" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2470" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1135" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2466" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="0" to="-1 * 0" />
    <mutant id="mutant_3798" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1136" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2467" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3797" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1133" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2464" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3796" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="consumed" to="(consumed &gt;= 0 ? consumed : consumed * -1)" />
    <mutant id="mutant_1134" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2465" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3795" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="consumed" to="(consumed &gt;= 0 ? consumed * -1 : consumed)" />
    <mutant id="mutant_1131" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2462" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3794" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="translate(input, pos, out)" to="translate(input, pos, out) &gt;= 0 ? translate(input, pos, out) : translate(input, pos, out) * -1" />
    <mutant id="mutant_1132" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2463" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3793" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="translate(input, pos, out)" to="translate(input, pos, out) &gt;= 0 ? translate(input, pos, out) * -1 : translate(input, pos, out)" />
    <mutant id="mutant_2460" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3792" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_1130" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2461" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3791" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1139" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1137" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2468" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1138" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2469" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3799" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3790" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_1124" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz * -1 : sz)" />
    <mutant id="mutant_2455" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3787" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_1125" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2456" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3786" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="input.length()" to="input.length() &gt;= 0 ? input.length() : input.length() * -1" />
    <mutant id="mutant_1122" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2453" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3785" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="input.length()" to="input.length() &gt;= 0 ? input.length() * -1 : input.length()" />
    <mutant id="mutant_1123" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="sz" to="(sz &gt;= 0 ? sz : sz * -1)" />
    <mutant id="mutant_2454" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3784" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="0" to="-1 * 0" />
    <mutant id="mutant_1120" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_2451" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3783" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="translators.length" to="(translators.length &gt;= 0 ? translators.length : translators.length * -1)" />
    <mutant id="mutant_1121" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2452" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3782" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="translators.length" to="(translators.length &gt;= 0 ? translators.length * -1 : translators.length)" />
    <mutant id="mutant_3781" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2450" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3780" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.with(org.apache.commons.lang3.text.translate.CharSequenceTranslator[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1128" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length : chars.length * -1)" />
    <mutant id="mutant_2459" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1129" viable="false" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1126" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2457" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3789" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_1127" viable="true" in="org.apache.commons.lang3.math.NumberUtils.isNumber(java.lang.String)" from="(chars.length)" to="(chars.length &gt;= 0 ? chars.length * -1 : chars.length)" />
    <mutant id="mutant_2458" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(double[],double[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3788" viable="true" in="org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence,java.io.Writer)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_2293" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])" from="compareToBuilder.toComparison()" to="compareToBuilder.toComparison() &gt;= 0 ? compareToBuilder.toComparison() * -1 : compareToBuilder.toComparison()" />
    <mutant id="mutant_2294" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[])" from="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields)" to="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields) &gt;= 0 ? org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields) * -1 : org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields)" />
    <mutant id="mutant_2291" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2292" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])" from="compareToBuilder.toComparison()" to="compareToBuilder.toComparison() &gt;= 0 ? compareToBuilder.toComparison() : compareToBuilder.toComparison() * -1" />
    <mutant id="mutant_2290" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,boolean)" from="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null)" to="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null) &gt;= 0 ? org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null) * -1 : org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null)" />
    <mutant id="mutant_2288" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object)" from="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null)" to="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null) &gt;= 0 ? org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null) * -1 : org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null)" />
    <mutant id="mutant_2289" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,boolean)" from="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null)" to="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null) &gt;= 0 ? org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null) : org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, compareTransients, null) * -1" />
    <mutant id="mutant_2286" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder()" from="0" to="-1 * 0" />
    <mutant id="mutant_2287" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object)" from="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null)" to="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null) &gt;= 0 ? org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null) : org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null) * -1" />
    <mutant id="mutant_2284" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder()" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_2285" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder()" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_2282" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.setLimit(int)" from="limit" to="limit &gt;= 0 ? limit : limit * -1" />
    <mutant id="mutant_2283" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.setLimit(int)" from="limit" to="limit &gt;= 0 ? limit * -1 : limit" />
    <mutant id="mutant_2280" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.setLimit(int)" from="this.limit" to="this.limit &gt;= 0 ? this.limit * -1 : this.limit" />
    <mutant id="mutant_2281" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.setLimit(int)" from="this.limit" to="this.limit &gt;= 0 ? this.limit : this.limit * -1" />
    <mutant id="mutant_2279" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="0" to="-1 * 0" />
    <mutant id="mutant_2277" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="acquireCount" to="acquireCount &gt;= 0 ? acquireCount : acquireCount * -1" />
    <mutant id="mutant_2278" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="acquireCount" to="acquireCount &gt;= 0 ? acquireCount * -1 : acquireCount" />
    <mutant id="mutant_2275" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="(periodCount)" to="(periodCount &gt;= 0 ? periodCount * -1 : periodCount)" />
    <mutant id="mutant_2276" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="(periodCount)" to="(periodCount &gt;= 0 ? periodCount : periodCount * -1)" />
    <mutant id="mutant_2273" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="acquireCount" to="acquireCount &gt;= 0 ? acquireCount : acquireCount * -1" />
    <mutant id="mutant_2274" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="acquireCount" to="acquireCount &gt;= 0 ? acquireCount * -1 : acquireCount" />
    <mutant id="mutant_2271" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="totalAcquireCount" to="totalAcquireCount &gt;= 0 ? totalAcquireCount : totalAcquireCount * -1" />
    <mutant id="mutant_2272" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="totalAcquireCount" to="totalAcquireCount &gt;= 0 ? totalAcquireCount * -1 : totalAcquireCount" />
    <mutant id="mutant_2270" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="acquireCount" to="acquireCount &gt;= 0 ? acquireCount * -1 : acquireCount" />
    <mutant id="mutant_2268" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="lastCallsPerPeriod" to="lastCallsPerPeriod &gt;= 0 ? lastCallsPerPeriod * -1 : lastCallsPerPeriod" />
    <mutant id="mutant_2269" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="acquireCount" to="acquireCount &gt;= 0 ? acquireCount : acquireCount * -1" />
    <mutant id="mutant_3599" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="(contextValues.size())" to="(contextValues.size() &gt;= 0 ? contextValues.size() * -1 : contextValues.size())" />
    <mutant id="mutant_2266" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(acquireCount)" to="(acquireCount &gt;= 0 ? acquireCount * -1 : acquireCount)" />
    <mutant id="mutant_3598" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="(contextValues.size())" to="(contextValues.size() &gt;= 0 ? contextValues.size() : contextValues.size() * -1)" />
    <mutant id="mutant_2267" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.endOfPeriod()" from="lastCallsPerPeriod" to="lastCallsPerPeriod &gt;= 0 ? lastCallsPerPeriod : lastCallsPerPeriod * -1" />
    <mutant id="mutant_3597" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="256" to="(-1 * 256)" />
    <mutant id="mutant_2264" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(getLimit())" to="(getLimit() &gt;= 0 ? getLimit() * -1 : getLimit())" />
    <mutant id="mutant_3596" viable="false" in="?" from="20110706L" to="-1 * 20110706L" />
    <mutant id="mutant_2265" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(acquireCount)" to="(acquireCount &gt;= 0 ? acquireCount : acquireCount * -1)" />
    <mutant id="mutant_3595" viable="false" in="?" from="20110706L" to="-1 * 20110706L" />
    <mutant id="mutant_2262" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(acquireCount)" to="(acquireCount &gt;= 0 ? acquireCount * -1 : acquireCount)" />
    <mutant id="mutant_3594" viable="false" in="?" from="20110706L" to="-1 * 20110706L" />
    <mutant id="mutant_2263" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(getLimit())" to="(getLimit() &gt;= 0 ? getLimit() : getLimit() * -1)" />
    <mutant id="mutant_3593" viable="false" in="?" from="20091223L" to="-1 * 20091223L" />
    <mutant id="mutant_2260" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(TimedSemaphore.NO_LIMIT)" to="(TimedSemaphore.NO_LIMIT &gt;= 0 ? TimedSemaphore.NO_LIMIT : TimedSemaphore.NO_LIMIT * -1)" />
    <mutant id="mutant_3592" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen * -1 : sepLen)" />
    <mutant id="mutant_2261" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(acquireCount)" to="(acquireCount &gt;= 0 ? acquireCount : acquireCount * -1)" />
    <mutant id="mutant_3591" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen : sepLen * -1)" />
    <mutant id="mutant_3590" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_2257" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(getLimit())" to="(getLimit() &gt;= 0 ? getLimit() : getLimit() * -1)" />
    <mutant id="mutant_3589" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_2258" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(getLimit())" to="(getLimit() &gt;= 0 ? getLimit() * -1 : getLimit())" />
    <mutant id="mutant_3588" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2255" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getPeriod()" from="period" to="period &gt;= 0 ? period : period * -1" />
    <mutant id="mutant_3587" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2256" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getPeriod()" from="period" to="period &gt;= 0 ? period * -1 : period" />
    <mutant id="mutant_3586" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2253" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer()" from="getPeriod()" to="(getPeriod() &gt;= 0 ? getPeriod() * -1 : getPeriod())" />
    <mutant id="mutant_3585" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen * -1 : sepLen)" />
    <mutant id="mutant_2254" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer()" from="getPeriod()" to="(getPeriod() &gt;= 0 ? getPeriod() : getPeriod() * -1)" />
    <mutant id="mutant_3584" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen : sepLen * -1)" />
    <mutant id="mutant_2251" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer()" from="getPeriod()" to="(getPeriod() &gt;= 0 ? getPeriod() * -1 : getPeriod())" />
    <mutant id="mutant_3583" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2252" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.startTimer()" from="getPeriod()" to="(getPeriod() &gt;= 0 ? getPeriod() : getPeriod() * -1)" />
    <mutant id="mutant_3582" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2259" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.acquire()" from="(TimedSemaphore.NO_LIMIT)" to="(TimedSemaphore.NO_LIMIT &gt;= 0 ? TimedSemaphore.NO_LIMIT * -1 : TimedSemaphore.NO_LIMIT)" />
    <mutant id="mutant_10902" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10903" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10904" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_10905" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="0" to="-1 * 0" />
    <mutant id="mutant_10906" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10907" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10908" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10909" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10900" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10901" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10913" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10914" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10915" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10916" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_10917" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_10918" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10919" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="element" to="element &gt;= 0 ? element : element * -1" />
    <mutant id="mutant_10910" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10911" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10912" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[],char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2299" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.toComparison()" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_2297" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,java.util.Collection)" from="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields))" to="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) &gt;= 0 ? org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) * -1 : org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields))" />
    <mutant id="mutant_2298" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.toComparison()" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_2295" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[])" from="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields)" to="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields) &gt;= 0 ? org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields) : org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, false, null, excludeFields) * -1" />
    <mutant id="mutant_2296" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(java.lang.Object,java.lang.Object,java.util.Collection)" from="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields))" to="org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) &gt;= 0 ? org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) : org.apache.commons.lang3.builder.CompareToBuilder.reflectionCompare(lhs, rhs, org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(excludeFields)) * -1" />
    <mutant id="mutant_10946" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10947" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10948" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10949" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10940" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(double[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10941" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(double[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10942" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_10943" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_10944" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_10945" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_10957" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="1" to="-1 * 1" />
    <mutant id="mutant_10958" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10959" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10950" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10951" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10952" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10953" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10954" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10955" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10956" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10924" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],int,double)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_10925" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],int,double)" from="Double.valueOf(element)" to="(Double.valueOf(element) &gt;= 0 ? Double.valueOf(element) * -1 : Double.valueOf(element))" />
    <mutant id="mutant_10926" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],int,double)" from="Double.valueOf(element)" to="(Double.valueOf(element) &gt;= 0 ? Double.valueOf(element) : Double.valueOf(element) * -1)" />
    <mutant id="mutant_10927" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10928" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10929" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_10920" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],double)" from="element" to="element &gt;= 0 ? element * -1 : element" />
    <mutant id="mutant_10921" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],int,double)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10922" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],int,double)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10923" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(double[],int,double)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_10935" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10936" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10937" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10938" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_10939" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_10930" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_10931" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10932" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10933" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_10934" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(double[],double[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_10982" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10983" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10984" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10985" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10986" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="values.length" to="(values.length &gt;= 0 ? values.length * -1 : values.length)" />
    <mutant id="mutant_10987" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="values.length" to="(values.length &gt;= 0 ? values.length : values.length * -1)" />
    <mutant id="mutant_10988" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_10989" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_19316" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="increase &gt;= 0 ? increase * -1 : increase" />
    <mutant id="mutant_20316" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_19317" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="(increase &gt;= 0 ? increase : increase * -1)" />
    <mutant id="mutant_20317" viable="false" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19318" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="(increase &gt;= 0 ? increase * -1 : increase)" />
    <mutant id="mutant_20314" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19319" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20315" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_19312" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length())" to="(replacement.length() &gt;= 0 ? replacement.length() * -1 : replacement.length())" />
    <mutant id="mutant_20312" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19313" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="replLength" to="(replLength &gt;= 0 ? replLength : replLength * -1)" />
    <mutant id="mutant_20313" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10980" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19314" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="replLength" to="(replLength &gt;= 0 ? replLength * -1 : replLength)" />
    <mutant id="mutant_20310" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="(collection.size())" to="(collection.size() &gt;= 0 ? collection.size() : collection.size() * -1)" />
    <mutant id="mutant_10981" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_19315" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="increase &gt;= 0 ? increase : increase * -1" />
    <mutant id="mutant_20311" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="(collection.size())" to="(collection.size() &gt;= 0 ? collection.size() * -1 : collection.size())" />
    <mutant id="mutant_19310" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="searchString.length()" to="searchString.length() &gt;= 0 ? searchString.length() * -1 : searchString.length()" />
    <mutant id="mutant_19311" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(replacement.length())" to="(replacement.length() &gt;= 0 ? replacement.length() : replacement.length() * -1)" />
    <mutant id="mutant_20318" viable="false" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20319" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T[],java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10993" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="boxed" to="(boxed &gt;= 0 ? boxed : boxed * -1)" />
    <mutant id="mutant_10994" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="boxed" to="(boxed &gt;= 0 ? boxed * -1 : boxed)" />
    <mutant id="mutant_10995" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="boxed" to="(boxed &gt;= 0 ? boxed : boxed * -1)" />
    <mutant id="mutant_10996" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10997" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="e.getKey()" to="e.getKey() &gt;= 0 ? e.getKey() * -1 : e.getKey()" />
    <mutant id="mutant_10998" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="e.getKey()" to="e.getKey() &gt;= 0 ? e.getKey() : e.getKey() * -1" />
    <mutant id="mutant_10999" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19327" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20305" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_19328" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="16" to="-1 * 16" />
    <mutant id="mutant_20306" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_19329" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_20303" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="Integer.valueOf(index)" to="(Integer.valueOf(index) &gt;= 0 ? Integer.valueOf(index) : Integer.valueOf(index) * -1)" />
    <mutant id="mutant_20304" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="Integer.valueOf(index)" to="(Integer.valueOf(index) &gt;= 0 ? Integer.valueOf(index) * -1 : Integer.valueOf(index))" />
    <mutant id="mutant_19323" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="increase &gt;= 0 ? increase : increase * -1" />
    <mutant id="mutant_20301" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10990" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="Double.valueOf(v)" to="Double.valueOf(v) &gt;= 0 ? Double.valueOf(v) * -1 : Double.valueOf(v)" />
    <mutant id="mutant_19324" viable="false" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="increase &gt;= 0 ? increase * -1 : increase" />
    <mutant id="mutant_20302" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10991" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="Double.valueOf(v)" to="Double.valueOf(v) &gt;= 0 ? Double.valueOf(v) : Double.valueOf(v) * -1" />
    <mutant id="mutant_19325" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_10992" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(double[],double[])" from="boxed" to="(boxed &gt;= 0 ? boxed * -1 : boxed)" />
    <mutant id="mutant_19326" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_20300" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_19320" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_19321" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="increase &gt;= 0 ? increase : increase * -1" />
    <mutant id="mutant_19322" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="increase" to="increase &gt;= 0 ? increase * -1 : increase" />
    <mutant id="mutant_20309" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_20307" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20308" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10968" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10969" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_10960" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_10961" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_10962" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_10963" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_10964" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10965" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10966" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_10967" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_10979" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_10971" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_10972" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10973" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10974" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_10975" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_19309" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="searchString.length()" to="searchString.length() &gt;= 0 ? searchString.length() : searchString.length() * -1" />
    <mutant id="mutant_10976" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_10977" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_10978" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(double[],double)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_19305" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19306" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_19307" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND * -1 : StringUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_19308" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="(StringUtils.INDEX_NOT_FOUND)" to="(StringUtils.INDEX_NOT_FOUND &gt;= 0 ? StringUtils.INDEX_NOT_FOUND : StringUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_19301" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19302" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19303" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="text.indexOf(searchString, start)" to="text.indexOf(searchString, start) &gt;= 0 ? text.indexOf(searchString, start) * -1 : text.indexOf(searchString, start)" />
    <mutant id="mutant_10970" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(double[],double)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_19304" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="text.indexOf(searchString, start)" to="text.indexOf(searchString, start) &gt;= 0 ? text.indexOf(searchString, start) : text.indexOf(searchString, start) * -1" />
    <mutant id="mutant_19300" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_4909" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher)" from="indexOf(matcher, 0)" to="indexOf(matcher, 0) &gt;= 0 ? indexOf(matcher, 0) : indexOf(matcher, 0) * -1" />
    <mutant id="mutant_4908" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4907" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20231" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_20232" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_20230" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="closeLen" to="(closeLen &gt;= 0 ? closeLen : closeLen * -1)" />
    <mutant id="mutant_19239" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength" to="(inputLength &gt;= 0 ? inputLength : inputLength * -1)" />
    <mutant id="mutant_20239" viable="false" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="start &gt;= 0 ? start * -1 : start" />
    <mutant id="mutant_20237" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20238" viable="false" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="start &gt;= 0 ? start : start * -1" />
    <mutant id="mutant_19235" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_20235" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19236" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_20236" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_19237" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_20233" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.indexOf(open, pos)" to="str.indexOf(open, pos) &gt;= 0 ? str.indexOf(open, pos) * -1 : str.indexOf(open, pos)" />
    <mutant id="mutant_19238" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20234" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.indexOf(open, pos)" to="str.indexOf(open, pos) &gt;= 0 ? str.indexOf(open, pos) : str.indexOf(open, pos) * -1" />
    <mutant id="mutant_4906" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_19231" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_4905" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_19232" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_4904" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_19233" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4903" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_19234" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_4902" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4901" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4900" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_19230" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20220" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="close.length()" to="close.length() &gt;= 0 ? close.length() : close.length() * -1" />
    <mutant id="mutant_20221" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="close.length()" to="close.length() &gt;= 0 ? close.length() * -1 : close.length()" />
    <mutant id="mutant_20228" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_20229" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="closeLen" to="(closeLen &gt;= 0 ? closeLen * -1 : closeLen)" />
    <mutant id="mutant_20226" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_20227" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_19246" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_20224" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_19247" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT * -1 : StringUtils.PAD_LIMIT)" />
    <mutant id="mutant_20225" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_19248" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="(StringUtils.PAD_LIMIT)" to="(StringUtils.PAD_LIMIT &gt;= 0 ? StringUtils.PAD_LIMIT : StringUtils.PAD_LIMIT * -1)" />
    <mutant id="mutant_20222" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="open.length()" to="open.length() &gt;= 0 ? open.length() : open.length() * -1" />
    <mutant id="mutant_19249" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20223" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="open.length()" to="open.length() &gt;= 0 ? open.length() * -1 : open.length()" />
    <mutant id="mutant_19242" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength" to="(inputLength &gt;= 0 ? inputLength : inputLength * -1)" />
    <mutant id="mutant_19243" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength" to="(inputLength &gt;= 0 ? inputLength * -1 : inputLength)" />
    <mutant id="mutant_19244" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19245" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_19240" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength" to="(inputLength &gt;= 0 ? inputLength * -1 : inputLength)" />
    <mutant id="mutant_19241" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10883" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_10884" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_20210" viable="false" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10885" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10886" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10887" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10888" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_10889" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="0" to="-1 * 0" />
    <mutant id="mutant_19217" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_20217" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_19218" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20218" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_19219" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat" to="repeat &gt;= 0 ? repeat * -1 : repeat" />
    <mutant id="mutant_20215" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_20216" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_19213" viable="true" in="org.apache.commons.lang3.StringUtils.removeStart(java.lang.String,java.lang.String)" from="remove.length()" to="(remove.length() &gt;= 0 ? remove.length() * -1 : remove.length())" />
    <mutant id="mutant_20213" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10880" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_19214" viable="true" in="org.apache.commons.lang3.StringUtils.removeStartIgnoreCase(java.lang.String,java.lang.String)" from="remove.length()" to="(remove.length() &gt;= 0 ? remove.length() : remove.length() * -1)" />
    <mutant id="mutant_20214" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10881" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19215" viable="true" in="org.apache.commons.lang3.StringUtils.removeStartIgnoreCase(java.lang.String,java.lang.String)" from="remove.length()" to="(remove.length() &gt;= 0 ? remove.length() * -1 : remove.length())" />
    <mutant id="mutant_20211" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10882" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(char[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_19216" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_20212" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19210" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="(remove.length())" to="(remove.length() &gt;= 0 ? remove.length() : remove.length() * -1)" />
    <mutant id="mutant_19211" viable="true" in="org.apache.commons.lang3.StringUtils.removeEndIgnoreCase(java.lang.String,java.lang.String)" from="(remove.length())" to="(remove.length() &gt;= 0 ? remove.length() * -1 : remove.length())" />
    <mutant id="mutant_19212" viable="true" in="org.apache.commons.lang3.StringUtils.removeStart(java.lang.String,java.lang.String)" from="remove.length()" to="(remove.length() &gt;= 0 ? remove.length() : remove.length() * -1)" />
    <mutant id="mutant_20219" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10894" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10895" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10896" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10897" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10898" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10899" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19228" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20206" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19229" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20207" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="strsLen" to="(strsLen &gt;= 0 ? strsLen : strsLen * -1)" />
    <mutant id="mutant_20204" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_20205" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10890" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19224" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20202" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="strsLen" to="strsLen &gt;= 0 ? strsLen : strsLen * -1" />
    <mutant id="mutant_10891" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19225" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20203" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="strsLen" to="strsLen &gt;= 0 ? strsLen * -1 : strsLen" />
    <mutant id="mutant_10892" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_19226" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20200" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="strs.length" to="strs.length &gt;= 0 ? strs.length : strs.length * -1" />
    <mutant id="mutant_10893" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Character[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_19227" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20201" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19220" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat" to="repeat &gt;= 0 ? repeat : repeat * -1" />
    <mutant id="mutant_19221" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_19222" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_19223" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(char,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20208" viable="true" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="strsLen" to="(strsLen &gt;= 0 ? strsLen * -1 : strsLen)" />
    <mutant id="mutant_20209" viable="false" in="org.apache.commons.lang3.StringUtils.stripAll(java.lang.String[],java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19280" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19281" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20275" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20276" viable="true" in="org.apache.commons.lang3.Validate.notEmpty(T,java.lang.String,java.lang.Object[])" from="(chars.length())" to="(chars.length() &gt;= 0 ? chars.length() * -1 : chars.length())" />
    <mutant id="mutant_20273" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20274" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20271" viable="false" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20272" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20270" viable="false" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3611" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="(fromIndex &gt;= 0 ? fromIndex : fromIndex * -1)" />
    <mutant id="mutant_4942" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3610" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="(fromIndex &gt;= 0 ? fromIndex * -1 : fromIndex)" />
    <mutant id="mutant_4941" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(matcher.isMatch(buf, i, startIndex, len))" to="(matcher.isMatch(buf, i, startIndex, len) &gt;= 0 ? matcher.isMatch(buf, i, startIndex, len) * -1 : matcher.isMatch(buf, i, startIndex, len))" />
    <mutant id="mutant_4940" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(matcher.isMatch(buf, i, startIndex, len))" to="(matcher.isMatch(buf, i, startIndex, len) &gt;= 0 ? matcher.isMatch(buf, i, startIndex, len) : matcher.isMatch(buf, i, startIndex, len) * -1)" />
    <mutant id="mutant_19279" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20279" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_20277" viable="true" in="org.apache.commons.lang3.Validate.notEmpty(T,java.lang.String,java.lang.Object[])" from="(chars.length())" to="(chars.length() &gt;= 0 ? chars.length() : chars.length() * -1)" />
    <mutant id="mutant_20278" viable="true" in="org.apache.commons.lang3.Validate.notEmpty(T,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3619" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="(throwables.length)" to="(throwables.length &gt;= 0 ? throwables.length : throwables.length * -1)" />
    <mutant id="mutant_19275" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3618" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="(throwables.length)" to="(throwables.length &gt;= 0 ? throwables.length * -1 : throwables.length)" />
    <mutant id="mutant_4949" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="lastIndexOf(ch, ((size) - 1))" to="lastIndexOf(ch, ((size) - 1)) &gt;= 0 ? lastIndexOf(ch, ((size) - 1)) * -1 : lastIndexOf(ch, ((size) - 1))" />
    <mutant id="mutant_19276" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3617" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="(fromIndex &gt;= 0 ? fromIndex : fromIndex * -1)" />
    <mutant id="mutant_4948" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19277" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3616" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="(fromIndex &gt;= 0 ? fromIndex * -1 : fromIndex)" />
    <mutant id="mutant_4947" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_19278" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3615" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="0" to="-1 * 0" />
    <mutant id="mutant_4946" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19271" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3614" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="fromIndex &gt;= 0 ? fromIndex : fromIndex * -1" />
    <mutant id="mutant_4945" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19272" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3613" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="fromIndex &gt;= 0 ? fromIndex * -1 : fromIndex" />
    <mutant id="mutant_4944" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_19273" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3612" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4943" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_19274" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19290" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19291" viable="false" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19292" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_3609" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20264" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="versionPrefixParts.length" to="(versionPrefixParts.length &gt;= 0 ? versionPrefixParts.length * -1 : versionPrefixParts.length)" />
    <mutant id="mutant_20265" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="versionPrefixParts.length" to="(versionPrefixParts.length &gt;= 0 ? versionPrefixParts.length : versionPrefixParts.length * -1)" />
    <mutant id="mutant_20262" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20263" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20260" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="list.size()" to="list.size() &gt;= 0 ? list.size() * -1 : list.size()" />
    <mutant id="mutant_20261" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_3600" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4931" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_4930" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_20268" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="(Math.min(versionPrefixParts.length, versionParts.length))" to="(Math.min(versionPrefixParts.length, versionParts.length) &gt;= 0 ? Math.min(versionPrefixParts.length, versionParts.length) * -1 : Math.min(versionPrefixParts.length, versionParts.length))" />
    <mutant id="mutant_20269" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="(Math.min(versionPrefixParts.length, versionParts.length))" to="(Math.min(versionPrefixParts.length, versionParts.length) &gt;= 0 ? Math.min(versionPrefixParts.length, versionParts.length) : Math.min(versionPrefixParts.length, versionParts.length) * -1)" />
    <mutant id="mutant_20266" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="versionParts.length" to="(versionParts.length &gt;= 0 ? versionParts.length * -1 : versionParts.length)" />
    <mutant id="mutant_20267" viable="true" in="org.apache.commons.lang3.SystemUtils.isOSVersionMatch(java.lang.String,java.lang.String)" from="versionParts.length" to="(versionParts.length &gt;= 0 ? versionParts.length : versionParts.length * -1)" />
    <mutant id="mutant_3608" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getThrowableCount(java.lang.Throwable)" from="org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size()" to="org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size() &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size() * -1 : org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size()" />
    <mutant id="mutant_4939" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_19286" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3607" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getThrowableCount(java.lang.Throwable)" from="org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size()" to="org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size() &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size() : org.apache.commons.lang3.exception.ExceptionUtils.getThrowableList(throwable).size() * -1" />
    <mutant id="mutant_4938" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_19287" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3606" viable="false" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4937" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_19288" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_3605" viable="false" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4936" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_19289" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_3604" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_4935" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19282" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3603" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4934" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19283" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="outputLength" to="(outputLength &gt;= 0 ? outputLength * -1 : outputLength)" />
    <mutant id="mutant_3602" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="(buffer.length())" to="(buffer.length() &gt;= 0 ? buffer.length() : buffer.length() * -1)" />
    <mutant id="mutant_4933" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_19284" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="outputLength" to="(outputLength &gt;= 0 ? outputLength : outputLength * -1)" />
    <mutant id="mutant_3601" viable="true" in="org.apache.commons.lang3.exception.DefaultExceptionContext.getFormattedExceptionMessage(java.lang.String)" from="(buffer.length())" to="(buffer.length() &gt;= 0 ? buffer.length() * -1 : buffer.length())" />
    <mutant id="mutant_4932" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19285" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_4929" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20253" viable="false" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_20254" viable="false" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_20251" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20252" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20250" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_4920" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_20259" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="list.size()" to="list.size() &gt;= 0 ? list.size() : list.size() * -1" />
    <mutant id="mutant_19257" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength" to="inputLength &gt;= 0 ? inputLength * -1 : inputLength" />
    <mutant id="mutant_20257" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="closeLen" to="(closeLen &gt;= 0 ? closeLen * -1 : closeLen)" />
    <mutant id="mutant_19258" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_20258" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="closeLen" to="(closeLen &gt;= 0 ? closeLen : closeLen * -1)" />
    <mutant id="mutant_19259" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20255" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_20256" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_4928" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19253" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength" to="(inputLength &gt;= 0 ? inputLength * -1 : inputLength)" />
    <mutant id="mutant_4927" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_19254" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_4926" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_19255" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_4925" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_19256" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength" to="inputLength &gt;= 0 ? inputLength : inputLength * -1" />
    <mutant id="mutant_4924" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_4923" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19250" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_4922" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_19251" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_4921" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_19252" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="inputLength" to="(inputLength &gt;= 0 ? inputLength : inputLength * -1)" />
    <mutant id="mutant_19270" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_4919" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4918" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_20242" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_20243" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_20240" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="openLen" to="openLen &gt;= 0 ? openLen : openLen * -1" />
    <mutant id="mutant_20241" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="openLen" to="openLen &gt;= 0 ? openLen * -1 : openLen" />
    <mutant id="mutant_20248" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20249" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_19268" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_20246" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end : end * -1)" />
    <mutant id="mutant_19269" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_20247" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="end" to="(end &gt;= 0 ? end * -1 : end)" />
    <mutant id="mutant_20244" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.indexOf(close, start)" to="str.indexOf(close, start) &gt;= 0 ? str.indexOf(close, start) : str.indexOf(close, start) * -1" />
    <mutant id="mutant_20245" viable="true" in="org.apache.commons.lang3.StringUtils.substringsBetween(java.lang.String,java.lang.String,java.lang.String)" from="str.indexOf(close, start)" to="str.indexOf(close, start) &gt;= 0 ? str.indexOf(close, start) * -1 : str.indexOf(close, start)" />
    <mutant id="mutant_4917" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_19264" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4916" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_19265" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="outputLength" to="outputLength &gt;= 0 ? outputLength * -1 : outputLength" />
    <mutant id="mutant_4915" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_19266" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="outputLength" to="outputLength &gt;= 0 ? outputLength : outputLength * -1" />
    <mutant id="mutant_4914" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_19267" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_4913" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_19260" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_4912" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_19261" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_4911" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_19262" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="2" to="-1 * 2" />
    <mutant id="mutant_4910" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(org.apache.commons.lang3.text.StrMatcher)" from="indexOf(matcher, 0)" to="indexOf(matcher, 0) &gt;= 0 ? indexOf(matcher, 0) * -1 : indexOf(matcher, 0)" />
    <mutant id="mutant_19263" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2323" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3655" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(java.lang.Throwable,java.lang.Class)" from="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true)" to="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true) &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true) * -1 : org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true)" />
    <mutant id="mutant_4986" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_2324" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3654" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(java.lang.Throwable,java.lang.Class)" from="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true)" to="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true) &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true) : org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, 0, true) * -1" />
    <mutant id="mutant_4985" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_2321" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3653" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(java.lang.Throwable,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4984" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_2322" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3652" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(java.lang.Throwable,java.lang.Class,int)" from="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false)" to="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false) &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false) * -1 : org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false)" />
    <mutant id="mutant_4983" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_3651" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(java.lang.Throwable,java.lang.Class,int)" from="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false)" to="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false) &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false) : org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, fromIndex, false) * -1" />
    <mutant id="mutant_4982" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="lastIndexOf(str, ((size) - 1))" to="lastIndexOf(str, ((size) - 1)) &gt;= 0 ? lastIndexOf(str, ((size) - 1)) : lastIndexOf(str, ((size) - 1)) * -1" />
    <mutant id="mutant_2320" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3650" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(java.lang.Throwable,java.lang.Class,int)" from="fromIndex" to="(fromIndex &gt;= 0 ? fromIndex : fromIndex * -1)" />
    <mutant id="mutant_4981" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="lastIndexOf(str, ((size) - 1))" to="lastIndexOf(str, ((size) - 1)) &gt;= 0 ? lastIndexOf(str, ((size) - 1)) * -1 : lastIndexOf(str, ((size) - 1))" />
    <mutant id="mutant_4980" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2329" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_2327" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3659" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(java.lang.Throwable,java.lang.Class,int)" from="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true)" to="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true) &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true) * -1 : org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true)" />
    <mutant id="mutant_2328" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3658" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(java.lang.Throwable,java.lang.Class,int)" from="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true)" to="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true) &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true) : org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, type, fromIndex, true) * -1" />
    <mutant id="mutant_4989" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2325" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3657" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(java.lang.Throwable,java.lang.Class,int)" from="fromIndex" to="(fromIndex &gt;= 0 ? fromIndex : fromIndex * -1)" />
    <mutant id="mutant_4988" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_2326" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3656" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfType(java.lang.Throwable,java.lang.Class,int)" from="fromIndex" to="(fromIndex &gt;= 0 ? fromIndex * -1 : fromIndex)" />
    <mutant id="mutant_4987" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2312" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3644" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_4975" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_2313" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3643" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_4974" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2310" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3642" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4973" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2311" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3641" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4972" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3640" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4971" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4970" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2318" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2319" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3649" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(java.lang.Throwable,java.lang.Class,int)" from="fromIndex" to="(fromIndex &gt;= 0 ? fromIndex * -1 : fromIndex)" />
    <mutant id="mutant_2316" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3648" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(java.lang.Throwable,java.lang.Class)" from="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false)" to="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false) &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false) : org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false) * -1" />
    <mutant id="mutant_4979" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_2317" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3647" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(java.lang.Throwable,java.lang.Class)" from="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false)" to="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false) &gt;= 0 ? org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false) * -1 : org.apache.commons.lang3.exception.ExceptionUtils.indexOf(throwable, clazz, 0, false)" />
    <mutant id="mutant_4978" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2314" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3646" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOfThrowable(java.lang.Throwable,java.lang.Class)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4977" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2315" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3645" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4976" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_20290" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="(chars.length())" to="(chars.length() &gt;= 0 ? chars.length() * -1 : chars.length())" />
    <mutant id="mutant_20297" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T,java.lang.String,java.lang.Object[])" from="Integer.valueOf(i)" to="(Integer.valueOf(i) &gt;= 0 ? Integer.valueOf(i) * -1 : Integer.valueOf(i))" />
    <mutant id="mutant_20298" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T,java.lang.String,java.lang.Object[])" from="Integer.valueOf(i)" to="(Integer.valueOf(i) &gt;= 0 ? Integer.valueOf(i) : Integer.valueOf(i) * -1)" />
    <mutant id="mutant_20295" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20296" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20293" viable="false" in="org.apache.commons.lang3.Validate.noNullElements(T,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_20294" viable="false" in="org.apache.commons.lang3.Validate.noNullElements(T,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_20291" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="(chars.length())" to="(chars.length() &gt;= 0 ? chars.length() : chars.length() * -1)" />
    <mutant id="mutant_20292" viable="true" in="org.apache.commons.lang3.Validate.noNullElements(T,java.lang.String,java.lang.Object[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2301" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.build()" from="toComparison()" to="(toComparison() &gt;= 0 ? toComparison() * -1 : toComparison())" />
    <mutant id="mutant_3633" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="fromIndex &gt;= 0 ? fromIndex * -1 : fromIndex" />
    <mutant id="mutant_4964" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2302" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.build()" from="Integer.valueOf(toComparison())" to="Integer.valueOf(toComparison()) &gt;= 0 ? Integer.valueOf(toComparison()) : Integer.valueOf(toComparison()) * -1" />
    <mutant id="mutant_3632" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_4963" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_3631" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_4962" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_2300" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.build()" from="toComparison()" to="(toComparison() &gt;= 0 ? toComparison() : toComparison() * -1)" />
    <mutant id="mutant_3630" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4961" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_4960" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_20299" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_2309" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19297" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_19298" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_2307" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3639" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19299" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2308" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3638" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="(throwables.length)" to="(throwables.length &gt;= 0 ? throwables.length : throwables.length * -1)" />
    <mutant id="mutant_4969" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2305" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3637" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="(throwables.length)" to="(throwables.length &gt;= 0 ? throwables.length * -1 : throwables.length)" />
    <mutant id="mutant_4968" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_19293" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_2306" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3636" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4967" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_19294" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat * -1 : repeat)" />
    <mutant id="mutant_2303" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.build()" from="Integer.valueOf(toComparison())" to="Integer.valueOf(toComparison()) &gt;= 0 ? Integer.valueOf(toComparison()) * -1 : Integer.valueOf(toComparison())" />
    <mutant id="mutant_3635" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4966" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_19295" viable="true" in="org.apache.commons.lang3.StringUtils.repeat(java.lang.String,java.lang.String,int)" from="repeat" to="(repeat &gt;= 0 ? repeat : repeat * -1)" />
    <mutant id="mutant_2304" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean,boolean)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3634" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="fromIndex &gt;= 0 ? fromIndex : fromIndex * -1" />
    <mutant id="mutant_4965" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_19296" viable="true" in="org.apache.commons.lang3.StringUtils.replace(java.lang.String,java.lang.String,java.lang.String)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_20286" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_20287" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_20284" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="Integer.valueOf(index)" to="(Integer.valueOf(index) &gt;= 0 ? Integer.valueOf(index) * -1 : Integer.valueOf(index))" />
    <mutant id="mutant_20285" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_20282" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_20283" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="Integer.valueOf(index)" to="(Integer.valueOf(index) &gt;= 0 ? Integer.valueOf(index) : Integer.valueOf(index) * -1)" />
    <mutant id="mutant_20280" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_20281" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3622" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="fromIndex &gt;= 0 ? fromIndex : fromIndex * -1" />
    <mutant id="mutant_4953" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_3621" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="fromIndex" to="fromIndex &gt;= 0 ? fromIndex * -1 : fromIndex" />
    <mutant id="mutant_4952" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_3620" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4951" viable="false" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_4950" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char)" from="lastIndexOf(ch, ((size) - 1))" to="lastIndexOf(ch, ((size) - 1)) &gt;= 0 ? lastIndexOf(ch, ((size) - 1)) : lastIndexOf(ch, ((size) - 1)) * -1" />
    <mutant id="mutant_20288" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_20289" viable="true" in="org.apache.commons.lang3.Validate.validIndex(T,int,java.lang.String,java.lang.Object[])" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_3629" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3628" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4959" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3627" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4958" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3626" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="(throwables.length)" to="(throwables.length &gt;= 0 ? throwables.length : throwables.length * -1)" />
    <mutant id="mutant_4957" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_3625" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="(throwables.length)" to="(throwables.length &gt;= 0 ? throwables.length * -1 : throwables.length)" />
    <mutant id="mutant_4956" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3624" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4955" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_3623" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable,java.lang.Class,int,boolean)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4954" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_2370" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_1040" viable="false" in="?" from="Long.valueOf(1L)" to="Long.valueOf(1L) &gt;= 0 ? Long.valueOf(1L) : Long.valueOf(1L) * -1" />
    <mutant id="mutant_2371" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_1036" viable="false" in="?" from="0L" to="(-1 * 0L)" />
    <mutant id="mutant_2367" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3699" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="(list.size())" to="(list.size() &gt;= 0 ? list.size() * -1 : list.size())" />
    <mutant id="mutant_1037" viable="false" in="?" from="Long.valueOf(0L)" to="Long.valueOf(0L) &gt;= 0 ? Long.valueOf(0L) : Long.valueOf(0L) * -1" />
    <mutant id="mutant_2368" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3698" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCause(java.lang.Throwable)" from="(list.size())" to="(list.size() &gt;= 0 ? list.size() : list.size() * -1)" />
    <mutant id="mutant_1034" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_2365" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3697" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(java.lang.String)" from="list.size()" to="list.size() &gt;= 0 ? list.size() * -1 : list.size()" />
    <mutant id="mutant_1035" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_2366" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_3696" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getStackFrames(java.lang.String)" from="list.size()" to="list.size() &gt;= 0 ? list.size() : list.size() * -1" />
    <mutant id="mutant_1032" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min)" to="org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) : org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) * -1" />
    <mutant id="mutant_2363" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3695" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="frames.size()" to="frames.size() &gt;= 0 ? frames.size() * -1 : frames.size()" />
    <mutant id="mutant_1033" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min)" to="org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.min(array[i], min)" />
    <mutant id="mutant_2364" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3694" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="frames.size()" to="frames.size() &gt;= 0 ? frames.size() : frames.size() * -1" />
    <mutant id="mutant_1030" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_2361" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3693" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_1031" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_2362" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3692" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_1038" viable="false" in="?" from="Long.valueOf(0L)" to="Long.valueOf(0L) &gt;= 0 ? Long.valueOf(0L) * -1 : Long.valueOf(0L)" />
    <mutant id="mutant_2369" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_1039" viable="false" in="?" from="1L" to="(-1 * 1L)" />
    <mutant id="mutant_3691" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_2360" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3690" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_1025" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2356" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3688" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(trace.size())" to="(trace.size() &gt;= 0 ? trace.size() : trace.size() * -1)" />
    <mutant id="mutant_1026" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="min" to="min &gt;= 0 ? min * -1 : min" />
    <mutant id="mutant_2357" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3687" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_1023" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2354" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)" from="1" to="-1 * 1" />
    <mutant id="mutant_3686" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_1024" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2355" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)" from="0" to="-1 * 0" />
    <mutant id="mutant_3685" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="0" to="-1 * 0" />
    <mutant id="mutant_1021" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2352" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)" from="comparison" to="comparison &gt;= 0 ? comparison * -1 : comparison" />
    <mutant id="mutant_3684" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1022" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2353" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3683" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2350" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3682" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1020" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2351" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3681" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1029" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1027" viable="false" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="min" to="min &gt;= 0 ? min : min * -1" />
    <mutant id="mutant_2358" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1028" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2359" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte[],byte[])" from="comparison" to="comparison &gt;= 0 ? comparison : comparison * -1" />
    <mutant id="mutant_3689" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="(trace.size())" to="(trace.size() &gt;= 0 ? trace.size() * -1 : trace.size())" />
    <mutant id="mutant_3680" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1014" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c)" to="org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c)" />
    <mutant id="mutant_2345" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3677" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1015" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2346" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3676" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1012" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="c" to="(c &gt;= 0 ? c : c * -1)" />
    <mutant id="mutant_2343" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3675" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1013" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c)" to="org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) : org.apache.commons.lang3.math.IEEE754rUtils.min(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b), c) * -1" />
    <mutant id="mutant_2344" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3674" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_1010" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="org.apache.commons.lang3.math.IEEE754rUtils.min(a, b)" to="(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) * -1 : org.apache.commons.lang3.math.IEEE754rUtils.min(a, b))" />
    <mutant id="mutant_2341" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3673" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1011" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="c" to="(c &gt;= 0 ? c * -1 : c)" />
    <mutant id="mutant_2342" viable="false" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3672" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3671" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2340" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_3670" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_1018" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2349" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)" from="(comparison)" to="(comparison &gt;= 0 ? comparison * -1 : comparison)" />
    <mutant id="mutant_1019" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="1" to="-1 * 1" />
    <mutant id="mutant_1016" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2347" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3679" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_1017" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2348" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(byte,byte)" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3678" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_1003" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="Math.min(a, b)" to="Math.min(a, b) &gt;= 0 ? Math.min(a, b) * -1 : Math.min(a, b)" />
    <mutant id="mutant_2334" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="0" to="-1 * 0" />
    <mutant id="mutant_3666" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="count" to="count &gt;= 0 ? count : count * -1" />
    <mutant id="mutant_4997" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_1004" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="Math.min(a, b)" to="Math.min(a, b) &gt;= 0 ? Math.min(a, b) : Math.min(a, b) * -1" />
    <mutant id="mutant_2335" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3665" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="count" to="count &gt;= 0 ? count * -1 : count" />
    <mutant id="mutant_4996" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1001" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_2332" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3664" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4995" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_1002" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_2333" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3663" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_4994" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_2330" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length * -1 : rhs.length)" />
    <mutant id="mutant_3662" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_4993" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_1000" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_2331" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(rhs.length)" to="(rhs.length &gt;= 0 ? rhs.length : rhs.length * -1)" />
    <mutant id="mutant_3661" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="throwables.length" to="throwables.length &gt;= 0 ? throwables.length : throwables.length * -1" />
    <mutant id="mutant_4992" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_3660" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="throwables.length" to="throwables.length &gt;= 0 ? throwables.length * -1 : throwables.length" />
    <mutant id="mutant_4991" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4990" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_1009" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="org.apache.commons.lang3.math.IEEE754rUtils.min(a, b)" to="(org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) &gt;= 0 ? org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) : org.apache.commons.lang3.math.IEEE754rUtils.min(a, b) * -1)" />
    <mutant id="mutant_1007" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="b" to="(b &gt;= 0 ? b : b * -1)" />
    <mutant id="mutant_2338" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length : lhs.length * -1)" />
    <mutant id="mutant_1008" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="b" to="(b &gt;= 0 ? b * -1 : b)" />
    <mutant id="mutant_2339" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(comparison)" to="(comparison &gt;= 0 ? comparison : comparison * -1)" />
    <mutant id="mutant_3669" viable="true" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_1005" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="a" to="(a &gt;= 0 ? a : a * -1)" />
    <mutant id="mutant_2336" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3668" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4999" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_1006" viable="true" in="org.apache.commons.lang3.math.IEEE754rUtils.min(float,float,float)" from="a" to="(a &gt;= 0 ? a * -1 : a)" />
    <mutant id="mutant_2337" viable="true" in="org.apache.commons.lang3.builder.CompareToBuilder.append(boolean[],boolean[])" from="(lhs.length)" to="(lhs.length &gt;= 0 ? lhs.length * -1 : lhs.length)" />
    <mutant id="mutant_3667" viable="false" in="org.apache.commons.lang3.exception.ExceptionUtils.getRootCauseStackTrace(java.lang.Throwable)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4998" viable="true" in="org.apache.commons.lang3.text.StrBuilder.lastIndexOf(java.lang.String,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_2172" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder.priority(int)" from="prio" to="(prio &gt;= 0 ? prio : prio * -1)" />
    <mutant id="mutant_2173" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder.priority(int)" from="prio" to="(prio &gt;= 0 ? prio * -1 : prio)" />
    <mutant id="mutant_2170" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder.priority(int)" from="priority" to="priority &gt;= 0 ? priority : priority * -1" />
    <mutant id="mutant_2171" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder.priority(int)" from="priority" to="priority &gt;= 0 ? priority * -1 : priority" />
    <mutant id="mutant_2169" viable="true" in="org.apache.commons.lang3.concurrent.BackgroundInitializer.createExecutor()" from="getTaskCount()" to="(getTaskCount() &gt;= 0 ? getTaskCount() * -1 : getTaskCount())" />
    <mutant id="mutant_2167" viable="true" in="org.apache.commons.lang3.concurrent.BackgroundInitializer.getTaskCount()" from="1" to="-1 * 1" />
    <mutant id="mutant_3499" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) : System.identityHashCode(object) * -1)" />
    <mutant id="mutant_2168" viable="true" in="org.apache.commons.lang3.concurrent.BackgroundInitializer.createExecutor()" from="getTaskCount()" to="(getTaskCount() &gt;= 0 ? getTaskCount() : getTaskCount() * -1)" />
    <mutant id="mutant_3498" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendIdentityHashCode(java.lang.StringBuffer,java.lang.Object)" from="System.identityHashCode(object)" to="(System.identityHashCode(object) &gt;= 0 ? System.identityHashCode(object) * -1 : System.identityHashCode(object))" />
    <mutant id="mutant_2165" viable="true" in="org.apache.commons.lang3.mutable.MutableShort.compareTo(org.apache.commons.lang3.mutable.MutableShort)" from="NumberUtils.compare(this.value, other.value)" to="NumberUtils.compare(this.value, other.value) &gt;= 0 ? NumberUtils.compare(this.value, other.value) : NumberUtils.compare(this.value, other.value) * -1" />
    <mutant id="mutant_3497" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2166" viable="true" in="org.apache.commons.lang3.mutable.MutableShort.compareTo(org.apache.commons.lang3.mutable.MutableShort)" from="NumberUtils.compare(this.value, other.value)" to="NumberUtils.compare(this.value, other.value) &gt;= 0 ? NumberUtils.compare(this.value, other.value) * -1 : NumberUtils.compare(this.value, other.value)" />
    <mutant id="mutant_3496" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2163" viable="true" in="org.apache.commons.lang3.mutable.MutableObject.hashCode()" from="value.hashCode()" to="value.hashCode() &gt;= 0 ? value.hashCode() * -1 : value.hashCode()" />
    <mutant id="mutant_3495" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2164" viable="false" in="?" from="2135791679L" to="(-1 * 2135791679L)" />
    <mutant id="mutant_3494" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2161" viable="true" in="org.apache.commons.lang3.mutable.MutableObject.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_3493" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2162" viable="true" in="org.apache.commons.lang3.mutable.MutableObject.hashCode()" from="value.hashCode()" to="value.hashCode() &gt;= 0 ? value.hashCode() : value.hashCode() * -1" />
    <mutant id="mutant_3492" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3491" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2160" viable="false" in="?" from="86241875189L" to="-1 * 86241875189L" />
    <mutant id="mutant_3490" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2158" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.subtract(long)" from="operand" to="operand &gt;= 0 ? operand * -1 : operand" />
    <mutant id="mutant_2159" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.subtract(long)" from="operand" to="operand &gt;= 0 ? operand : operand * -1" />
    <mutant id="mutant_3489" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2156" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.subtract(long)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3488" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2157" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.subtract(long)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3487" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2154" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.subtract(java.lang.Number)" from="operand.longValue()" to="operand.longValue() &gt;= 0 ? operand.longValue() : operand.longValue() * -1" />
    <mutant id="mutant_3486" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2155" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.subtract(java.lang.Number)" from="operand.longValue()" to="operand.longValue() &gt;= 0 ? operand.longValue() * -1 : operand.longValue()" />
    <mutant id="mutant_3485" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2152" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.subtract(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3484" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2153" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.subtract(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3483" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_107" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_108" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_109" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_103" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_104" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_105" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_106" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_2150" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.setValue(long)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3482" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2151" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.setValue(long)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3481" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3480" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2147" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.setValue(java.lang.Number)" from="value.longValue()" to="value.longValue() &gt;= 0 ? value.longValue() * -1 : value.longValue()" />
    <mutant id="mutant_3479" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2148" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.setValue(long)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3478" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2145" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.setValue(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3477" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2146" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.setValue(java.lang.Number)" from="value.longValue()" to="value.longValue() &gt;= 0 ? value.longValue() : value.longValue() * -1" />
    <mutant id="mutant_3476" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2143" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.increment()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3475" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2144" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.setValue(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3474" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2141" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.decrement()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3473" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_2142" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.increment()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3472" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_100" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_101" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_102" viable="true" in="org.apache.commons.lang3.math.Fraction.getProperWhole()" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_2149" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.setValue(long)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_118" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u))" to="u" />
    <mutant id="mutant_119" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(v))" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_114" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_115" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_116" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_117" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u))" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_3471" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2140" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.decrement()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3470" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2136" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.add(long)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3468" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4799" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2137" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.add(long)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3467" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4798" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_2134" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.add(java.lang.Number)" from="operand.longValue()" to="operand.longValue() &gt;= 0 ? operand.longValue() : operand.longValue() * -1" />
    <mutant id="mutant_3466" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4797" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2135" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.add(java.lang.Number)" from="operand.longValue()" to="operand.longValue() &gt;= 0 ? operand.longValue() * -1 : operand.longValue()" />
    <mutant id="mutant_3465" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4796" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_2132" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.add(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3464" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4795" viable="true" in="org.apache.commons.lang3.text.StrBuilder.capacity()" from="buffer.length" to="buffer.length &gt;= 0 ? buffer.length : buffer.length * -1" />
    <mutant id="mutant_2133" viable="false" in="org.apache.commons.lang3.mutable.MutableLong.add(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3463" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4794" viable="true" in="org.apache.commons.lang3.text.StrBuilder.capacity()" from="buffer.length" to="buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length" />
    <mutant id="mutant_2130" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.longValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3462" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4793" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_2131" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.longValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3461" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4792" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_110" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_111" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_112" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_113" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_2138" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.add(long)" from="operand" to="operand &gt;= 0 ? operand * -1 : operand" />
    <mutant id="mutant_2139" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.add(long)" from="operand" to="operand &gt;= 0 ? operand : operand * -1" />
    <mutant id="mutant_3469" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_129" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_125" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(v))" to="v" />
    <mutant id="mutant_126" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_127" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="-1 * 1" />
    <mutant id="mutant_128" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_121" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u))" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_122" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(u))" to="u" />
    <mutant id="mutant_123" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_124" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(v))" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_120" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="(Math.abs(v))" to="v" />
    <mutant id="mutant_136" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_137" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_138" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_139" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_2198" viable="false" in="?" from="6622707671812226130L" to="-1 * 6622707671812226130L" />
    <mutant id="mutant_2199" viable="false" in="?" from="6582182735562919670L" to="(-1 * 6582182735562919670L)" />
    <mutant id="mutant_2196" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="getPriority().intValue()" to="(getPriority().intValue() &gt;= 0 ? getPriority().intValue() : getPriority().intValue() * -1)" />
    <mutant id="mutant_2197" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="getPriority().intValue()" to="(getPriority().intValue() &gt;= 0 ? getPriority().intValue() * -1 : getPriority().intValue())" />
    <mutant id="mutant_132" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="u &gt;= 0 ? u : u * -1" />
    <mutant id="mutant_133" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_134" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_135" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_130" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_131" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="u &gt;= 0 ? u * -1 : u" />
    <mutant id="mutant_147" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_148" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_149" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2194" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="getPriority()" to="(getPriority() &gt;= 0 ? getPriority() : getPriority() * -1)" />
    <mutant id="mutant_2195" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="getPriority()" to="(getPriority() &gt;= 0 ? getPriority() * -1 : getPriority())" />
    <mutant id="mutant_2192" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="(getPriority())" to="(getPriority() &gt;= 0 ? getPriority() : getPriority() * -1)" />
    <mutant id="mutant_2193" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="(getPriority())" to="(getPriority() &gt;= 0 ? getPriority() * -1 : getPriority())" />
    <mutant id="mutant_2190" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_2191" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_2189" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="Long.valueOf(threadCounter.incrementAndGet())" to="Long.valueOf(threadCounter.incrementAndGet()) &gt;= 0 ? Long.valueOf(threadCounter.incrementAndGet()) : Long.valueOf(threadCounter.incrementAndGet()) * -1" />
    <mutant id="mutant_2187" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="threadCounter.incrementAndGet()" to="(threadCounter.incrementAndGet() &gt;= 0 ? threadCounter.incrementAndGet() * -1 : threadCounter.incrementAndGet())" />
    <mutant id="mutant_2188" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="Long.valueOf(threadCounter.incrementAndGet())" to="Long.valueOf(threadCounter.incrementAndGet()) &gt;= 0 ? Long.valueOf(threadCounter.incrementAndGet()) * -1 : Long.valueOf(threadCounter.incrementAndGet())" />
    <mutant id="mutant_2185" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.getThreadCount()" from="threadCounter.get()" to="threadCounter.get() &gt;= 0 ? threadCounter.get() * -1 : threadCounter.get()" />
    <mutant id="mutant_2186" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.initializeThread(java.lang.Thread)" from="threadCounter.incrementAndGet()" to="(threadCounter.incrementAndGet() &gt;= 0 ? threadCounter.incrementAndGet() : threadCounter.incrementAndGet() * -1)" />
    <mutant id="mutant_143" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_144" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_145" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_146" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_140" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_141" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_142" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_158" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_159" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="2" to="-1 * 2" />
    <mutant id="mutant_2183" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority()" from="priority" to="priority &gt;= 0 ? priority * -1 : priority" />
    <mutant id="mutant_2184" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.getThreadCount()" from="threadCounter.get()" to="threadCounter.get() &gt;= 0 ? threadCounter.get() : threadCounter.get() * -1" />
    <mutant id="mutant_2181" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder)" from="builder.priority" to="builder.priority &gt;= 0 ? builder.priority * -1 : builder.priority" />
    <mutant id="mutant_2182" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory.getPriority()" from="priority" to="priority &gt;= 0 ? priority : priority * -1" />
    <mutant id="mutant_2180" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder)" from="builder.priority" to="builder.priority &gt;= 0 ? builder.priority : builder.priority * -1" />
    <mutant id="mutant_2178" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder)" from="priority" to="priority &gt;= 0 ? priority : priority * -1" />
    <mutant id="mutant_2179" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory(org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder)" from="priority" to="priority &gt;= 0 ? priority * -1 : priority" />
    <mutant id="mutant_2176" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder.reset()" from="priority" to="priority &gt;= 0 ? priority : priority * -1" />
    <mutant id="mutant_2177" viable="false" in="org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder.reset()" from="priority" to="priority &gt;= 0 ? priority * -1 : priority" />
    <mutant id="mutant_2174" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder.priority(int)" from="Integer.valueOf(prio)" to="Integer.valueOf(prio) &gt;= 0 ? Integer.valueOf(prio) * -1 : Integer.valueOf(prio)" />
    <mutant id="mutant_2175" viable="true" in="org.apache.commons.lang3.concurrent.BasicThreadFactory$Builder.priority(int)" from="Integer.valueOf(prio)" to="Integer.valueOf(prio) &gt;= 0 ? Integer.valueOf(prio) : Integer.valueOf(prio) * -1" />
    <mutant id="mutant_154" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="u &gt;= 0 ? u * -1 : u" />
    <mutant id="mutant_155" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="u &gt;= 0 ? u : u * -1" />
    <mutant id="mutant_156" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="2" to="-1 * 2" />
    <mutant id="mutant_157" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_150" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_151" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="k" to="(k &gt;= 0 ? k * -1 : k)" />
    <mutant id="mutant_152" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="k" to="(k &gt;= 0 ? k : k * -1)" />
    <mutant id="mutant_153" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="31" to="(-1 * 31)" />
    <mutant id="mutant_169" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_160" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="k" to="(k &gt;= 0 ? k * -1 : k)" />
    <mutant id="mutant_165" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_166" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_167" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_168" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_161" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="k" to="(k &gt;= 0 ? k : k * -1)" />
    <mutant id="mutant_162" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="k" to="(k &gt;= 0 ? k * -1 : k)" />
    <mutant id="mutant_163" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="k" to="(k &gt;= 0 ? k : k * -1)" />
    <mutant id="mutant_164" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="31" to="(-1 * 31)" />
    <mutant id="mutant_170" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_171" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_176" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_177" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="(t &gt;= 0 ? t : t * -1)" />
    <mutant id="mutant_178" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="(t &gt;= 0 ? t * -1 : t)" />
    <mutant id="mutant_179" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_172" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_173" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_174" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="(t &gt;= 0 ? t : t * -1)" />
    <mutant id="mutant_175" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="(t &gt;= 0 ? t * -1 : t)" />
    <mutant id="mutant_180" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_181" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="t &gt;= 0 ? t : t * -1" />
    <mutant id="mutant_182" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="t &gt;= 0 ? t * -1 : t" />
    <mutant id="mutant_187" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="u &gt;= 0 ? u * -1 : u" />
    <mutant id="mutant_188" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="u &gt;= 0 ? u : u * -1" />
    <mutant id="mutant_189" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="(t &gt;= 0 ? t : t * -1)" />
    <mutant id="mutant_183" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="2" to="-1 * 2" />
    <mutant id="mutant_184" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="(t &gt;= 0 ? t : t * -1)" />
    <mutant id="mutant_185" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="(t &gt;= 0 ? t * -1 : t)" />
    <mutant id="mutant_186" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_190" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="(t &gt;= 0 ? t * -1 : t)" />
    <mutant id="mutant_191" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="v &gt;= 0 ? v : v * -1" />
    <mutant id="mutant_192" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="v &gt;= 0 ? v * -1 : v" />
    <mutant id="mutant_193" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="t &gt;= 0 ? t : t * -1" />
    <mutant id="mutant_198" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v * -1 : v)" />
    <mutant id="mutant_199" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_194" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="t &gt;= 0 ? t * -1 : t" />
    <mutant id="mutant_195" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="t &gt;= 0 ? t : t * -1" />
    <mutant id="mutant_196" viable="false" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="t" to="t &gt;= 0 ? t * -1 : t" />
    <mutant id="mutant_197" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="v" to="(v &gt;= 0 ? v : v * -1)" />
    <mutant id="mutant_12806" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12805" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12808" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12807" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12809" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="0" to="-1 * 0" />
    <mutant id="mutant_12800" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12802" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_12801" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12804" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12803" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_12817" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12816" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12819" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12818" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12811" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12810" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12813" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12812" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12815" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12814" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12729" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_12728" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_12721" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12720" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12723" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12722" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12725" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_12724" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12727" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="1" to="-1 * 1" />
    <mutant id="mutant_12726" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11408" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11409" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12739" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11400" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_12732" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11401" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_12731" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11402" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance : tolerance * -1)" />
    <mutant id="mutant_12734" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_11403" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance * -1 : tolerance)" />
    <mutant id="mutant_12733" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11404" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12736" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11405" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12735" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_11406" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12738" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11407" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12737" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_12730" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_12707" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12706" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_12709" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_12708" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_12701" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_12700" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_12703" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12702" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_12705" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_12704" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12718" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_12717" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12719" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_12710" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_12712" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(short[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12711" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(short[],short[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_12714" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_12713" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(short[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_12716" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_12715" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_10102" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11433" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12765" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_10103" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="1" to="-1 * 1" />
    <mutant id="mutant_11434" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12764" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10104" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11435" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12767" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10105" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11436" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12766" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_10106" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11437" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12769" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found)" />
    <mutant id="mutant_10107" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11438" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12768" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10108" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11439" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10109" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4821" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4820" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12761" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_11430" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12760" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10100" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11431" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12763" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10101" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11432" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12762" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_4829" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4828" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4827" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4826" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4825" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4824" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_4823" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_4822" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_4819" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10113" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11444" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12776" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10114" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11445" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_12775" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10115" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11446" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_12778" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10116" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_11447" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12777" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10117" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11448" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10118" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11449" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12779" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_10119" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_4810" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12770" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v.shortValue(), found) * -1" />
    <mutant id="mutant_11440" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12772" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_10110" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" />
    <mutant id="mutant_11441" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12771" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10111" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1))" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element, ((indices[(count - 1)]) + 1)) * -1" />
    <mutant id="mutant_11442" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12774" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_10112" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(T[],T)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11443" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12773" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4818" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_4817" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_4816" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char)" from="indexOf(ch, 0)" to="indexOf(ch, 0) &gt;= 0 ? indexOf(ch, 0) * -1 : indexOf(ch, 0)" />
    <mutant id="mutant_4815" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char)" from="indexOf(ch, 0)" to="indexOf(ch, 0) &gt;= 0 ? indexOf(ch, 0) : indexOf(ch, 0) * -1" />
    <mutant id="mutant_4814" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4813" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="hash" to="hash &gt;= 0 ? hash : hash * -1" />
    <mutant id="mutant_4812" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="hash" to="hash &gt;= 0 ? hash * -1 : hash" />
    <mutant id="mutant_4811" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11419" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_4809" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="hash" to="(hash &gt;= 0 ? hash : hash * -1)" />
    <mutant id="mutant_4808" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="hash" to="(hash &gt;= 0 ? hash * -1 : hash)" />
    <mutant id="mutant_11411" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12743" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_11412" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12742" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_11413" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12745" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_11414" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_12744" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_11415" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_12747" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11416" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12746" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11417" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12749" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11418" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_12748" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_12741" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_11410" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12740" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(short[],short)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_4807" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="31" to="(-1 * 31)" />
    <mutant id="mutant_4806" viable="false" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="hash" to="hash &gt;= 0 ? hash : hash * -1" />
    <mutant id="mutant_4805" viable="false" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="hash" to="hash &gt;= 0 ? hash * -1 : hash" />
    <mutant id="mutant_4804" viable="false" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4803" viable="false" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4802" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4801" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4800" viable="true" in="org.apache.commons.lang3.text.StrBuilder.hashCode()" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11422" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12754" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11423" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12753" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="values.length" to="(values.length &gt;= 0 ? values.length : values.length * -1)" />
    <mutant id="mutant_11424" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_12756" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11425" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_12755" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11426" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12758" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_11427" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1" />
    <mutant id="mutant_12757" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_11428" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" />
    <mutant id="mutant_11429" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12759" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12750" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11420" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12752" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(short[],short[])" from="values.length" to="(values.length &gt;= 0 ? values.length * -1 : values.length)" />
    <mutant id="mutant_11421" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(double[],double,int,double)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12751" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(short[],short)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10146" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v, found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v, found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v, found) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, v, found)" />
    <mutant id="mutant_11477" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10147" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_11478" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10148" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_11479" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_10149" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2202" viable="true" in="org.apache.commons.lang3.concurrent.ConstantInitializer.hashCode()" from="0" to="-1 * 0" />
    <mutant id="mutant_3534" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos1" to="(pos1 &gt;= 0 ? pos1 : pos1 * -1)" />
    <mutant id="mutant_4865" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_2203" viable="true" in="org.apache.commons.lang3.concurrent.ConstantInitializer.toString()" from="System.identityHashCode(this)" to="(System.identityHashCode(this) &gt;= 0 ? System.identityHashCode(this) : System.identityHashCode(this) * -1)" />
    <mutant id="mutant_3533" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos2" to="(pos2 &gt;= 0 ? pos2 : pos2 * -1)" />
    <mutant id="mutant_4864" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11470" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2200" viable="true" in="org.apache.commons.lang3.concurrent.ConstantInitializer.hashCode()" from="getObject().hashCode()" to="getObject().hashCode() &gt;= 0 ? getObject().hashCode() : getObject().hashCode() * -1" />
    <mutant id="mutant_3532" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos2" to="(pos2 &gt;= 0 ? pos2 * -1 : pos2)" />
    <mutant id="mutant_4863" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10140" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11471" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2201" viable="true" in="org.apache.commons.lang3.concurrent.ConstantInitializer.hashCode()" from="getObject().hashCode()" to="getObject().hashCode() &gt;= 0 ? getObject().hashCode() * -1 : getObject().hashCode()" />
    <mutant id="mutant_3531" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos1" to="(pos1 &gt;= 0 ? pos1 * -1 : pos1)" />
    <mutant id="mutant_4862" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_10141" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="found" to="found &gt;= 0 ? found * -1 : found" />
    <mutant id="mutant_11472" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3530" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos1" to="(pos1 &gt;= 0 ? pos1 : pos1 * -1)" />
    <mutant id="mutant_4861" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_10142" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="found" to="found &gt;= 0 ? found : found * -1" />
    <mutant id="mutant_11473" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4860" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_10143" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_11474" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_10144" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_11475" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_10145" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, v, found)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, v, found) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, v, found) : org.apache.commons.lang3.ArrayUtils.indexOf(array, v, found) * -1" />
    <mutant id="mutant_11476" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2208" viable="false" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_2209" viable="false" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_3539" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2206" viable="true" in="org.apache.commons.lang3.concurrent.ConstantInitializer.toString()" from="Integer.valueOf(java.lang.System.identityHashCode(this))" to="(Integer.valueOf(java.lang.System.identityHashCode(this)) &gt;= 0 ? Integer.valueOf(java.lang.System.identityHashCode(this)) * -1 : Integer.valueOf(java.lang.System.identityHashCode(this)))" />
    <mutant id="mutant_3538" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos2" to="(pos2 &gt;= 0 ? pos2 : pos2 * -1)" />
    <mutant id="mutant_4869" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_2207" viable="true" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()" from="1" to="-1 * 1" />
    <mutant id="mutant_3537" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos2" to="(pos2 &gt;= 0 ? pos2 * -1 : pos2)" />
    <mutant id="mutant_4868" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="indexOf(str.charAt(0), startIndex)" to="indexOf(str.charAt(0), startIndex) &gt;= 0 ? indexOf(str.charAt(0), startIndex) : indexOf(str.charAt(0), startIndex) * -1" />
    <mutant id="mutant_2204" viable="true" in="org.apache.commons.lang3.concurrent.ConstantInitializer.toString()" from="System.identityHashCode(this)" to="(System.identityHashCode(this) &gt;= 0 ? System.identityHashCode(this) * -1 : System.identityHashCode(this))" />
    <mutant id="mutant_3536" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4867" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="indexOf(str.charAt(0), startIndex)" to="indexOf(str.charAt(0), startIndex) &gt;= 0 ? indexOf(str.charAt(0), startIndex) * -1 : indexOf(str.charAt(0), startIndex)" />
    <mutant id="mutant_2205" viable="true" in="org.apache.commons.lang3.concurrent.ConstantInitializer.toString()" from="Integer.valueOf(java.lang.System.identityHashCode(this))" to="(Integer.valueOf(java.lang.System.identityHashCode(this)) &gt;= 0 ? Integer.valueOf(java.lang.System.identityHashCode(this)) : Integer.valueOf(java.lang.System.identityHashCode(this)) * -1)" />
    <mutant id="mutant_3535" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos1" to="(pos1 &gt;= 0 ? pos1 * -1 : pos1)" />
    <mutant id="mutant_4866" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10157" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_11488" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10158" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11489" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10159" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_3523" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer,java.lang.String,int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4854" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11480" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_3522" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummarySize(java.lang.StringBuffer,java.lang.String,int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4853" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10150" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="found" to="(found &gt;= 0 ? found * -1 : found)" />
    <mutant id="mutant_11481" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_3521" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,short[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4852" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10151" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="found" to="(found &gt;= 0 ? found : found * -1)" />
    <mutant id="mutant_11482" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3520" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,short[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4851" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_10152" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11483" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0) * -1" />
    <mutant id="mutant_4850" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10153" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11484" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind, 0)" />
    <mutant id="mutant_10154" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11485" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10155" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_11486" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10156" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11487" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_3529" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="toString.lastIndexOf(contentEnd)" to="toString.lastIndexOf(contentEnd) &gt;= 0 ? toString.lastIndexOf(contentEnd) : toString.lastIndexOf(contentEnd) * -1" />
    <mutant id="mutant_3528" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="toString.lastIndexOf(contentEnd)" to="toString.lastIndexOf(contentEnd) &gt;= 0 ? toString.lastIndexOf(contentEnd) * -1 : toString.lastIndexOf(contentEnd)" />
    <mutant id="mutant_4859" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_3527" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(contentStart.length())" to="(contentStart.length() &gt;= 0 ? contentStart.length() * -1 : contentStart.length())" />
    <mutant id="mutant_4858" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3526" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(contentStart.length())" to="(contentStart.length() &gt;= 0 ? contentStart.length() : contentStart.length() * -1)" />
    <mutant id="mutant_4857" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3525" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart))" to="(toString.indexOf(contentStart) &gt;= 0 ? toString.indexOf(contentStart) : toString.indexOf(contentStart) * -1)" />
    <mutant id="mutant_4856" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_3524" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="(toString.indexOf(contentStart))" to="(toString.indexOf(contentStart) &gt;= 0 ? toString.indexOf(contentStart) * -1 : toString.indexOf(contentStart))" />
    <mutant id="mutant_4855" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10124" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(T[],java.lang.Object)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11455" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12787" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_10125" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(T[],java.lang.Object)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11456" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" />
    <mutant id="mutant_12786" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_10126" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(T[],java.lang.Object)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11457" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1" />
    <mutant id="mutant_12789" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_10127" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(T[],java.lang.Object)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11458" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12788" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10128" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="values.length" to="(values.length &gt;= 0 ? values.length * -1 : values.length)" />
    <mutant id="mutant_11459" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10129" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="values.length" to="(values.length &gt;= 0 ? values.length : values.length * -1)" />
    <mutant id="mutant_3512" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,float[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4843" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3511" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,double[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4842" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3510" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,double[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4841" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12781" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_4840" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_11450" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12780" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_10120" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(T[],java.lang.Object)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_11451" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12783" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_10121" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(T[],java.lang.Object)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_11452" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12782" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_10122" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(T[],java.lang.Object)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11453" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_12785" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10123" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElement(T[],java.lang.Object)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11454" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_12784" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_3519" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,long[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_3518" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,long[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4849" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_3517" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4848" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_3516" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4847" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_3515" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,int[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4846" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_3514" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,int[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4845" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String)" from="indexOf(str, 0)" to="indexOf(str, 0) &gt;= 0 ? indexOf(str, 0) : indexOf(str, 0) * -1" />
    <mutant id="mutant_3513" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,float[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4844" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String)" from="indexOf(str, 0)" to="indexOf(str, 0) &gt;= 0 ? indexOf(str, 0) * -1 : indexOf(str, 0)" />
    <mutant id="mutant_10135" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11466" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12798" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize * -1 : newSize" />
    <mutant id="mutant_10136" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11467" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12797" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="newSize" to="newSize &gt;= 0 ? newSize : newSize * -1" />
    <mutant id="mutant_10137" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="ct" to="(ct &gt;= 0 ? ct : ct * -1)" />
    <mutant id="mutant_11468" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10138" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="ct" to="(ct &gt;= 0 ? ct * -1 : ct)" />
    <mutant id="mutant_11469" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12799" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10139" viable="false" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3501" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean)" from="((Collection&lt;?&gt;)(value)).size()" to="(((Collection&lt;?&gt;)(value)).size() &gt;= 0 ? ((Collection&lt;?&gt;)(value)).size() * -1 : ((Collection&lt;?&gt;)(value)).size())" />
    <mutant id="mutant_4832" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12790" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_3500" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean)" from="((Collection&lt;?&gt;)(value)).size()" to="(((Collection&lt;?&gt;)(value)).size() &gt;= 0 ? ((Collection&lt;?&gt;)(value)).size() : ((Collection&lt;?&gt;)(value)).size() * -1)" />
    <mutant id="mutant_4831" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_4830" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11460" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12792" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_10130" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11461" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12791" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_10131" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11462" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12794" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_10132" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="0" to="-1 * 0" />
    <mutant id="mutant_11463" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12793" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10133" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() : e.getValue().intValue() * -1" />
    <mutant id="mutant_11464" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12796" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10134" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeElements(T[],T[])" from="e.getValue().intValue()" to="e.getValue().intValue() &gt;= 0 ? e.getValue().intValue() * -1 : e.getValue().intValue()" />
    <mutant id="mutant_11465" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(int[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12795" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(short[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_3509" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,char[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_3508" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,char[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4839" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3507" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,byte[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4838" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3506" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,byte[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4837" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3505" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,boolean[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4836" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3504" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer,java.lang.String,boolean[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4835" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3503" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean)" from="((Map&lt;?, ?&gt;)(value)).size()" to="(((Map&lt;?, ?&gt;)(value)).size() &gt;= 0 ? ((Map&lt;?, ?&gt;)(value)).size() * -1 : ((Map&lt;?, ?&gt;)(value)).size())" />
    <mutant id="mutant_4834" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_3502" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean)" from="((Map&lt;?, ?&gt;)(value)).size()" to="(((Map&lt;?, ?&gt;)(value)).size() &gt;= 0 ? ((Map&lt;?, ?&gt;)(value)).size() : ((Map&lt;?, ?&gt;)(value)).size() * -1)" />
    <mutant id="mutant_4833" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3581" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2250" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getLimit()" from="limit" to="limit &gt;= 0 ? limit : limit * -1" />
    <mutant id="mutant_3580" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_2246" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getAcquireCount())" to="(getAcquireCount() &gt;= 0 ? getAcquireCount() * -1 : getAcquireCount())" />
    <mutant id="mutant_3578" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10182" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2247" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getLastAcquiresPerPeriod()" from="lastCallsPerPeriod" to="lastCallsPerPeriod &gt;= 0 ? lastCallsPerPeriod : lastCallsPerPeriod * -1" />
    <mutant id="mutant_3577" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10183" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_2244" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit())" to="(getLimit() &gt;= 0 ? getLimit() * -1 : getLimit())" />
    <mutant id="mutant_3576" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen * -1 : sepLen)" />
    <mutant id="mutant_10184" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2245" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getAcquireCount())" to="(getAcquireCount() &gt;= 0 ? getAcquireCount() : getAcquireCount() * -1)" />
    <mutant id="mutant_3575" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen : sepLen * -1)" />
    <mutant id="mutant_10185" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_2242" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAcquireCount()" from="acquireCount" to="acquireCount &gt;= 0 ? acquireCount * -1 : acquireCount" />
    <mutant id="mutant_3574" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10186" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_2243" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAvailablePermits()" from="(getLimit())" to="(getLimit() &gt;= 0 ? getLimit() : getLimit() * -1)" />
    <mutant id="mutant_3573" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10187" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="1" to="-1 * 1" />
    <mutant id="mutant_2240" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(periodCount))" to="(((double)(periodCount)) &gt;= 0 ? ((double)(periodCount)) : ((double)(periodCount)) * -1)" />
    <mutant id="mutant_3572" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="0" to="-1 * 0" />
    <mutant id="mutant_10188" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2241" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAcquireCount()" from="acquireCount" to="acquireCount &gt;= 0 ? acquireCount : acquireCount * -1" />
    <mutant id="mutant_3571" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen * -1 : sepLen)" />
    <mutant id="mutant_10189" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2248" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getLastAcquiresPerPeriod()" from="lastCallsPerPeriod" to="lastCallsPerPeriod &gt;= 0 ? lastCallsPerPeriod * -1 : lastCallsPerPeriod" />
    <mutant id="mutant_10180" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_2249" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getLimit()" from="limit" to="limit &gt;= 0 ? limit * -1 : limit" />
    <mutant id="mutant_3579" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_10181" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_3570" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen : sepLen * -1)" />
    <mutant id="mutant_2235" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3567" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4898" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10193" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2236" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="0" to="-1 * 0" />
    <mutant id="mutant_3566" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen * -1 : sepLen)" />
    <mutant id="mutant_4897" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10194" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2233" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="(periodCount)" to="(periodCount &gt;= 0 ? periodCount * -1 : periodCount)" />
    <mutant id="mutant_3565" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="sepLen" to="(sepLen &gt;= 0 ? sepLen : sepLen * -1)" />
    <mutant id="mutant_4896" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_10195" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2234" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="(periodCount)" to="(periodCount &gt;= 0 ? periodCount : periodCount * -1)" />
    <mutant id="mutant_3564" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4895" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_10196" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="(comparator.compare(previous, current))" to="(comparator.compare(previous, current) &gt;= 0 ? comparator.compare(previous, current) * -1 : comparator.compare(previous, current))" />
    <mutant id="mutant_2231" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(long,java.util.concurrent.TimeUnit,int)" from="limit" to="(limit &gt;= 0 ? limit : limit * -1)" />
    <mutant id="mutant_3563" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_4894" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10197" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="(comparator.compare(previous, current))" to="(comparator.compare(previous, current) &gt;= 0 ? comparator.compare(previous, current) : comparator.compare(previous, current) * -1)" />
    <mutant id="mutant_2232" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(long,java.util.concurrent.TimeUnit,int)" from="limit" to="(limit &gt;= 0 ? limit * -1 : limit)" />
    <mutant id="mutant_3562" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_4893" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10198" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3561" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="fieldSeparator.length()" to="fieldSeparator.length() &gt;= 0 ? fieldSeparator.length() * -1 : fieldSeparator.length()" />
    <mutant id="mutant_4892" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_10199" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(boolean[],boolean)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1)" />
    <mutant id="mutant_2230" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(long,java.util.concurrent.TimeUnit,int)" from="timePeriod" to="(timePeriod &gt;= 0 ? timePeriod * -1 : timePeriod)" />
    <mutant id="mutant_3560" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="fieldSeparator.length()" to="fieldSeparator.length() &gt;= 0 ? fieldSeparator.length() : fieldSeparator.length() * -1" />
    <mutant id="mutant_4891" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2239" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(periodCount))" to="(((double)(periodCount)) &gt;= 0 ? ((double)(periodCount)) * -1 : ((double)(periodCount)))" />
    <mutant id="mutant_10190" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_2237" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount))" to="(((double)(totalAcquireCount)) &gt;= 0 ? ((double)(totalAcquireCount)) : ((double)(totalAcquireCount)) * -1)" />
    <mutant id="mutant_3569" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_10191" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_2238" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore.getAverageCallsPerPeriod()" from="((double)(totalAcquireCount))" to="(((double)(totalAcquireCount)) &gt;= 0 ? ((double)(totalAcquireCount)) * -1 : ((double)(totalAcquireCount)))" />
    <mutant id="mutant_3568" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_4899" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10192" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(T[],java.util.Comparator)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4890" viable="false" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10168" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11499" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10169" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_2224" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="timePeriod" to="timePeriod &gt;= 0 ? timePeriod * -1 : timePeriod" />
    <mutant id="mutant_3556" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4887" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10160" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11491" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_2225" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="TimedSemaphore.THREAD_POOL_SIZE" to="(TimedSemaphore.THREAD_POOL_SIZE &gt;= 0 ? TimedSemaphore.THREAD_POOL_SIZE * -1 : TimedSemaphore.THREAD_POOL_SIZE)" />
    <mutant id="mutant_3555" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4886" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10161" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11492" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_2222" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="period" to="period &gt;= 0 ? period * -1 : period" />
    <mutant id="mutant_3554" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4885" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10162" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive" />
    <mutant id="mutant_11493" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_2223" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="timePeriod" to="timePeriod &gt;= 0 ? timePeriod : timePeriod * -1" />
    <mutant id="mutant_3553" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4884" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10163" viable="false" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive" to="endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1" />
    <mutant id="mutant_11494" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_2220" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="timePeriod" to="(timePeriod &gt;= 0 ? timePeriod * -1 : timePeriod)" />
    <mutant id="mutant_3552" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4883" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10164" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11495" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2221" viable="false" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="period" to="period &gt;= 0 ? period : period * -1" />
    <mutant id="mutant_3551" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4882" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_10165" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11496" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3550" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_4881" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_10166" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11497" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4880" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_10167" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11498" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2228" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="limit" to="(limit &gt;= 0 ? limit * -1 : limit)" />
    <mutant id="mutant_2229" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(long,java.util.concurrent.TimeUnit,int)" from="timePeriod" to="(timePeriod &gt;= 0 ? timePeriod : timePeriod * -1)" />
    <mutant id="mutant_3559" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="buffer.length()" to="buffer.length() &gt;= 0 ? buffer.length() * -1 : buffer.length()" />
    <mutant id="mutant_2226" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="TimedSemaphore.THREAD_POOL_SIZE" to="(TimedSemaphore.THREAD_POOL_SIZE &gt;= 0 ? TimedSemaphore.THREAD_POOL_SIZE : TimedSemaphore.THREAD_POOL_SIZE * -1)" />
    <mutant id="mutant_3558" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.removeLastFieldSeparator(java.lang.StringBuffer)" from="buffer.length()" to="buffer.length() &gt;= 0 ? buffer.length() : buffer.length() * -1" />
    <mutant id="mutant_4889" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_2227" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="limit" to="(limit &gt;= 0 ? limit : limit * -1)" />
    <mutant id="mutant_3557" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4888" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_11490" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10179" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_2213" viable="true" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()" from="result" to="result &gt;= 0 ? result * -1 : result" />
    <mutant id="mutant_3545" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="Array.getLength(array)" to="Array.getLength(array) &gt;= 0 ? Array.getLength(array) * -1 : Array.getLength(array)" />
    <mutant id="mutant_4876" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_10171" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_2214" viable="false" in="?" from="0" to="-1 * 0" />
    <mutant id="mutant_3544" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="Array.getLength(array)" to="Array.getLength(array) &gt;= 0 ? Array.getLength(array) : Array.getLength(array) * -1" />
    <mutant id="mutant_4875" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_10172" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2211" viable="true" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()" from="bi.getTaskCount()" to="bi.getTaskCount() &gt;= 0 ? bi.getTaskCount() * -1 : bi.getTaskCount()" />
    <mutant id="mutant_3543" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos2" to="(pos2 &gt;= 0 ? pos2 : pos2 * -1)" />
    <mutant id="mutant_4874" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_10173" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2212" viable="true" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()" from="result" to="result &gt;= 0 ? result : result * -1" />
    <mutant id="mutant_3542" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos2" to="(pos2 &gt;= 0 ? pos2 * -1 : pos2)" />
    <mutant id="mutant_4873" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10174" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_3541" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos1" to="(pos1 &gt;= 0 ? pos1 * -1 : pos1)" />
    <mutant id="mutant_4872" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10175" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize * -1 : newSize)" />
    <mutant id="mutant_2210" viable="true" in="org.apache.commons.lang3.concurrent.MultiBackgroundInitializer.getTaskCount()" from="bi.getTaskCount()" to="bi.getTaskCount() &gt;= 0 ? bi.getTaskCount() : bi.getTaskCount() * -1" />
    <mutant id="mutant_3540" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer,java.lang.String)" from="pos1" to="(pos1 &gt;= 0 ? pos1 : pos1 * -1)" />
    <mutant id="mutant_4871" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10176" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_4870" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_10177" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10178" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2219" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="timePeriod" to="(timePeriod &gt;= 0 ? timePeriod : timePeriod * -1)" />
    <mutant id="mutant_2217" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="Long.MAX_VALUE" to="(Long.MAX_VALUE &gt;= 0 ? Long.MAX_VALUE : Long.MAX_VALUE * -1)" />
    <mutant id="mutant_3549" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_2218" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="Long.MAX_VALUE" to="(Long.MAX_VALUE &gt;= 0 ? Long.MAX_VALUE * -1 : Long.MAX_VALUE)" />
    <mutant id="mutant_3548" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4879" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2215" viable="false" in="?" from="1" to="-1 * 1" />
    <mutant id="mutant_3547" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4878" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_2216" viable="true" in="org.apache.commons.lang3.concurrent.TimedSemaphore(java.util.concurrent.ScheduledExecutorService,long,java.util.concurrent.TimeUnit,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3546" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="0" to="-1 * 0" />
    <mutant id="mutant_4877" viable="true" in="org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String,int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_10170" viable="true" in="org.apache.commons.lang3.ArrayUtils.subarray(T[],int,int)" from="newSize" to="(newSize &gt;= 0 ? newSize : newSize * -1)" />
    <mutant id="mutant_2051" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.toInteger()" from="intValue()" to="(intValue() &gt;= 0 ? intValue() * -1 : intValue())" />
    <mutant id="mutant_3383" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2052" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.toInteger()" from="Integer.valueOf(intValue())" to="Integer.valueOf(intValue()) &gt;= 0 ? Integer.valueOf(intValue()) : Integer.valueOf(intValue()) * -1" />
    <mutant id="mutant_3382" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="0" to="-1 * 0" />
    <mutant id="mutant_3381" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer,java.lang.String,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_2050" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.toInteger()" from="intValue()" to="(intValue() &gt;= 0 ? intValue() : intValue() * -1)" />
    <mutant id="mutant_3380" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer,java.lang.String,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_2048" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.getValue()" from="Integer.valueOf(this.value)" to="Integer.valueOf(this.value) &gt;= 0 ? Integer.valueOf(this.value) * -1 : Integer.valueOf(this.value)" />
    <mutant id="mutant_2049" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.getValue()" from="Integer.valueOf(this.value)" to="Integer.valueOf(this.value) &gt;= 0 ? Integer.valueOf(this.value) : Integer.valueOf(this.value) * -1" />
    <mutant id="mutant_3379" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer,java.lang.String,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_2046" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.getValue()" from="this.value" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_3378" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer,java.lang.String,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_2047" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.getValue()" from="this.value" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_3377" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer,java.lang.String,float)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_2044" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.intValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3376" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer,java.lang.String,float)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_2045" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.intValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3375" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer,java.lang.String,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_2042" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.hashCode()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3374" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer,java.lang.String,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_2043" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.hashCode()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3373" viable="false" in="?" from="2587890625525655916L" to="(-1 * 2587890625525655916L)" />
    <mutant id="mutant_2040" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.compareTo(org.apache.commons.lang3.mutable.MutableInt)" from="NumberUtils.compare(this.value, other.value)" to="NumberUtils.compare(this.value, other.value) &gt;= 0 ? NumberUtils.compare(this.value, other.value) * -1 : NumberUtils.compare(this.value, other.value)" />
    <mutant id="mutant_3372" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2041" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.compareTo(org.apache.commons.lang3.mutable.MutableInt)" from="NumberUtils.compare(this.value, other.value)" to="NumberUtils.compare(this.value, other.value) &gt;= 0 ? NumberUtils.compare(this.value, other.value) : NumberUtils.compare(this.value, other.value) * -1" />
    <mutant id="mutant_3371" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_3370" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2037" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.compareTo(org.apache.commons.lang3.mutable.MutableInt)" from="this.value" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_3369" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_2038" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.compareTo(org.apache.commons.lang3.mutable.MutableInt)" from="other.value" to="(other.value &gt;= 0 ? other.value * -1 : other.value)" />
    <mutant id="mutant_3368" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_4699" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2035" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.floatValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3367" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_4698" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2036" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.compareTo(org.apache.commons.lang3.mutable.MutableInt)" from="this.value" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_3366" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_4697" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2033" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.doubleValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3365" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4696" viable="false" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2034" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.floatValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3364" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4695" viable="false" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2031" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.equals(java.lang.Object)" from="(((MutableInt)(obj)).intValue())" to="(((MutableInt)(obj)).intValue() &gt;= 0 ? ((MutableInt)(obj)).intValue() * -1 : ((MutableInt)(obj)).intValue())" />
    <mutant id="mutant_3363" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String,long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4694" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2032" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.doubleValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3362" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String,long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4693" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2039" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.compareTo(org.apache.commons.lang3.mutable.MutableInt)" from="other.value" to="(other.value &gt;= 0 ? other.value : other.value * -1)" />
    <mutant id="mutant_3361" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4692" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2030" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.equals(java.lang.Object)" from="(((MutableInt)(obj)).intValue())" to="(((MutableInt)(obj)).intValue() &gt;= 0 ? ((MutableInt)(obj)).intValue() : ((MutableInt)(obj)).intValue() * -1)" />
    <mutant id="mutant_3360" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4691" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4690" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_2026" viable="true" in="org.apache.commons.lang3.mutable.MutableInt(java.lang.String)" from="Integer.parseInt(value)" to="Integer.parseInt(value) &gt;= 0 ? Integer.parseInt(value) * -1 : Integer.parseInt(value)" />
    <mutant id="mutant_3358" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String,float)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4689" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2027" viable="true" in="org.apache.commons.lang3.mutable.MutableInt(java.lang.String)" from="Integer.parseInt(value)" to="Integer.parseInt(value) &gt;= 0 ? Integer.parseInt(value) : Integer.parseInt(value) * -1" />
    <mutant id="mutant_3357" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4688" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(other.size)" to="(other.size &gt;= 0 ? other.size : other.size * -1)" />
    <mutant id="mutant_2024" viable="false" in="org.apache.commons.lang3.mutable.MutableInt(java.lang.String)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3356" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4687" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(other.size)" to="(other.size &gt;= 0 ? other.size * -1 : other.size)" />
    <mutant id="mutant_2025" viable="false" in="org.apache.commons.lang3.mutable.MutableInt(java.lang.String)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3355" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4686" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(this.size)" to="(this.size &gt;= 0 ? this.size : this.size * -1)" />
    <mutant id="mutant_2022" viable="true" in="org.apache.commons.lang3.mutable.MutableInt(java.lang.Number)" from="value.intValue()" to="value.intValue() &gt;= 0 ? value.intValue() * -1 : value.intValue()" />
    <mutant id="mutant_3354" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4685" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="(this.size)" to="(this.size &gt;= 0 ? this.size * -1 : this.size)" />
    <mutant id="mutant_2023" viable="true" in="org.apache.commons.lang3.mutable.MutableInt(java.lang.Number)" from="value.intValue()" to="value.intValue() &gt;= 0 ? value.intValue() : value.intValue() * -1" />
    <mutant id="mutant_3353" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(float)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4684" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2020" viable="false" in="org.apache.commons.lang3.mutable.MutableInt(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3352" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(float)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4683" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2021" viable="false" in="org.apache.commons.lang3.mutable.MutableInt(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3351" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4682" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_2028" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.equals(java.lang.Object)" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_2029" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.equals(java.lang.Object)" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3359" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String,float)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3350" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder.append(double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4681" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_4680" viable="false" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_2015" viable="false" in="?" from="512176391864L" to="-1 * 512176391864L" />
    <mutant id="mutant_3347" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.lang.Object[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4678" viable="false" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2016" viable="false" in="org.apache.commons.lang3.mutable.MutableInt(int)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3346" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.toNoNullStringArray(java.lang.Object[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4677" viable="false" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2013" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.subtract(java.lang.Number)" from="operand.floatValue()" to="operand.floatValue() &gt;= 0 ? operand.floatValue() * -1 : operand.floatValue()" />
    <mutant id="mutant_3345" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4676" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_2014" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.subtract(java.lang.Number)" from="operand.floatValue()" to="operand.floatValue() &gt;= 0 ? operand.floatValue() : operand.floatValue() * -1" />
    <mutant id="mutant_3344" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="(Arrays.binarySearch(this.excludeFieldNames, field.getName()))" to="(Arrays.binarySearch(this.excludeFieldNames, field.getName()) &gt;= 0 ? Arrays.binarySearch(this.excludeFieldNames, field.getName()) : Arrays.binarySearch(this.excludeFieldNames, field.getName()) * -1)" />
    <mutant id="mutant_4675" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_2011" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.subtract(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3343" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="(Arrays.binarySearch(this.excludeFieldNames, field.getName()))" to="(Arrays.binarySearch(this.excludeFieldNames, field.getName()) &gt;= 0 ? Arrays.binarySearch(this.excludeFieldNames, field.getName()) * -1 : Arrays.binarySearch(this.excludeFieldNames, field.getName()))" />
    <mutant id="mutant_4674" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2012" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.subtract(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3342" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_4673" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3341" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_4672" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_2010" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.subtract(float)" from="operand" to="operand &gt;= 0 ? operand * -1 : operand" />
    <mutant id="mutant_3340" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_4671" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_2019" viable="true" in="org.apache.commons.lang3.mutable.MutableInt(int)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_2017" viable="false" in="org.apache.commons.lang3.mutable.MutableInt(int)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3349" viable="true" in="org.apache.commons.lang3.builder.ToStringBuilder(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle,java.lang.StringBuffer)" from="512" to="(-1 * 512)" />
    <mutant id="mutant_2018" viable="true" in="org.apache.commons.lang3.mutable.MutableInt(int)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3348" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_4679" viable="false" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_2095" viable="false" in="org.apache.commons.lang3.mutable.MutableLong(long)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_2096" viable="false" in="org.apache.commons.lang3.mutable.MutableLong(long)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_2093" viable="true" in="org.apache.commons.lang3.mutable.MutableLong(java.lang.String)" from="Long.parseLong(value)" to="Long.parseLong(value) &gt;= 0 ? Long.parseLong(value) : Long.parseLong(value) * -1" />
    <mutant id="mutant_2094" viable="true" in="org.apache.commons.lang3.mutable.MutableLong(java.lang.String)" from="Long.parseLong(value)" to="Long.parseLong(value) &gt;= 0 ? Long.parseLong(value) * -1 : Long.parseLong(value)" />
    <mutant id="mutant_2091" viable="false" in="org.apache.commons.lang3.mutable.MutableLong(java.lang.String)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_2092" viable="false" in="org.apache.commons.lang3.mutable.MutableLong(java.lang.String)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_2090" viable="true" in="org.apache.commons.lang3.mutable.MutableLong(java.lang.Number)" from="value.longValue()" to="value.longValue() &gt;= 0 ? value.longValue() * -1 : value.longValue()" />
    <mutant id="mutant_2088" viable="false" in="org.apache.commons.lang3.mutable.MutableLong(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_2089" viable="true" in="org.apache.commons.lang3.mutable.MutableLong(java.lang.Number)" from="value.longValue()" to="value.longValue() &gt;= 0 ? value.longValue() : value.longValue() * -1" />
    <mutant id="mutant_2086" viable="false" in="?" from="62986528375L" to="-1 * 62986528375L" />
    <mutant id="mutant_2087" viable="false" in="org.apache.commons.lang3.mutable.MutableLong(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_2084" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.subtract(java.lang.Number)" from="operand.intValue()" to="operand.intValue() &gt;= 0 ? operand.intValue() * -1 : operand.intValue()" />
    <mutant id="mutant_2085" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.subtract(java.lang.Number)" from="operand.intValue()" to="operand.intValue() &gt;= 0 ? operand.intValue() : operand.intValue() * -1" />
    <mutant id="mutant_2082" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.subtract(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_2083" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.subtract(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_2080" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.subtract(int)" from="operand" to="operand &gt;= 0 ? operand * -1 : operand" />
    <mutant id="mutant_2081" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.subtract(int)" from="operand" to="operand &gt;= 0 ? operand : operand * -1" />
    <mutant id="mutant_2079" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.subtract(int)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_2077" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.setValue(java.lang.Number)" from="value.intValue()" to="value.intValue() &gt;= 0 ? value.intValue() : value.intValue() * -1" />
    <mutant id="mutant_2078" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.subtract(int)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_2075" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.setValue(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_2076" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.setValue(java.lang.Number)" from="value.intValue()" to="value.intValue() &gt;= 0 ? value.intValue() * -1 : value.intValue()" />
    <mutant id="mutant_2073" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.setValue(int)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_2074" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.setValue(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_2071" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.setValue(int)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_2072" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.setValue(int)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_2070" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.setValue(int)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_2068" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.increment()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_2069" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.increment()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3399" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2066" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.decrement()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3398" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2067" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.decrement()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3397" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2064" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.add(java.lang.Number)" from="operand.intValue()" to="operand.intValue() &gt;= 0 ? operand.intValue() * -1 : operand.intValue()" />
    <mutant id="mutant_3396" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2065" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.add(java.lang.Number)" from="operand.intValue()" to="operand.intValue() &gt;= 0 ? operand.intValue() : operand.intValue() * -1" />
    <mutant id="mutant_3395" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2062" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.add(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3394" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="0" to="-1 * 0" />
    <mutant id="mutant_2063" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.add(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3393" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2060" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.add(int)" from="operand" to="operand &gt;= 0 ? operand * -1 : operand" />
    <mutant id="mutant_3392" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2061" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.add(int)" from="operand" to="operand &gt;= 0 ? operand : operand * -1" />
    <mutant id="mutant_3391" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3390" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2059" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.add(int)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_2057" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.longValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3389" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2058" viable="false" in="org.apache.commons.lang3.mutable.MutableInt.add(int)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3388" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2055" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.toString()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3387" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2056" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.longValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3386" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_2053" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.toInteger()" from="Integer.valueOf(intValue())" to="Integer.valueOf(intValue()) &gt;= 0 ? Integer.valueOf(intValue()) * -1 : Integer.valueOf(intValue())" />
    <mutant id="mutant_3385" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_2054" viable="true" in="org.apache.commons.lang3.mutable.MutableInt.toString()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3384" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2099" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.equals(java.lang.Object)" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_2097" viable="true" in="org.apache.commons.lang3.mutable.MutableLong(long)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_2098" viable="true" in="org.apache.commons.lang3.mutable.MutableLong(long)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_12927" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12926" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12929" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_12928" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_12921" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_12920" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_12923" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_12922" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_12925" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12924" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11606" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_12938" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_11607" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_12937" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11608" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_11609" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_12939" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_12930" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11600" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12932" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11601" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12931" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11602" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12934" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11603" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12933" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11604" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12936" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11605" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12935" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12905" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12904" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_12907" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_12906" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12909" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12908" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_12901" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12900" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12903" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_12902" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12916" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_12915" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12918" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12917" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_12919" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12910" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12912" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_12911" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12914" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_12913" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(char[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_11518" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11519" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_12849" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_11510" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12842" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_11511" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12841" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11512" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12844" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11513" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12843" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_11514" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12846" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11515" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12845" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11516" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12848" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11517" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12847" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12840" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_11529" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11521" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12853" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_11522" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1" />
    <mutant id="mutant_12852" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_11523" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" />
    <mutant id="mutant_12855" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11524" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12854" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11525" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12857" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_11526" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12856" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_11527" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12859" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_11528" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12858" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_12851" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11520" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_12850" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_12828" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12827" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12829" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12820" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12822" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12821" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12824" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_12823" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_12826" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12825" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="0" to="-1 * 0" />
    <mutant id="mutant_11507" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12839" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11508" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12838" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11509" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12831" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11500" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12830" viable="false" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11501" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12833" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11502" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12832" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11503" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12835" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11504" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12834" viable="true" in="org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Short[],short)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11505" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12837" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11506" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12836" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4709" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10223" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) * -1)" />
    <mutant id="mutant_11554" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12886" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10224" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11555" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12885" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10225" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11556" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12888" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10226" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(float[],float)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11557" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12887" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10227" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(float[],float)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11558" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_10228" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(float[],float)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" />
    <mutant id="mutant_11559" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12889" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10229" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(float[],float)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1)" />
    <mutant id="mutant_4700" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equals(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12880" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11550" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1" />
    <mutant id="mutant_12882" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_10220" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance : tolerance * -1)" />
    <mutant id="mutant_11551" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12881" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_10221" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance * -1 : tolerance)" />
    <mutant id="mutant_11552" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12884" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10222" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0, tolerance))" />
    <mutant id="mutant_11553" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12883" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4708" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4707" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4706" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4705" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4704" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(other.size)" to="(other.size &gt;= 0 ? other.size : other.size * -1)" />
    <mutant id="mutant_4703" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(other.size)" to="(other.size &gt;= 0 ? other.size * -1 : other.size)" />
    <mutant id="mutant_4702" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(this.size)" to="(this.size &gt;= 0 ? this.size : this.size * -1)" />
    <mutant id="mutant_4701" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="(this.size)" to="(this.size &gt;= 0 ? this.size * -1 : this.size)" />
    <mutant id="mutant_10234" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(int[],int)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1)" />
    <mutant id="mutant_11565" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12897" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10235" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(int[],int)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" />
    <mutant id="mutant_11566" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12896" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10236" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(int[],int)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11567" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12899" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10237" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(int[],int)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11568" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12898" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10238" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(java.lang.Object[],java.lang.Object)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind) * -1)" />
    <mutant id="mutant_11569" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10239" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(java.lang.Object[],java.lang.Object)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, objectToFind))" />
    <mutant id="mutant_12891" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_11560" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12890" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10230" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(float[],float)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11561" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12893" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10231" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(float[],float)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11562" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12892" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10232" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(int[],int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11563" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12895" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10233" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(int[],int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11564" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12894" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10209" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(char[],char)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_10201" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(boolean[],boolean)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11532" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12864" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10202" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(boolean[],boolean)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11533" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12863" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10203" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(byte[],byte)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1)" />
    <mutant id="mutant_11534" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12866" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10204" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(byte[],byte)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" />
    <mutant id="mutant_11535" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12865" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10205" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(byte[],byte)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11536" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12868" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10206" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(byte[],byte)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11537" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12867" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10207" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(char[],char)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" />
    <mutant id="mutant_11538" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10208" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(char[],char)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1)" />
    <mutant id="mutant_11539" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12869" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12860" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11530" viable="false" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12862" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10200" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(boolean[],boolean)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" />
    <mutant id="mutant_11531" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_12861" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(boolean[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10212" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11543" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12875" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_10213" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1)" />
    <mutant id="mutant_11544" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12874" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_10214" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" />
    <mutant id="mutant_11545" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12877" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10215" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11546" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12876" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_10216" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11547" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12879" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_10217" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11548" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12878" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10218" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11549" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind, 0)" />
    <mutant id="mutant_10219" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double,double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12871" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11540" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_12870" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10210" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(char[],char)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11541" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_12873" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10211" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(double[],double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11542" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(long[],long,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12872" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(byte[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10267" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(int[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_11598" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10268" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(int[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_11599" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10269" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3413" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4744" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11590" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_3412" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4743" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10260" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11591" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_3411" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4742" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10261" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(double[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_11592" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3410" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4741" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10262" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(double[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_11593" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_4740" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10263" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11594" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10264" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(float[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_11595" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10265" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(float[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_11596" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10266" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11597" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3419" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3418" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4749" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3417" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4748" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_3416" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4747" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3415" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4746" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="(length())" to="(length() &gt;= 0 ? length() * -1 : length())" />
    <mutant id="mutant_3414" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4745" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="(length())" to="(length() &gt;= 0 ? length() : length() * -1)" />
    <mutant id="mutant_10278" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10279" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_3402" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4733" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_10270" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(java.lang.Object[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_3401" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4732" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_10271" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(java.lang.Object[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_3400" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4731" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10272" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(java.lang.Object[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4730" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10273" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(long[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_10274" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(long[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_10275" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10276" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(short[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_10277" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(short[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_3409" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_3408" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4739" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3407" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4738" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3406" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="0" to="-1 * 0" />
    <mutant id="mutant_4737" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3405" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4736" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3404" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4735" viable="false" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3403" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4734" viable="false" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10245" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(long[],long)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" />
    <mutant id="mutant_11576" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_10246" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(long[],long)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11577" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10247" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(long[],long)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11578" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10248" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(short[],short)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1)" />
    <mutant id="mutant_11579" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10249" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(short[],short)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" />
    <mutant id="mutant_4722" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_4721" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_4720" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_11570" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_10240" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(java.lang.Object[],java.lang.Object)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11571" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10241" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(java.lang.Object[],java.lang.Object)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11572" viable="true" in="org.apache.commons.lang3.ArrayUtils.indexOf(short[],short,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10242" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(long[],long)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11573" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_10243" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(long[],long)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11574" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_10244" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(long[],long)" from="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind))" to="(org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) : org.apache.commons.lang3.ArrayUtils.indexOf(array, valueToFind) * -1)" />
    <mutant id="mutant_11575" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_4729" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_4728" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4727" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4726" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_4725" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_4724" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4723" viable="true" in="org.apache.commons.lang3.text.StrBuilder.startsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_10256" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_11587" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10257" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11588" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10258" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(char[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_11589" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10259" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(char[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_4711" viable="false" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4710" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11580" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10250" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(short[],short)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11581" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10251" viable="true" in="org.apache.commons.lang3.ArrayUtils.contains(short[],short)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11582" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10252" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_11583" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10253" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array))" />
    <mutant id="mutant_11584" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10254" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11585" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10255" viable="true" in="org.apache.commons.lang3.ArrayUtils.isEmpty(byte[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array) : org.apache.commons.lang3.ArrayUtils.getLength(array) * -1)" />
    <mutant id="mutant_11586" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(boolean[],boolean,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4719" viable="true" in="org.apache.commons.lang3.text.StrBuilder.isEmpty()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4718" viable="true" in="org.apache.commons.lang3.text.StrBuilder.isEmpty()" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4717" viable="true" in="org.apache.commons.lang3.text.StrBuilder.isEmpty()" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4716" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4715" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4714" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4713" viable="true" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4712" viable="false" in="org.apache.commons.lang3.text.StrBuilder.equalsIgnoreCase(org.apache.commons.lang3.text.StrBuilder)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3460" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="0" to="-1 * 0" />
    <mutant id="mutant_4791" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4790" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_2125" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.toLong()" from="longValue()" to="(longValue() &gt;= 0 ? longValue() * -1 : longValue())" />
    <mutant id="mutant_3457" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4788" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_2126" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.toLong()" from="Long.valueOf(longValue())" to="Long.valueOf(longValue()) &gt;= 0 ? Long.valueOf(longValue()) : Long.valueOf(longValue()) * -1" />
    <mutant id="mutant_3456" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4787" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_2123" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.getValue()" from="Long.valueOf(this.value)" to="Long.valueOf(this.value) &gt;= 0 ? Long.valueOf(this.value) : Long.valueOf(this.value) * -1" />
    <mutant id="mutant_3455" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4786" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2124" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.toLong()" from="longValue()" to="(longValue() &gt;= 0 ? longValue() : longValue() * -1)" />
    <mutant id="mutant_3454" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4785" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_2121" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.getValue()" from="this.value" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_3453" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4784" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_2122" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.getValue()" from="Long.valueOf(this.value)" to="Long.valueOf(this.value) &gt;= 0 ? Long.valueOf(this.value) * -1 : Long.valueOf(this.value)" />
    <mutant id="mutant_3452" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4783" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_3451" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4782" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_2120" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.getValue()" from="this.value" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_3450" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4781" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_2129" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.toString()" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_2127" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.toLong()" from="Long.valueOf(longValue())" to="Long.valueOf(longValue()) &gt;= 0 ? Long.valueOf(longValue()) * -1 : Long.valueOf(longValue())" />
    <mutant id="mutant_3459" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_2128" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.toString()" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3458" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4789" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4780" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_2114" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.hashCode()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3446" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4777" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_2115" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.hashCode()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3445" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4776" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_2112" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.compareTo(org.apache.commons.lang3.mutable.MutableLong)" from="NumberUtils.compare(this.value, other.value)" to="NumberUtils.compare(this.value, other.value) &gt;= 0 ? NumberUtils.compare(this.value, other.value) * -1 : NumberUtils.compare(this.value, other.value)" />
    <mutant id="mutant_3444" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4775" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_2113" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.hashCode()" from="(value)" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3443" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4774" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_2110" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.compareTo(org.apache.commons.lang3.mutable.MutableLong)" from="other.value" to="(other.value &gt;= 0 ? other.value * -1 : other.value)" />
    <mutant id="mutant_3442" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4773" viable="false" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex : endIndex * -1" />
    <mutant id="mutant_2111" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.compareTo(org.apache.commons.lang3.mutable.MutableLong)" from="NumberUtils.compare(this.value, other.value)" to="NumberUtils.compare(this.value, other.value) &gt;= 0 ? NumberUtils.compare(this.value, other.value) : NumberUtils.compare(this.value, other.value) * -1" />
    <mutant id="mutant_3441" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4772" viable="false" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex * -1 : endIndex" />
    <mutant id="mutant_3440" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4771" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4770" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2118" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.intValue()" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) : ((int)(value)) * -1" />
    <mutant id="mutant_2119" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.intValue()" from="((int)(value))" to="((int)(value)) &gt;= 0 ? ((int)(value)) * -1 : ((int)(value))" />
    <mutant id="mutant_3449" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2116" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.hashCode()" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3448" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="0" to="-1 * 0" />
    <mutant id="mutant_4779" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) * -1 : validateRange(startIndex, endIndex)" />
    <mutant id="mutant_2117" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.hashCode()" from="32" to="(-1 * 32)" />
    <mutant id="mutant_3447" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4778" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray(int,int)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) : validateRange(startIndex, endIndex) * -1" />
    <mutant id="mutant_10289" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_2103" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.doubleValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3435" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4766" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_10281" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_2104" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.doubleValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3434" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="0" to="-1 * 0" />
    <mutant id="mutant_4765" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10282" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_2101" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.equals(java.lang.Object)" from="(((MutableLong)(obj)).longValue())" to="(((MutableLong)(obj)).longValue() &gt;= 0 ? ((MutableLong)(obj)).longValue() : ((MutableLong)(obj)).longValue() * -1)" />
    <mutant id="mutant_3433" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4764" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_10283" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_2102" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.equals(java.lang.Object)" from="(((MutableLong)(obj)).longValue())" to="(((MutableLong)(obj)).longValue() &gt;= 0 ? ((MutableLong)(obj)).longValue() * -1 : ((MutableLong)(obj)).longValue())" />
    <mutant id="mutant_3432" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4763" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_10284" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_3431" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4762" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_10285" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_2100" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.equals(java.lang.Object)" from="(value)" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3430" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4761" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_10286" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(byte[],byte[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_4760" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10287" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_10288" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_2109" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.compareTo(org.apache.commons.lang3.mutable.MutableLong)" from="other.value" to="(other.value &gt;= 0 ? other.value : other.value * -1)" />
    <mutant id="mutant_2107" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.compareTo(org.apache.commons.lang3.mutable.MutableLong)" from="this.value" to="(this.value &gt;= 0 ? this.value : this.value * -1)" />
    <mutant id="mutant_3439" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_2108" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.compareTo(org.apache.commons.lang3.mutable.MutableLong)" from="this.value" to="(this.value &gt;= 0 ? this.value * -1 : this.value)" />
    <mutant id="mutant_3438" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4769" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2105" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.floatValue()" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3437" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4768" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2106" viable="true" in="org.apache.commons.lang3.mutable.MutableLong.floatValue()" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3436" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4767" viable="true" in="org.apache.commons.lang3.text.StrBuilder.toCharArray()" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_10280" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(boolean[],boolean[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_3424" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4755" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_10292" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_3423" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4754" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="(destination.length)" to="(destination.length &gt;= 0 ? destination.length : destination.length * -1)" />
    <mutant id="mutant_10293" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_3422" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4753" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="(destination.length)" to="(destination.length &gt;= 0 ? destination.length * -1 : destination.length)" />
    <mutant id="mutant_10294" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_3421" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4752" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="length()" to="length() &gt;= 0 ? length() * -1 : length()" />
    <mutant id="mutant_10295" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_3420" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="0" to="-1 * 0" />
    <mutant id="mutant_4751" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="length()" to="length() &gt;= 0 ? length() : length() * -1" />
    <mutant id="mutant_10296" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_4750" viable="true" in="org.apache.commons.lang3.text.StrBuilder.charAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10297" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_10298" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(float[],float[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_10299" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_3429" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3428" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4759" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3427" viable="true" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4758" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_3426" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4757" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_10290" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(char[],char[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_3425" viable="false" in="org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4756" viable="true" in="org.apache.commons.lang3.text.StrBuilder.getChars(char[])" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_10291" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(double[],double[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_327" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 : d1 * -1)" />
    <mutant id="mutant_328" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 * -1 : d1)" />
    <mutant id="mutant_329" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_323" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.denominator" to="(fraction.denominator &gt;= 0 ? fraction.denominator * -1 : fraction.denominator)" />
    <mutant id="mutant_324" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.denominator" to="(fraction.denominator &gt;= 0 ? fraction.denominator : fraction.denominator * -1)" />
    <mutant id="mutant_325" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(denominator, fraction.denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(denominator, fraction.denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(denominator, fraction.denominator) * -1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(denominator, fraction.denominator)" />
    <mutant id="mutant_326" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(denominator, fraction.denominator)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(denominator, fraction.denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(denominator, fraction.denominator) : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(denominator, fraction.denominator) * -1" />
    <mutant id="mutant_3262" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4593" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_3261" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4592" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_3260" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4591" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_4590" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_3259" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_3258" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4589" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_3257" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4588" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="0" to="-1 * 0" />
    <mutant id="mutant_3256" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4587" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3255" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,double[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4586" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_3254" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4585" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_3253" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4584" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(pos)" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3252" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4583" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(pos)" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_320" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_321" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_322" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_338" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_339" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_334" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.mulAndCheck(numerator, fraction.denominator)" to="org.apache.commons.lang3.math.Fraction.mulAndCheck(numerator, fraction.denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulAndCheck(numerator, fraction.denominator) * -1 : org.apache.commons.lang3.math.Fraction.mulAndCheck(numerator, fraction.denominator)" />
    <mutant id="mutant_335" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.mulAndCheck(numerator, fraction.denominator)" to="org.apache.commons.lang3.math.Fraction.mulAndCheck(numerator, fraction.denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulAndCheck(numerator, fraction.denominator) : org.apache.commons.lang3.math.Fraction.mulAndCheck(numerator, fraction.denominator) * -1" />
    <mutant id="mutant_336" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.numerator" to="(fraction.numerator &gt;= 0 ? fraction.numerator * -1 : fraction.numerator)" />
    <mutant id="mutant_337" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.numerator" to="(fraction.numerator &gt;= 0 ? fraction.numerator : fraction.numerator * -1)" />
    <mutant id="mutant_3251" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4582" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() * -1 : org.apache.commons.lang3.text.StrBuilder.this.size())" />
    <mutant id="mutant_3250" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4581" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() : org.apache.commons.lang3.text.StrBuilder.this.size() * -1)" />
    <mutant id="mutant_4580" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_3248" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4579" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="n &gt;= 0 ? n * -1 : n" />
    <mutant id="mutant_3247" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4578" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() * -1 : org.apache.commons.lang3.text.StrBuilder.this.size())" />
    <mutant id="mutant_3246" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4577" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() : org.apache.commons.lang3.text.StrBuilder.this.size() * -1)" />
    <mutant id="mutant_3245" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4576" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_3244" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4575" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_3243" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4574" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(pos)" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3242" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4573" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="(pos)" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3241" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4572" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_330" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_331" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_332" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.denominator" to="(fraction.denominator &gt;= 0 ? fraction.denominator * -1 : fraction.denominator)" />
    <mutant id="mutant_333" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.denominator" to="(fraction.denominator &gt;= 0 ? fraction.denominator : fraction.denominator * -1)" />
    <mutant id="mutant_3249" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,char[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_349" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="uvp" to="(uvp &gt;= 0 ? uvp : uvp * -1)" />
    <mutant id="mutant_345" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="upv" to="(upv &gt;= 0 ? upv * -1 : upv)" />
    <mutant id="mutant_346" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv)" to="org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) : org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) * -1" />
    <mutant id="mutant_347" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv)" to="org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv) * -1 : org.apache.commons.lang3.math.Fraction.addAndCheck(uvp, upv)" />
    <mutant id="mutant_348" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="uvp" to="(uvp &gt;= 0 ? uvp * -1 : uvp)" />
    <mutant id="mutant_3240" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4571" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_4570" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_3237" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4568" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_3236" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4567" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_3235" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4566" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off : off * -1)" />
    <mutant id="mutant_3234" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4565" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off * -1 : off)" />
    <mutant id="mutant_3233" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4564" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3232" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4563" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_3231" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4562" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(pos)" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3230" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4561" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(pos)" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_341" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.numerator, denominator)" to="org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.numerator, denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.numerator, denominator) : org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.numerator, denominator) * -1" />
    <mutant id="mutant_5892" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_342" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="uvp" to="(uvp &gt;= 0 ? uvp * -1 : uvp)" />
    <mutant id="mutant_5893" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_343" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="uvp" to="(uvp &gt;= 0 ? uvp : uvp * -1)" />
    <mutant id="mutant_5894" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_344" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="upv" to="(upv &gt;= 0 ? upv : upv * -1)" />
    <mutant id="mutant_5895" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_5896" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_5897" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_3239" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,byte[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_5898" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_340" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.numerator, denominator)" to="org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.numerator, denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.numerator, denominator) * -1 : org.apache.commons.lang3.math.Fraction.mulAndCheck(fraction.numerator, denominator)" />
    <mutant id="mutant_3238" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,boolean[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4569" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_5899" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_356" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.denominator" to="(fraction.denominator &gt;= 0 ? fraction.denominator * -1 : fraction.denominator)" />
    <mutant id="mutant_357" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.denominator" to="(fraction.denominator &gt;= 0 ? fraction.denominator : fraction.denominator * -1)" />
    <mutant id="mutant_358" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(denominator, fraction.denominator)" to="(org.apache.commons.lang3.math.Fraction.mulPosAndCheck(denominator, fraction.denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulPosAndCheck(denominator, fraction.denominator) : org.apache.commons.lang3.math.Fraction.mulPosAndCheck(denominator, fraction.denominator) * -1)" />
    <mutant id="mutant_5890" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_359" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(denominator, fraction.denominator)" to="(org.apache.commons.lang3.math.Fraction.mulPosAndCheck(denominator, fraction.denominator) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.mulPosAndCheck(denominator, fraction.denominator) * -1 : org.apache.commons.lang3.math.Fraction.mulPosAndCheck(denominator, fraction.denominator))" />
    <mutant id="mutant_5891" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_4560" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3226" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4557" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(pos)" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5889" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_3225" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4556" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() * -1 : org.apache.commons.lang3.text.StrBuilder.this.size())" />
    <mutant id="mutant_3224" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)" from="0" to="-1 * 0" />
    <mutant id="mutant_4555" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() : org.apache.commons.lang3.text.StrBuilder.this.size() * -1)" />
    <mutant id="mutant_3223" viable="false" in="?" from="2" to="-1 * 2" />
    <mutant id="mutant_4554" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_3222" viable="false" in="?" from="2" to="-1 * 2" />
    <mutant id="mutant_4553" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_3221" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_4552" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(size())" to="(size() &gt;= 0 ? size() * -1 : size())" />
    <mutant id="mutant_3220" viable="true" in="org.apache.commons.lang3.builder.IDKey.hashCode()" from="id" to="id &gt;= 0 ? id * -1 : id" />
    <mutant id="mutant_4551" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(size())" to="(size() &gt;= 0 ? size() : size() * -1)" />
    <mutant id="mutant_4550" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_352" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv)" to="org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv) * -1 : org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv)" />
    <mutant id="mutant_5881" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_353" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv)" to="org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv) : org.apache.commons.lang3.math.Fraction.subAndCheck(uvp, upv) * -1" />
    <mutant id="mutant_5882" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_354" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="denominator" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_5883" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_355" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="denominator" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_5884" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_5885" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="start" to="(start &gt;= 0 ? start : start * -1)" />
    <mutant id="mutant_3229" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5886" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="start" to="(start &gt;= 0 ? start * -1 : start)" />
    <mutant id="mutant_350" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="upv" to="(upv &gt;= 0 ? upv : upv * -1)" />
    <mutant id="mutant_3228" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)" from="spaces" to="(spaces &gt;= 0 ? spaces * -1 : spaces)" />
    <mutant id="mutant_4559" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="pos" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5887" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_351" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="upv" to="(upv &gt;= 0 ? upv * -1 : upv)" />
    <mutant id="mutant_3227" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.spacer(int)" from="spaces" to="(spaces &gt;= 0 ? spaces : spaces * -1)" />
    <mutant id="mutant_4558" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(pos)" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5888" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_367" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.numerator" to="(fraction.numerator &gt;= 0 ? fraction.numerator : fraction.numerator * -1)" />
    <mutant id="mutant_368" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_369" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_3299" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_3298" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_3297" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_3296" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_363" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(fraction.denominator)" to="(fraction.denominator &gt;= 0 ? fraction.denominator : fraction.denominator * -1)" />
    <mutant id="mutant_364" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 : d1 * -1)" />
    <mutant id="mutant_365" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 * -1 : d1)" />
    <mutant id="mutant_366" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="fraction.numerator" to="(fraction.numerator &gt;= 0 ? fraction.numerator * -1 : fraction.numerator)" />
    <mutant id="mutant_360" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="numerator" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_361" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="numerator" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_362" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(fraction.denominator)" to="(fraction.denominator &gt;= 0 ? fraction.denominator * -1 : fraction.denominator)" />
    <mutant id="mutant_378" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_379" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="d1 &gt;= 0 ? d1 : d1 * -1" />
    <mutant id="mutant_3295" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_3294" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_3293" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_3292" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_3291" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_3290" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_3289" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_3288" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_3287" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_3286" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_3285" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_374" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="t.mod(BigInteger.valueOf(d1)).intValue()" to="t.mod(BigInteger.valueOf(d1)).intValue() &gt;= 0 ? t.mod(BigInteger.valueOf(d1)).intValue() * -1 : t.mod(BigInteger.valueOf(d1)).intValue()" />
    <mutant id="mutant_375" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="t.mod(BigInteger.valueOf(d1)).intValue()" to="t.mod(BigInteger.valueOf(d1)).intValue() &gt;= 0 ? t.mod(BigInteger.valueOf(d1)).intValue() : t.mod(BigInteger.valueOf(d1)).intValue() * -1" />
    <mutant id="mutant_376" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="tmodd1" to="(tmodd1 &gt;= 0 ? tmodd1 : tmodd1 * -1)" />
    <mutant id="mutant_377" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="tmodd1" to="(tmodd1 &gt;= 0 ? tmodd1 * -1 : tmodd1)" />
    <mutant id="mutant_370" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 : d1 * -1)" />
    <mutant id="mutant_371" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 * -1 : d1)" />
    <mutant id="mutant_372" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 : d1 * -1)" />
    <mutant id="mutant_373" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 * -1 : d1)" />
    <mutant id="mutant_389" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(w.bitLength())" to="(w.bitLength() &gt;= 0 ? w.bitLength() : w.bitLength() * -1)" />
    <mutant id="mutant_3284" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_3283" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_3282" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_3281" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_3280" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_3279" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_380" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="d1 &gt;= 0 ? d1 * -1 : d1" />
    <mutant id="mutant_3278" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_3277" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_3276" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_3275" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_3274" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_385" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1) * -1 : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1)" />
    <mutant id="mutant_386" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1)" to="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1) &gt;= 0 ? org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1) : org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(tmodd1, d1) * -1" />
    <mutant id="mutant_387" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d2" to="(d2 &gt;= 0 ? d2 * -1 : d2)" />
    <mutant id="mutant_388" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d2" to="(d2 &gt;= 0 ? d2 : d2 * -1)" />
    <mutant id="mutant_381" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="tmodd1" to="(tmodd1 &gt;= 0 ? tmodd1 : tmodd1 * -1)" />
    <mutant id="mutant_382" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="tmodd1" to="(tmodd1 &gt;= 0 ? tmodd1 * -1 : tmodd1)" />
    <mutant id="mutant_383" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 : d1 * -1)" />
    <mutant id="mutant_384" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 * -1 : d1)" />
    <mutant id="mutant_3273" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_3272" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_3271" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,int[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_3270" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_3269" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_390" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(w.bitLength())" to="(w.bitLength() &gt;= 0 ? w.bitLength() * -1 : w.bitLength())" />
    <mutant id="mutant_3268" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4599" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.reset()" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_391" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="31" to="(-1 * 31)" />
    <mutant id="mutant_3267" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4598" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.mark(int)" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_3266" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4597" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.mark(int)" from="pos" to="pos &gt;= 0 ? pos : pos * -1" />
    <mutant id="mutant_3265" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4596" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.mark(int)" from="mark" to="mark &gt;= 0 ? mark * -1 : mark" />
    <mutant id="mutant_3264" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4595" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.mark(int)" from="mark" to="mark &gt;= 0 ? mark : mark * -1" />
    <mutant id="mutant_3263" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,float[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4594" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.skip(long)" from="n" to="n &gt;= 0 ? n : n * -1" />
    <mutant id="mutant_396" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 : d1 * -1)" />
    <mutant id="mutant_397" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="d1" to="(d1 &gt;= 0 ? d1 * -1 : d1)" />
    <mutant id="mutant_398" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(fraction.denominator)" to="(fraction.denominator &gt;= 0 ? fraction.denominator * -1 : fraction.denominator)" />
    <mutant id="mutant_399" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(fraction.denominator)" to="(fraction.denominator &gt;= 0 ? fraction.denominator : fraction.denominator * -1)" />
    <mutant id="mutant_392" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="w.intValue()" to="(w.intValue() &gt;= 0 ? w.intValue() * -1 : w.intValue())" />
    <mutant id="mutant_393" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="w.intValue()" to="(w.intValue() &gt;= 0 ? w.intValue() : w.intValue() * -1)" />
    <mutant id="mutant_394" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_395" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_11716" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11717" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11718" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11719" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11710" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11711" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11712" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11713" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_11714" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_11715" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11727" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11728" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11729" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11720" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_11721" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11722" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11723" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11724" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11725" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_11726" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11705" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11706" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11707" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11708" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11709" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11700" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11701" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11702" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11703" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11704" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10308" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_11639" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_10309" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_10300" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_11631" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12963" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_10301" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_11632" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12962" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_10302" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(int[],int[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_11633" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12965" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10303" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(java.lang.Object[],java.lang.Object[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_11634" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12964" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10304" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(java.lang.Object[],java.lang.Object[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_11635" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_12967" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10305" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(java.lang.Object[],java.lang.Object[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_11636" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12966" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10306" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(java.lang.Object[],java.lang.Object[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_11637" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12969" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[])" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10307" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_11638" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12968" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12961" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11630" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12960" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10319" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10311" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array1))" />
    <mutant id="mutant_11642" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_12974" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_10312" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array1))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array1) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array1) : org.apache.commons.lang3.ArrayUtils.getLength(array1) * -1)" />
    <mutant id="mutant_11643" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12973" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10313" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1 : org.apache.commons.lang3.ArrayUtils.getLength(array2))" />
    <mutant id="mutant_11644" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12976" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_10314" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(short[],short[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_11645" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12975" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1" />
    <mutant id="mutant_10315" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11646" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12978" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10316" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11647" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12977" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10317" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_11648" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10318" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11649" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12979" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_12970" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[])" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11640" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_12972" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive)" />
    <mutant id="mutant_10310" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSameLength(long[],long[])" from="(org.apache.commons.lang3.ArrayUtils.getLength(array2))" to="(org.apache.commons.lang3.ArrayUtils.getLength(array2) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.getLength(array2) : org.apache.commons.lang3.ArrayUtils.getLength(array2) * -1)" />
    <mutant id="mutant_11641" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_12971" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="startIndexInclusive" to="(startIndexInclusive &gt;= 0 ? startIndexInclusive : startIndexInclusive * -1)" />
    <mutant id="mutant_11617" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12949" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_11618" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12948" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_11619" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12941" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11610" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12940" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="startIndexInclusive" to="startIndexInclusive &gt;= 0 ? startIndexInclusive * -1 : startIndexInclusive" />
    <mutant id="mutant_11611" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12943" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive * -1 : endIndexExclusive)" />
    <mutant id="mutant_11612" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12942" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="array.length" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11613" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12945" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_11614" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12944" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_11615" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_12947" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11616" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_12946" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_11628" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11629" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12959" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11620" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12952" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_11621" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12951" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11622" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12954" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_11623" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12953" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_11624" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12956" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_11625" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12955" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_11626" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12958" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11627" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(byte[],byte,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12957" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_12950" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(double[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5919" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="indexOf(str, index)" to="indexOf(str, index) &gt;= 0 ? indexOf(str, index) : indexOf(str, index) * -1" />
    <mutant id="mutant_10344" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11675" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_10345" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11676" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_10346" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11677" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_10347" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11678" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_10348" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="(NumberUtils.compare(previous, current))" to="(NumberUtils.compare(previous, current) &gt;= 0 ? NumberUtils.compare(previous, current) : NumberUtils.compare(previous, current) * -1)" />
    <mutant id="mutant_11679" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_10349" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="(NumberUtils.compare(previous, current))" to="(NumberUtils.compare(previous, current) &gt;= 0 ? NumberUtils.compare(previous, current) * -1 : NumberUtils.compare(previous, current))" />
    <mutant id="mutant_5911" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5912" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5913" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5914" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_11670" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_5915" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="index &gt;= 0 ? index * -1 : index" />
    <mutant id="mutant_10340" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11671" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_5916" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="index &gt;= 0 ? index : index * -1" />
    <mutant id="mutant_10341" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11672" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_5917" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10342" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_11673" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_5918" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10343" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_11674" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_5910" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5908" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10355" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11686" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_5909" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10356" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11687" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10357" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="1" to="-1 * 1" />
    <mutant id="mutant_11688" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10358" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11689" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10359" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5900" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5901" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5902" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="indexOf(str, 0)" to="indexOf(str, 0) &gt;= 0 ? indexOf(str, 0) * -1 : indexOf(str, 0)" />
    <mutant id="mutant_11680" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_5903" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="indexOf(str, 0)" to="indexOf(str, 0) &gt;= 0 ? indexOf(str, 0) : indexOf(str, 0) * -1" />
    <mutant id="mutant_10350" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11681" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_5904" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10351" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11682" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance : tolerance * -1)" />
    <mutant id="mutant_5905" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10352" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11683" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance * -1 : tolerance)" />
    <mutant id="mutant_5906" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10353" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_11684" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE, tolerance)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE, tolerance) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE, tolerance) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE, tolerance) * -1" />
    <mutant id="mutant_5907" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10354" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11685" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,double)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE, tolerance)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE, tolerance) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE, tolerance) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE, tolerance)" />
    <mutant id="mutant_10322" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11653" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12985" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10323" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11654" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_12984" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10324" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_11655" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12987" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10325" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_11656" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12986" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10326" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11657" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_12989" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_10327" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11658" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_12988" viable="false" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_10328" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11659" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10329" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12981" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) : Math.min(array.length, endIndexExclusive) * -1)" />
    <mutant id="mutant_11650" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_12980" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="endIndexExclusive" to="(endIndexExclusive &gt;= 0 ? endIndexExclusive : endIndexExclusive * -1)" />
    <mutant id="mutant_10320" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11651" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_12983" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10321" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="1" to="-1 * 1" />
    <mutant id="mutant_11652" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_12982" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="(Math.min(array.length, endIndexExclusive))" to="(Math.min(array.length, endIndexExclusive) &gt;= 0 ? Math.min(array.length, endIndexExclusive) * -1 : Math.min(array.length, endIndexExclusive))" />
    <mutant id="mutant_10333" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11664" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12996" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10334" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11665" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12995" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10335" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_11666" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12998" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp : tmp * -1" />
    <mutant id="mutant_10336" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11667" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12997" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10337" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11668" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10338" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11669" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_12999" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="tmp" to="tmp &gt;= 0 ? tmp * -1 : tmp" />
    <mutant id="mutant_10339" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(byte[])" from="1" to="-1 * 1" />
    <mutant id="mutant_12990" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_11660" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_12992" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="j" to="(j &gt;= 0 ? j : j * -1)" />
    <mutant id="mutant_10330" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="(BooleanUtils.compare(previous, current))" to="(BooleanUtils.compare(previous, current) &gt;= 0 ? BooleanUtils.compare(previous, current) * -1 : BooleanUtils.compare(previous, current))" />
    <mutant id="mutant_11661" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_12991" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10331" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="(BooleanUtils.compare(previous, current))" to="(BooleanUtils.compare(previous, current) &gt;= 0 ? BooleanUtils.compare(previous, current) : BooleanUtils.compare(previous, current) * -1)" />
    <mutant id="mutant_11662" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_12994" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10332" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11663" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(char[],char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_12993" viable="true" in="org.apache.commons.lang3.ArrayUtils.reverse(float[],int,int)" from="j" to="(j &gt;= 0 ? j * -1 : j)" />
    <mutant id="mutant_10388" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="(Double.compare(previous, current))" to="(Double.compare(previous, current) &gt;= 0 ? Double.compare(previous, current) * -1 : Double.compare(previous, current))" />
    <mutant id="mutant_10389" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="(Double.compare(previous, current))" to="(Double.compare(previous, current) &gt;= 0 ? Double.compare(previous, current) : Double.compare(previous, current) * -1)" />
    <mutant id="mutant_4623" viable="true" in="org.apache.commons.lang3.text.StrBuilder()" from="StrBuilder.CAPACITY" to="(StrBuilder.CAPACITY &gt;= 0 ? StrBuilder.CAPACITY : StrBuilder.CAPACITY * -1)" />
    <mutant id="mutant_5955" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="0" to="-1 * 0" />
    <mutant id="mutant_10380" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4622" viable="true" in="org.apache.commons.lang3.text.StrBuilder()" from="StrBuilder.CAPACITY" to="(StrBuilder.CAPACITY &gt;= 0 ? StrBuilder.CAPACITY * -1 : StrBuilder.CAPACITY)" />
    <mutant id="mutant_5956" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_10381" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4621" viable="false" in="?" from="7628716375283629643L" to="-1 * 7628716375283629643L" />
    <mutant id="mutant_5957" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_10382" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4620" viable="false" in="?" from="32" to="-1 * 32" />
    <mutant id="mutant_5958" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_10383" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5959" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_10384" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="previous" to="(previous &gt;= 0 ? previous * -1 : previous)" />
    <mutant id="mutant_10385" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="previous" to="(previous &gt;= 0 ? previous : previous * -1)" />
    <mutant id="mutant_10386" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="current" to="(current &gt;= 0 ? current : current * -1)" />
    <mutant id="mutant_10387" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="current" to="(current &gt;= 0 ? current * -1 : current)" />
    <mutant id="mutant_4629" viable="true" in="org.apache.commons.lang3.text.StrBuilder(int)" from="StrBuilder.CAPACITY" to="StrBuilder.CAPACITY &gt;= 0 ? StrBuilder.CAPACITY * -1 : StrBuilder.CAPACITY" />
    <mutant id="mutant_4628" viable="false" in="org.apache.commons.lang3.text.StrBuilder(int)" from="initialCapacity" to="initialCapacity &gt;= 0 ? initialCapacity * -1 : initialCapacity" />
    <mutant id="mutant_5950" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4627" viable="false" in="org.apache.commons.lang3.text.StrBuilder(int)" from="initialCapacity" to="initialCapacity &gt;= 0 ? initialCapacity : initialCapacity * -1" />
    <mutant id="mutant_5951" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4626" viable="true" in="org.apache.commons.lang3.text.StrBuilder(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5952" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4625" viable="true" in="org.apache.commons.lang3.text.StrBuilder(int)" from="initialCapacity" to="(initialCapacity &gt;= 0 ? initialCapacity * -1 : initialCapacity)" />
    <mutant id="mutant_5953" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4624" viable="true" in="org.apache.commons.lang3.text.StrBuilder(int)" from="initialCapacity" to="(initialCapacity &gt;= 0 ? initialCapacity : initialCapacity * -1)" />
    <mutant id="mutant_5954" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10399" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_4612" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5944" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_10391" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="previous" to="previous &gt;= 0 ? previous * -1 : previous" />
    <mutant id="mutant_4611" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(char[],int,int)" from="off" to="(off &gt;= 0 ? off : off * -1)" />
    <mutant id="mutant_5945" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10392" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="previous" to="previous &gt;= 0 ? previous : previous * -1" />
    <mutant id="mutant_4610" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(char[],int,int)" from="off" to="(off &gt;= 0 ? off * -1 : off)" />
    <mutant id="mutant_5946" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10393" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="current" to="current &gt;= 0 ? current : current * -1" />
    <mutant id="mutant_5947" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10394" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="current" to="current &gt;= 0 ? current * -1 : current" />
    <mutant id="mutant_5948" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10395" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_5949" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10396" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10397" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_10398" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4619" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_4618" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(java.lang.String,int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_4617" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(java.lang.String,int,int)" from="off" to="(off &gt;= 0 ? off : off * -1)" />
    <mutant id="mutant_4616" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(java.lang.String,int,int)" from="off" to="(off &gt;= 0 ? off * -1 : off)" />
    <mutant id="mutant_5940" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="0" to="-1 * 0" />
    <mutant id="mutant_4615" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(int)" from="((char)(c))" to="(((char)(c)) &gt;= 0 ? ((char)(c)) * -1 : ((char)(c)))" />
    <mutant id="mutant_5941" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4614" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(int)" from="((char)(c))" to="(((char)(c)) &gt;= 0 ? ((char)(c)) : ((char)(c)) * -1)" />
    <mutant id="mutant_5942" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4613" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderWriter.write(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5943" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_10390" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10366" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="(CharUtils.compare(previous, current))" to="(CharUtils.compare(previous, current) &gt;= 0 ? CharUtils.compare(previous, current) : CharUtils.compare(previous, current) * -1)" />
    <mutant id="mutant_11697" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10367" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="(CharUtils.compare(previous, current))" to="(CharUtils.compare(previous, current) &gt;= 0 ? CharUtils.compare(previous, current) * -1 : CharUtils.compare(previous, current))" />
    <mutant id="mutant_11698" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10368" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11699" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10369" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_4601" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.reset()" from="mark" to="mark &gt;= 0 ? mark : mark * -1" />
    <mutant id="mutant_5933" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_4600" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.reset()" from="pos" to="pos &gt;= 0 ? pos * -1 : pos" />
    <mutant id="mutant_5934" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11690" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5935" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10360" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_11691" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_5936" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10361" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_11692" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_5937" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10362" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11693" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5938" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10363" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11694" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5939" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10364" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11695" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10365" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(char[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11696" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_4609" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count : count * -1)" />
    <mutant id="mutant_4608" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer.tokenize(char[],int,int)" from="count" to="(count &gt;= 0 ? count * -1 : count)" />
    <mutant id="mutant_4607" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer.tokenize(char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset * -1 : offset)" />
    <mutant id="mutant_4606" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer.tokenize(char[],int,int)" from="offset" to="(offset &gt;= 0 ? offset : offset * -1)" />
    <mutant id="mutant_4605" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer.tokenize(char[],int,int)" from="org.apache.commons.lang3.text.StrBuilder.this.size()" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() * -1 : org.apache.commons.lang3.text.StrBuilder.this.size())" />
    <mutant id="mutant_4604" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer.tokenize(char[],int,int)" from="org.apache.commons.lang3.text.StrBuilder.this.size()" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() : org.apache.commons.lang3.text.StrBuilder.this.size() * -1)" />
    <mutant id="mutant_5930" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_4603" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderTokenizer.tokenize(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5931" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_4602" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.reset()" from="mark" to="mark &gt;= 0 ? mark * -1 : mark" />
    <mutant id="mutant_5932" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10377" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10378" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_10379" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_5922" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(org.apache.commons.lang3.text.StrMatcher)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5923" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(org.apache.commons.lang3.text.StrMatcher)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_10370" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_5924" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(org.apache.commons.lang3.text.StrMatcher)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10371" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_5925" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10372" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5926" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10373" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_5927" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10374" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_5928" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_10375" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="1" to="-1 * 1" />
    <mutant id="mutant_5929" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteCharAt(int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_10376" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(double[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5920" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(java.lang.String)" from="indexOf(str, index)" to="indexOf(str, index) &gt;= 0 ? indexOf(str, index) * -1 : indexOf(str, index)" />
    <mutant id="mutant_5921" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(org.apache.commons.lang3.text.StrMatcher)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4670" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_2004" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.setValue(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3336" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="(field.getName().indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="(field.getName().indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR) &gt;= 0 ? field.getName().indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR) * -1 : field.getName().indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" />
    <mutant id="mutant_4667" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5999" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_2005" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.setValue(java.lang.Number)" from="value.floatValue()" to="value.floatValue() &gt;= 0 ? value.floatValue() * -1 : value.floatValue()" />
    <mutant id="mutant_3335" viable="false" in="?" from="1L" to="-1 * 1L" />
    <mutant id="mutant_4666" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_2002" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.setValue(float)" from="value" to="value &gt;= 0 ? value * -1 : value" />
    <mutant id="mutant_3334" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(indent)" to="(indent &gt;= 0 ? indent * -1 : indent)" />
    <mutant id="mutant_4665" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_2003" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.setValue(java.lang.Number)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3333" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(indent)" to="(indent &gt;= 0 ? indent : indent * -1)" />
    <mutant id="mutant_4664" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_2000" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.setValue(float)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_3332" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(spaces)" to="(spaces &gt;= 0 ? spaces * -1 : spaces)" />
    <mutant id="mutant_4663" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_2001" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.setValue(float)" from="value" to="value &gt;= 0 ? value : value * -1" />
    <mutant id="mutant_3331" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(spaces)" to="(spaces &gt;= 0 ? spaces : spaces * -1)" />
    <mutant id="mutant_4662" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3330" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="spaces" to="(spaces &gt;= 0 ? spaces * -1 : spaces)" />
    <mutant id="mutant_4661" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_4660" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() * -1 : str.length()" />
    <mutant id="mutant_5991" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5992" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5993" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5994" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="4" to="(-1 * 4)" />
    <mutant id="mutant_2008" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.subtract(float)" from="this.value" to="this.value &gt;= 0 ? this.value : this.value * -1" />
    <mutant id="mutant_5995" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_2009" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.subtract(float)" from="operand" to="operand &gt;= 0 ? operand : operand * -1" />
    <mutant id="mutant_3339" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_5996" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_2006" viable="true" in="org.apache.commons.lang3.mutable.MutableFloat.setValue(java.lang.Number)" from="value.floatValue()" to="value.floatValue() &gt;= 0 ? value.floatValue() : value.floatValue() * -1" />
    <mutant id="mutant_3338" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_4669" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5997" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_2007" viable="false" in="org.apache.commons.lang3.mutable.MutableFloat.subtract(float)" from="this.value" to="this.value &gt;= 0 ? this.value * -1 : this.value" />
    <mutant id="mutant_3337" viable="true" in="org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)" from="(field.getName().indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR))" to="(field.getName().indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR) &gt;= 0 ? field.getName().indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR) : field.getName().indexOf(org.apache.commons.lang3.ClassUtils.INNER_CLASS_SEPARATOR_CHAR) * -1)" />
    <mutant id="mutant_4668" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5998" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5990" viable="true" in="org.apache.commons.lang3.text.StrBuilder.insert(int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3325" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(indent)" to="(indent &gt;= 0 ? indent : indent * -1)" />
    <mutant id="mutant_4656" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(org.apache.commons.lang3.text.StrMatcher)" from="(indexOf(matcher, 0))" to="(indexOf(matcher, 0) &gt;= 0 ? indexOf(matcher, 0) : indexOf(matcher, 0) * -1)" />
    <mutant id="mutant_5988" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_3324" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(spaces)" to="(spaces &gt;= 0 ? spaces * -1 : spaces)" />
    <mutant id="mutant_4655" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(org.apache.commons.lang3.text.StrMatcher)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5989" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3323" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(spaces)" to="(spaces &gt;= 0 ? spaces : spaces * -1)" />
    <mutant id="mutant_4654" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3322" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="spaces" to="(spaces &gt;= 0 ? spaces * -1 : spaces)" />
    <mutant id="mutant_4653" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(java.lang.String)" from="(indexOf(str, 0))" to="(indexOf(str, 0) &gt;= 0 ? indexOf(str, 0) : indexOf(str, 0) * -1)" />
    <mutant id="mutant_3321" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="spaces" to="(spaces &gt;= 0 ? spaces : spaces * -1)" />
    <mutant id="mutant_4652" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(java.lang.String)" from="(indexOf(str, 0))" to="(indexOf(str, 0) &gt;= 0 ? indexOf(str, 0) * -1 : indexOf(str, 0))" />
    <mutant id="mutant_3320" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="spaces" to="(spaces &gt;= 0 ? spaces * -1 : spaces)" />
    <mutant id="mutant_4651" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4650" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5980" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity" to="(capacity &gt;= 0 ? capacity * -1 : capacity)" />
    <mutant id="mutant_5981" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length * -1 : buffer.length)" />
    <mutant id="mutant_5982" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="(buffer.length)" to="(buffer.length &gt;= 0 ? buffer.length : buffer.length * -1)" />
    <mutant id="mutant_5983" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity" to="(capacity &gt;= 0 ? capacity : capacity * -1)" />
    <mutant id="mutant_3329" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="spaces" to="(spaces &gt;= 0 ? spaces : spaces * -1)" />
    <mutant id="mutant_5984" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity" to="(capacity &gt;= 0 ? capacity * -1 : capacity)" />
    <mutant id="mutant_3328" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="spaces" to="(spaces &gt;= 0 ? spaces * -1 : spaces)" />
    <mutant id="mutant_4659" viable="true" in="org.apache.commons.lang3.text.StrBuilder.endsWith(java.lang.String)" from="str.length()" to="str.length() &gt;= 0 ? str.length() : str.length() * -1" />
    <mutant id="mutant_5985" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_3327" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="spaces" to="(spaces &gt;= 0 ? spaces : spaces * -1)" />
    <mutant id="mutant_4658" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(org.apache.commons.lang3.text.StrMatcher)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5986" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3326" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="(indent)" to="(indent &gt;= 0 ? indent * -1 : indent)" />
    <mutant id="mutant_4657" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(org.apache.commons.lang3.text.StrMatcher)" from="(indexOf(matcher, 0))" to="(indexOf(matcher, 0) &gt;= 0 ? indexOf(matcher, 0) * -1 : indexOf(matcher, 0))" />
    <mutant id="mutant_5987" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_305" viable="true" in="org.apache.commons.lang3.math.Fraction.toString()" from="getNumerator()" to="(getNumerator() &gt;= 0 ? getNumerator() * -1 : getNumerator())" />
    <mutant id="mutant_306" viable="true" in="org.apache.commons.lang3.math.Fraction.toString()" from="getDenominator()" to="(getDenominator() &gt;= 0 ? getDenominator() * -1 : getDenominator())" />
    <mutant id="mutant_307" viable="true" in="org.apache.commons.lang3.math.Fraction.toString()" from="getDenominator()" to="(getDenominator() &gt;= 0 ? getDenominator() : getDenominator() * -1)" />
    <mutant id="mutant_308" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator))" to="(((long)(numerator)) &gt;= 0 ? ((long)(numerator)) * -1 : ((long)(numerator)))" />
    <mutant id="mutant_301" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getDenominator()" to="(getDenominator() &gt;= 0 ? getDenominator() * -1 : getDenominator())" />
    <mutant id="mutant_302" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getDenominator()" to="(getDenominator() &gt;= 0 ? getDenominator() : getDenominator() * -1)" />
    <mutant id="mutant_303" viable="true" in="org.apache.commons.lang3.math.Fraction.toString()" from="32" to="(-1 * 32)" />
    <mutant id="mutant_304" viable="true" in="org.apache.commons.lang3.math.Fraction.toString()" from="getNumerator()" to="(getNumerator() &gt;= 0 ? getNumerator() : getNumerator() * -1)" />
    <mutant id="mutant_309" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="((long)(numerator))" to="(((long)(numerator)) &gt;= 0 ? ((long)(numerator)) : ((long)(numerator)) * -1)" />
    <mutant id="mutant_3314" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4645" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="(this.size)" to="(this.size &gt;= 0 ? this.size * -1 : this.size)" />
    <mutant id="mutant_5977" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(org.apache.commons.lang3.text.StrMatcher)" from="size" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3313" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4644" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5978" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(org.apache.commons.lang3.text.StrMatcher)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_3312" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4643" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5979" viable="true" in="org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int)" from="capacity" to="(capacity &gt;= 0 ? capacity : capacity * -1)" />
    <mutant id="mutant_3311" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4642" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="0" to="-1 * 0" />
    <mutant id="mutant_3310" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4641" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendAll(T[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4640" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendAll(T[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_5970" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5971" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_300" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getNumerator()" to="(getNumerator() &gt;= 0 ? getNumerator() * -1 : getNumerator())" />
    <mutant id="mutant_3319" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.resetIndent()" from="spaces" to="(spaces &gt;= 0 ? spaces : spaces * -1)" />
    <mutant id="mutant_5972" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3318" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4649" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5973" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_3317" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4648" viable="false" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5974" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3316" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4647" viable="false" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5975" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(org.apache.commons.lang3.text.StrMatcher)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3315" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.reflectionAppendArrayDetail(java.lang.StringBuffer,java.lang.String,java.lang.Object)" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4646" viable="true" in="org.apache.commons.lang3.text.StrBuilder.contains(char)" from="(this.size)" to="(this.size &gt;= 0 ? this.size : this.size * -1)" />
    <mutant id="mutant_5976" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(org.apache.commons.lang3.text.StrMatcher)" from="size" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_316" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_317" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_318" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(fraction.numerator)" to="(fraction.numerator &gt;= 0 ? fraction.numerator * -1 : fraction.numerator)" />
    <mutant id="mutant_319" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(fraction.numerator)" to="(fraction.numerator &gt;= 0 ? fraction.numerator : fraction.numerator * -1)" />
    <mutant id="mutant_312" viable="true" in="org.apache.commons.lang3.math.Fraction.abs()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_313" viable="true" in="org.apache.commons.lang3.math.Fraction.abs()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_314" viable="true" in="org.apache.commons.lang3.math.Fraction.abs()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_315" viable="true" in="org.apache.commons.lang3.math.Fraction.addSub(org.apache.commons.lang3.math.Fraction,boolean)" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_3303" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4634" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="StrBuilder.CAPACITY" to="StrBuilder.CAPACITY &gt;= 0 ? StrBuilder.CAPACITY : StrBuilder.CAPACITY * -1" />
    <mutant id="mutant_5966" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3302" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4633" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="StrBuilder.CAPACITY" to="StrBuilder.CAPACITY &gt;= 0 ? StrBuilder.CAPACITY * -1 : StrBuilder.CAPACITY" />
    <mutant id="mutant_5967" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3301" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4632" viable="true" in="org.apache.commons.lang3.text.StrBuilder(int)" from="initialCapacity" to="initialCapacity &gt;= 0 ? initialCapacity * -1 : initialCapacity" />
    <mutant id="mutant_5968" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_3300" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,long[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4631" viable="true" in="org.apache.commons.lang3.text.StrBuilder(int)" from="initialCapacity" to="initialCapacity &gt;= 0 ? initialCapacity : initialCapacity * -1" />
    <mutant id="mutant_5969" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_4630" viable="true" in="org.apache.commons.lang3.text.StrBuilder(int)" from="StrBuilder.CAPACITY" to="StrBuilder.CAPACITY &gt;= 0 ? StrBuilder.CAPACITY : StrBuilder.CAPACITY * -1" />
    <mutant id="mutant_310" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_3309" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_5960" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_311" viable="true" in="org.apache.commons.lang3.math.Fraction.longValue()" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_3308" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4639" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendAll(T[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_5961" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3307" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="spaces" to="spaces &gt;= 0 ? spaces : spaces * -1" />
    <mutant id="mutant_4638" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(StrBuilder.CAPACITY)" to="(StrBuilder.CAPACITY &gt;= 0 ? StrBuilder.CAPACITY : StrBuilder.CAPACITY * -1)" />
    <mutant id="mutant_5962" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="indexOf(str, 0)" to="indexOf(str, 0) &gt;= 0 ? indexOf(str, 0) * -1 : indexOf(str, 0)" />
    <mutant id="mutant_3306" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="indent" to="indent &gt;= 0 ? indent * -1 : indent" />
    <mutant id="mutant_4637" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(StrBuilder.CAPACITY)" to="(StrBuilder.CAPACITY &gt;= 0 ? StrBuilder.CAPACITY * -1 : StrBuilder.CAPACITY)" />
    <mutant id="mutant_5963" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="indexOf(str, 0)" to="indexOf(str, 0) &gt;= 0 ? indexOf(str, 0) : indexOf(str, 0) * -1" />
    <mutant id="mutant_3305" viable="true" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="indent" to="indent &gt;= 0 ? indent : indent * -1" />
    <mutant id="mutant_4636" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() * -1 : str.length())" />
    <mutant id="mutant_5964" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_3304" viable="false" in="org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle.appendDetail(java.lang.StringBuffer,java.lang.String,short[])" from="spaces" to="spaces &gt;= 0 ? spaces * -1 : spaces" />
    <mutant id="mutant_4635" viable="true" in="org.apache.commons.lang3.text.StrBuilder(java.lang.String)" from="(str.length())" to="(str.length() &gt;= 0 ? str.length() : str.length() * -1)" />
    <mutant id="mutant_5965" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteFirst(java.lang.String)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_206" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="k" to="(k &gt;= 0 ? k : k * -1)" />
    <mutant id="mutant_207" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(hashCode)" to="(hashCode &gt;= 0 ? hashCode : hashCode * -1)" />
    <mutant id="mutant_208" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(hashCode)" to="(hashCode &gt;= 0 ? hashCode * -1 : hashCode)" />
    <mutant id="mutant_209" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_202" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u * -1 : u)" />
    <mutant id="mutant_203" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_204" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_205" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="k" to="(k &gt;= 0 ? k * -1 : k)" />
    <mutant id="mutant_3141" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4472" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="Integer.valueOf(precision)" to="(Integer.valueOf(precision) &gt;= 0 ? Integer.valueOf(precision) : Integer.valueOf(precision) * -1)" />
    <mutant id="mutant_3140" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4471" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_4470" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_3138" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4469" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_3137" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_4468" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_3136" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4467" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(ellipsis.length())" to="(ellipsis.length() &gt;= 0 ? ellipsis.length() : ellipsis.length() * -1)" />
    <mutant id="mutant_3135" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4466" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(ellipsis.length())" to="(ellipsis.length() &gt;= 0 ? ellipsis.length() * -1 : ellipsis.length())" />
    <mutant id="mutant_3134" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4465" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3133" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4464" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_3132" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4463" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_3131" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_4462" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_5793" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,int)" from="loopIndex" to="(loopIndex &gt;= 0 ? loopIndex * -1 : loopIndex)" />
    <mutant id="mutant_5794" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,int)" from="loopIndex" to="(loopIndex &gt;= 0 ? loopIndex : loopIndex * -1)" />
    <mutant id="mutant_200" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="u" to="(u &gt;= 0 ? u : u * -1)" />
    <mutant id="mutant_5795" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_201" viable="true" in="org.apache.commons.lang3.math.Fraction.greatestCommonDivisor(int,int)" from="2" to="(-1 * 2)" />
    <mutant id="mutant_5796" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(java.lang.String,int)" from="loopIndex" to="(loopIndex &gt;= 0 ? loopIndex * -1 : loopIndex)" />
    <mutant id="mutant_5797" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(java.lang.String,int)" from="loopIndex" to="(loopIndex &gt;= 0 ? loopIndex : loopIndex * -1)" />
    <mutant id="mutant_5798" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(java.lang.String,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5799" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_3139" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_217" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(getDenominator())" to="(getDenominator() &gt;= 0 ? getDenominator() * -1 : getDenominator())" />
    <mutant id="mutant_218" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(getDenominator())" to="(getDenominator() &gt;= 0 ? getDenominator() : getDenominator() * -1)" />
    <mutant id="mutant_219" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode : hashCode * -1" />
    <mutant id="mutant_213" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="37" to="(-1 * 37)" />
    <mutant id="mutant_214" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="17" to="(-1 * 17)" />
    <mutant id="mutant_5790" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,char)" from="(size())" to="(size() &gt;= 0 ? size() : size() * -1)" />
    <mutant id="mutant_215" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(getNumerator())" to="(getNumerator() &gt;= 0 ? getNumerator() : getNumerator() * -1)" />
    <mutant id="mutant_5791" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,char)" from="(size())" to="(size() &gt;= 0 ? size() * -1 : size())" />
    <mutant id="mutant_216" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="(getNumerator())" to="(getNumerator() &gt;= 0 ? getNumerator() * -1 : getNumerator())" />
    <mutant id="mutant_5792" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3130" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_4461" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_4460" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_3127" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4458" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char)" from="flags" to="(flags &gt;= 0 ? flags * -1 : flags)" />
    <mutant id="mutant_3126" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4457" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char)" from="flags" to="(flags &gt;= 0 ? flags : flags * -1)" />
    <mutant id="mutant_3125" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4456" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_3124" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4455" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_3123" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="(Float.floatToIntBits(value))" to="(Float.floatToIntBits(value) &gt;= 0 ? Float.floatToIntBits(value) * -1 : Float.floatToIntBits(value))" />
    <mutant id="mutant_4454" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_3122" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="(Float.floatToIntBits(value))" to="(Float.floatToIntBits(value) &gt;= 0 ? Float.floatToIntBits(value) : Float.floatToIntBits(value) * -1)" />
    <mutant id="mutant_4453" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_3121" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4452" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int)" from="flags" to="(flags &gt;= 0 ? flags * -1 : flags)" />
    <mutant id="mutant_3120" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4451" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int)" from="flags" to="(flags &gt;= 0 ? flags : flags * -1)" />
    <mutant id="mutant_5782" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_210" viable="false" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode : hashCode * -1" />
    <mutant id="mutant_5783" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_211" viable="false" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode * -1 : hashCode" />
    <mutant id="mutant_5784" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_212" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="37" to="(-1 * 37)" />
    <mutant id="mutant_5785" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5786" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_5787" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char)" from="(size())" to="(size() &gt;= 0 ? size() : size() * -1)" />
    <mutant id="mutant_3129" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_5788" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char)" from="(size())" to="(size() &gt;= 0 ? size() * -1 : size())" />
    <mutant id="mutant_3128" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4459" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5789" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendSeparator(char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_228" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(y))" to="(((long)(y)) &gt;= 0 ? ((long)(y)) : ((long)(y)) * -1)" />
    <mutant id="mutant_229" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_224" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_225" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x))" to="(((long)(x)) &gt;= 0 ? ((long)(x)) : ((long)(x)) * -1)" />
    <mutant id="mutant_226" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(x))" to="(((long)(x)) &gt;= 0 ? ((long)(x)) * -1 : ((long)(x)))" />
    <mutant id="mutant_5780" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_227" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((long)(y))" to="(((long)(y)) &gt;= 0 ? ((long)(y)) * -1 : ((long)(y)))" />
    <mutant id="mutant_5781" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_4450" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3116" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4447" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5779" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3115" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4446" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex())" to="StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex()) &gt;= 0 ? StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex()) : StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex()) * -1" />
    <mutant id="mutant_3114" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4445" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex())" to="StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex()) &gt;= 0 ? StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex()) * -1 : StrMatcher.splitMatcher().isMatch(buffer, pos.getIndex())" />
    <mutant id="mutant_3113" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_4444" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_3112" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_4443" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="pos.getIndex()" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_3111" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_4442" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="len" to="len &gt;= 0 ? len * -1 : len" />
    <mutant id="mutant_3110" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4441" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="len" to="len &gt;= 0 ? len : len * -1" />
    <mutant id="mutant_4440" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() * -1 : pattern.length())" />
    <mutant id="mutant_220" viable="true" in="org.apache.commons.lang3.math.Fraction.hashCode()" from="hashCode" to="hashCode &gt;= 0 ? hashCode * -1 : hashCode" />
    <mutant id="mutant_5771" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_221" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_5772" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_222" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_5773" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_223" viable="true" in="org.apache.commons.lang3.math.Fraction.intValue()" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_5774" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_5775" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3119" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_5776" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_3118" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4449" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5777" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_3117" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(float)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4448" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5778" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendPadding(int,char)" from="0" to="-1 * 0" />
    <mutant id="mutant_239" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x))" to="(((long)(x)) &gt;= 0 ? ((long)(x)) : ((long)(x)) * -1)" />
    <mutant id="mutant_235" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_236" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_237" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((int)(m))" to="((int)(m)) &gt;= 0 ? ((int)(m)) * -1 : ((int)(m))" />
    <mutant id="mutant_238" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="((int)(m))" to="((int)(m)) &gt;= 0 ? ((int)(m)) : ((int)(m)) * -1" />
    <mutant id="mutant_5770" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="width &gt;= 0 ? width : width * -1" />
    <mutant id="mutant_3105" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double)" from="Double.doubleToLongBits(value)" to="(Double.doubleToLongBits(value) &gt;= 0 ? Double.doubleToLongBits(value) : Double.doubleToLongBits(value) * -1)" />
    <mutant id="mutant_4436" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5768" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_3104" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double)" from="Double.doubleToLongBits(value)" to="(Double.doubleToLongBits(value) &gt;= 0 ? Double.doubleToLongBits(value) * -1 : Double.doubleToLongBits(value))" />
    <mutant id="mutant_4435" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5769" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="width" to="width &gt;= 0 ? width * -1 : width" />
    <mutant id="mutant_3103" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4434" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_3102" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4433" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="0" to="-1 * 0" />
    <mutant id="mutant_3101" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_4432" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3100" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(char[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4431" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4430" viable="false" in="org.apache.commons.lang3.text.ExtendedMessageFormat.applyPattern(java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_231" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_5760" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_232" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_5761" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_233" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_5762" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_234" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_5763" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen : strLen * -1)" />
    <mutant id="mutant_3109" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_5764" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="strLen" to="(strLen &gt;= 0 ? strLen * -1 : strLen)" />
    <mutant id="mutant_3108" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4439" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="(pattern.length())" to="(pattern.length() &gt;= 0 ? pattern.length() : pattern.length() * -1)" />
    <mutant id="mutant_5765" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3107" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4438" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() : pos.getIndex() * -1)" />
    <mutant id="mutant_5766" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_230" viable="true" in="org.apache.commons.lang3.math.Fraction.mulAndCheck(int,int)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_3106" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(double[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4437" viable="true" in="org.apache.commons.lang3.text.ExtendedMessageFormat.seekNonWs(java.lang.String,java.text.ParsePosition)" from="(pos.getIndex())" to="(pos.getIndex() &gt;= 0 ? pos.getIndex() * -1 : pos.getIndex())" />
    <mutant id="mutant_5767" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendFixedWidthPadRight(java.lang.Object,int,char)" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_246" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_247" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((int)(m))" to="((int)(m)) &gt;= 0 ? ((int)(m)) * -1 : ((int)(m))" />
    <mutant id="mutant_248" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((int)(m))" to="((int)(m)) &gt;= 0 ? ((int)(m)) : ((int)(m)) * -1" />
    <mutant id="mutant_249" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x))" to="(((long)(x)) &gt;= 0 ? ((long)(x)) : ((long)(x)) * -1)" />
    <mutant id="mutant_3185" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_3184" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_3183" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_3182" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_3181" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_3180" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_3179" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_3178" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="32" to="(-1 * 32)" />
    <mutant id="mutant_3177" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_3176" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3175" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_242" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(y))" to="(((long)(y)) &gt;= 0 ? ((long)(y)) : ((long)(y)) * -1)" />
    <mutant id="mutant_243" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="m" to="(m &gt;= 0 ? m * -1 : m)" />
    <mutant id="mutant_244" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="m" to="(m &gt;= 0 ? m : m * -1)" />
    <mutant id="mutant_245" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_240" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(x))" to="(((long)(x)) &gt;= 0 ? ((long)(x)) * -1 : ((long)(x)))" />
    <mutant id="mutant_241" viable="true" in="org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int,int)" from="((long)(y))" to="(((long)(y)) &gt;= 0 ? ((long)(y)) * -1 : ((long)(y)))" />
    <mutant id="mutant_257" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="s" to="(s &gt;= 0 ? s * -1 : s)" />
    <mutant id="mutant_258" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="s" to="(s &gt;= 0 ? s : s * -1)" />
    <mutant id="mutant_259" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_3174" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_3173" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_3172" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_3171" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_3170" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_3169" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_3168" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4499" viable="false" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3167" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_4498" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_3166" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4497" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_3165" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4496" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3164" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4495" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_253" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="s" to="(s &gt;= 0 ? s * -1 : s)" />
    <mutant id="mutant_254" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="s" to="(s &gt;= 0 ? s : s * -1)" />
    <mutant id="mutant_255" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE * -1 : Integer.MIN_VALUE)" />
    <mutant id="mutant_256" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="(Integer.MIN_VALUE)" to="(Integer.MIN_VALUE &gt;= 0 ? Integer.MIN_VALUE : Integer.MIN_VALUE * -1)" />
    <mutant id="mutant_250" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(x))" to="(((long)(x)) &gt;= 0 ? ((long)(x)) * -1 : ((long)(x)))" />
    <mutant id="mutant_251" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(y))" to="(((long)(y)) &gt;= 0 ? ((long)(y)) * -1 : ((long)(y)))" />
    <mutant id="mutant_252" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((long)(y))" to="(((long)(y)) &gt;= 0 ? ((long)(y)) : ((long)(y)) * -1)" />
    <mutant id="mutant_268" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_269" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_3163" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4494" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="buf.length()" to="buf.length() &gt;= 0 ? buf.length() : buf.length() * -1" />
    <mutant id="mutant_3162" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4493" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="buf.length()" to="buf.length() &gt;= 0 ? buf.length() * -1 : buf.length()" />
    <mutant id="mutant_3161" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(object.hashCode())" to="(object.hashCode() &gt;= 0 ? object.hashCode() * -1 : object.hashCode())" />
    <mutant id="mutant_4492" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(FormattableFlags.LEFT_JUSTIFY)" to="(FormattableFlags.LEFT_JUSTIFY &gt;= 0 ? FormattableFlags.LEFT_JUSTIFY * -1 : FormattableFlags.LEFT_JUSTIFY)" />
    <mutant id="mutant_3160" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(object.hashCode())" to="(object.hashCode() &gt;= 0 ? object.hashCode() : object.hashCode() * -1)" />
    <mutant id="mutant_4491" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(FormattableFlags.LEFT_JUSTIFY)" to="(FormattableFlags.LEFT_JUSTIFY &gt;= 0 ? FormattableFlags.LEFT_JUSTIFY : FormattableFlags.LEFT_JUSTIFY * -1)" />
    <mutant id="mutant_4490" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(FormattableFlags.LEFT_JUSTIFY)" to="(FormattableFlags.LEFT_JUSTIFY &gt;= 0 ? FormattableFlags.LEFT_JUSTIFY * -1 : FormattableFlags.LEFT_JUSTIFY)" />
    <mutant id="mutant_3159" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_3158" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4489" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(FormattableFlags.LEFT_JUSTIFY)" to="(FormattableFlags.LEFT_JUSTIFY &gt;= 0 ? FormattableFlags.LEFT_JUSTIFY : FormattableFlags.LEFT_JUSTIFY * -1)" />
    <mutant id="mutant_3157" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4488" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="flags" to="(flags &gt;= 0 ? flags * -1 : flags)" />
    <mutant id="mutant_3156" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4487" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="flags" to="(flags &gt;= 0 ? flags : flags * -1)" />
    <mutant id="mutant_3155" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4486" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="seq.length()" to="(seq.length() &gt;= 0 ? seq.length() : seq.length() * -1)" />
    <mutant id="mutant_3154" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4485" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="seq.length()" to="(seq.length() &gt;= 0 ? seq.length() * -1 : seq.length())" />
    <mutant id="mutant_3153" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_4484" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(_ellipsis.length())" to="(_ellipsis.length() &gt;= 0 ? _ellipsis.length() : _ellipsis.length() * -1)" />
    <mutant id="mutant_264" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_265" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_266" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_267" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_260" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="(Integer.MAX_VALUE)" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_261" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((int)(s))" to="((int)(s)) &gt;= 0 ? ((int)(s)) * -1 : ((int)(s))" />
    <mutant id="mutant_262" viable="true" in="org.apache.commons.lang3.math.Fraction.subAndCheck(int,int)" from="((int)(s))" to="((int)(s)) &gt;= 0 ? ((int)(s)) : ((int)(s)) * -1" />
    <mutant id="mutant_263" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_279" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_3152" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4483" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(_ellipsis.length())" to="(_ellipsis.length() &gt;= 0 ? _ellipsis.length() * -1 : _ellipsis.length())" />
    <mutant id="mutant_3151" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4482" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_3150" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4481" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_4480" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(seq.length())" to="(seq.length() &gt;= 0 ? seq.length() : seq.length() * -1)" />
    <mutant id="mutant_3149" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_3148" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_4479" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="(seq.length())" to="(seq.length() &gt;= 0 ? seq.length() * -1 : seq.length())" />
    <mutant id="mutant_3147" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="element" to="(element &gt;= 0 ? element : element * -1)" />
    <mutant id="mutant_4478" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_270" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_3146" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_4477" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_3145" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_4476" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_3144" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4475" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_3143" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4474" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_3142" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(int[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4473" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="Integer.valueOf(precision)" to="(Integer.valueOf(precision) &gt;= 0 ? Integer.valueOf(precision) * -1 : Integer.valueOf(precision))" />
    <mutant id="mutant_275" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_276" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_277" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_278" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator * -1 : numerator)" />
    <mutant id="mutant_271" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(numerator)" to="(numerator &gt;= 0 ? numerator : numerator * -1)" />
    <mutant id="mutant_272" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_273" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_274" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_280" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="numerator" to="numerator &gt;= 0 ? numerator * -1 : numerator" />
    <mutant id="mutant_281" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="numerator" to="numerator &gt;= 0 ? numerator : numerator * -1" />
    <mutant id="mutant_286" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="properNumerator" to="(properNumerator &gt;= 0 ? properNumerator * -1 : properNumerator)" />
    <mutant id="mutant_287" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="properNumerator" to="(properNumerator &gt;= 0 ? properNumerator : properNumerator * -1)" />
    <mutant id="mutant_288" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="0" to="(-1 * 0)" />
    <mutant id="mutant_289" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getProperWhole()" to="(getProperWhole() &gt;= 0 ? getProperWhole() : getProperWhole() * -1)" />
    <mutant id="mutant_282" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(denominator)" to="(denominator &gt;= 0 ? denominator * -1 : denominator)" />
    <mutant id="mutant_283" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="(denominator)" to="(denominator &gt;= 0 ? denominator : denominator * -1)" />
    <mutant id="mutant_284" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getProperNumerator()" to="getProperNumerator() &gt;= 0 ? getProperNumerator() : getProperNumerator() * -1" />
    <mutant id="mutant_285" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getProperNumerator()" to="getProperNumerator() &gt;= 0 ? getProperNumerator() * -1 : getProperNumerator()" />
    <mutant id="mutant_11804" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11805" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11806" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_11807" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11808" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_11809" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11800" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_11801" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_11802" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_11803" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_290" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getProperWhole()" to="(getProperWhole() &gt;= 0 ? getProperWhole() * -1 : getProperWhole())" />
    <mutant id="mutant_291" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="32" to="(-1 * 32)" />
    <mutant id="mutant_292" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getProperWhole()" to="(getProperWhole() &gt;= 0 ? getProperWhole() : getProperWhole() * -1)" />
    <mutant id="mutant_297" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getDenominator()" to="(getDenominator() &gt;= 0 ? getDenominator() : getDenominator() * -1)" />
    <mutant id="mutant_298" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="32" to="(-1 * 32)" />
    <mutant id="mutant_299" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getNumerator()" to="(getNumerator() &gt;= 0 ? getNumerator() : getNumerator() * -1)" />
    <mutant id="mutant_293" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getProperWhole()" to="(getProperWhole() &gt;= 0 ? getProperWhole() * -1 : getProperWhole())" />
    <mutant id="mutant_294" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="properNumerator" to="(properNumerator &gt;= 0 ? properNumerator * -1 : properNumerator)" />
    <mutant id="mutant_295" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="properNumerator" to="(properNumerator &gt;= 0 ? properNumerator : properNumerator * -1)" />
    <mutant id="mutant_296" viable="true" in="org.apache.commons.lang3.math.Fraction.toProperString()" from="getDenominator()" to="(getDenominator() &gt;= 0 ? getDenominator() * -1 : getDenominator())" />
    <mutant id="mutant_3199" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_3198" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_3197" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_3196" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_3195" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_3194" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_3193" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short[])" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_3192" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_3191" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_3190" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_3189" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_3188" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_3187" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(short)" from="iTotal" to="iTotal &gt;= 0 ? iTotal * -1 : iTotal" />
    <mutant id="mutant_3186" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.append(long[])" from="element" to="(element &gt;= 0 ? element * -1 : element)" />
    <mutant id="mutant_10506" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_11837" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_10507" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_11838" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10508" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="array2.length" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_11839" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10509" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(boolean[],int)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11830" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10500" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11831" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_10501" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11832" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10502" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_11833" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10503" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_11834" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_10504" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11835" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_10505" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="array1.length" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_11836" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, objectToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_10517" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11848" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10518" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11849" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10519" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11840" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10510" viable="true" in="org.apache.commons.lang3.ArrayUtils.remove(boolean[],int)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11841" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10511" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) : org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1" />
    <mutant id="mutant_11842" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10512" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" to="org.apache.commons.lang3.ArrayUtils.indexOf(array, element) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.indexOf(array, element) * -1 : org.apache.commons.lang3.ArrayUtils.indexOf(array, element)" />
    <mutant id="mutant_11843" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10513" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_11844" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10514" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_11845" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10515" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1)" />
    <mutant id="mutant_11846" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10516" viable="true" in="org.apache.commons.lang3.ArrayUtils.removeAllOccurences(boolean[],boolean)" from="(ArrayUtils.INDEX_NOT_FOUND)" to="(ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND)" />
    <mutant id="mutant_11847" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(java.lang.Object[],java.lang.Object,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11815" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11816" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11817" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11818" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_11819" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11810" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_11811" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_11812" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11813" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11814" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_11826" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_11827" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_11828" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11829" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11820" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_11821" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11822" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11823" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11824" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11825" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10429" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10421" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11752" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10422" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11753" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10423" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_11754" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="max" to="(max &gt;= 0 ? max * -1 : max)" />
    <mutant id="mutant_10424" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11755" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="max" to="(max &gt;= 0 ? max : max * -1)" />
    <mutant id="mutant_10425" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11756" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10426" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11757" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_10427" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="1" to="-1 * 1" />
    <mutant id="mutant_11758" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10428" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11759" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_11750" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="min" to="(min &gt;= 0 ? min : min * -1)" />
    <mutant id="mutant_10420" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="current" to="current &gt;= 0 ? current : current * -1" />
    <mutant id="mutant_11751" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="min" to="(min &gt;= 0 ? min * -1 : min)" />
    <mutant id="mutant_10432" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11763" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE * -1 : Integer.MAX_VALUE)" />
    <mutant id="mutant_10433" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11764" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1 : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" />
    <mutant id="mutant_10434" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11765" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float)" from="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE)" to="org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) &gt;= 0 ? org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) : org.apache.commons.lang3.ArrayUtils.lastIndexOf(array, valueToFind, java.lang.Integer.MAX_VALUE) * -1" />
    <mutant id="mutant_10435" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11766" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10436" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="previous" to="(previous &gt;= 0 ? previous : previous * -1)" />
    <mutant id="mutant_11767" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10437" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="previous" to="(previous &gt;= 0 ? previous * -1 : previous)" />
    <mutant id="mutant_11768" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10438" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="current" to="(current &gt;= 0 ? current : current * -1)" />
    <mutant id="mutant_11769" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10439" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="current" to="(current &gt;= 0 ? current * -1 : current)" />
    <mutant id="mutant_11760" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_10430" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_11761" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_10431" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_11762" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_10407" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11738" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_10408" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11739" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance : tolerance * -1)" />
    <mutant id="mutant_10409" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11730" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10400" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11731" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10401" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="1" to="-1 * 1" />
    <mutant id="mutant_11732" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10402" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11733" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_10403" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11734" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_10404" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_11735" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance : tolerance * -1)" />
    <mutant id="mutant_10405" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_11736" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance * -1 : tolerance)" />
    <mutant id="mutant_10406" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11737" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_10418" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="previous" to="previous &gt;= 0 ? previous * -1 : previous" />
    <mutant id="mutant_11749" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10419" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="current" to="current &gt;= 0 ? current * -1 : current" />
    <mutant id="mutant_10410" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="previous" to="(previous &gt;= 0 ? previous : previous * -1)" />
    <mutant id="mutant_11741" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10411" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="previous" to="(previous &gt;= 0 ? previous * -1 : previous)" />
    <mutant id="mutant_11742" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10412" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="current" to="(current &gt;= 0 ? current * -1 : current)" />
    <mutant id="mutant_11743" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10413" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="current" to="(current &gt;= 0 ? current : current * -1)" />
    <mutant id="mutant_11744" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10414" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="(Float.compare(previous, current))" to="(Float.compare(previous, current) &gt;= 0 ? Float.compare(previous, current) * -1 : Float.compare(previous, current))" />
    <mutant id="mutant_11745" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10415" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="(Float.compare(previous, current))" to="(Float.compare(previous, current) &gt;= 0 ? Float.compare(previous, current) : Float.compare(previous, current) * -1)" />
    <mutant id="mutant_11746" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10416" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11747" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10417" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(float[])" from="previous" to="previous &gt;= 0 ? previous : previous * -1" />
    <mutant id="mutant_11748" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11740" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(double[],double,int,double)" from="tolerance" to="(tolerance &gt;= 0 ? tolerance * -1 : tolerance)" />
    <mutant id="mutant_10465" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="current" to="(current &gt;= 0 ? current : current * -1)" />
    <mutant id="mutant_11796" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10466" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="(NumberUtils.compare(previous, current))" to="(NumberUtils.compare(previous, current) &gt;= 0 ? NumberUtils.compare(previous, current) : NumberUtils.compare(previous, current) * -1)" />
    <mutant id="mutant_11797" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_10467" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="(NumberUtils.compare(previous, current))" to="(NumberUtils.compare(previous, current) &gt;= 0 ? NumberUtils.compare(previous, current) * -1 : NumberUtils.compare(previous, current))" />
    <mutant id="mutant_11798" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_10468" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11799" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(int[],int)" from="Integer.MAX_VALUE" to="(Integer.MAX_VALUE &gt;= 0 ? Integer.MAX_VALUE : Integer.MAX_VALUE * -1)" />
    <mutant id="mutant_10469" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="previous" to="previous &gt;= 0 ? previous : previous * -1" />
    <mutant id="mutant_11790" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind * -1 : valueToFind)" />
    <mutant id="mutant_10460" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11791" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10461" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11792" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10462" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="previous" to="(previous &gt;= 0 ? previous : previous * -1)" />
    <mutant id="mutant_11793" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_10463" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="previous" to="(previous &gt;= 0 ? previous * -1 : previous)" />
    <mutant id="mutant_11794" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_10464" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="current" to="(current &gt;= 0 ? current * -1 : current)" />
    <mutant id="mutant_11795" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10476" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10477" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_10478" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_10479" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="1" to="-1 * 1" />
    <mutant id="mutant_10470" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="previous" to="previous &gt;= 0 ? previous * -1 : previous" />
    <mutant id="mutant_10471" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="current" to="current &gt;= 0 ? current * -1 : current" />
    <mutant id="mutant_10472" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="current" to="current &gt;= 0 ? current : current * -1" />
    <mutant id="mutant_10473" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10474" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10475" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_10443" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="previous" to="previous &gt;= 0 ? previous : previous * -1" />
    <mutant id="mutant_11774" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10444" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="previous" to="previous &gt;= 0 ? previous * -1 : previous" />
    <mutant id="mutant_11775" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10445" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="current" to="current &gt;= 0 ? current : current * -1" />
    <mutant id="mutant_11776" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10446" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="current" to="current &gt;= 0 ? current * -1 : current" />
    <mutant id="mutant_11777" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10447" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_11778" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10448" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_11779" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10449" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="2" to="(-1 * 2)" />
    <mutant id="mutant_11770" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10440" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="(NumberUtils.compare(previous, current))" to="(NumberUtils.compare(previous, current) &gt;= 0 ? NumberUtils.compare(previous, current) * -1 : NumberUtils.compare(previous, current))" />
    <mutant id="mutant_11771" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND : ArrayUtils.INDEX_NOT_FOUND * -1" />
    <mutant id="mutant_10441" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="(NumberUtils.compare(previous, current))" to="(NumberUtils.compare(previous, current) &gt;= 0 ? NumberUtils.compare(previous, current) : NumberUtils.compare(previous, current) * -1)" />
    <mutant id="mutant_11772" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="ArrayUtils.INDEX_NOT_FOUND" to="ArrayUtils.INDEX_NOT_FOUND &gt;= 0 ? ArrayUtils.INDEX_NOT_FOUND * -1 : ArrayUtils.INDEX_NOT_FOUND" />
    <mutant id="mutant_10442" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(int[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11773" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10454" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11785" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10455" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11786" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10456" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_11787" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10457" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_11788" viable="false" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10458" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_11789" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="valueToFind" to="(valueToFind &gt;= 0 ? valueToFind : valueToFind * -1)" />
    <mutant id="mutant_10459" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_11780" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10450" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_11781" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_10451" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="array.length" to="array.length &gt;= 0 ? array.length * -1 : array.length" />
    <mutant id="mutant_11782" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex * -1 : startIndex" />
    <mutant id="mutant_10452" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="array.length" to="array.length &gt;= 0 ? array.length : array.length * -1" />
    <mutant id="mutant_11783" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="startIndex" to="startIndex &gt;= 0 ? startIndex : startIndex * -1" />
    <mutant id="mutant_10453" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(long[])" from="1" to="-1 * 1" />
    <mutant id="mutant_11784" viable="true" in="org.apache.commons.lang3.ArrayUtils.lastIndexOf(float[],float,int)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_4502" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_5834" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(long)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_4501" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_5835" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(long)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_4500" viable="false" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5836" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5837" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(org.apache.commons.lang3.text.StrBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5838" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5839" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(org.apache.commons.lang3.text.StrBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_4509" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision * -1 : precision)" />
    <mutant id="mutant_4508" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence)" from="precision" to="(precision &gt;= 0 ? precision : precision * -1)" />
    <mutant id="mutant_4507" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence)" from="width" to="(width &gt;= 0 ? width : width * -1)" />
    <mutant id="mutant_4506" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence)" from="width" to="(width &gt;= 0 ? width * -1 : width)" />
    <mutant id="mutant_5830" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4505" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence)" from="flags" to="(flags &gt;= 0 ? flags * -1 : flags)" />
    <mutant id="mutant_5831" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.StringBuilder,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4504" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,java.lang.CharSequence)" from="flags" to="(flags &gt;= 0 ? flags : flags * -1)" />
    <mutant id="mutant_5832" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_4503" viable="true" in="org.apache.commons.lang3.text.FormattableUtils.append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)" from="0" to="-1 * 0" />
    <mutant id="mutant_5833" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.StringBuilder,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5823" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5824" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5825" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.String,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5826" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5827" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.StringBuffer,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_5828" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_5829" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.StringBuffer,int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_5820" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(int)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_5821" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(int)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_5822" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(java.lang.String,int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_10487" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10488" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="(NumberUtils.compare(previous, current))" to="(NumberUtils.compare(previous, current) &gt;= 0 ? NumberUtils.compare(previous, current) * -1 : NumberUtils.compare(previous, current))" />
    <mutant id="mutant_10489" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="(NumberUtils.compare(previous, current))" to="(NumberUtils.compare(previous, current) &gt;= 0 ? NumberUtils.compare(previous, current) : NumberUtils.compare(previous, current) * -1)" />
    <mutant id="mutant_5812" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_5813" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(char[],int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_10480" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5814" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(char[],int,int)" from="length" to="(length &gt;= 0 ? length : length * -1)" />
    <mutant id="mutant_10481" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5815" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(char[],int,int)" from="length" to="(length &gt;= 0 ? length * -1 : length)" />
    <mutant id="mutant_10482" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="n" to="(n &gt;= 0 ? n : n * -1)" />
    <mutant id="mutant_5816" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(double)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_10483" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="n" to="(n &gt;= 0 ? n * -1 : n)" />
    <mutant id="mutant_5817" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(double)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_10484" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5818" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(float)" from="value" to="(value &gt;= 0 ? value : value * -1)" />
    <mutant id="mutant_10485" viable="false" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5819" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendln(float)" from="value" to="(value &gt;= 0 ? value * -1 : value)" />
    <mutant id="mutant_10486" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5810" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5811" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5809" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10498" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length * -1 : array2.length)" />
    <mutant id="mutant_10499" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array2.length)" to="(array2.length &gt;= 0 ? array2.length : array2.length * -1)" />
    <mutant id="mutant_5801" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10490" viable="true" in="org.apache.commons.lang3.ArrayUtils.isSorted(short[])" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5802" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_10491" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length * -1 : newArray.length)" />
    <mutant id="mutant_5803" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="1" to="-1 * 1" />
    <mutant id="mutant_10492" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="(newArray.length)" to="(newArray.length &gt;= 0 ? newArray.length : newArray.length * -1)" />
    <mutant id="mutant_5804" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10493" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],boolean)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5805" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_10494" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],int,boolean)" from="index" to="(index &gt;= 0 ? index * -1 : index)" />
    <mutant id="mutant_5806" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="(array.length)" to="(array.length &gt;= 0 ? array.length * -1 : array.length)" />
    <mutant id="mutant_10495" viable="true" in="org.apache.commons.lang3.ArrayUtils.add(boolean[],int,boolean)" from="index" to="(index &gt;= 0 ? index : index * -1)" />
    <mutant id="mutant_5807" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_10496" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length * -1 : array1.length)" />
    <mutant id="mutant_5808" viable="false" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_10497" viable="true" in="org.apache.commons.lang3.ArrayUtils.addAll(boolean[],boolean[])" from="(array1.length)" to="(array1.length &gt;= 0 ? array1.length : array1.length * -1)" />
    <mutant id="mutant_5800" viable="true" in="org.apache.commons.lang3.text.StrBuilder.appendWithSeparators(java.lang.Object[],java.lang.String)" from="(array.length)" to="(array.length &gt;= 0 ? array.length : array.length * -1)" />
    <mutant id="mutant_5880" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3215" viable="true" in="org.apache.commons.lang3.builder.IDKey.equals(java.lang.Object)" from="(id)" to="(id &gt;= 0 ? id : id * -1)" />
    <mutant id="mutant_4546" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5878" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3214" viable="true" in="org.apache.commons.lang3.builder.IDKey(java.lang.Object)" from="System.identityHashCode(_value)" to="System.identityHashCode(_value) &gt;= 0 ? System.identityHashCode(_value) : System.identityHashCode(_value) * -1" />
    <mutant id="mutant_4545" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() * -1 : org.apache.commons.lang3.text.StrBuilder.this.size())" />
    <mutant id="mutant_5879" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3213" viable="true" in="org.apache.commons.lang3.builder.IDKey(java.lang.Object)" from="System.identityHashCode(_value)" to="System.identityHashCode(_value) &gt;= 0 ? System.identityHashCode(_value) * -1 : System.identityHashCode(_value)" />
    <mutant id="mutant_4544" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() : org.apache.commons.lang3.text.StrBuilder.this.size() * -1)" />
    <mutant id="mutant_3212" viable="false" in="org.apache.commons.lang3.builder.IDKey(java.lang.Object)" from="id" to="id &gt;= 0 ? id * -1 : id" />
    <mutant id="mutant_4543" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(pos)" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_3211" viable="false" in="org.apache.commons.lang3.builder.IDKey(java.lang.Object)" from="id" to="id &gt;= 0 ? id : id * -1" />
    <mutant id="mutant_4542" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(pos)" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_3210" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_4541" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="0" to="-1 * 0" />
    <mutant id="mutant_4540" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5870" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5871" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_5872" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_5873" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="i &gt;= 0 ? i : i * -1" />
    <mutant id="mutant_3219" viable="true" in="org.apache.commons.lang3.builder.IDKey.hashCode()" from="id" to="id &gt;= 0 ? id : id * -1" />
    <mutant id="mutant_5874" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="i &gt;= 0 ? i * -1 : i" />
    <mutant id="mutant_3218" viable="true" in="org.apache.commons.lang3.builder.IDKey.equals(java.lang.Object)" from="(idKey.id)" to="(idKey.id &gt;= 0 ? idKey.id * -1 : idKey.id)" />
    <mutant id="mutant_4549" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5875" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3217" viable="true" in="org.apache.commons.lang3.builder.IDKey.equals(java.lang.Object)" from="(idKey.id)" to="(idKey.id &gt;= 0 ? idKey.id : idKey.id * -1)" />
    <mutant id="mutant_4548" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(pos)" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5876" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_3216" viable="true" in="org.apache.commons.lang3.builder.IDKey.equals(java.lang.Object)" from="(id)" to="(id &gt;= 0 ? id * -1 : id)" />
    <mutant id="mutant_4547" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(pos)" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5877" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_3204" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant : iConstant * -1)" />
    <mutant id="mutant_4535" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5867" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="(size)" to="(size &gt;= 0 ? size * -1 : size)" />
    <mutant id="mutant_3203" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="(iConstant)" to="(iConstant &gt;= 0 ? iConstant * -1 : iConstant)" />
    <mutant id="mutant_4534" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off : off * -1)" />
    <mutant id="mutant_5868" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="(size)" to="(size &gt;= 0 ? size : size * -1)" />
    <mutant id="mutant_3202" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal : iTotal * -1)" />
    <mutant id="mutant_4533" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off * -1 : off)" />
    <mutant id="mutant_5869" viable="false" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3201" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="(iTotal)" to="(iTotal &gt;= 0 ? iTotal * -1 : iTotal)" />
    <mutant id="mutant_4532" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(b.length)" to="(b.length &gt;= 0 ? b.length : b.length * -1)" />
    <mutant id="mutant_3200" viable="false" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="iTotal" to="iTotal &gt;= 0 ? iTotal : iTotal * -1" />
    <mutant id="mutant_4531" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(b.length)" to="(b.length &gt;= 0 ? b.length * -1 : b.length)" />
    <mutant id="mutant_4530" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5860" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_5861" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_3209" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_5862" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_3208" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() : field.getModifiers() * -1)" />
    <mutant id="mutant_4539" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5863" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_3207" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.reflectionAppend(java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.HashCodeBuilder,boolean,java.lang.String[])" from="field.getModifiers()" to="(field.getModifiers() &gt;= 0 ? field.getModifiers() * -1 : field.getModifiers())" />
    <mutant id="mutant_4538" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5864" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="0" to="-1 * 0" />
    <mutant id="mutant_3206" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="superHashCode" to="(superHashCode &gt;= 0 ? superHashCode * -1 : superHashCode)" />
    <mutant id="mutant_4537" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5865" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i : i * -1)" />
    <mutant id="mutant_3205" viable="true" in="org.apache.commons.lang3.builder.HashCodeBuilder.appendSuper(int)" from="superHashCode" to="(superHashCode &gt;= 0 ? superHashCode : superHashCode * -1)" />
    <mutant id="mutant_4536" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5866" viable="true" in="org.apache.commons.lang3.text.StrBuilder.deleteAll(char)" from="i" to="(i &gt;= 0 ? i * -1 : i)" />
    <mutant id="mutant_4524" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off : off * -1)" />
    <mutant id="mutant_5856" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_4523" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off * -1 : off)" />
    <mutant id="mutant_5857" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4522" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_5858" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4521" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len * -1 : len)" />
    <mutant id="mutant_5859" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4520" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5850" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) * -1 : validateRange(startIndex, endIndex)" />
    <mutant id="mutant_4529" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_5851" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_4528" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off : off * -1)" />
    <mutant id="mutant_5852" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_4527" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off * -1 : off)" />
    <mutant id="mutant_5853" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4526" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(b.length)" to="(b.length &gt;= 0 ? b.length : b.length * -1)" />
    <mutant id="mutant_5854" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4525" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="(b.length)" to="(b.length &gt;= 0 ? b.length * -1 : b.length)" />
    <mutant id="mutant_5855" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="len" to="(len &gt;= 0 ? len : len * -1)" />
    <mutant id="mutant_4513" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.ready()" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() * -1 : org.apache.commons.lang3.text.StrBuilder.this.size())" />
    <mutant id="mutant_5845" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex * -1 : startIndex)" />
    <mutant id="mutant_4512" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.ready()" from="(org.apache.commons.lang3.text.StrBuilder.this.size())" to="(org.apache.commons.lang3.text.StrBuilder.this.size() &gt;= 0 ? org.apache.commons.lang3.text.StrBuilder.this.size() : org.apache.commons.lang3.text.StrBuilder.this.size() * -1)" />
    <mutant id="mutant_5846" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="startIndex" to="(startIndex &gt;= 0 ? startIndex : startIndex * -1)" />
    <mutant id="mutant_4511" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.ready()" from="(pos)" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5847" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex * -1 : endIndex)" />
    <mutant id="mutant_4510" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.ready()" from="(pos)" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5848" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex" to="(endIndex &gt;= 0 ? endIndex : endIndex * -1)" />
    <mutant id="mutant_5849" viable="true" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="validateRange(startIndex, endIndex)" to="validateRange(startIndex, endIndex) &gt;= 0 ? validateRange(startIndex, endIndex) : validateRange(startIndex, endIndex) * -1" />
    <mutant id="mutant_4519" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="0" to="(-1 * 0)" />
    <mutant id="mutant_4518" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off : off * -1)" />
    <mutant id="mutant_5840" viable="false" in="org.apache.commons.lang3.text.StrBuilder.clear()" from="size" to="size &gt;= 0 ? size * -1 : size" />
    <mutant id="mutant_4517" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read(char[],int,int)" from="off" to="(off &gt;= 0 ? off * -1 : off)" />
    <mutant id="mutant_5841" viable="false" in="org.apache.commons.lang3.text.StrBuilder.clear()" from="size" to="size &gt;= 0 ? size : size * -1" />
    <mutant id="mutant_4516" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read()" from="(pos)" to="(pos &gt;= 0 ? pos * -1 : pos)" />
    <mutant id="mutant_5842" viable="true" in="org.apache.commons.lang3.text.StrBuilder.clear()" from="0" to="-1 * 0" />
    <mutant id="mutant_4515" viable="false" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read()" from="(pos)" to="(pos &gt;= 0 ? pos : pos * -1)" />
    <mutant id="mutant_5843" viable="false" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex * -1 : endIndex" />
    <mutant id="mutant_4514" viable="true" in="org.apache.commons.lang3.text.StrBuilder$StrBuilderReader.read()" from="1" to="(-1 * 1)" />
    <mutant id="mutant_5844" viable="false" in="org.apache.commons.lang3.text.StrBuilder.delete(int,int)" from="endIndex" to="endIndex &gt;= 0 ? endIndex : endIndex * -1" />
  </mutants>
</mutation>
