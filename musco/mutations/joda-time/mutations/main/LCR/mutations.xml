<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="LCR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="212431">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_569" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second) || milli" to="(hour || minute) || second" />
    <mutant id="mutant_565" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second) || milli" to="milli" />
    <mutant id="mutant_566" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second) || milli" to="true" />
    <mutant id="mutant_567" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second) || milli" to="false" />
    <mutant id="mutant_568" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second) || milli" to="((hour || minute) || second) &amp;&amp; milli" />
    <mutant id="mutant_561" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second)" to="true" />
    <mutant id="mutant_562" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second)" to="false" />
    <mutant id="mutant_563" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second)" to="second" />
    <mutant id="mutant_564" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second)" to="(hour || minute)" />
    <mutant id="mutant_560" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour || minute) || second)" to="((hour || minute) &amp;&amp; second)" />
    <mutant id="mutant_576" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; minute)" to="true" />
    <mutant id="mutant_577" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; minute)" to="false" />
    <mutant id="mutant_578" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; minute)" to="minute" />
    <mutant id="mutant_579" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; minute)" to="(hour || minute)" />
    <mutant id="mutant_572" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; reducedPrec" to="strictISO" />
    <mutant id="mutant_573" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; reducedPrec" to="true" />
    <mutant id="mutant_574" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; reducedPrec" to="false" />
    <mutant id="mutant_575" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; minute)" to="hour" />
    <mutant id="mutant_570" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; reducedPrec" to="reducedPrec" />
    <mutant id="mutant_571" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; reducedPrec" to="strictISO || reducedPrec" />
    <mutant id="mutant_107" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="((type != null) || (!(supportedType.isAssignableFrom(type))))" />
    <mutant id="mutant_108" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="true" />
    <mutant id="mutant_109" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="false" />
    <mutant id="mutant_103" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)" from="(start == null) || (end == null)" to="end == null" />
    <mutant id="mutant_587" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; (!second))" to="true" />
    <mutant id="mutant_104" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)" from="(start == null) || (end == null)" to="(start == null) &amp;&amp; (end == null)" />
    <mutant id="mutant_588" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; (!second))" to="false" />
    <mutant id="mutant_105" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="(type != null)" />
    <mutant id="mutant_589" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; (!second))" to="(hour || (!second))" />
    <mutant id="mutant_106" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="(!(supportedType.isAssignableFrom(type)))" />
    <mutant id="mutant_1298" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="FieldUtils.equals(getChronology(), other.getChronology())" />
    <mutant id="mutant_1299" viable="true" in="org.joda.time.field.FieldUtils.equals(java.lang.Object,java.lang.Object)" from="(object1 == null) || (object2 == null)" to="object1 == null" />
    <mutant id="mutant_1296" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))" />
    <mutant id="mutant_1297" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))) || (FieldUtils.equals(getChronology(), other.getChronology()))" />
    <mutant id="mutant_1294" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="true" />
    <mutant id="mutant_1295" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="false" />
    <mutant id="mutant_583" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second)" to="(hour &amp;&amp; minute)" />
    <mutant id="mutant_100" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)" from="(start == null) || (end == null)" to="start == null" />
    <mutant id="mutant_584" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second)" to="second" />
    <mutant id="mutant_101" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)" from="(start == null) || (end == null)" to="true" />
    <mutant id="mutant_585" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; (!second))" to="hour" />
    <mutant id="mutant_102" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.ReadablePeriod)" from="(start == null) || (end == null)" to="false" />
    <mutant id="mutant_586" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour &amp;&amp; (!second))" to="(!second)" />
    <mutant id="mutant_580" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second)" to="((hour &amp;&amp; minute) || second)" />
    <mutant id="mutant_581" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second)" to="true" />
    <mutant id="mutant_582" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second)" to="false" />
    <mutant id="mutant_118" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(type == null) || (length == 0)" to="false" />
    <mutant id="mutant_119" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(type == null) || (length == 0)" to="type == null" />
    <mutant id="mutant_114" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(supportedType == null) || ((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="(type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type)))" />
    <mutant id="mutant_598" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second) || ((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="false" />
    <mutant id="mutant_115" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(type == null) || (length == 0)" to="(type == null) &amp;&amp; (length == 0)" />
    <mutant id="mutant_599" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second) || ((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="(hour &amp;&amp; (!second)) &amp;&amp; (!milli)" />
    <mutant id="mutant_116" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(type == null) || (length == 0)" to="length == 0" />
    <mutant id="mutant_117" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(type == null) || (length == 0)" to="true" />
    <mutant id="mutant_1292" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType())))" to="((get()) == (other.get()))" />
    <mutant id="mutant_1293" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType())))" to="(getFieldType().equals(other.getFieldType()))" />
    <mutant id="mutant_1290" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType())))" to="false" />
    <mutant id="mutant_1291" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType())))" to="(((get()) == (other.get())) || (getFieldType().equals(other.getFieldType())))" />
    <mutant id="mutant_1289" viable="true" in="org.joda.time.field.AbstractReadableInstantFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; (getFieldType().equals(other.getFieldType())))" to="true" />
    <mutant id="mutant_1287" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()))" to="false" />
    <mutant id="mutant_1288" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()))" to="((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))" />
    <mutant id="mutant_1285" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()))" to="FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology())" />
    <mutant id="mutant_1286" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()))" to="true" />
    <mutant id="mutant_1283" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType())))" to="(((get()) == (other.get())) || ((getFieldType()) == (other.getFieldType())))" />
    <mutant id="mutant_1284" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))) &amp;&amp; (FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()))" to="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType()))) || (FieldUtils.equals(getReadablePartial().getChronology(), other.getReadablePartial().getChronology()))" />
    <mutant id="mutant_110" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(supportedType == null) || ((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="(supportedType == null) &amp;&amp; ((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" />
    <mutant id="mutant_594" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="(!milli)" />
    <mutant id="mutant_111" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(supportedType == null) || ((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="true" />
    <mutant id="mutant_595" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second) || ((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="(hour &amp;&amp; minute) &amp;&amp; second" />
    <mutant id="mutant_112" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(supportedType == null) || ((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="false" />
    <mutant id="mutant_596" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second) || ((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="((hour &amp;&amp; minute) &amp;&amp; second) &amp;&amp; ((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" />
    <mutant id="mutant_113" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(supportedType == null) || ((type != null) &amp;&amp; (!(supportedType.isAssignableFrom(type))))" to="supportedType == null" />
    <mutant id="mutant_597" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; minute) &amp;&amp; second) || ((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="true" />
    <mutant id="mutant_590" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="((hour &amp;&amp; (!second)) || (!milli))" />
    <mutant id="mutant_591" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="true" />
    <mutant id="mutant_592" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="false" />
    <mutant id="mutant_593" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((hour &amp;&amp; (!second)) &amp;&amp; (!milli))" to="(hour &amp;&amp; (!second))" />
    <mutant id="mutant_129" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))" to="((str.charAt(0)) == 'p')" />
    <mutant id="mutant_125" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))" to="(((str.charAt(0)) == 'P') &amp;&amp; ((str.charAt(0)) == 'p'))" />
    <mutant id="mutant_126" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))" to="true" />
    <mutant id="mutant_127" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))" to="false" />
    <mutant id="mutant_128" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))" to="((str.charAt(0)) == 'P')" />
    <mutant id="mutant_121" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(j != i) &amp;&amp; (converters[j].getSupportedType().isAssignableFrom(supportedType))" to="false" />
    <mutant id="mutant_122" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(j != i) &amp;&amp; (converters[j].getSupportedType().isAssignableFrom(supportedType))" to="j != i" />
    <mutant id="mutant_123" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(j != i) &amp;&amp; (converters[j].getSupportedType().isAssignableFrom(supportedType))" to="converters[j].getSupportedType().isAssignableFrom(supportedType)" />
    <mutant id="mutant_124" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(j != i) &amp;&amp; (converters[j].getSupportedType().isAssignableFrom(supportedType))" to="(j != i) || (converters[j].getSupportedType().isAssignableFrom(supportedType))" />
    <mutant id="mutant_120" viable="true" in="org.joda.time.convert.ConverterSet.selectSlow(org.joda.time.convert.ConverterSet,java.lang.Class)" from="(j != i) &amp;&amp; (converters[j].getSupportedType().isAssignableFrom(supportedType))" to="true" />
    <mutant id="mutant_136" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))" to="((str.charAt(1)) == 't')" />
    <mutant id="mutant_137" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))" to="true" />
    <mutant id="mutant_138" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))" to="false" />
    <mutant id="mutant_139" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))" to="(((str.charAt(1)) == 'T') &amp;&amp; ((str.charAt(1)) == 't'))" />
    <mutant id="mutant_132" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" to="false" />
    <mutant id="mutant_133" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" to="(((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))" />
    <mutant id="mutant_134" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" to="((len &gt;= 4) || (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" />
    <mutant id="mutant_135" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))" to="((str.charAt(1)) == 'T')" />
    <mutant id="mutant_130" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" to="(len &gt;= 4)" />
    <mutant id="mutant_131" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" to="true" />
    <mutant id="mutant_147" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="true" />
    <mutant id="mutant_148" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="false" />
    <mutant id="mutant_149" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="(((str.charAt((len - 1))) == 'S') &amp;&amp; ((str.charAt((len - 1))) == 's'))" />
    <mutant id="mutant_143" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't')))" to="true" />
    <mutant id="mutant_144" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't')))" to="false" />
    <mutant id="mutant_145" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="((str.charAt((len - 1))) == 'S')" />
    <mutant id="mutant_146" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="((str.charAt((len - 1))) == 's')" />
    <mutant id="mutant_140" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't')))" to="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) || (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't')))" />
    <mutant id="mutant_141" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't')))" to="((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p')))" />
    <mutant id="mutant_142" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't')))" to="(((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))" />
    <mutant id="mutant_158" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((str.charAt(i)) &gt;= '0') &amp;&amp; ((str.charAt(i)) &lt;= '9')" to="(str.charAt(i)) &lt;= '9'" />
    <mutant id="mutant_159" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((str.charAt(i)) &gt;= '0') &amp;&amp; ((str.charAt(i)) &lt;= '9')" to="(str.charAt(i)) &gt;= '0'" />
    <mutant id="mutant_154" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))) &amp;&amp; (((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))" />
    <mutant id="mutant_155" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((str.charAt(i)) &gt;= '0') &amp;&amp; ((str.charAt(i)) &lt;= '9')" to="((str.charAt(i)) &gt;= '0') || ((str.charAt(i)) &lt;= '9')" />
    <mutant id="mutant_156" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((str.charAt(i)) &gt;= '0') &amp;&amp; ((str.charAt(i)) &lt;= '9')" to="true" />
    <mutant id="mutant_157" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((str.charAt(i)) &gt;= '0') &amp;&amp; ((str.charAt(i)) &lt;= '9')" to="false" />
    <mutant id="mutant_150" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))) &amp;&amp; (((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's')" />
    <mutant id="mutant_151" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))) &amp;&amp; (((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))) || (((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" />
    <mutant id="mutant_152" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))) &amp;&amp; (((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="true" />
    <mutant id="mutant_153" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(((len &gt;= 4) &amp;&amp; (((str.charAt(0)) == 'P') || ((str.charAt(0)) == 'p'))) &amp;&amp; (((str.charAt(1)) == 'T') || ((str.charAt(1)) == 't'))) &amp;&amp; (((str.charAt((len - 1))) == 'S') || ((str.charAt((len - 1))) == 's'))" to="false" />
    <mutant id="mutant_169" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.'))" to="((str.charAt(i)) == '.')" />
    <mutant id="mutant_160" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(i == 0) &amp;&amp; ((str.charAt(0)) == '-')" to="(i == 0) || ((str.charAt(0)) == '-')" />
    <mutant id="mutant_165" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.'))" to="(i &gt; (negative ? 1 : 0))" />
    <mutant id="mutant_166" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.'))" to="((i &gt; (negative ? 1 : 0)) || ((str.charAt(i)) == '.'))" />
    <mutant id="mutant_167" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.'))" to="true" />
    <mutant id="mutant_168" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.'))" to="false" />
    <mutant id="mutant_161" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(i == 0) &amp;&amp; ((str.charAt(0)) == '-')" to="i == 0" />
    <mutant id="mutant_162" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(i == 0) &amp;&amp; ((str.charAt(0)) == '-')" to="true" />
    <mutant id="mutant_163" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(i == 0) &amp;&amp; ((str.charAt(0)) == '-')" to="false" />
    <mutant id="mutant_164" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="(i == 0) &amp;&amp; ((str.charAt(0)) == '-')" to="(str.charAt(0)) == '-'" />
    <mutant id="mutant_170" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')) &amp;&amp; (dot == (-1))" to="true" />
    <mutant id="mutant_171" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')) &amp;&amp; (dot == (-1))" to="false" />
    <mutant id="mutant_176" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="false" />
    <mutant id="mutant_177" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="c == 'P'" />
    <mutant id="mutant_178" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="c == 'p'" />
    <mutant id="mutant_179" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="(c == 'P') &amp;&amp; (c == 'p')" />
    <mutant id="mutant_172" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')) &amp;&amp; (dot == (-1))" to="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')) || (dot == (-1))" />
    <mutant id="mutant_173" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')) &amp;&amp; (dot == (-1))" to="(i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')" />
    <mutant id="mutant_174" viable="true" in="org.joda.time.convert.StringConverter.getDurationMillis(java.lang.Object)" from="((i &gt; (negative ? 1 : 0)) &amp;&amp; ((str.charAt(i)) == '.')) &amp;&amp; (dot == (-1))" to="dot == (-1)" />
    <mutant id="mutant_175" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="true" />
    <mutant id="mutant_180" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="true" />
    <mutant id="mutant_181" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="false" />
    <mutant id="mutant_182" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="c == 'P'" />
    <mutant id="mutant_187" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="false" />
    <mutant id="mutant_188" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="(c &gt;= 'A')" />
    <mutant id="mutant_189" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="((c &gt;= 'A') || (c &lt;= 'Z'))" />
    <mutant id="mutant_183" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="c == 'p'" />
    <mutant id="mutant_184" viable="true" in="org.joda.time.convert.StringConverter.setInto(org.joda.time.ReadWritableInterval,java.lang.Object,org.joda.time.Chronology)" from="(c == 'P') || (c == 'p')" to="(c == 'P') &amp;&amp; (c == 'p')" />
    <mutant id="mutant_185" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="(c &lt;= 'Z')" />
    <mutant id="mutant_186" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="true" />
    <mutant id="mutant_190" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(c &lt;= 'z')" />
    <mutant id="mutant_191" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="true" />
    <mutant id="mutant_192" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="false" />
    <mutant id="mutant_193" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="((c &gt;= 'a') || (c &lt;= 'z'))" />
    <mutant id="mutant_198" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="true" />
    <mutant id="mutant_199" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="false" />
    <mutant id="mutant_194" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(c &gt;= 'a')" />
    <mutant id="mutant_195" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(c &gt;= 'a') &amp;&amp; (c &lt;= 'z')" />
    <mutant id="mutant_196" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) &amp;&amp; ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" />
    <mutant id="mutant_197" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')" />
    <mutant id="mutant_1719" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(month == 12) &amp;&amp; (day == 31)" to="true" />
    <mutant id="mutant_1717" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.length()) == 6) &amp;&amp; ((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="false" />
    <mutant id="mutant_1718" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(month == 12) &amp;&amp; (day == 31)" to="day == 31" />
    <mutant id="mutant_1715" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.length()) == 6) &amp;&amp; ((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="((id.length()) == 6) || ((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" />
    <mutant id="mutant_1716" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.length()) == 6) &amp;&amp; ((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="true" />
    <mutant id="mutant_1713" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.length()) == 6) &amp;&amp; ((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="(id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))" />
    <mutant id="mutant_1714" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.length()) == 6) &amp;&amp; ((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="(id.length()) == 6" />
    <mutant id="mutant_1711" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="true" />
    <mutant id="mutant_1712" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="false" />
    <mutant id="mutant_1710" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="((id.startsWith(&quot;+&quot;)) &amp;&amp; (id.startsWith(&quot;-&quot;)))" />
    <mutant id="mutant_1708" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="(id.startsWith(&quot;+&quot;))" />
    <mutant id="mutant_1709" viable="true" in="org.joda.time.tz.FixedDateTimeZone.toTimeZone()" from="((id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;)))" to="(id.startsWith(&quot;-&quot;))" />
    <mutant id="mutant_1706" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; ((iWallOffset) == (other.iWallOffset))" to="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) || ((iWallOffset) == (other.iWallOffset))" />
    <mutant id="mutant_1707" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; ((iWallOffset) == (other.iWallOffset))" to="(iWallOffset) == (other.iWallOffset)" />
    <mutant id="mutant_1704" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; ((iWallOffset) == (other.iWallOffset))" to="false" />
    <mutant id="mutant_1705" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; ((iWallOffset) == (other.iWallOffset))" to="(getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))" />
    <mutant id="mutant_1702" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="(getID().equals(other.getID()))" />
    <mutant id="mutant_1703" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; ((iWallOffset) == (other.iWallOffset))" to="true" />
    <mutant id="mutant_1700" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="false" />
    <mutant id="mutant_1701" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="((iStandardOffset) == (other.iStandardOffset))" />
    <mutant id="mutant_1751" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(prev == millis) || (prev &lt; end)" to="false" />
    <mutant id="mutant_1752" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(prev == millis) || (prev &lt; end)" to="prev == millis" />
    <mutant id="mutant_1750" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(prev == millis) || (prev &lt; end)" to="true" />
    <mutant id="mutant_1759" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;maximum&quot;)) || (str.equals(&quot;max&quot;))" to="true" />
    <mutant id="mutant_1757" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;minimum&quot;)) || (str.equals(&quot;min&quot;))" to="(str.equals(&quot;minimum&quot;)) &amp;&amp; (str.equals(&quot;min&quot;))" />
    <mutant id="mutant_1758" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;maximum&quot;)) || (str.equals(&quot;max&quot;))" to="str.equals(&quot;max&quot;)" />
    <mutant id="mutant_1755" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;minimum&quot;)) || (str.equals(&quot;min&quot;))" to="true" />
    <mutant id="mutant_1756" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;minimum&quot;)) || (str.equals(&quot;min&quot;))" to="false" />
    <mutant id="mutant_1753" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;minimum&quot;)) || (str.equals(&quot;min&quot;))" to="str.equals(&quot;minimum&quot;)" />
    <mutant id="mutant_1754" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;minimum&quot;)) || (str.equals(&quot;min&quot;))" to="str.equals(&quot;min&quot;)" />
    <mutant id="mutant_1740" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="false" />
    <mutant id="mutant_1741" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="(((nextKey.length()) &lt; 3) || (!(&quot;??&quot;.equals(nextKey))))" />
    <mutant id="mutant_1748" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(prev == millis) || (prev &lt; end)" to="(prev == millis) &amp;&amp; (prev &lt; end)" />
    <mutant id="mutant_1749" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(prev == millis) || (prev &lt; end)" to="prev &lt; end" />
    <mutant id="mutant_1746" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(nextKey == null) || (((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey)))" />
    <mutant id="mutant_1747" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(nextKey == null) || (((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="(nextKey == null) &amp;&amp; (((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" />
    <mutant id="mutant_1744" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(nextKey == null) || (((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="false" />
    <mutant id="mutant_1745" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(nextKey == null) || (((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="nextKey == null" />
    <mutant id="mutant_1742" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="((nextKey.length()) &lt; 3)" />
    <mutant id="mutant_1743" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(nextKey == null) || (((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="true" />
    <mutant id="mutant_900" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos))" to="true" />
    <mutant id="mutant_901" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos))" to="false" />
    <mutant id="mutant_902" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos))" to="found" />
    <mutant id="mutant_1739" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="true" />
    <mutant id="mutant_907" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos)) &amp;&amp; (parsedFormLength &gt; 0)" to="false" />
    <mutant id="mutant_908" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos)) &amp;&amp; (parsedFormLength &gt; 0)" to="found &amp;&amp; (position == oldPos)" />
    <mutant id="mutant_909" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos)) &amp;&amp; (parsedFormLength &gt; 0)" to="parsedFormLength &gt; 0" />
    <mutant id="mutant_903" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos))" to="(found || (position == oldPos))" />
    <mutant id="mutant_904" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos))" to="(position == oldPos)" />
    <mutant id="mutant_905" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos)) &amp;&amp; (parsedFormLength &gt; 0)" to="(found &amp;&amp; (position == oldPos)) || (parsedFormLength &gt; 0)" />
    <mutant id="mutant_906" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(found &amp;&amp; (position == oldPos)) &amp;&amp; (parsedFormLength &gt; 0)" to="true" />
    <mutant id="mutant_1730" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(next == millis) || (next &gt; end)" to="true" />
    <mutant id="mutant_1737" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(offset == nextOffset) &amp;&amp; (key.equals(nextKey))" to="key.equals(nextKey)" />
    <mutant id="mutant_1738" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(((nextKey.length()) &lt; 3) &amp;&amp; (!(&quot;??&quot;.equals(nextKey))))" to="(!(&quot;??&quot;.equals(nextKey)))" />
    <mutant id="mutant_1735" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(offset == nextOffset) &amp;&amp; (key.equals(nextKey))" to="true" />
    <mutant id="mutant_1736" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(offset == nextOffset) &amp;&amp; (key.equals(nextKey))" to="false" />
    <mutant id="mutant_1733" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(offset == nextOffset) &amp;&amp; (key.equals(nextKey))" to="offset == nextOffset" />
    <mutant id="mutant_1734" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(offset == nextOffset) &amp;&amp; (key.equals(nextKey))" to="(offset == nextOffset) || (key.equals(nextKey))" />
    <mutant id="mutant_1731" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(next == millis) || (next &gt; end)" to="false" />
    <mutant id="mutant_1732" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(next == millis) || (next &gt; end)" to="next &gt; end" />
    <mutant id="mutant_910" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found))" to="((position &gt; oldPos) || (!found))" />
    <mutant id="mutant_911" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found))" to="true" />
    <mutant id="mutant_912" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found))" to="false" />
    <mutant id="mutant_913" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found))" to="(position &gt; oldPos)" />
    <mutant id="mutant_1728" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(next == millis) || (next &gt; end)" to="(next == millis) &amp;&amp; (next &gt; end)" />
    <mutant id="mutant_1729" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.test(java.lang.String,org.joda.time.DateTimeZone)" from="(next == millis) || (next &gt; end)" to="next == millis" />
    <mutant id="mutant_918" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found)) &amp;&amp; (!(iUseBefore))" to="(position &gt; oldPos) &amp;&amp; (!found)" />
    <mutant id="mutant_919" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found)) &amp;&amp; (!(iUseBefore))" to="!(iUseBefore)" />
    <mutant id="mutant_914" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found))" to="(!found)" />
    <mutant id="mutant_915" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found)) &amp;&amp; (!(iUseBefore))" to="((position &gt; oldPos) &amp;&amp; (!found)) || (!(iUseBefore))" />
    <mutant id="mutant_916" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found)) &amp;&amp; (!(iUseBefore))" to="true" />
    <mutant id="mutant_917" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((position &gt; oldPos) &amp;&amp; (!found)) &amp;&amp; (!(iUseBefore))" to="false" />
    <mutant id="mutant_1726" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(day != (-1)) &amp;&amp; (dayOfWeek != 0)" to="day != (-1)" />
    <mutant id="mutant_1727" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(day != (-1)) &amp;&amp; (dayOfWeek != 0)" to="dayOfWeek != 0" />
    <mutant id="mutant_1724" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(day != (-1)) &amp;&amp; (dayOfWeek != 0)" to="false" />
    <mutant id="mutant_1725" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(day != (-1)) &amp;&amp; (dayOfWeek != 0)" to="(day != (-1)) || (dayOfWeek != 0)" />
    <mutant id="mutant_1722" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(month == 12) &amp;&amp; (day == 31)" to="month == 12" />
    <mutant id="mutant_1723" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(day != (-1)) &amp;&amp; (dayOfWeek != 0)" to="true" />
    <mutant id="mutant_1720" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(month == 12) &amp;&amp; (day == 31)" to="false" />
    <mutant id="mutant_1721" viable="true" in="org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear(java.util.StringTokenizer)" from="(month == 12) &amp;&amp; (day == 31)" to="(month == 12) || (day == 31)" />
    <mutant id="mutant_921" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="true" />
    <mutant id="mutant_922" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="false" />
    <mutant id="mutant_923" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="iUseAfter" />
    <mutant id="mutant_924" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="(iUseAfter) || ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" />
    <mutant id="mutant_920" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="(after.countFieldsToPrint(period, 1, locale)) &gt; 0" />
    <mutant id="mutant_929" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="(iUseAfter) || ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" />
    <mutant id="mutant_925" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="(after.countFieldsToPrint(period, 1, locale)) &gt; 0" />
    <mutant id="mutant_926" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="true" />
    <mutant id="mutant_927" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="false" />
    <mutant id="mutant_928" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="iUseAfter" />
    <mutant id="mutant_1311" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(total &lt; (Integer.MIN_VALUE)) || (total &gt; (Integer.MAX_VALUE))" to="total &gt; (Integer.MAX_VALUE)" />
    <mutant id="mutant_1795" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="true" />
    <mutant id="mutant_1312" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(total &lt; (Integer.MIN_VALUE)) || (total &gt; (Integer.MAX_VALUE))" to="total &lt; (Integer.MIN_VALUE)" />
    <mutant id="mutant_1796" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="false" />
    <mutant id="mutant_1793" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="(durationToAdd == 0) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1310" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(total &lt; (Integer.MIN_VALUE)) || (total &gt; (Integer.MAX_VALUE))" to="false" />
    <mutant id="mutant_1794" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1791" viable="true" in="org.joda.time.tz.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader,boolean)" from="(loader == null) &amp;&amp; (!favorSystemLoader)" to="!favorSystemLoader" />
    <mutant id="mutant_1792" viable="true" in="org.joda.time.tz.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader,boolean)" from="(loader == null) &amp;&amp; (!favorSystemLoader)" to="loader == null" />
    <mutant id="mutant_1790" viable="true" in="org.joda.time.tz.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader,boolean)" from="(loader == null) &amp;&amp; (!favorSystemLoader)" to="false" />
    <mutant id="mutant_1319" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="(val1 ^ sum) &lt; 0" />
    <mutant id="mutant_1317" viable="true" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="((Integer.MIN_VALUE) &lt;= value) &amp;&amp; (value &lt;= (Integer.MAX_VALUE))" to="((Integer.MIN_VALUE) &lt;= value) || (value &lt;= (Integer.MAX_VALUE))" />
    <mutant id="mutant_1318" viable="true" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="((Integer.MIN_VALUE) &lt;= value) &amp;&amp; (value &lt;= (Integer.MAX_VALUE))" to="value &lt;= (Integer.MAX_VALUE)" />
    <mutant id="mutant_1315" viable="true" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="((Integer.MIN_VALUE) &lt;= value) &amp;&amp; (value &lt;= (Integer.MAX_VALUE))" to="true" />
    <mutant id="mutant_1799" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1316" viable="true" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="((Integer.MIN_VALUE) &lt;= value) &amp;&amp; (value &lt;= (Integer.MAX_VALUE))" to="false" />
    <mutant id="mutant_1313" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(total &lt; (Integer.MIN_VALUE)) || (total &gt; (Integer.MAX_VALUE))" to="(total &lt; (Integer.MIN_VALUE)) &amp;&amp; (total &gt; (Integer.MAX_VALUE))" />
    <mutant id="mutant_1797" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="durationToAdd == 0" />
    <mutant id="mutant_1314" viable="true" in="org.joda.time.field.FieldUtils.safeToInt(long)" from="((Integer.MIN_VALUE) &lt;= value) &amp;&amp; (value &lt;= (Integer.MAX_VALUE))" to="(Integer.MIN_VALUE) &lt;= value" />
    <mutant id="mutant_1798" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_932" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="notPrinter &amp;&amp; notParser" to="notPrinter" />
    <mutant id="mutant_933" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="notPrinter &amp;&amp; notParser" to="true" />
    <mutant id="mutant_934" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="notPrinter &amp;&amp; notParser" to="false" />
    <mutant id="mutant_935" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="(size &gt;= 2) &amp;&amp; ((elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)" to="(size &gt;= 2) || ((elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)" />
    <mutant id="mutant_930" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="notPrinter &amp;&amp; notParser" to="notPrinter || notParser" />
    <mutant id="mutant_931" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="notPrinter &amp;&amp; notParser" to="notParser" />
    <mutant id="mutant_936" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="(size &gt;= 2) &amp;&amp; ((elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)" to="size &gt;= 2" />
    <mutant id="mutant_937" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="(size &gt;= 2) &amp;&amp; ((elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)" to="(elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator" />
    <mutant id="mutant_938" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="(size &gt;= 2) &amp;&amp; ((elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)" to="true" />
    <mutant id="mutant_939" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="(size &gt;= 2) &amp;&amp; ((elementPairs.get(0)) instanceof org.joda.time.format.PeriodFormatterBuilder.Separator)" to="false" />
    <mutant id="mutant_1300" viable="true" in="org.joda.time.field.FieldUtils.equals(java.lang.Object,java.lang.Object)" from="(object1 == null) || (object2 == null)" to="true" />
    <mutant id="mutant_1784" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))) || (alias.equals(&quot;GMT&quot;))" to="false" />
    <mutant id="mutant_1301" viable="true" in="org.joda.time.field.FieldUtils.equals(java.lang.Object,java.lang.Object)" from="(object1 == null) || (object2 == null)" to="false" />
    <mutant id="mutant_1785" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))) || (alias.equals(&quot;GMT&quot;))" to="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))) &amp;&amp; (alias.equals(&quot;GMT&quot;))" />
    <mutant id="mutant_1782" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;)))" to="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) &amp;&amp; (alias.startsWith(&quot;Etc/&quot;)))" />
    <mutant id="mutant_1783" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))) || (alias.equals(&quot;GMT&quot;))" to="true" />
    <mutant id="mutant_1780" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;)))" to="false" />
    <mutant id="mutant_1781" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;)))" to="(alias.startsWith(&quot;Etc/&quot;))" />
    <mutant id="mutant_1308" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="false" />
    <mutant id="mutant_1309" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(int,int)" from="(total &lt; (Integer.MIN_VALUE)) || (total &gt; (Integer.MAX_VALUE))" to="true" />
    <mutant id="mutant_1306" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="((val1 ^ sum) &lt; 0) || ((val1 ^ val2) &gt;= 0)" />
    <mutant id="mutant_1307" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="true" />
    <mutant id="mutant_1304" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="(val1 ^ sum) &lt; 0" />
    <mutant id="mutant_1788" viable="true" in="org.joda.time.tz.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader,boolean)" from="(loader == null) &amp;&amp; (!favorSystemLoader)" to="(loader == null) || (!favorSystemLoader)" />
    <mutant id="mutant_1305" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(int,int)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="(val1 ^ val2) &gt;= 0" />
    <mutant id="mutant_1789" viable="true" in="org.joda.time.tz.ZoneInfoProvider(java.lang.String,java.lang.ClassLoader,boolean)" from="(loader == null) &amp;&amp; (!favorSystemLoader)" to="true" />
    <mutant id="mutant_1302" viable="true" in="org.joda.time.field.FieldUtils.equals(java.lang.Object,java.lang.Object)" from="(object1 == null) || (object2 == null)" to="(object1 == null) &amp;&amp; (object2 == null)" />
    <mutant id="mutant_1786" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))) || (alias.equals(&quot;GMT&quot;))" to="(backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))" />
    <mutant id="mutant_1303" viable="true" in="org.joda.time.field.FieldUtils.equals(java.lang.Object,java.lang.Object)" from="(object1 == null) || (object2 == null)" to="object2 == null" />
    <mutant id="mutant_1787" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;))) || (alias.equals(&quot;GMT&quot;))" to="alias.equals(&quot;GMT&quot;)" />
    <mutant id="mutant_943" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="((sep.iAfterParser) == null) &amp;&amp; ((sep.iAfterPrinter) == null)" to="false" />
    <mutant id="mutant_944" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="((sep.iAfterParser) == null) &amp;&amp; ((sep.iAfterPrinter) == null)" to="(sep.iAfterParser) == null" />
    <mutant id="mutant_945" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" from="(printer == null) &amp;&amp; (parser == null)" to="printer == null" />
    <mutant id="mutant_946" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" from="(printer == null) &amp;&amp; (parser == null)" to="parser == null" />
    <mutant id="mutant_940" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="((sep.iAfterParser) == null) &amp;&amp; ((sep.iAfterPrinter) == null)" to="(sep.iAfterPrinter) == null" />
    <mutant id="mutant_941" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="((sep.iAfterParser) == null) &amp;&amp; ((sep.iAfterPrinter) == null)" to="((sep.iAfterParser) == null) || ((sep.iAfterPrinter) == null)" />
    <mutant id="mutant_942" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.toFormatter(java.util.List,boolean,boolean)" from="((sep.iAfterParser) == null) &amp;&amp; ((sep.iAfterPrinter) == null)" to="true" />
    <mutant id="mutant_947" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" from="(printer == null) &amp;&amp; (parser == null)" to="true" />
    <mutant id="mutant_948" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" from="(printer == null) &amp;&amp; (parser == null)" to="false" />
    <mutant id="mutant_949" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.append(org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser)" from="(printer == null) &amp;&amp; (parser == null)" to="(printer == null) || (parser == null)" />
    <mutant id="mutant_1773" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(backward || (alias.equals(&quot;US/Pacific-New&quot;)))" to="(backward &amp;&amp; (alias.equals(&quot;US/Pacific-New&quot;)))" />
    <mutant id="mutant_1774" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(backward || (alias.equals(&quot;US/Pacific-New&quot;)))" to="true" />
    <mutant id="mutant_1771" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(Character.isWhitespace(line.charAt(0))) &amp;&amp; (st.hasMoreTokens())" to="(Character.isWhitespace(line.charAt(0))) || (st.hasMoreTokens())" />
    <mutant id="mutant_1772" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(Character.isWhitespace(line.charAt(0))) &amp;&amp; (st.hasMoreTokens())" to="st.hasMoreTokens()" />
    <mutant id="mutant_1770" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(Character.isWhitespace(line.charAt(0))) &amp;&amp; (st.hasMoreTokens())" to="false" />
    <mutant id="mutant_1779" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;)))" to="true" />
    <mutant id="mutant_1777" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(backward || (alias.equals(&quot;US/Pacific-New&quot;)))" to="backward" />
    <mutant id="mutant_1778" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((backward || (alias.equals(&quot;US/Pacific-New&quot;))) || (alias.startsWith(&quot;Etc/&quot;)))" to="(backward || (alias.equals(&quot;US/Pacific-New&quot;)))" />
    <mutant id="mutant_1775" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(backward || (alias.equals(&quot;US/Pacific-New&quot;)))" to="false" />
    <mutant id="mutant_1776" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(backward || (alias.equals(&quot;US/Pacific-New&quot;)))" to="(alias.equals(&quot;US/Pacific-New&quot;))" />
    <mutant id="mutant_954" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="pluralText == null" />
    <mutant id="mutant_955" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (prefixes == null))" to="(regularExpressions == null)" />
    <mutant id="mutant_956" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (prefixes == null))" to="true" />
    <mutant id="mutant_957" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (prefixes == null))" to="false" />
    <mutant id="mutant_950" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="singularText == null" />
    <mutant id="mutant_951" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="true" />
    <mutant id="mutant_952" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="false" />
    <mutant id="mutant_953" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="(singularText == null) &amp;&amp; (pluralText == null)" />
    <mutant id="mutant_958" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (prefixes == null))" to="(prefixes == null)" />
    <mutant id="mutant_959" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (prefixes == null))" to="((regularExpressions == null) &amp;&amp; (prefixes == null))" />
    <mutant id="mutant_1762" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;maximum&quot;)) || (str.equals(&quot;max&quot;))" to="str.equals(&quot;maximum&quot;)" />
    <mutant id="mutant_1763" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((trimmed.length()) == 0) || ((trimmed.charAt(0)) == '#')" to="((trimmed.length()) == 0) &amp;&amp; ((trimmed.charAt(0)) == '#')" />
    <mutant id="mutant_1760" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;maximum&quot;)) || (str.equals(&quot;max&quot;))" to="false" />
    <mutant id="mutant_1761" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseYear(java.lang.String,int)" from="(str.equals(&quot;maximum&quot;)) || (str.equals(&quot;max&quot;))" to="(str.equals(&quot;maximum&quot;)) &amp;&amp; (str.equals(&quot;max&quot;))" />
    <mutant id="mutant_1768" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(Character.isWhitespace(line.charAt(0))) &amp;&amp; (st.hasMoreTokens())" to="Character.isWhitespace(line.charAt(0))" />
    <mutant id="mutant_1769" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="(Character.isWhitespace(line.charAt(0))) &amp;&amp; (st.hasMoreTokens())" to="true" />
    <mutant id="mutant_1766" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((trimmed.length()) == 0) || ((trimmed.charAt(0)) == '#')" to="true" />
    <mutant id="mutant_1767" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((trimmed.length()) == 0) || ((trimmed.charAt(0)) == '#')" to="false" />
    <mutant id="mutant_1764" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((trimmed.length()) == 0) || ((trimmed.charAt(0)) == '#')" to="(trimmed.length()) == 0" />
    <mutant id="mutant_1765" viable="true" in="org.joda.time.tz.ZoneInfoCompiler.parseDataFile(java.io.BufferedReader,boolean)" from="((trimmed.length()) == 0) || ((trimmed.charAt(0)) == '#')" to="(trimmed.charAt(0)) == '#'" />
    <mutant id="mutant_965" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (prefixes.length))" to="((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)" />
    <mutant id="mutant_966" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (prefixes.length))" to="(regularExpressions.length) != (prefixes.length)" />
    <mutant id="mutant_967" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (prefixes.length))" to="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)) &amp;&amp; ((regularExpressions.length) != (prefixes.length))" />
    <mutant id="mutant_968" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (prefixes.length))" to="true" />
    <mutant id="mutant_961" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1))" to="((regularExpressions == null) || (prefixes == null))" />
    <mutant id="mutant_962" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1))" to="true" />
    <mutant id="mutant_963" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1))" to="false" />
    <mutant id="mutant_964" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1))" to="((regularExpressions.length) &lt; 1)" />
    <mutant id="mutant_969" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (prefixes.length))" to="false" />
    <mutant id="mutant_1355" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((val1 ^ diff) &lt; 0) &amp;&amp; ((val1 ^ val2) &lt; 0)" to="true" />
    <mutant id="mutant_1356" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((val1 ^ diff) &lt; 0) &amp;&amp; ((val1 ^ val2) &lt; 0)" to="false" />
    <mutant id="mutant_1353" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))) || ((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="(val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1))" />
    <mutant id="mutant_1354" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((val1 ^ diff) &lt; 0) &amp;&amp; ((val1 ^ val2) &lt; 0)" to="(val1 ^ val2) &lt; 0" />
    <mutant id="mutant_1351" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))) || ((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="true" />
    <mutant id="mutant_1352" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))) || ((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="false" />
    <mutant id="mutant_1350" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))) || ((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))) &amp;&amp; ((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" />
    <mutant id="mutant_960" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendPrefix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (prefixes == null)) || ((regularExpressions.length) &lt; 1))" to="(((regularExpressions == null) || (prefixes == null)) &amp;&amp; ((regularExpressions.length) &lt; 1))" />
    <mutant id="mutant_1359" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(java.lang.String,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="true" />
    <mutant id="mutant_1357" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((val1 ^ diff) &lt; 0) &amp;&amp; ((val1 ^ val2) &lt; 0)" to="((val1 ^ diff) &lt; 0) || ((val1 ^ val2) &lt; 0)" />
    <mutant id="mutant_1358" viable="true" in="org.joda.time.field.FieldUtils.safeSubtract(long,long)" from="((val1 ^ diff) &lt; 0) &amp;&amp; ((val1 ^ val2) &lt; 0)" to="(val1 ^ diff) &lt; 0" />
    <mutant id="mutant_976" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="useAfter &amp;&amp; (useBefore == false)" to="true" />
    <mutant id="mutant_977" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="useAfter &amp;&amp; (useBefore == false)" to="false" />
    <mutant id="mutant_978" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="useAfter &amp;&amp; (useBefore == false)" to="useBefore == false" />
    <mutant id="mutant_979" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="useAfter &amp;&amp; (useBefore == false)" to="useAfter || (useBefore == false)" />
    <mutant id="mutant_972" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(text == null) || (finalText == null)" to="finalText == null" />
    <mutant id="mutant_973" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(text == null) || (finalText == null)" to="true" />
    <mutant id="mutant_974" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(text == null) || (finalText == null)" to="false" />
    <mutant id="mutant_975" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="useAfter &amp;&amp; (useBefore == false)" to="useAfter" />
    <mutant id="mutant_1344" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="(val2 == (Long.MIN_VALUE))" />
    <mutant id="mutant_1345" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="(val1 == (-1))" />
    <mutant id="mutant_1342" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1))))" to="false" />
    <mutant id="mutant_1343" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1))))" to="((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))" />
    <mutant id="mutant_1340" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1))))" to="((total / val2) != val1)" />
    <mutant id="mutant_1341" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1))))" to="true" />
    <mutant id="mutant_970" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(text == null) || (finalText == null)" to="(text == null) &amp;&amp; (finalText == null)" />
    <mutant id="mutant_971" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(text == null) || (finalText == null)" to="text == null" />
    <mutant id="mutant_1348" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="false" />
    <mutant id="mutant_1349" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))) || ((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))" />
    <mutant id="mutant_1346" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="((val2 == (Long.MIN_VALUE)) || (val1 == (-1)))" />
    <mutant id="mutant_1347" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val2 == (Long.MIN_VALUE)) &amp;&amp; (val1 == (-1)))" to="true" />
    <mutant id="mutant_503" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="minDigits &lt; 0" />
    <mutant id="mutant_987" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="false" />
    <mutant id="mutant_504" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="maxDigits &lt;= 0" />
    <mutant id="mutant_988" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="(singularText == null) &amp;&amp; (pluralText == null)" />
    <mutant id="mutant_505" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(a == null) || (!(a.isSupported()))" to="(a == null) &amp;&amp; (!(a.isSupported()))" />
    <mutant id="mutant_989" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="pluralText == null" />
    <mutant id="mutant_506" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(a == null) || (!(a.isSupported()))" to="true" />
    <mutant id="mutant_983" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(lastSeparator != null) &amp;&amp; ((pairs.size()) == 0)" to="true" />
    <mutant id="mutant_500" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="(minDigits &lt; 0) &amp;&amp; (maxDigits &lt;= 0)" />
    <mutant id="mutant_984" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(lastSeparator != null) &amp;&amp; ((pairs.size()) == 0)" to="false" />
    <mutant id="mutant_501" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="true" />
    <mutant id="mutant_985" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="singularText == null" />
    <mutant id="mutant_502" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendSignedDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="false" />
    <mutant id="mutant_986" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String,java.lang.String)" from="(singularText == null) || (pluralText == null)" to="true" />
    <mutant id="mutant_507" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(a == null) || (!(a.isSupported()))" to="false" />
    <mutant id="mutant_508" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(a == null) || (!(a.isSupported()))" to="a == null" />
    <mutant id="mutant_509" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(a == null) || (!(a.isSupported()))" to="!(a.isSupported())" />
    <mutant id="mutant_1333" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(val1 == 0) || (val2 == 0)" to="(val1 == 0) &amp;&amp; (val2 == 0)" />
    <mutant id="mutant_1334" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))" to="(val1 == (Long.MIN_VALUE))" />
    <mutant id="mutant_1331" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(val1 == 0) || (val2 == 0)" to="false" />
    <mutant id="mutant_1332" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(val1 == 0) || (val2 == 0)" to="val2 == 0" />
    <mutant id="mutant_1330" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(val1 == 0) || (val2 == 0)" to="true" />
    <mutant id="mutant_980" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(lastSeparator != null) &amp;&amp; ((pairs.size()) == 0)" to="(lastSeparator != null) || ((pairs.size()) == 0)" />
    <mutant id="mutant_981" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(lastSeparator != null) &amp;&amp; ((pairs.size()) == 0)" to="(pairs.size()) == 0" />
    <mutant id="mutant_1339" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(((total / val2) != val1) || ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1))))" to="(((total / val2) != val1) &amp;&amp; ((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1))))" />
    <mutant id="mutant_982" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSeparator(java.lang.String,java.lang.String,java.lang.String[],boolean,boolean)" from="(lastSeparator != null) &amp;&amp; ((pairs.size()) == 0)" to="lastSeparator != null" />
    <mutant id="mutant_1337" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))" to="true" />
    <mutant id="mutant_1338" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))" to="false" />
    <mutant id="mutant_1335" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))" to="(val2 == (-1))" />
    <mutant id="mutant_1336" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="((val1 == (Long.MIN_VALUE)) &amp;&amp; (val2 == (-1)))" to="((val1 == (Long.MIN_VALUE)) || (val2 == (-1)))" />
    <mutant id="mutant_514" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="!(b.isSupported())" />
    <mutant id="mutant_998" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1))" to="((regularExpressions.length) &lt; 1)" />
    <mutant id="mutant_515" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="b == null" />
    <mutant id="mutant_999" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1))" to="(((regularExpressions == null) || (suffixes == null)) &amp;&amp; ((regularExpressions.length) &lt; 1))" />
    <mutant id="mutant_516" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="(b == null) &amp;&amp; (!(b.isSupported()))" />
    <mutant id="mutant_517" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="true" />
    <mutant id="mutant_510" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="b == null" />
    <mutant id="mutant_994" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (suffixes == null))" to="((regularExpressions == null) &amp;&amp; (suffixes == null))" />
    <mutant id="mutant_511" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="(b == null) &amp;&amp; (!(b.isSupported()))" />
    <mutant id="mutant_995" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1))" to="((regularExpressions == null) || (suffixes == null))" />
    <mutant id="mutant_512" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="true" />
    <mutant id="mutant_996" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1))" to="true" />
    <mutant id="mutant_513" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="false" />
    <mutant id="mutant_997" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1))" to="false" />
    <mutant id="mutant_518" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="false" />
    <mutant id="mutant_519" viable="true" in="org.joda.time.format.DateTimeParserBucket.compareReverse(org.joda.time.DurationField,org.joda.time.DurationField)" from="(b == null) || (!(b.isSupported()))" to="!(b.isSupported())" />
    <mutant id="mutant_1322" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="(val1 ^ val2) &gt;= 0" />
    <mutant id="mutant_1323" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="((val1 ^ sum) &lt; 0) || ((val1 ^ val2) &gt;= 0)" />
    <mutant id="mutant_1320" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="true" />
    <mutant id="mutant_1321" viable="true" in="org.joda.time.field.FieldUtils.safeAdd(long,long)" from="((val1 ^ sum) &lt; 0) &amp;&amp; ((val1 ^ val2) &gt;= 0)" to="false" />
    <mutant id="mutant_990" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (suffixes == null))" to="(regularExpressions == null)" />
    <mutant id="mutant_991" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (suffixes == null))" to="true" />
    <mutant id="mutant_992" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (suffixes == null))" to="false" />
    <mutant id="mutant_1328" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(dividend == (Long.MIN_VALUE)) &amp;&amp; (divisor == (-1L))" to="dividend == (Long.MIN_VALUE)" />
    <mutant id="mutant_993" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="((regularExpressions == null) || (suffixes == null))" to="(suffixes == null)" />
    <mutant id="mutant_1329" viable="true" in="org.joda.time.field.FieldUtils.safeMultiply(long,long)" from="(val1 == 0) || (val2 == 0)" to="val1 == 0" />
    <mutant id="mutant_1326" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(dividend == (Long.MIN_VALUE)) &amp;&amp; (divisor == (-1L))" to="true" />
    <mutant id="mutant_1327" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(dividend == (Long.MIN_VALUE)) &amp;&amp; (divisor == (-1L))" to="false" />
    <mutant id="mutant_1324" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(dividend == (Long.MIN_VALUE)) &amp;&amp; (divisor == (-1L))" to="(dividend == (Long.MIN_VALUE)) || (divisor == (-1L))" />
    <mutant id="mutant_1325" viable="true" in="org.joda.time.field.FieldUtils.safeDivide(long,long)" from="(dividend == (Long.MIN_VALUE)) &amp;&amp; (divisor == (-1L))" to="divisor == (-1L)" />
    <mutant id="mutant_525" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="(savedFieldsCount == (savedFields.length)) || (iSavedFieldsShared)" to="iSavedFieldsShared" />
    <mutant id="mutant_526" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="(savedFieldsCount == (savedFields.length)) || (iSavedFieldsShared)" to="savedFieldsCount == (savedFields.length)" />
    <mutant id="mutant_527" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="(savedFieldsCount == (savedFields.length)) || (iSavedFieldsShared)" to="true" />
    <mutant id="mutant_528" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="(savedFieldsCount == (savedFields.length)) || (iSavedFieldsShared)" to="false" />
    <mutant id="mutant_521" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0) &amp;&amp; ((org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0)" to="false" />
    <mutant id="mutant_522" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0) &amp;&amp; ((org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0)" to="(org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0" />
    <mutant id="mutant_523" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0) &amp;&amp; ((org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0)" to="(org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0" />
    <mutant id="mutant_524" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0) &amp;&amp; ((org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0)" to="((org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0) || ((org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0)" />
    <mutant id="mutant_529" viable="true" in="org.joda.time.format.DateTimeParserBucket.obtainSaveField()" from="(savedFieldsCount == (savedFields.length)) || (iSavedFieldsShared)" to="(savedFieldsCount == (savedFields.length)) &amp;&amp; (iSavedFieldsShared)" />
    <mutant id="mutant_1399" viable="true" in="org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getDurationField()) != durationField)" to="field != null" />
    <mutant id="mutant_1397" viable="true" in="org.joda.time.field.UnsupportedDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(type == null) || (durationField == null)" to="false" />
    <mutant id="mutant_1398" viable="true" in="org.joda.time.field.UnsupportedDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(type == null) || (durationField == null)" to="durationField == null" />
    <mutant id="mutant_1395" viable="true" in="org.joda.time.field.UnsupportedDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(type == null) || (durationField == null)" to="(type == null) &amp;&amp; (durationField == null)" />
    <mutant id="mutant_1396" viable="true" in="org.joda.time.field.UnsupportedDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(type == null) || (durationField == null)" to="true" />
    <mutant id="mutant_1393" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))) &amp;&amp; ((iScalar) == (other.iScalar))" to="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))) || ((iScalar) == (other.iScalar))" />
    <mutant id="mutant_1394" viable="true" in="org.joda.time.field.UnsupportedDateTimeField(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(type == null) || (durationField == null)" to="type == null" />
    <mutant id="mutant_520" viable="true" in="org.joda.time.format.DateTimeParserBucket.computeMillis(boolean,java.lang.CharSequence)" from="((org.joda.time.format.DateTimeParserBucket.compareReverse(first, months)) &gt;= 0) &amp;&amp; ((org.joda.time.format.DateTimeParserBucket.compareReverse(first, days)) &lt;= 0)" to="true" />
    <mutant id="mutant_536" viable="true" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(fields == null) || ((fields.size()) == 0)" to="fields == null" />
    <mutant id="mutant_537" viable="true" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(fields == null) || ((fields.size()) == 0)" to="true" />
    <mutant id="mutant_538" viable="true" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(fields == null) || ((fields.size()) == 0)" to="false" />
    <mutant id="mutant_539" viable="true" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(fields == null) || ((fields.size()) == 0)" to="(fields.size()) == 0" />
    <mutant id="mutant_532" viable="false" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j &gt; 0) &amp;&amp; ((array[(j - 1)].compareTo(array[j])) &gt; 0)" to="false" />
    <mutant id="mutant_533" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j &gt; 0) &amp;&amp; ((array[(j - 1)].compareTo(array[j])) &gt; 0)" to="(j &gt; 0) || ((array[(j - 1)].compareTo(array[j])) &gt; 0)" />
    <mutant id="mutant_534" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j &gt; 0) &amp;&amp; ((array[(j - 1)].compareTo(array[j])) &gt; 0)" to="(array[(j - 1)].compareTo(array[j])) &gt; 0" />
    <mutant id="mutant_535" viable="true" in="org.joda.time.format.ISODateTimeFormat.forFields(java.util.Collection,boolean,boolean)" from="(fields == null) || ((fields.size()) == 0)" to="(fields == null) &amp;&amp; ((fields.size()) == 0)" />
    <mutant id="mutant_1391" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))) &amp;&amp; ((iScalar) == (other.iScalar))" to="true" />
    <mutant id="mutant_1392" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))) &amp;&amp; ((iScalar) == (other.iScalar))" to="false" />
    <mutant id="mutant_1390" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))) &amp;&amp; ((iScalar) == (other.iScalar))" to="(iScalar) == (other.iScalar)" />
    <mutant id="mutant_1388" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType())))" to="(getWrappedField().equals(other.getWrappedField()))" />
    <mutant id="mutant_1389" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))) &amp;&amp; ((iScalar) == (other.iScalar))" to="(getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType()))" />
    <mutant id="mutant_1386" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType())))" to="true" />
    <mutant id="mutant_1387" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType())))" to="false" />
    <mutant id="mutant_1384" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType())))" to="((getWrappedField().equals(other.getWrappedField())) || ((getType()) == (other.getType())))" />
    <mutant id="mutant_1385" viable="true" in="org.joda.time.field.ScaledDurationField.equals(java.lang.Object)" from="((getWrappedField().equals(other.getWrappedField())) &amp;&amp; ((getType()) == (other.getType())))" to="((getType()) == (other.getType()))" />
    <mutant id="mutant_1382" viable="true" in="org.joda.time.field.ScaledDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)" from="(scalar == 0) || (scalar == 1)" to="false" />
    <mutant id="mutant_1383" viable="true" in="org.joda.time.field.ScaledDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)" from="(scalar == 0) || (scalar == 1)" to="scalar == 1" />
    <mutant id="mutant_530" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j &gt; 0) &amp;&amp; ((array[(j - 1)].compareTo(array[j])) &gt; 0)" to="j &gt; 0" />
    <mutant id="mutant_531" viable="true" in="org.joda.time.format.DateTimeParserBucket.sort(org.joda.time.format.DateTimeParserBucket$SavedField[],int)" from="(j &gt; 0) &amp;&amp; ((array[(j - 1)].compareTo(array[j])) &gt; 0)" to="true" />
    <mutant id="mutant_547" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second))" to="true" />
    <mutant id="mutant_548" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second))" to="false" />
    <mutant id="mutant_549" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second))" to="(((!hour) &amp;&amp; (!minute)) || (!second))" />
    <mutant id="mutant_543" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((!hour) &amp;&amp; (!minute))" to="(!hour)" />
    <mutant id="mutant_544" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((!hour) &amp;&amp; (!minute))" to="((!hour) || (!minute))" />
    <mutant id="mutant_545" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second))" to="((!hour) &amp;&amp; (!minute))" />
    <mutant id="mutant_546" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second))" to="(!second)" />
    <mutant id="mutant_1380" viable="true" in="org.joda.time.field.ScaledDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)" from="(scalar == 0) || (scalar == 1)" to="scalar == 0" />
    <mutant id="mutant_1381" viable="true" in="org.joda.time.field.ScaledDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)" from="(scalar == 0) || (scalar == 1)" to="true" />
    <mutant id="mutant_1377" viable="true" in="org.joda.time.field.PreciseDurationField.equals(java.lang.Object)" from="((getType()) == (other.getType())) &amp;&amp; ((iUnitMillis) == (other.iUnitMillis))" to="false" />
    <mutant id="mutant_1378" viable="true" in="org.joda.time.field.PreciseDurationField.equals(java.lang.Object)" from="((getType()) == (other.getType())) &amp;&amp; ((iUnitMillis) == (other.iUnitMillis))" to="((getType()) == (other.getType())) || ((iUnitMillis) == (other.iUnitMillis))" />
    <mutant id="mutant_1375" viable="true" in="org.joda.time.field.PreciseDurationField.equals(java.lang.Object)" from="((getType()) == (other.getType())) &amp;&amp; ((iUnitMillis) == (other.iUnitMillis))" to="(iUnitMillis) == (other.iUnitMillis)" />
    <mutant id="mutant_1376" viable="true" in="org.joda.time.field.PreciseDurationField.equals(java.lang.Object)" from="((getType()) == (other.getType())) &amp;&amp; ((iUnitMillis) == (other.iUnitMillis))" to="true" />
    <mutant id="mutant_1373" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="value &gt; upperBound" />
    <mutant id="mutant_1374" viable="true" in="org.joda.time.field.PreciseDurationField.equals(java.lang.Object)" from="((getType()) == (other.getType())) &amp;&amp; ((iUnitMillis) == (other.iUnitMillis))" to="(getType()) == (other.getType())" />
    <mutant id="mutant_1371" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="value &lt; lowerBound" />
    <mutant id="mutant_1372" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="(value &lt; lowerBound) &amp;&amp; (value &gt; upperBound)" />
    <mutant id="mutant_540" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((!hour) &amp;&amp; (!minute))" to="(!minute)" />
    <mutant id="mutant_541" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((!hour) &amp;&amp; (!minute))" to="true" />
    <mutant id="mutant_542" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((!hour) &amp;&amp; (!minute))" to="false" />
    <mutant id="mutant_1379" viable="true" in="org.joda.time.field.ScaledDurationField(org.joda.time.DurationField,org.joda.time.DurationFieldType,int)" from="(scalar == 0) || (scalar == 1)" to="(scalar == 0) &amp;&amp; (scalar == 1)" />
    <mutant id="mutant_558" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour || minute)" to="false" />
    <mutant id="mutant_559" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour || minute)" to="minute" />
    <mutant id="mutant_554" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)) &amp;&amp; (!milli)" to="!milli" />
    <mutant id="mutant_555" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour || minute)" to="hour" />
    <mutant id="mutant_556" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour || minute)" to="(hour &amp;&amp; minute)" />
    <mutant id="mutant_557" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(hour || minute)" to="true" />
    <mutant id="mutant_1370" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="false" />
    <mutant id="mutant_1366" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="value &lt; lowerBound" />
    <mutant id="mutant_1367" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="(value &lt; lowerBound) &amp;&amp; (value &gt; upperBound)" />
    <mutant id="mutant_1364" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="true" />
    <mutant id="mutant_1365" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="false" />
    <mutant id="mutant_1362" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(java.lang.String,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="(value &lt; lowerBound) &amp;&amp; (value &gt; upperBound)" />
    <mutant id="mutant_1363" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(java.lang.String,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="value &gt; upperBound" />
    <mutant id="mutant_1360" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(java.lang.String,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="false" />
    <mutant id="mutant_1361" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(java.lang.String,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="value &lt; lowerBound" />
    <mutant id="mutant_550" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)) &amp;&amp; (!milli)" to="((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)" />
    <mutant id="mutant_551" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)) &amp;&amp; (!milli)" to="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)) || (!milli)" />
    <mutant id="mutant_552" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)) &amp;&amp; (!milli)" to="true" />
    <mutant id="mutant_553" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((!hour) &amp;&amp; (!minute)) &amp;&amp; (!second)) &amp;&amp; (!milli)" to="false" />
    <mutant id="mutant_1368" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeField,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="value &gt; upperBound" />
    <mutant id="mutant_1369" viable="true" in="org.joda.time.field.FieldUtils.verifyValueBounds(org.joda.time.DateTimeFieldType,int,int,int)" from="(value &lt; lowerBound) || (value &gt; upperBound)" to="true" />
    <mutant id="mutant_448" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="false" />
    <mutant id="mutant_449" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &gt; '9'" />
    <mutant id="mutant_444" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length == 0) &amp;&amp; ((c == '-') || (c == '+'))" to="(c == '-') || (c == '+')" />
    <mutant id="mutant_445" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="(c &lt; '0') &amp;&amp; (c &gt; '9')" />
    <mutant id="mutant_446" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &lt; '0'" />
    <mutant id="mutant_447" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="true" />
    <mutant id="mutant_2051" viable="true" in="org.joda.time.Partial.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_2052" viable="true" in="org.joda.time.Partial.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_2050" viable="true" in="org.joda.time.Partial.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_2048" viable="true" in="org.joda.time.Partial.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_2049" viable="true" in="org.joda.time.Partial.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1199" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="field == null" />
    <mutant id="mutant_2046" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(lastUnitField.isSupported()) &amp;&amp; ((lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE))" to="(lastUnitField.isSupported()) || ((lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE))" />
    <mutant id="mutant_2047" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(lastUnitField.isSupported()) &amp;&amp; ((lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE))" to="(lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE)" />
    <mutant id="mutant_1197" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="!(field.isSupported())" />
    <mutant id="mutant_2044" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(lastUnitField.isSupported()) &amp;&amp; ((lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE))" to="true" />
    <mutant id="mutant_1198" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="(field == null) &amp;&amp; (!(field.isSupported()))" />
    <mutant id="mutant_2045" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(lastUnitField.isSupported()) &amp;&amp; ((lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE))" to="false" />
    <mutant id="mutant_1195" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="true" />
    <mutant id="mutant_2042" viable="true" in="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="end == null" />
    <mutant id="mutant_1196" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="false" />
    <mutant id="mutant_2043" viable="true" in="org.joda.time.Partial(org.joda.time.DateTimeFieldType[],int[],org.joda.time.Chronology)" from="(lastUnitField.isSupported()) &amp;&amp; ((lastUnitField.getType()) != (DurationFieldType.YEARS_TYPE))" to="lastUnitField.isSupported()" />
    <mutant id="mutant_440" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length == 0) &amp;&amp; ((c == '-') || (c == '+'))" to="(length == 0) || ((c == '-') || (c == '+'))" />
    <mutant id="mutant_441" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length == 0) &amp;&amp; ((c == '-') || (c == '+'))" to="length == 0" />
    <mutant id="mutant_442" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length == 0) &amp;&amp; ((c == '-') || (c == '+'))" to="true" />
    <mutant id="mutant_443" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(length == 0) &amp;&amp; ((c == '-') || (c == '+'))" to="false" />
    <mutant id="mutant_459" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &gt; '9'" />
    <mutant id="mutant_455" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="(c &lt; '0') &amp;&amp; (c &gt; '9')" />
    <mutant id="mutant_456" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &lt; '0'" />
    <mutant id="mutant_457" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="true" />
    <mutant id="mutant_458" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="false" />
    <mutant id="mutant_1193" viable="true" in="org.joda.time.chrono.LimitChronology.withZone(org.joda.time.DateTimeZone)" from="(zone == (DateTimeZone.UTC)) &amp;&amp; ((iWithUTC) != null)" to="(zone == (DateTimeZone.UTC)) || ((iWithUTC) != null)" />
    <mutant id="mutant_2040" viable="true" in="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="false" />
    <mutant id="mutant_1194" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="field == null" />
    <mutant id="mutant_2041" viable="true" in="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="(start == null) || (end == null)" />
    <mutant id="mutant_1191" viable="true" in="org.joda.time.chrono.LimitChronology.withZone(org.joda.time.DateTimeZone)" from="(zone == (DateTimeZone.UTC)) &amp;&amp; ((iWithUTC) != null)" to="true" />
    <mutant id="mutant_1192" viable="true" in="org.joda.time.chrono.LimitChronology.withZone(org.joda.time.DateTimeZone)" from="(zone == (DateTimeZone.UTC)) &amp;&amp; ((iWithUTC) != null)" to="false" />
    <mutant id="mutant_1190" viable="true" in="org.joda.time.chrono.LimitChronology.withZone(org.joda.time.DateTimeZone)" from="(zone == (DateTimeZone.UTC)) &amp;&amp; ((iWithUTC) != null)" to="zone == (DateTimeZone.UTC)" />
    <mutant id="mutant_2037" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(field != null) &amp;&amp; ((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="(field != null) || ((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" />
    <mutant id="mutant_2038" viable="true" in="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="start == null" />
    <mutant id="mutant_1188" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))) &amp;&amp; (FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()))" to="(getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))" />
    <mutant id="mutant_2035" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(field != null) &amp;&amp; ((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="true" />
    <mutant id="mutant_1189" viable="true" in="org.joda.time.chrono.LimitChronology.withZone(org.joda.time.DateTimeZone)" from="(zone == (DateTimeZone.UTC)) &amp;&amp; ((iWithUTC) != null)" to="(iWithUTC) != null" />
    <mutant id="mutant_2036" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(field != null) &amp;&amp; ((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="false" />
    <mutant id="mutant_1186" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))) &amp;&amp; (FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()))" to="false" />
    <mutant id="mutant_2033" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(field != null) &amp;&amp; ((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="field != null" />
    <mutant id="mutant_1187" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))) &amp;&amp; (FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()))" to="FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit())" />
    <mutant id="mutant_2034" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="(field != null) &amp;&amp; ((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="(mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN))" />
    <mutant id="mutant_1184" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))) &amp;&amp; (FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()))" to="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))) || (FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()))" />
    <mutant id="mutant_2031" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="true" />
    <mutant id="mutant_1185" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))) &amp;&amp; (FieldUtils.equals(getUpperLimit(), chrono.getUpperLimit()))" to="true" />
    <mutant id="mutant_2032" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="false" />
    <mutant id="mutant_451" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hasSignChar || (length != 2)" to="true" />
    <mutant id="mutant_452" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hasSignChar || (length != 2)" to="false" />
    <mutant id="mutant_453" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hasSignChar || (length != 2)" to="hasSignChar &amp;&amp; (length != 2)" />
    <mutant id="mutant_454" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hasSignChar || (length != 2)" to="length != 2" />
    <mutant id="mutant_2039" viable="true" in="org.joda.time.MutableInterval.setInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="true" />
    <mutant id="mutant_450" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="hasSignChar || (length != 2)" to="hasSignChar" />
    <mutant id="mutant_466" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(best == null) || ((id.length()) &gt; (best.length()))" to="true" />
    <mutant id="mutant_467" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(best == null) || ((id.length()) &gt; (best.length()))" to="false" />
    <mutant id="mutant_468" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(best == null) || ((id.length()) &gt; (best.length()))" to="(best == null) &amp;&amp; ((id.length()) &gt; (best.length()))" />
    <mutant id="mutant_469" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(best == null) || ((id.length()) &gt; (best.length()))" to="best == null" />
    <mutant id="mutant_1182" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())))" to="((getBase().equals(chrono.getBase())) || (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())))" />
    <mutant id="mutant_1183" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())))" to="(getBase().equals(chrono.getBase()))" />
    <mutant id="mutant_2030" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="((mode &lt; (MutableDateTime.ROUND_NONE)) &amp;&amp; (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" />
    <mutant id="mutant_1180" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())))" to="false" />
    <mutant id="mutant_1181" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())))" to="(FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit()))" />
    <mutant id="mutant_1179" viable="true" in="org.joda.time.chrono.LimitChronology.equals(java.lang.Object)" from="((getBase().equals(chrono.getBase())) &amp;&amp; (FieldUtils.equals(getLowerLimit(), chrono.getLowerLimit())))" to="true" />
    <mutant id="mutant_2026" viable="true" in="org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="false" />
    <mutant id="mutant_2027" viable="true" in="org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="start instanceof org.joda.time.LocalDate" />
    <mutant id="mutant_1177" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="(month == 12) &amp;&amp; (isLeapYear(year))" to="false" />
    <mutant id="mutant_2024" viable="true" in="org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="(start instanceof org.joda.time.LocalDate) || (end instanceof org.joda.time.LocalDate)" />
    <mutant id="mutant_1178" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="(month == 12) &amp;&amp; (isLeapYear(year))" to="month == 12" />
    <mutant id="mutant_2025" viable="true" in="org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="true" />
    <mutant id="mutant_1175" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="(month == 12) &amp;&amp; (isLeapYear(year))" to="isLeapYear(year)" />
    <mutant id="mutant_2022" viable="true" in="org.joda.time.MonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_1176" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="(month == 12) &amp;&amp; (isLeapYear(year))" to="true" />
    <mutant id="mutant_2023" viable="true" in="org.joda.time.Months.monthsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="end instanceof org.joda.time.LocalDate" />
    <mutant id="mutant_1173" viable="true" in="org.joda.time.chrono.IslamicChronology.equals(java.lang.Object)" from="((getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)) &amp;&amp; (super.equals(obj))" to="false" />
    <mutant id="mutant_2020" viable="true" in="org.joda.time.MonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1174" viable="true" in="org.joda.time.chrono.IslamicChronology.getDaysInYearMonth(int,int)" from="(month == 12) &amp;&amp; (isLeapYear(year))" to="(month == 12) || (isLeapYear(year))" />
    <mutant id="mutant_2021" viable="true" in="org.joda.time.MonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_462" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="true" />
    <mutant id="mutant_463" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="false" />
    <mutant id="mutant_464" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &gt; '9'" />
    <mutant id="mutant_465" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneId.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(best == null) || ((id.length()) &gt; (best.length()))" to="(id.length()) &gt; (best.length())" />
    <mutant id="mutant_460" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="(c &lt; '0') &amp;&amp; (c &gt; '9')" />
    <mutant id="mutant_2028" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="(mode &gt; (MutableDateTime.ROUND_HALF_EVEN))" />
    <mutant id="mutant_461" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &lt; '0'" />
    <mutant id="mutant_2029" viable="true" in="org.joda.time.MutableDateTime.setRounding(org.joda.time.DateTimeField,int)" from="((mode &lt; (MutableDateTime.ROUND_NONE)) || (mode &gt; (MutableDateTime.ROUND_HALF_EVEN)))" to="(mode &lt; (MutableDateTime.ROUND_NONE))" />
    <mutant id="mutant_477" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.isFormatter(java.lang.Object)" from="(isPrinter(f)) || (isParser(f))" to="false" />
    <mutant id="mutant_478" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.isFormatter(java.lang.Object)" from="(isPrinter(f)) || (isParser(f))" to="(isPrinter(f)) &amp;&amp; (isParser(f))" />
    <mutant id="mutant_479" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.isFormatter(java.lang.Object)" from="(isPrinter(f)) || (isParser(f))" to="isPrinter(f)" />
    <mutant id="mutant_1171" viable="true" in="org.joda.time.chrono.IslamicChronology.equals(java.lang.Object)" from="((getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)) &amp;&amp; (super.equals(obj))" to="((getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)) || (super.equals(obj))" />
    <mutant id="mutant_1172" viable="true" in="org.joda.time.chrono.IslamicChronology.equals(java.lang.Object)" from="((getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)) &amp;&amp; (super.equals(obj))" to="true" />
    <mutant id="mutant_1170" viable="true" in="org.joda.time.chrono.IslamicChronology.equals(java.lang.Object)" from="((getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)) &amp;&amp; (super.equals(obj))" to="(getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)" />
    <mutant id="mutant_1168" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="((year &amp; 3) == 0) &amp;&amp; (((year % 100) != 0) || ((year % 400) == 0))" to="((year &amp; 3) == 0) || (((year % 100) != 0) || ((year % 400) == 0))" />
    <mutant id="mutant_2015" viable="true" in="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="true" />
    <mutant id="mutant_1169" viable="true" in="org.joda.time.chrono.IslamicChronology.equals(java.lang.Object)" from="((getLeapYearPatternType().index) == (chrono.getLeapYearPatternType().index)) &amp;&amp; (super.equals(obj))" to="super.equals(obj)" />
    <mutant id="mutant_2016" viable="true" in="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="false" />
    <mutant id="mutant_1166" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="((year &amp; 3) == 0) &amp;&amp; (((year % 100) != 0) || ((year % 400) == 0))" to="false" />
    <mutant id="mutant_2013" viable="true" in="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="start instanceof org.joda.time.LocalTime" />
    <mutant id="mutant_1167" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="((year &amp; 3) == 0) &amp;&amp; (((year % 100) != 0) || ((year % 400) == 0))" to="(year &amp; 3) == 0" />
    <mutant id="mutant_2014" viable="true" in="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="(start instanceof org.joda.time.LocalTime) || (end instanceof org.joda.time.LocalTime)" />
    <mutant id="mutant_1164" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="((year &amp; 3) == 0) &amp;&amp; (((year % 100) != 0) || ((year % 400) == 0))" to="((year % 100) != 0) || ((year % 400) == 0)" />
    <mutant id="mutant_2011" viable="true" in="org.joda.time.LocalTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1165" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="((year &amp; 3) == 0) &amp;&amp; (((year % 100) != 0) || ((year % 400) == 0))" to="true" />
    <mutant id="mutant_2012" viable="true" in="org.joda.time.LocalTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_1162" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(((year % 100) != 0) || ((year % 400) == 0))" to="(((year % 100) != 0) &amp;&amp; ((year % 400) == 0))" />
    <mutant id="mutant_1163" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(((year % 100) != 0) || ((year % 400) == 0))" to="((year % 100) != 0)" />
    <mutant id="mutant_2010" viable="true" in="org.joda.time.LocalTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_473" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(u1 != u2) &amp;&amp; ((Character.toLowerCase(u1)) != (Character.toLowerCase(u2)))" to="true" />
    <mutant id="mutant_474" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(u1 != u2) &amp;&amp; ((Character.toLowerCase(u1)) != (Character.toLowerCase(u2)))" to="false" />
    <mutant id="mutant_475" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.isFormatter(java.lang.Object)" from="(isPrinter(f)) || (isParser(f))" to="isParser(f)" />
    <mutant id="mutant_476" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.isFormatter(java.lang.Object)" from="(isPrinter(f)) || (isParser(f))" to="true" />
    <mutant id="mutant_2019" viable="true" in="org.joda.time.MonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_470" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(u1 != u2) &amp;&amp; ((Character.toLowerCase(u1)) != (Character.toLowerCase(u2)))" to="(Character.toLowerCase(u1)) != (Character.toLowerCase(u2))" />
    <mutant id="mutant_471" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(u1 != u2) &amp;&amp; ((Character.toLowerCase(u1)) != (Character.toLowerCase(u2)))" to="(u1 != u2) || ((Character.toLowerCase(u1)) != (Character.toLowerCase(u2)))" />
    <mutant id="mutant_2017" viable="true" in="org.joda.time.Minutes.minutesBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="end instanceof org.joda.time.LocalTime" />
    <mutant id="mutant_472" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.csStartsWithIgnoreCase(java.lang.CharSequence,int,java.lang.String)" from="(u1 != u2) &amp;&amp; ((Character.toLowerCase(u1)) != (Character.toLowerCase(u2)))" to="u1 != u2" />
    <mutant id="mutant_2018" viable="true" in="org.joda.time.MonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_488" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.toFormatter()" from="(printer != null) || (parser != null)" to="true" />
    <mutant id="mutant_489" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.toFormatter()" from="(printer != null) || (parser != null)" to="false" />
    <mutant id="mutant_2095" viable="true" in="org.joda.time.YearMonth.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_2096" viable="true" in="org.joda.time.YearMonth.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_2093" viable="true" in="org.joda.time.YearMonth.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_2094" viable="true" in="org.joda.time.YearMonth.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_2091" viable="true" in="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="false" />
    <mutant id="mutant_2092" viable="true" in="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="start instanceof org.joda.time.LocalDate" />
    <mutant id="mutant_2090" viable="true" in="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="true" />
    <mutant id="mutant_2088" viable="true" in="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="end instanceof org.joda.time.LocalDate" />
    <mutant id="mutant_2089" viable="true" in="org.joda.time.Weeks.weeksBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="(start instanceof org.joda.time.LocalDate) || (end instanceof org.joda.time.LocalDate)" />
    <mutant id="mutant_2086" viable="true" in="org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_2087" viable="true" in="org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_484" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.getFormatter()" from="(printer == parser) || (parser == null)" to="parser == null" />
    <mutant id="mutant_485" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.toFormatter()" from="(printer != null) || (parser != null)" to="parser != null" />
    <mutant id="mutant_486" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.toFormatter()" from="(printer != null) || (parser != null)" to="printer != null" />
    <mutant id="mutant_487" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.toFormatter()" from="(printer != null) || (parser != null)" to="(printer != null) &amp;&amp; (parser != null)" />
    <mutant id="mutant_480" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.getFormatter()" from="(printer == parser) || (parser == null)" to="printer == parser" />
    <mutant id="mutant_481" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.getFormatter()" from="(printer == parser) || (parser == null)" to="true" />
    <mutant id="mutant_482" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.getFormatter()" from="(printer == parser) || (parser == null)" to="false" />
    <mutant id="mutant_483" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.getFormatter()" from="(printer == parser) || (parser == null)" to="(printer == parser) &amp;&amp; (parser == null)" />
    <mutant id="mutant_499" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="maxDigits &lt;= 0" />
    <mutant id="mutant_2084" viable="true" in="org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_2085" viable="true" in="org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_2082" viable="true" in="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="end instanceof org.joda.time.LocalTime" />
    <mutant id="mutant_2083" viable="true" in="org.joda.time.TimeOfDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_2080" viable="true" in="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="true" />
    <mutant id="mutant_2081" viable="true" in="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="false" />
    <mutant id="mutant_2079" viable="true" in="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="(start instanceof org.joda.time.LocalTime) || (end instanceof org.joda.time.LocalTime)" />
    <mutant id="mutant_490" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="(minDigits &lt; 0) &amp;&amp; (maxDigits &lt;= 0)" />
    <mutant id="mutant_2077" viable="true" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(types == null) || ((types.length) == 0)" to="(types.length) == 0" />
    <mutant id="mutant_2078" viable="true" in="org.joda.time.Seconds.secondsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="start instanceof org.joda.time.LocalTime" />
    <mutant id="mutant_2075" viable="true" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(types == null) || ((types.length) == 0)" to="false" />
    <mutant id="mutant_2076" viable="true" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(types == null) || ((types.length) == 0)" to="(types == null) &amp;&amp; ((types.length) == 0)" />
    <mutant id="mutant_495" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="(minDigits &lt; 0) &amp;&amp; (maxDigits &lt;= 0)" />
    <mutant id="mutant_496" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="true" />
    <mutant id="mutant_497" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="false" />
    <mutant id="mutant_498" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendFraction(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="minDigits &lt; 0" />
    <mutant id="mutant_491" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="true" />
    <mutant id="mutant_492" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="false" />
    <mutant id="mutant_493" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="minDigits &lt; 0" />
    <mutant id="mutant_494" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder.appendDecimal(org.joda.time.DateTimeFieldType,int,int)" from="(minDigits &lt; 0) || (maxDigits &lt;= 0)" to="maxDigits &lt;= 0" />
    <mutant id="mutant_2073" viable="true" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(types == null) || ((types.length) == 0)" to="types == null" />
    <mutant id="mutant_2074" viable="true" in="org.joda.time.PeriodType.forFields(org.joda.time.DurationFieldType[])" from="(types == null) || ((types.length) == 0)" to="true" />
    <mutant id="mutant_2071" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years != 0) || (months != 0)" to="false" />
    <mutant id="mutant_2072" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years != 0) || (months != 0)" to="years != 0" />
    <mutant id="mutant_2070" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years != 0) || (months != 0)" to="true" />
    <mutant id="mutant_2068" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years != 0) || (months != 0)" to="months != 0" />
    <mutant id="mutant_2069" viable="true" in="org.joda.time.Period.normalizedStandard(org.joda.time.PeriodType)" from="(years != 0) || (months != 0)" to="(years != 0) &amp;&amp; (months != 0)" />
    <mutant id="mutant_2066" viable="true" in="org.joda.time.Period.multipliedBy(int)" from="((this) == (Period.ZERO)) || (scalar == 1)" to="false" />
    <mutant id="mutant_2067" viable="true" in="org.joda.time.Period.multipliedBy(int)" from="((this) == (Period.ZERO)) || (scalar == 1)" to="scalar == 1" />
    <mutant id="mutant_2064" viable="true" in="org.joda.time.Period.multipliedBy(int)" from="((this) == (Period.ZERO)) || (scalar == 1)" to="(this) == (Period.ZERO)" />
    <mutant id="mutant_2065" viable="true" in="org.joda.time.Period.multipliedBy(int)" from="((this) == (Period.ZERO)) || (scalar == 1)" to="true" />
    <mutant id="mutant_2062" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i &gt; 0) &amp;&amp; ((types[(i - 1)]) == (types[i]))" to="(types[(i - 1)]) == (types[i])" />
    <mutant id="mutant_2063" viable="true" in="org.joda.time.Period.multipliedBy(int)" from="((this) == (Period.ZERO)) || (scalar == 1)" to="((this) == (Period.ZERO)) &amp;&amp; (scalar == 1)" />
    <mutant id="mutant_2060" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i &gt; 0) &amp;&amp; ((types[(i - 1)]) == (types[i]))" to="true" />
    <mutant id="mutant_2061" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i &gt; 0) &amp;&amp; ((types[(i - 1)]) == (types[i]))" to="false" />
    <mutant id="mutant_2059" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i &gt; 0) &amp;&amp; ((types[(i - 1)]) == (types[i]))" to="i &gt; 0" />
    <mutant id="mutant_2057" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start == null) || (end == null)" to="(start == null) &amp;&amp; (end == null)" />
    <mutant id="mutant_2058" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(i &gt; 0) &amp;&amp; ((types[(i - 1)]) == (types[i]))" to="(i &gt; 0) || ((types[(i - 1)]) == (types[i]))" />
    <mutant id="mutant_2055" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start == null) || (end == null)" to="false" />
    <mutant id="mutant_2056" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start == null) || (end == null)" to="end == null" />
    <mutant id="mutant_2053" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start == null) || (end == null)" to="start == null" />
    <mutant id="mutant_2054" viable="true" in="org.joda.time.Period.fieldDifference(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start == null) || (end == null)" to="true" />
    <mutant id="mutant_2099" viable="true" in="org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_2097" viable="true" in="org.joda.time.YearMonth.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_2098" viable="true" in="org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1630" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null))" to="true" />
    <mutant id="mutant_1631" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null))" to="false" />
    <mutant id="mutant_1638" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="(strings != null)" />
    <mutant id="mutant_1639" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="true" />
    <mutant id="mutant_1636" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null)) || (nameKey == null)" to="((locale == null) || (id == null)) &amp;&amp; (nameKey == null)" />
    <mutant id="mutant_1637" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null)) || (nameKey == null)" to="(locale == null) || (id == null)" />
    <mutant id="mutant_1634" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null)) || (nameKey == null)" to="false" />
    <mutant id="mutant_1635" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null)) || (nameKey == null)" to="nameKey == null" />
    <mutant id="mutant_1632" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null))" to="(locale == null)" />
    <mutant id="mutant_1633" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null)) || (nameKey == null)" to="true" />
    <mutant id="mutant_1629" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null))" to="((locale == null) &amp;&amp; (id == null))" />
    <mutant id="mutant_1620" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(tailZone == null) &amp;&amp; (i == (ruleSetCount - 1))" to="false" />
    <mutant id="mutant_1627" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="((transitions.size()) == 1) &amp;&amp; (tailZone == null)" to="tailZone == null" />
    <mutant id="mutant_1628" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((locale == null) || (id == null))" to="(id == null)" />
    <mutant id="mutant_1625" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="((transitions.size()) == 1) &amp;&amp; (tailZone == null)" to="(transitions.size()) == 1" />
    <mutant id="mutant_1626" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="((transitions.size()) == 1) &amp;&amp; (tailZone == null)" to="((transitions.size()) == 1) || (tailZone == null)" />
    <mutant id="mutant_1623" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="((transitions.size()) == 1) &amp;&amp; (tailZone == null)" to="true" />
    <mutant id="mutant_1624" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="((transitions.size()) == 1) &amp;&amp; (tailZone == null)" to="false" />
    <mutant id="mutant_1621" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(tailZone == null) &amp;&amp; (i == (ruleSetCount - 1))" to="i == (ruleSetCount - 1)" />
    <mutant id="mutant_1622" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(tailZone == null) &amp;&amp; (i == (ruleSetCount - 1))" to="tailZone == null" />
    <mutant id="mutant_1618" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(tailZone == null) &amp;&amp; (i == (ruleSetCount - 1))" to="(tailZone == null) || (i == (ruleSetCount - 1))" />
    <mutant id="mutant_1619" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.toDateTimeZone(java.lang.String,boolean)" from="(tailZone == null) &amp;&amp; (i == (ruleSetCount - 1))" to="true" />
    <mutant id="mutant_1616" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)) &amp;&amp; (standardOffset == 0)" to="standardOffset == 0" />
    <mutant id="mutant_1617" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)) &amp;&amp; (standardOffset == 0)" to="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)) || (standardOffset == 0)" />
    <mutant id="mutant_1614" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)) &amp;&amp; (standardOffset == 0)" to="true" />
    <mutant id="mutant_1615" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)) &amp;&amp; (standardOffset == 0)" to="false" />
    <mutant id="mutant_1612" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0))" to="((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey)))" />
    <mutant id="mutant_1613" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)) &amp;&amp; (standardOffset == 0)" to="((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0)" />
    <mutant id="mutant_1610" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0))" to="true" />
    <mutant id="mutant_1611" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0))" to="false" />
    <mutant id="mutant_1609" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0))" to="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) || (wallOffset == 0))" />
    <mutant id="mutant_1607" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey)))" to="(&quot;UTC&quot;.equals(id))" />
    <mutant id="mutant_1608" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="(((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey))) &amp;&amp; (wallOffset == 0))" to="(wallOffset == 0)" />
    <mutant id="mutant_1605" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey)))" to="true" />
    <mutant id="mutant_1606" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey)))" to="false" />
    <mutant id="mutant_1603" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey)))" to="(id.equals(nameKey))" />
    <mutant id="mutant_1604" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder.buildFixedZone(java.lang.String,java.lang.String,int,int)" from="((&quot;UTC&quot;.equals(id)) &amp;&amp; (id.equals(nameKey)))" to="((&quot;UTC&quot;.equals(id)) || (id.equals(nameKey)))" />
    <mutant id="mutant_1601" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="((iMillis) &gt; (other.iMillis)) &amp;&amp; (((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey)))" />
    <mutant id="mutant_1602" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="((iMillis) &gt; (other.iMillis)) &amp;&amp; (((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="(iMillis) &gt; (other.iMillis)" />
    <mutant id="mutant_1600" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="((iMillis) &gt; (other.iMillis)) &amp;&amp; (((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="false" />
    <mutant id="mutant_800" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="(isZero(period)) || ((iFieldFormatters[iFieldType]) == (this))" />
    <mutant id="mutant_801" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="isZero(period)" />
    <mutant id="mutant_802" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="true" />
    <mutant id="mutant_803" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="false" />
    <mutant id="mutant_808" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="false" />
    <mutant id="mutant_809" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="(iFieldFormatters[i]) != null" />
    <mutant id="mutant_804" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="(iFieldFormatters[iFieldType]) == (this)" />
    <mutant id="mutant_805" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="(isSupported(type, i)) || ((iFieldFormatters[i]) != null)" />
    <mutant id="mutant_806" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="isSupported(type, i)" />
    <mutant id="mutant_807" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="true" />
    <mutant id="mutant_1674" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="true" />
    <mutant id="mutant_1675" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="false" />
    <mutant id="mutant_1672" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null)) || (nameKey == null)" to="(locale == null) || (id == null)" />
    <mutant id="mutant_1673" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="(strings != null)" />
    <mutant id="mutant_1670" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null)) || (nameKey == null)" to="nameKey == null" />
    <mutant id="mutant_1671" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null)) || (nameKey == null)" to="((locale == null) || (id == null)) &amp;&amp; (nameKey == null)" />
    <mutant id="mutant_1678" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="(strings != null) &amp;&amp; ((strings.length) &gt;= 5)" />
    <mutant id="mutant_1679" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="id.equals(strings[0])" />
    <mutant id="mutant_1676" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="((strings.length) &gt;= 5)" />
    <mutant id="mutant_1677" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="((strings != null) || ((strings.length) &gt;= 5))" />
    <mutant id="mutant_811" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="isZero(period)" />
    <mutant id="mutant_812" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="true" />
    <mutant id="mutant_813" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="false" />
    <mutant id="mutant_814" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="(iFieldFormatters[iFieldType]) == (this)" />
    <mutant id="mutant_810" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isZero(period)) &amp;&amp; ((iFieldFormatters[iFieldType]) == (this))" to="(isZero(period)) || ((iFieldFormatters[iFieldType]) == (this))" />
    <mutant id="mutant_819" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(i &gt;= 0) &amp;&amp; (i &lt;= (PeriodFormatterBuilder.MAX_FIELD))" to="i &lt;= (PeriodFormatterBuilder.MAX_FIELD)" />
    <mutant id="mutant_815" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(i &gt;= 0) &amp;&amp; (i &lt;= (PeriodFormatterBuilder.MAX_FIELD))" to="(i &gt;= 0) || (i &lt;= (PeriodFormatterBuilder.MAX_FIELD))" />
    <mutant id="mutant_816" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(i &gt;= 0) &amp;&amp; (i &lt;= (PeriodFormatterBuilder.MAX_FIELD))" to="i &gt;= 0" />
    <mutant id="mutant_817" viable="false" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(i &gt;= 0) &amp;&amp; (i &lt;= (PeriodFormatterBuilder.MAX_FIELD))" to="true" />
    <mutant id="mutant_818" viable="false" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(i &gt;= 0) &amp;&amp; (i &lt;= (PeriodFormatterBuilder.MAX_FIELD))" to="false" />
    <mutant id="mutant_1663" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null))" to="(id == null)" />
    <mutant id="mutant_1664" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null))" to="((locale == null) &amp;&amp; (id == null))" />
    <mutant id="mutant_1661" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="true" />
    <mutant id="mutant_1662" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="false" />
    <mutant id="mutant_1660" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="setLoc != null" />
    <mutant id="mutant_1669" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null)) || (nameKey == null)" to="false" />
    <mutant id="mutant_1667" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null))" to="(locale == null)" />
    <mutant id="mutant_1668" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null)) || (nameKey == null)" to="true" />
    <mutant id="mutant_1665" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null))" to="true" />
    <mutant id="mutant_1666" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((locale == null) || (id == null))" to="false" />
    <mutant id="mutant_822" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="true" />
    <mutant id="mutant_823" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="false" />
    <mutant id="mutant_824" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="(iFieldFormatters[i]) != null" />
    <mutant id="mutant_825" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])" from="(fieldFormatter != null) &amp;&amp; (!(equals(fieldFormatter)))" to="fieldFormatter != null" />
    <mutant id="mutant_820" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="(isSupported(type, i)) || ((iFieldFormatters[i]) != null)" />
    <mutant id="mutant_821" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(isSupported(type, i)) &amp;&amp; ((iFieldFormatters[i]) != null)" to="isSupported(type, i)" />
    <mutant id="mutant_826" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])" from="(fieldFormatter != null) &amp;&amp; (!(equals(fieldFormatter)))" to="!(equals(fieldFormatter))" />
    <mutant id="mutant_827" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])" from="(fieldFormatter != null) &amp;&amp; (!(equals(fieldFormatter)))" to="true" />
    <mutant id="mutant_828" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])" from="(fieldFormatter != null) &amp;&amp; (!(equals(fieldFormatter)))" to="false" />
    <mutant id="mutant_829" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.finish(org.joda.time.format.PeriodFormatterBuilder$FieldFormatter[])" from="(fieldFormatter != null) &amp;&amp; (!(equals(fieldFormatter)))" to="(fieldFormatter != null) || (!(equals(fieldFormatter)))" />
    <mutant id="mutant_1652" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="((strings != null) || ((strings.length) &gt;= 5))" />
    <mutant id="mutant_1653" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="(strings != null) &amp;&amp; ((strings.length) &gt;= 5)" />
    <mutant id="mutant_1650" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="false" />
    <mutant id="mutant_1651" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="((strings.length) &gt;= 5)" />
    <mutant id="mutant_1658" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="(setEn != null) || (setLoc != null)" />
    <mutant id="mutant_1659" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="setEn != null" />
    <mutant id="mutant_1656" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="false" />
    <mutant id="mutant_1657" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) || (id.equals(strings[0]))" />
    <mutant id="mutant_1654" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="id.equals(strings[0])" />
    <mutant id="mutant_1655" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="true" />
    <mutant id="mutant_833" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="true" />
    <mutant id="mutant_834" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="false" />
    <mutant id="mutant_835" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="(iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)" />
    <mutant id="mutant_836" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; (dp &gt; 0)" />
    <mutant id="mutant_830" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="(iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)" />
    <mutant id="mutant_831" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; (dp &gt; 0)" />
    <mutant id="mutant_832" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.io.Writer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="dp &gt; 0" />
    <mutant id="mutant_837" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="dp &gt; 0" />
    <mutant id="mutant_838" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="true" />
    <mutant id="mutant_839" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || (dp &gt; 0)" to="false" />
    <mutant id="mutant_1641" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="((strings.length) &gt;= 5)" />
    <mutant id="mutant_1642" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="((strings != null) || ((strings.length) &gt;= 5))" />
    <mutant id="mutant_1640" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="false" />
    <mutant id="mutant_1649" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="true" />
    <mutant id="mutant_1647" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) || (id.equals(strings[0]))" />
    <mutant id="mutant_1648" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="(strings != null)" />
    <mutant id="mutant_1645" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="true" />
    <mutant id="mutant_1646" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="false" />
    <mutant id="mutant_1643" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="(strings != null) &amp;&amp; ((strings.length) &gt;= 5)" />
    <mutant id="mutant_1644" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="id.equals(strings[0])" />
    <mutant id="mutant_844" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(valueLong &lt; 0) &amp;&amp; (valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND)))" to="valueLong &lt; 0" />
    <mutant id="mutant_845" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength)))" to="(textLength &lt; textToIgnoreLength)" />
    <mutant id="mutant_846" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength)))" to="(periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))" />
    <mutant id="mutant_847" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength)))" to="true" />
    <mutant id="mutant_840" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(valueLong &lt; 0) &amp;&amp; (valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND)))" to="true" />
    <mutant id="mutant_841" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(valueLong &lt; 0) &amp;&amp; (valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND)))" to="false" />
    <mutant id="mutant_842" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(valueLong &lt; 0) &amp;&amp; (valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND)))" to="(valueLong &lt; 0) || (valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND)))" />
    <mutant id="mutant_843" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.printTo(java.lang.StringBuffer,org.joda.time.ReadablePeriod,java.util.Locale)" from="(valueLong &lt; 0) &amp;&amp; (valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND)))" to="valueLong &gt; (-(DateTimeConstants.MILLIS_PER_SECOND))" />
    <mutant id="mutant_848" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength)))" to="false" />
    <mutant id="mutant_849" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength)))" to="((textLength &lt; textToIgnoreLength) || (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength)))" />
    <mutant id="mutant_1234" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="(instant ^ sum) &lt; 0" />
    <mutant id="mutant_1235" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="true" />
    <mutant id="mutant_1232" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))) &amp;&amp; (iRangeDurationField.equals(other.iRangeDurationField))" to="false" />
    <mutant id="mutant_1233" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))) &amp;&amp; (iRangeDurationField.equals(other.iRangeDurationField))" to="iRangeDurationField.equals(other.iRangeDurationField)" />
    <mutant id="mutant_1230" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))) &amp;&amp; (iRangeDurationField.equals(other.iRangeDurationField))" to="((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))" />
    <mutant id="mutant_1231" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))) &amp;&amp; (iRangeDurationField.equals(other.iRangeDurationField))" to="true" />
    <mutant id="mutant_1238" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="((instant ^ sum) &lt; 0) || ((instant ^ offset) &gt;= 0)" />
    <mutant id="mutant_1239" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(java.lang.Object)" from="(iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))" to="iField.equals(other.iField)" />
    <mutant id="mutant_1236" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="false" />
    <mutant id="mutant_1237" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="(instant ^ offset) &gt;= 0" />
    <mutant id="mutant_855" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))) || ((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))) &amp;&amp; ((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" />
    <mutant id="mutant_856" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))) || ((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="true" />
    <mutant id="mutant_857" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))) || ((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="false" />
    <mutant id="mutant_858" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))) || ((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="(textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))" />
    <mutant id="mutant_851" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="true" />
    <mutant id="mutant_852" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="false" />
    <mutant id="mutant_853" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="(periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength))" />
    <mutant id="mutant_854" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="(textLength == textToIgnoreLength)" />
    <mutant id="mutant_859" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength &lt; textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(true, position, affixToIgnore, 0, textToIgnoreLength))) || ((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="(textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength))" />
    <mutant id="mutant_1223" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone)))" to="((iField.equals(other.iField)) || (iZone.equals(other.iZone)))" />
    <mutant id="mutant_1224" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField)))" to="(iDurationField.equals(other.iDurationField))" />
    <mutant id="mutant_1221" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone)))" to="true" />
    <mutant id="mutant_1222" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone)))" to="false" />
    <mutant id="mutant_1220" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone)))" to="(iField.equals(other.iField))" />
    <mutant id="mutant_1229" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))) &amp;&amp; (iRangeDurationField.equals(other.iRangeDurationField))" to="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField))) || (iRangeDurationField.equals(other.iRangeDurationField))" />
    <mutant id="mutant_850" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.matchesOtherAffix(int,java.lang.String,int)" from="((textLength == textToIgnoreLength) &amp;&amp; (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" to="((textLength == textToIgnoreLength) || (periodStr.regionMatches(false, position, affixToIgnore, 0, textToIgnoreLength)))" />
    <mutant id="mutant_1227" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField)))" to="false" />
    <mutant id="mutant_1228" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField)))" to="((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone)))" />
    <mutant id="mutant_1225" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField)))" to="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) || (iDurationField.equals(other.iDurationField)))" />
    <mutant id="mutant_1226" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="(((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))) &amp;&amp; (iDurationField.equals(other.iDurationField)))" to="true" />
    <mutant id="mutant_866" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.length()) &gt; shortestAffixLength) || ((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="false" />
    <mutant id="mutant_867" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.length()) &gt; shortestAffixLength) || ((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="(affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix)))" />
    <mutant id="mutant_868" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.length()) &gt; shortestAffixLength) || ((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="(affixToIgnore.length()) &gt; shortestAffixLength" />
    <mutant id="mutant_869" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.length()) &gt; shortestAffixLength) || ((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="((affixToIgnore.length()) &gt; shortestAffixLength) &amp;&amp; ((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" />
    <mutant id="mutant_862" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="true" />
    <mutant id="mutant_863" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="false" />
    <mutant id="mutant_864" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="(affixToIgnore.equalsIgnoreCase(shortestAffix))" />
    <mutant id="mutant_865" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.length()) &gt; shortestAffixLength) || ((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="true" />
    <mutant id="mutant_1212" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iLowerLimit) != null) &amp;&amp; (instant &lt; (limit.getMillis()))" to="((limit = iLowerLimit) != null) || (instant &lt; (limit.getMillis()))" />
    <mutant id="mutant_1696" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="true" />
    <mutant id="mutant_1213" viable="false" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iLowerLimit) != null) &amp;&amp; (instant &lt; (limit.getMillis()))" to="instant &lt; (limit.getMillis())" />
    <mutant id="mutant_1697" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="false" />
    <mutant id="mutant_1210" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iLowerLimit) != null) &amp;&amp; (instant &lt; (limit.getMillis()))" to="true" />
    <mutant id="mutant_1694" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="setEn != null" />
    <mutant id="mutant_1211" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iLowerLimit) != null) &amp;&amp; (instant &lt; (limit.getMillis()))" to="false" />
    <mutant id="mutant_1695" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="setLoc != null" />
    <mutant id="mutant_1692" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) || (id.equals(strings[0]))" />
    <mutant id="mutant_1693" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="(setEn != null) &amp;&amp; (setLoc != null)" to="(setEn != null) || (setLoc != null)" />
    <mutant id="mutant_1690" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="true" />
    <mutant id="mutant_1691" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="false" />
    <mutant id="mutant_860" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="(!(affixToIgnore.equals(shortestAffix)))" />
    <mutant id="mutant_1218" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iUpperLimit) != null) &amp;&amp; (instant &gt;= (limit.getMillis()))" to="(limit = iUpperLimit) != null" />
    <mutant id="mutant_861" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix.finish(java.util.Set)" from="((affixToIgnore.equalsIgnoreCase(shortestAffix)) &amp;&amp; (!(affixToIgnore.equals(shortestAffix))))" to="((affixToIgnore.equalsIgnoreCase(shortestAffix)) || (!(affixToIgnore.equals(shortestAffix))))" />
    <mutant id="mutant_1219" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDateTimeField.equals(java.lang.Object)" from="((iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone)))" to="(iZone.equals(other.iZone))" />
    <mutant id="mutant_1216" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iUpperLimit) != null) &amp;&amp; (instant &gt;= (limit.getMillis()))" to="false" />
    <mutant id="mutant_1217" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iUpperLimit) != null) &amp;&amp; (instant &gt;= (limit.getMillis()))" to="instant &gt;= (limit.getMillis())" />
    <mutant id="mutant_1214" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iUpperLimit) != null) &amp;&amp; (instant &gt;= (limit.getMillis()))" to="((limit = iUpperLimit) != null) || (instant &gt;= (limit.getMillis()))" />
    <mutant id="mutant_1698" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="((getID().equals(other.getID())) || ((iStandardOffset) == (other.iStandardOffset)))" />
    <mutant id="mutant_1215" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iUpperLimit) != null) &amp;&amp; (instant &gt;= (limit.getMillis()))" to="true" />
    <mutant id="mutant_1699" viable="true" in="org.joda.time.tz.FixedDateTimeZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="true" />
    <mutant id="mutant_877" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((variants == null) || ((variants.length) == 0))" to="true" />
    <mutant id="mutant_878" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((variants == null) || ((variants.length) == 0))" to="false" />
    <mutant id="mutant_879" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((variants == null) || ((variants.length) == 0))" to="((variants.length) == 0)" />
    <mutant id="mutant_873" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText)))" to="false" />
    <mutant id="mutant_874" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText)))" to="(text.equals(finalText))" />
    <mutant id="mutant_875" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((variants == null) || ((variants.length) == 0))" to="((variants == null) &amp;&amp; ((variants.length) == 0))" />
    <mutant id="mutant_876" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((variants == null) || ((variants.length) == 0))" to="(variants == null)" />
    <mutant id="mutant_1201" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="false" />
    <mutant id="mutant_1685" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="false" />
    <mutant id="mutant_1202" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="(field == null) &amp;&amp; (!(field.isSupported()))" />
    <mutant id="mutant_1686" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="((strings.length) &gt;= 5)" />
    <mutant id="mutant_1683" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="(strings != null)" />
    <mutant id="mutant_1200" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="true" />
    <mutant id="mutant_1684" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="true" />
    <mutant id="mutant_1681" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="false" />
    <mutant id="mutant_1682" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) || (id.equals(strings[0]))" />
    <mutant id="mutant_1680" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="true" />
    <mutant id="mutant_1209" viable="true" in="org.joda.time.chrono.LimitChronology.checkLimits(long,java.lang.String)" from="((limit = iLowerLimit) != null) &amp;&amp; (instant &lt; (limit.getMillis()))" to="(limit = iLowerLimit) != null" />
    <mutant id="mutant_870" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText)))" to="(finalText == null)" />
    <mutant id="mutant_871" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText)))" to="((finalText == null) &amp;&amp; (text.equals(finalText)))" />
    <mutant id="mutant_1207" viable="true" in="org.joda.time.chrono.LimitChronology.getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)" from="(lowerLimit != null) &amp;&amp; (upperLimit != null)" to="false" />
    <mutant id="mutant_872" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText)))" to="true" />
    <mutant id="mutant_1208" viable="true" in="org.joda.time.chrono.LimitChronology.getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)" from="(lowerLimit != null) &amp;&amp; (upperLimit != null)" to="upperLimit != null" />
    <mutant id="mutant_1205" viable="true" in="org.joda.time.chrono.LimitChronology.getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)" from="(lowerLimit != null) &amp;&amp; (upperLimit != null)" to="lowerLimit != null" />
    <mutant id="mutant_1689" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="id.equals(strings[0])" />
    <mutant id="mutant_1206" viable="true" in="org.joda.time.chrono.LimitChronology.getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)" from="(lowerLimit != null) &amp;&amp; (upperLimit != null)" to="true" />
    <mutant id="mutant_1203" viable="true" in="org.joda.time.chrono.LimitChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="!(field.isSupported())" />
    <mutant id="mutant_1687" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5))" to="((strings != null) || ((strings.length) &gt;= 5))" />
    <mutant id="mutant_1204" viable="true" in="org.joda.time.chrono.LimitChronology.getInstance(org.joda.time.Chronology,org.joda.time.ReadableDateTime,org.joda.time.ReadableDateTime)" from="(lowerLimit != null) &amp;&amp; (upperLimit != null)" to="(lowerLimit != null) || (upperLimit != null)" />
    <mutant id="mutant_1688" viable="true" in="org.joda.time.tz.DefaultNameProvider.getNameSet(java.util.Locale,java.lang.String,java.lang.String,boolean)" from="((strings != null) &amp;&amp; ((strings.length) &gt;= 5)) &amp;&amp; (id.equals(strings[0]))" to="(strings != null) &amp;&amp; ((strings.length) &gt;= 5)" />
    <mutant id="mutant_404" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="count == 0" />
    <mutant id="mutant_888" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="iUseAfter" />
    <mutant id="mutant_405" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position)) != '.') &amp;&amp; ((text.charAt(position)) != ',')" to="true" />
    <mutant id="mutant_889" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="(iUseAfter) || ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" />
    <mutant id="mutant_406" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position)) != '.') &amp;&amp; ((text.charAt(position)) != ',')" to="false" />
    <mutant id="mutant_407" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position)) != '.') &amp;&amp; ((text.charAt(position)) != ',')" to="(text.charAt(position)) != '.'" />
    <mutant id="mutant_400" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="!expectSeparators" />
    <mutant id="mutant_884" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText))) &amp;&amp; ((variants == null) || ((variants.length) == 0))" to="(finalText == null) || (text.equals(finalText))" />
    <mutant id="mutant_401" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="true" />
    <mutant id="mutant_885" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="(after.countFieldsToPrint(period, 1, locale)) &gt; 0" />
    <mutant id="mutant_402" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="false" />
    <mutant id="mutant_886" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="true" />
    <mutant id="mutant_403" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="(count == 0) || (!expectSeparators)" />
    <mutant id="mutant_887" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="(iUseAfter) &amp;&amp; ((after.countFieldsToPrint(period, 1, locale)) &gt; 0)" to="false" />
    <mutant id="mutant_1281" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType())))" to="false" />
    <mutant id="mutant_1282" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType())))" to="((getFieldType()) == (other.getFieldType()))" />
    <mutant id="mutant_1280" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType())))" to="true" />
    <mutant id="mutant_408" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position)) != '.') &amp;&amp; ((text.charAt(position)) != ',')" to="((text.charAt(position)) != '.') || ((text.charAt(position)) != ',')" />
    <mutant id="mutant_409" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((text.charAt(position)) != '.') &amp;&amp; ((text.charAt(position)) != ',')" to="(text.charAt(position)) != ','" />
    <mutant id="mutant_1278" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="!(field.isSupported())" />
    <mutant id="mutant_1279" viable="true" in="org.joda.time.field.AbstractPartialFieldProperty.equals(java.lang.Object)" from="(((get()) == (other.get())) &amp;&amp; ((getFieldType()) == (other.getFieldType())))" to="((get()) == (other.get()))" />
    <mutant id="mutant_1276" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="false" />
    <mutant id="mutant_1277" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="(field == null) &amp;&amp; (!(field.isSupported()))" />
    <mutant id="mutant_1274" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="field == null" />
    <mutant id="mutant_1275" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DurationField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="true" />
    <mutant id="mutant_1272" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="!(field.isSupported())" />
    <mutant id="mutant_1273" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="(field == null) &amp;&amp; (!(field.isSupported()))" />
    <mutant id="mutant_880" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText))) &amp;&amp; ((variants == null) || ((variants.length) == 0))" to="(variants == null) || ((variants.length) == 0)" />
    <mutant id="mutant_881" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText))) &amp;&amp; ((variants == null) || ((variants.length) == 0))" to="true" />
    <mutant id="mutant_882" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText))) &amp;&amp; ((variants == null) || ((variants.length) == 0))" to="false" />
    <mutant id="mutant_883" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator(java.lang.String,java.lang.String,java.lang.String[],org.joda.time.format.PeriodPrinter,org.joda.time.format.PeriodParser,boolean,boolean)" from="((finalText == null) || (text.equals(finalText))) &amp;&amp; ((variants == null) || ((variants.length) == 0))" to="((finalText == null) || (text.equals(finalText))) || ((variants == null) || ((variants.length) == 0))" />
    <mutant id="mutant_415" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iZeroOffsetPrintText) != null)" to="(displayOffset == 0) || ((iZeroOffsetPrintText) != null)" />
    <mutant id="mutant_899" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0)) || (periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()))" to="(parsedForm == null) || ((parsedForm.length()) == 0)" />
    <mutant id="mutant_416" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iZeroOffsetPrintText) != null)" to="(iZeroOffsetPrintText) != null" />
    <mutant id="mutant_417" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iZeroOffsetPrintText) != null)" to="true" />
    <mutant id="mutant_418" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iZeroOffsetPrintText) != null)" to="false" />
    <mutant id="mutant_411" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="true" />
    <mutant id="mutant_895" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0)) || (periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()))" to="true" />
    <mutant id="mutant_412" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="false" />
    <mutant id="mutant_896" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0)) || (periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()))" to="false" />
    <mutant id="mutant_413" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="(count == 0) || (!expectSeparators)" />
    <mutant id="mutant_897" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0)) || (periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()))" to="periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length())" />
    <mutant id="mutant_414" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="count == 0" />
    <mutant id="mutant_898" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0)) || (periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()))" to="((parsedForm == null) || ((parsedForm.length()) == 0)) &amp;&amp; (periodStr.regionMatches(true, position, parsedForm, 0, parsedForm.length()))" />
    <mutant id="mutant_1270" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="true" />
    <mutant id="mutant_1271" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="false" />
    <mutant id="mutant_419" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iZeroOffsetPrintText) != null)" to="displayOffset == 0" />
    <mutant id="mutant_1267" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12))" to="false" />
    <mutant id="mutant_1268" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12))" to="(field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12)" />
    <mutant id="mutant_1265" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12))" to="field != null" />
    <mutant id="mutant_1266" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12))" to="true" />
    <mutant id="mutant_1263" viable="true" in="org.joda.time.chrono.ZonedChronology.equals(java.lang.Object)" from="(getBase().equals(chrono.getBase())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="getBase().equals(chrono.getBase())" />
    <mutant id="mutant_1264" viable="true" in="org.joda.time.chrono.ZonedChronology.useTimeArithmetic(org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12))" to="(field != null) || ((field.getUnitMillis()) &lt; ((DateTimeConstants.MILLIS_PER_HOUR) * 12))" />
    <mutant id="mutant_1261" viable="true" in="org.joda.time.chrono.ZonedChronology.equals(java.lang.Object)" from="(getBase().equals(chrono.getBase())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="true" />
    <mutant id="mutant_1262" viable="true" in="org.joda.time.chrono.ZonedChronology.equals(java.lang.Object)" from="(getBase().equals(chrono.getBase())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="false" />
    <mutant id="mutant_891" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0))" to="((parsedForm == null) &amp;&amp; ((parsedForm.length()) == 0))" />
    <mutant id="mutant_892" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0))" to="(parsedForm == null)" />
    <mutant id="mutant_893" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0))" to="true" />
    <mutant id="mutant_410" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="!expectSeparators" />
    <mutant id="mutant_894" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0))" to="false" />
    <mutant id="mutant_1269" viable="true" in="org.joda.time.chrono.ZonedChronology.convertField(org.joda.time.DateTimeField,java.util.HashMap)" from="(field == null) || (!(field.isSupported()))" to="field == null" />
    <mutant id="mutant_890" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Separator.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((parsedForm == null) || ((parsedForm.length()) == 0))" to="((parsedForm.length()) == 0)" />
    <mutant id="mutant_426" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 2)" to="true" />
    <mutant id="mutant_427" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 2)" to="false" />
    <mutant id="mutant_428" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 2)" to="(iMinFields) &lt;= 2" />
    <mutant id="mutant_429" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 2)" to="displayOffset == 0" />
    <mutant id="mutant_422" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 1)" to="false" />
    <mutant id="mutant_423" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 1)" to="(iMinFields) &lt;= 1" />
    <mutant id="mutant_424" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 1)" to="displayOffset == 0" />
    <mutant id="mutant_425" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 2)" to="(displayOffset == 0) || ((iMinFields) &lt;= 2)" />
    <mutant id="mutant_1260" viable="true" in="org.joda.time.chrono.ZonedChronology.equals(java.lang.Object)" from="(getBase().equals(chrono.getBase())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="(getBase().equals(chrono.getBase())) || (getZone().equals(chrono.getZone()))" />
    <mutant id="mutant_1256" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="false" />
    <mutant id="mutant_2103" viable="true" in="org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="end instanceof org.joda.time.LocalDate" />
    <mutant id="mutant_1257" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="(instant ^ offset) &gt;= 0" />
    <mutant id="mutant_2104" viable="true" in="org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="(start instanceof org.joda.time.LocalDate) || (end instanceof org.joda.time.LocalDate)" />
    <mutant id="mutant_1254" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="(instant ^ sum) &lt; 0" />
    <mutant id="mutant_2101" viable="true" in="org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1255" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="true" />
    <mutant id="mutant_2102" viable="true" in="org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_1252" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="((instant ^ diff) &lt; 0) &amp;&amp; ((instant ^ offset) &lt; 0)" to="false" />
    <mutant id="mutant_1253" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="((instant ^ diff) &lt; 0) &amp;&amp; ((instant ^ offset) &lt; 0)" to="(instant ^ diff) &lt; 0" />
    <mutant id="mutant_2100" viable="true" in="org.joda.time.YearMonthDay.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1250" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="((instant ^ diff) &lt; 0) &amp;&amp; ((instant ^ offset) &lt; 0)" to="(instant ^ offset) &lt; 0" />
    <mutant id="mutant_1251" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="((instant ^ diff) &lt; 0) &amp;&amp; ((instant ^ offset) &lt; 0)" to="true" />
    <mutant id="mutant_420" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 1)" to="(displayOffset == 0) || ((iMinFields) &lt;= 1)" />
    <mutant id="mutant_421" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 1)" to="true" />
    <mutant id="mutant_2107" viable="true" in="org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="start instanceof org.joda.time.LocalDate" />
    <mutant id="mutant_1258" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetToAdd(long)" from="((instant ^ sum) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="((instant ^ sum) &lt; 0) || ((instant ^ offset) &gt;= 0)" />
    <mutant id="mutant_2105" viable="true" in="org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="true" />
    <mutant id="mutant_1259" viable="true" in="org.joda.time.chrono.ZonedChronology.equals(java.lang.Object)" from="(getBase().equals(chrono.getBase())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="getZone().equals(chrono.getZone())" />
    <mutant id="mutant_2106" viable="true" in="org.joda.time.Years.yearsBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="false" />
    <mutant id="mutant_437" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="false" />
    <mutant id="mutant_438" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="(c == '-')" />
    <mutant id="mutant_439" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="(c == '+')" />
    <mutant id="mutant_433" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 3)" to="(iMinFields) &lt;= 3" />
    <mutant id="mutant_434" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 3)" to="displayOffset == 0" />
    <mutant id="mutant_435" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="((c == '-') &amp;&amp; (c == '+'))" />
    <mutant id="mutant_436" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TwoDigitYear.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="true" />
    <mutant id="mutant_1245" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise()" from="(iField.isPrecise()) &amp;&amp; (this.iZone.isFixed())" to="true" />
    <mutant id="mutant_1246" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise()" from="(iField.isPrecise()) &amp;&amp; (this.iZone.isFixed())" to="false" />
    <mutant id="mutant_1243" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(java.lang.Object)" from="(iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))" to="false" />
    <mutant id="mutant_1244" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise()" from="(iField.isPrecise()) &amp;&amp; (this.iZone.isFixed())" to="this.iZone.isFixed()" />
    <mutant id="mutant_1241" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(java.lang.Object)" from="(iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))" to="(iField.equals(other.iField)) || (iZone.equals(other.iZone))" />
    <mutant id="mutant_1242" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(java.lang.Object)" from="(iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))" to="true" />
    <mutant id="mutant_1240" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.equals(java.lang.Object)" from="(iField.equals(other.iField)) &amp;&amp; (iZone.equals(other.iZone))" to="iZone.equals(other.iZone)" />
    <mutant id="mutant_430" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 3)" to="(displayOffset == 0) || ((iMinFields) &lt;= 3)" />
    <mutant id="mutant_431" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 3)" to="true" />
    <mutant id="mutant_432" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.printTo(java.lang.Appendable,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)" from="(displayOffset == 0) &amp;&amp; ((iMinFields) &lt;= 3)" to="false" />
    <mutant id="mutant_1249" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.getOffsetFromLocalToSubtract(long)" from="((instant ^ diff) &lt; 0) &amp;&amp; ((instant ^ offset) &lt; 0)" to="((instant ^ diff) &lt; 0) || ((instant ^ offset) &lt; 0)" />
    <mutant id="mutant_1247" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise()" from="(iField.isPrecise()) &amp;&amp; (this.iZone.isFixed())" to="(iField.isPrecise()) || (this.iZone.isFixed())" />
    <mutant id="mutant_1248" viable="true" in="org.joda.time.chrono.ZonedChronology$ZonedDurationField.isPrecise()" from="(iField.isPrecise()) &amp;&amp; (this.iZone.isFixed())" to="iField.isPrecise()" />
    <mutant id="mutant_327" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(bestValidPos &gt; position) || ((bestValidPos == position) &amp;&amp; isOptional)" to="true" />
    <mutant id="mutant_328" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(bestValidPos &gt; position) || ((bestValidPos == position) &amp;&amp; isOptional)" to="false" />
    <mutant id="mutant_329" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(bestValidPos &gt; position) || ((bestValidPos == position) &amp;&amp; isOptional)" to="(bestValidPos == position) &amp;&amp; isOptional" />
    <mutant id="mutant_323" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((bestValidPos == position) &amp;&amp; isOptional)" to="false" />
    <mutant id="mutant_324" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((bestValidPos == position) &amp;&amp; isOptional)" to="(bestValidPos == position)" />
    <mutant id="mutant_325" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(bestValidPos &gt; position) || ((bestValidPos == position) &amp;&amp; isOptional)" to="(bestValidPos &gt; position) &amp;&amp; ((bestValidPos == position) &amp;&amp; isOptional)" />
    <mutant id="mutant_326" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(bestValidPos &gt; position) || ((bestValidPos == position) &amp;&amp; isOptional)" to="bestValidPos &gt; position" />
    <mutant id="mutant_1083" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="false" />
    <mutant id="mutant_1084" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="(getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())" />
    <mutant id="mutant_1081" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="getZone().equals(chrono.getZone())" />
    <mutant id="mutant_1082" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="true" />
    <mutant id="mutant_1080" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())) &amp;&amp; (getZone().equals(chrono.getZone()))" to="((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())) || (getZone().equals(chrono.getZone()))" />
    <mutant id="mutant_1078" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="(obj != null) &amp;&amp; ((getClass()) == (obj.getClass()))" to="(obj != null) || ((getClass()) == (obj.getClass()))" />
    <mutant id="mutant_1079" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="(obj != null) &amp;&amp; ((getClass()) == (obj.getClass()))" to="obj != null" />
    <mutant id="mutant_1076" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="(obj != null) &amp;&amp; ((getClass()) == (obj.getClass()))" to="true" />
    <mutant id="mutant_1077" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="(obj != null) &amp;&amp; ((getClass()) == (obj.getClass()))" to="false" />
    <mutant id="mutant_1074" viable="true" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(minDaysInFirstWeek &lt; 1) || (minDaysInFirstWeek &gt; 7)" to="(minDaysInFirstWeek &lt; 1) &amp;&amp; (minDaysInFirstWeek &gt; 7)" />
    <mutant id="mutant_1075" viable="true" in="org.joda.time.chrono.BasicChronology.equals(java.lang.Object)" from="(obj != null) &amp;&amp; ((getClass()) == (obj.getClass()))" to="(getClass()) == (obj.getClass())" />
    <mutant id="mutant_320" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((bestValidPos == position) &amp;&amp; isOptional)" to="isOptional" />
    <mutant id="mutant_321" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((bestValidPos == position) &amp;&amp; isOptional)" to="((bestValidPos == position) || isOptional)" />
    <mutant id="mutant_322" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((bestValidPos == position) &amp;&amp; isOptional)" to="true" />
    <mutant id="mutant_338" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="false" />
    <mutant id="mutant_339" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="((c == '-') || (c == '+'))" />
    <mutant id="mutant_334" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="(c == '+')" />
    <mutant id="mutant_335" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="((length == 0) || ((c == '-') || (c == '+')))" />
    <mutant id="mutant_336" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="(length == 0)" />
    <mutant id="mutant_337" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="true" />
    <mutant id="mutant_1072" viable="true" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(minDaysInFirstWeek &lt; 1) || (minDaysInFirstWeek &gt; 7)" to="true" />
    <mutant id="mutant_1073" viable="true" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(minDaysInFirstWeek &lt; 1) || (minDaysInFirstWeek &gt; 7)" to="false" />
    <mutant id="mutant_1070" viable="true" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(minDaysInFirstWeek &lt; 1) || (minDaysInFirstWeek &gt; 7)" to="minDaysInFirstWeek &lt; 1" />
    <mutant id="mutant_1071" viable="true" in="org.joda.time.chrono.BasicChronology(org.joda.time.Chronology,java.lang.Object,int)" from="(minDaysInFirstWeek &lt; 1) || (minDaysInFirstWeek &gt; 7)" to="minDaysInFirstWeek &gt; 7" />
    <mutant id="mutant_1069" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(scalar != 0) &amp;&amp; (period != null)" to="(scalar != 0) || (period != null)" />
    <mutant id="mutant_1067" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(scalar != 0) &amp;&amp; (period != null)" to="false" />
    <mutant id="mutant_1068" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(scalar != 0) &amp;&amp; (period != null)" to="scalar != 0" />
    <mutant id="mutant_1065" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(scalar != 0) &amp;&amp; (period != null)" to="period != null" />
    <mutant id="mutant_1066" viable="true" in="org.joda.time.chrono.BaseChronology.add(org.joda.time.ReadablePeriod,long,int)" from="(scalar != 0) &amp;&amp; (period != null)" to="true" />
    <mutant id="mutant_1063" viable="true" in="org.joda.time.chrono.BaseChronology.add(long,long,int)" from="(duration == 0) || (scalar == 0)" to="false" />
    <mutant id="mutant_1064" viable="true" in="org.joda.time.chrono.BaseChronology.add(long,long,int)" from="(duration == 0) || (scalar == 0)" to="duration == 0" />
    <mutant id="mutant_330" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="((c == '-') &amp;&amp; (c == '+'))" />
    <mutant id="mutant_331" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="true" />
    <mutant id="mutant_332" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="false" />
    <mutant id="mutant_333" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((c == '-') || (c == '+'))" to="(c == '-')" />
    <mutant id="mutant_349" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="(((length + 1) &gt;= limit) &amp;&amp; ((c = text.charAt(((position + length) + 1))) &lt; '0'))" />
    <mutant id="mutant_345" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="((length + 1) &gt;= limit)" />
    <mutant id="mutant_346" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="true" />
    <mutant id="mutant_347" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="false" />
    <mutant id="mutant_348" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="((c = text.charAt(((position + length) + 1))) &lt; '0')" />
    <mutant id="mutant_1061" viable="true" in="org.joda.time.chrono.BaseChronology.add(long,long,int)" from="(duration == 0) || (scalar == 0)" to="(duration == 0) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1062" viable="true" in="org.joda.time.chrono.BaseChronology.add(long,long,int)" from="(duration == 0) || (scalar == 0)" to="true" />
    <mutant id="mutant_1060" viable="true" in="org.joda.time.chrono.BaseChronology.add(long,long,int)" from="(duration == 0) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1058" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))) &amp;&amp; ((iDayOfMonth) == (iBase.dayOfMonth()))" to="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))) || ((iDayOfMonth) == (iBase.dayOfMonth()))" />
    <mutant id="mutant_1059" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))) &amp;&amp; ((iDayOfMonth) == (iBase.dayOfMonth()))" to="((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))" />
    <mutant id="mutant_1056" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))) &amp;&amp; ((iDayOfMonth) == (iBase.dayOfMonth()))" to="true" />
    <mutant id="mutant_1057" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))) &amp;&amp; ((iDayOfMonth) == (iBase.dayOfMonth()))" to="false" />
    <mutant id="mutant_1054" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear())))" to="((iMonthOfYear) == (iBase.monthOfYear()))" />
    <mutant id="mutant_1055" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear()))) &amp;&amp; ((iDayOfMonth) == (iBase.dayOfMonth()))" to="(iDayOfMonth) == (iBase.dayOfMonth())" />
    <mutant id="mutant_1052" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear())))" to="true" />
    <mutant id="mutant_1053" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear())))" to="false" />
    <mutant id="mutant_341" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (iSigned)" to="iSigned" />
    <mutant id="mutant_342" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (iSigned)" to="true" />
    <mutant id="mutant_343" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (iSigned)" to="false" />
    <mutant id="mutant_344" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (iSigned)" to="(length == 0) &amp;&amp; ((c == '-') || (c == '+'))" />
    <mutant id="mutant_340" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (iSigned)" to="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) || (iSigned)" />
    <mutant id="mutant_356" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &lt; '0'" />
    <mutant id="mutant_357" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="true" />
    <mutant id="mutant_358" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="false" />
    <mutant id="mutant_359" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &gt; '9'" />
    <mutant id="mutant_1050" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear())))" to="(((iYear) == (iBase.year())) || ((iMonthOfYear) == (iBase.monthOfYear())))" />
    <mutant id="mutant_1051" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iYear) == (iBase.year())) &amp;&amp; ((iMonthOfYear) == (iBase.monthOfYear())))" to="((iYear) == (iBase.year()))" />
    <mutant id="mutant_1047" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))) &amp;&amp; ((iMillisOfSecond) == (iBase.millisOfSecond()))" to="false" />
    <mutant id="mutant_1048" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))) &amp;&amp; ((iMillisOfSecond) == (iBase.millisOfSecond()))" to="(iMillisOfSecond) == (iBase.millisOfSecond())" />
    <mutant id="mutant_1045" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))) &amp;&amp; ((iMillisOfSecond) == (iBase.millisOfSecond()))" to="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))) || ((iMillisOfSecond) == (iBase.millisOfSecond()))" />
    <mutant id="mutant_1046" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))) &amp;&amp; ((iMillisOfSecond) == (iBase.millisOfSecond()))" to="true" />
    <mutant id="mutant_1043" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute())))" to="((iSecondOfMinute) == (iBase.secondOfMinute()))" />
    <mutant id="mutant_1044" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute())))" to="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) || ((iSecondOfMinute) == (iBase.secondOfMinute())))" />
    <mutant id="mutant_1041" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute())))" to="false" />
    <mutant id="mutant_1042" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute())))" to="(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour())))" />
    <mutant id="mutant_352" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="false" />
    <mutant id="mutant_353" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')" />
    <mutant id="mutant_354" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="c &gt; '9'" />
    <mutant id="mutant_355" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="(c &lt; '0') &amp;&amp; (c &gt; '9')" />
    <mutant id="mutant_350" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) &amp;&amp; (c &gt; '9')" />
    <mutant id="mutant_1049" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))) &amp;&amp; ((iMillisOfSecond) == (iBase.millisOfSecond()))" to="(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute()))" />
    <mutant id="mutant_351" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="true" />
    <mutant id="mutant_367" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(matched == null) || ((name.length()) &gt; (matched.length()))" to="true" />
    <mutant id="mutant_368" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(matched == null) || ((name.length()) &gt; (matched.length()))" to="false" />
    <mutant id="mutant_369" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(matched == null) || ((name.length()) &gt; (matched.length()))" to="(matched == null) &amp;&amp; ((name.length()) &gt; (matched.length()))" />
    <mutant id="mutant_363" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(&quot;en&quot;.equals(locale.getLanguage())) &amp;&amp; ((iFieldType) == (DateTimeFieldType.era()))" to="false" />
    <mutant id="mutant_364" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(&quot;en&quot;.equals(locale.getLanguage())) &amp;&amp; ((iFieldType) == (DateTimeFieldType.era()))" to="(&quot;en&quot;.equals(locale.getLanguage())) || ((iFieldType) == (DateTimeFieldType.era()))" />
    <mutant id="mutant_365" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(matched == null) || ((name.length()) &gt; (matched.length()))" to="matched == null" />
    <mutant id="mutant_366" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneName.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(matched == null) || ((name.length()) &gt; (matched.length()))" to="(name.length()) &gt; (matched.length())" />
    <mutant id="mutant_360" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(&quot;en&quot;.equals(locale.getLanguage())) &amp;&amp; ((iFieldType) == (DateTimeFieldType.era()))" to="(iFieldType) == (DateTimeFieldType.era())" />
    <mutant id="mutant_361" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(&quot;en&quot;.equals(locale.getLanguage())) &amp;&amp; ((iFieldType) == (DateTimeFieldType.era()))" to="&quot;en&quot;.equals(locale.getLanguage())" />
    <mutant id="mutant_362" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TextField.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(&quot;en&quot;.equals(locale.getLanguage())) &amp;&amp; ((iFieldType) == (DateTimeFieldType.era()))" to="true" />
    <mutant id="mutant_378" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(c &lt; '0') || (c &gt; '9')" to="false" />
    <mutant id="mutant_379" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &gt; '9'" />
    <mutant id="mutant_374" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)" from="(minFields &lt;= 0) || (maxFields &lt; minFields)" to="(minFields &lt;= 0) &amp;&amp; (maxFields &lt; minFields)" />
    <mutant id="mutant_375" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(c &lt; '0') || (c &gt; '9')" to="(c &lt; '0') &amp;&amp; (c &gt; '9')" />
    <mutant id="mutant_376" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &lt; '0'" />
    <mutant id="mutant_377" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.digitCount(java.lang.CharSequence,int,int)" from="(c &lt; '0') || (c &gt; '9')" to="true" />
    <mutant id="mutant_370" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)" from="(minFields &lt;= 0) || (maxFields &lt; minFields)" to="maxFields &lt; minFields" />
    <mutant id="mutant_371" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)" from="(minFields &lt;= 0) || (maxFields &lt; minFields)" to="true" />
    <mutant id="mutant_372" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)" from="(minFields &lt;= 0) || (maxFields &lt; minFields)" to="false" />
    <mutant id="mutant_373" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset(java.lang.String,java.lang.String,boolean,int,int)" from="(minFields &lt;= 0) || (maxFields &lt; minFields)" to="minFields &lt;= 0" />
    <mutant id="mutant_389" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="c == '+'" />
    <mutant id="mutant_380" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="((iZeroOffsetPrintText) != null) &amp;&amp; ((iZeroOffsetPrintText.length()) &gt; est)" to="(iZeroOffsetPrintText) != null" />
    <mutant id="mutant_1098" viable="true" in="org.joda.time.chrono.BasicGJChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 29) &amp;&amp; (monthOfYear().isLeap(instant))" to="monthOfYear().isLeap(instant)" />
    <mutant id="mutant_1099" viable="true" in="org.joda.time.chrono.BasicGJChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 29) &amp;&amp; (monthOfYear().isLeap(instant))" to="(dayOfMonth().get(instant)) == 29" />
    <mutant id="mutant_1096" viable="true" in="org.joda.time.chrono.BasicGJChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 29) &amp;&amp; (monthOfYear().isLeap(instant))" to="true" />
    <mutant id="mutant_1097" viable="true" in="org.joda.time.chrono.BasicGJChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 29) &amp;&amp; (monthOfYear().isLeap(instant))" to="false" />
    <mutant id="mutant_385" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="(c == '-') &amp;&amp; (c == '+')" />
    <mutant id="mutant_386" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="true" />
    <mutant id="mutant_387" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="false" />
    <mutant id="mutant_388" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="c == '-'" />
    <mutant id="mutant_381" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="((iZeroOffsetPrintText) != null) &amp;&amp; ((iZeroOffsetPrintText.length()) &gt; est)" to="((iZeroOffsetPrintText) != null) || ((iZeroOffsetPrintText.length()) &gt; est)" />
    <mutant id="mutant_382" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="((iZeroOffsetPrintText) != null) &amp;&amp; ((iZeroOffsetPrintText.length()) &gt; est)" to="true" />
    <mutant id="mutant_383" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="((iZeroOffsetPrintText) != null) &amp;&amp; ((iZeroOffsetPrintText.length()) &gt; est)" to="false" />
    <mutant id="mutant_384" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.estimatePrintedLength()" from="((iZeroOffsetPrintText) != null) &amp;&amp; ((iZeroOffsetPrintText.length()) &gt; est)" to="(iZeroOffsetPrintText.length()) &gt; est" />
    <mutant id="mutant_1094" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(value &gt; maxLessOne) || (value &lt; 1)" to="value &gt; maxLessOne" />
    <mutant id="mutant_1095" viable="true" in="org.joda.time.chrono.BasicGJChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 29) &amp;&amp; (monthOfYear().isLeap(instant))" to="((dayOfMonth().get(instant)) == 29) || (monthOfYear().isLeap(instant))" />
    <mutant id="mutant_1092" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(value &gt; maxLessOne) || (value &lt; 1)" to="true" />
    <mutant id="mutant_1093" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(value &gt; maxLessOne) || (value &lt; 1)" to="false" />
    <mutant id="mutant_1090" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(value &gt; maxLessOne) || (value &lt; 1)" to="value &lt; 1" />
    <mutant id="mutant_1091" viable="true" in="org.joda.time.chrono.BasicDayOfYearDateTimeField.getMaximumValueForSet(long,int)" from="(value &gt; maxLessOne) || (value &lt; 1)" to="(value &gt; maxLessOne) &amp;&amp; (value &lt; 1)" />
    <mutant id="mutant_390" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="c &lt;= '9'" />
    <mutant id="mutant_1089" viable="true" in="org.joda.time.chrono.BasicChronology.getYearInfo(int)" from="(info == null) || ((info.iYear) != year)" to="info == null" />
    <mutant id="mutant_391" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="true" />
    <mutant id="mutant_1087" viable="true" in="org.joda.time.chrono.BasicChronology.getYearInfo(int)" from="(info == null) || ((info.iYear) != year)" to="true" />
    <mutant id="mutant_1088" viable="true" in="org.joda.time.chrono.BasicChronology.getYearInfo(int)" from="(info == null) || ((info.iYear) != year)" to="false" />
    <mutant id="mutant_1085" viable="true" in="org.joda.time.chrono.BasicChronology.getYearInfo(int)" from="(info == null) || ((info.iYear) != year)" to="(info == null) &amp;&amp; ((info.iYear) != year)" />
    <mutant id="mutant_1086" viable="true" in="org.joda.time.chrono.BasicChronology.getYearInfo(int)" from="(info == null) || ((info.iYear) != year)" to="(info.iYear) != year" />
    <mutant id="mutant_396" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="true" />
    <mutant id="mutant_397" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="false" />
    <mutant id="mutant_398" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="(count == 0) || (!expectSeparators)" />
    <mutant id="mutant_399" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="count == 0" />
    <mutant id="mutant_392" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="false" />
    <mutant id="mutant_393" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="(c &gt;= '0') || (c &lt;= '9')" />
    <mutant id="mutant_394" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="c &gt;= '0'" />
    <mutant id="mutant_395" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(count == 0) &amp;&amp; (!expectSeparators)" to="!expectSeparators" />
    <mutant id="mutant_1919" viable="true" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(convId.startsWith(&quot;GMT+&quot;)) || (convId.startsWith(&quot;GMT-&quot;))" to="true" />
    <mutant id="mutant_1917" viable="true" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))) || (millisOffset &gt; (DateTimeZone.MAX_MILLIS))" to="millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))" />
    <mutant id="mutant_1918" viable="true" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(convId.startsWith(&quot;GMT+&quot;)) || (convId.startsWith(&quot;GMT-&quot;))" to="(convId.startsWith(&quot;GMT+&quot;)) &amp;&amp; (convId.startsWith(&quot;GMT-&quot;))" />
    <mutant id="mutant_1915" viable="true" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))) || (millisOffset &gt; (DateTimeZone.MAX_MILLIS))" to="false" />
    <mutant id="mutant_1916" viable="true" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))) || (millisOffset &gt; (DateTimeZone.MAX_MILLIS))" to="(millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))) &amp;&amp; (millisOffset &gt; (DateTimeZone.MAX_MILLIS))" />
    <mutant id="mutant_1913" viable="true" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))) || (millisOffset &gt; (DateTimeZone.MAX_MILLIS))" to="millisOffset &gt; (DateTimeZone.MAX_MILLIS)" />
    <mutant id="mutant_1914" viable="true" in="org.joda.time.DateTimeZone.forOffsetMillis(int)" from="(millisOffset &lt; (-(DateTimeZone.MAX_MILLIS))) || (millisOffset &gt; (DateTimeZone.MAX_MILLIS))" to="true" />
    <mutant id="mutant_1911" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &gt; 0) &amp;&amp; (minutesOffset &lt; 0)" to="false" />
    <mutant id="mutant_1912" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &gt; 0) &amp;&amp; (minutesOffset &lt; 0)" to="hoursOffset &gt; 0" />
    <mutant id="mutant_1910" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &gt; 0) &amp;&amp; (minutesOffset &lt; 0)" to="true" />
    <mutant id="mutant_1908" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &gt; 0) &amp;&amp; (minutesOffset &lt; 0)" to="minutesOffset &lt; 0" />
    <mutant id="mutant_1909" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &gt; 0) &amp;&amp; (minutesOffset &lt; 0)" to="(hoursOffset &gt; 0) || (minutesOffset &lt; 0)" />
    <mutant id="mutant_1906" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(minutesOffset &lt; (-59)) || (minutesOffset &gt; 59)" to="false" />
    <mutant id="mutant_1907" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(minutesOffset &lt; (-59)) || (minutesOffset &gt; 59)" to="(minutesOffset &lt; (-59)) &amp;&amp; (minutesOffset &gt; 59)" />
    <mutant id="mutant_1904" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(minutesOffset &lt; (-59)) || (minutesOffset &gt; 59)" to="minutesOffset &gt; 59" />
    <mutant id="mutant_1905" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(minutesOffset &lt; (-59)) || (minutesOffset &gt; 59)" to="true" />
    <mutant id="mutant_1902" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &lt; (-23)) || (hoursOffset &gt; 23)" to="false" />
    <mutant id="mutant_1903" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(minutesOffset &lt; (-59)) || (minutesOffset &gt; 59)" to="minutesOffset &lt; (-59)" />
    <mutant id="mutant_1900" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &lt; (-23)) || (hoursOffset &gt; 23)" to="hoursOffset &gt; 23" />
    <mutant id="mutant_1901" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &lt; (-23)) || (hoursOffset &gt; 23)" to="true" />
    <mutant id="mutant_1959" viable="true" in="org.joda.time.Instant.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1950" viable="false" in="org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable)" from="((ex.getCause()) != null) &amp;&amp; ((ex.getCause()) != ex)" to="true" />
    <mutant id="mutant_1957" viable="true" in="org.joda.time.Instant.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="durationToAdd == 0" />
    <mutant id="mutant_1958" viable="true" in="org.joda.time.Instant.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1955" viable="true" in="org.joda.time.Instant.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="true" />
    <mutant id="mutant_1956" viable="true" in="org.joda.time.Instant.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="false" />
    <mutant id="mutant_1953" viable="true" in="org.joda.time.Instant.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="(durationToAdd == 0) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1954" viable="true" in="org.joda.time.Instant.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1951" viable="false" in="org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable)" from="((ex.getCause()) != null) &amp;&amp; ((ex.getCause()) != ex)" to="false" />
    <mutant id="mutant_1952" viable="true" in="org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable)" from="((ex.getCause()) != null) &amp;&amp; ((ex.getCause()) != ex)" to="(ex.getCause()) != ex" />
    <mutant id="mutant_1948" viable="true" in="org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable)" from="((ex.getCause()) != null) &amp;&amp; ((ex.getCause()) != ex)" to="(ex.getCause()) != null" />
    <mutant id="mutant_1949" viable="true" in="org.joda.time.IllegalInstantException.isIllegalInstant(java.lang.Throwable)" from="((ex.getCause()) != null) &amp;&amp; ((ex.getCause()) != ex)" to="((ex.getCause()) != null) || ((ex.getCause()) != ex)" />
    <mutant id="mutant_1946" viable="true" in="org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="false" />
    <mutant id="mutant_1947" viable="true" in="org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="end instanceof org.joda.time.LocalTime" />
    <mutant id="mutant_1944" viable="true" in="org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="(start instanceof org.joda.time.LocalTime) || (end instanceof org.joda.time.LocalTime)" />
    <mutant id="mutant_1945" viable="true" in="org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="true" />
    <mutant id="mutant_1942" viable="true" in="org.joda.time.Duration.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="(durationToAdd == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1943" viable="true" in="org.joda.time.Hours.hoursBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalTime) &amp;&amp; (end instanceof org.joda.time.LocalTime)" to="start instanceof org.joda.time.LocalTime" />
    <mutant id="mutant_1940" viable="true" in="org.joda.time.Duration.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1941" viable="true" in="org.joda.time.Duration.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="durationToAdd == null" />
    <mutant id="mutant_1939" viable="true" in="org.joda.time.Duration.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1937" viable="true" in="org.joda.time.Duration.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="durationToAdd == 0" />
    <mutant id="mutant_1938" viable="true" in="org.joda.time.Duration.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1935" viable="true" in="org.joda.time.Duration.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="true" />
    <mutant id="mutant_1936" viable="true" in="org.joda.time.Duration.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="false" />
    <mutant id="mutant_1933" viable="true" in="org.joda.time.Duration.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="(durationToAdd == 0) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1934" viable="true" in="org.joda.time.Duration.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1931" viable="true" in="org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="false" />
    <mutant id="mutant_1932" viable="true" in="org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="start instanceof org.joda.time.LocalDate" />
    <mutant id="mutant_1930" viable="true" in="org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="true" />
    <mutant id="mutant_1928" viable="true" in="org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="end instanceof org.joda.time.LocalDate" />
    <mutant id="mutant_1929" viable="true" in="org.joda.time.Days.daysBetween(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial)" from="(start instanceof org.joda.time.LocalDate) &amp;&amp; (end instanceof org.joda.time.LocalDate)" to="(start instanceof org.joda.time.LocalDate) || (end instanceof org.joda.time.LocalDate)" />
    <mutant id="mutant_1926" viable="true" in="org.joda.time.DateTimeZone.validateProvider(org.joda.time.tz.Provider)" from="(ids == null) || ((ids.size()) == 0)" to="false" />
    <mutant id="mutant_1927" viable="true" in="org.joda.time.DateTimeZone.validateProvider(org.joda.time.tz.Provider)" from="(ids == null) || ((ids.size()) == 0)" to="ids == null" />
    <mutant id="mutant_1924" viable="true" in="org.joda.time.DateTimeZone.validateProvider(org.joda.time.tz.Provider)" from="(ids == null) || ((ids.size()) == 0)" to="(ids == null) &amp;&amp; ((ids.size()) == 0)" />
    <mutant id="mutant_1925" viable="true" in="org.joda.time.DateTimeZone.validateProvider(org.joda.time.tz.Provider)" from="(ids == null) || ((ids.size()) == 0)" to="true" />
    <mutant id="mutant_1922" viable="true" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(convId.startsWith(&quot;GMT+&quot;)) || (convId.startsWith(&quot;GMT-&quot;))" to="convId.startsWith(&quot;GMT+&quot;)" />
    <mutant id="mutant_1923" viable="true" in="org.joda.time.DateTimeZone.validateProvider(org.joda.time.tz.Provider)" from="(ids == null) || ((ids.size()) == 0)" to="(ids.size()) == 0" />
    <mutant id="mutant_1920" viable="true" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(convId.startsWith(&quot;GMT+&quot;)) || (convId.startsWith(&quot;GMT-&quot;))" to="false" />
    <mutant id="mutant_1921" viable="true" in="org.joda.time.DateTimeZone.forTimeZone(java.util.TimeZone)" from="(convId.startsWith(&quot;GMT+&quot;)) || (convId.startsWith(&quot;GMT-&quot;))" to="convId.startsWith(&quot;GMT-&quot;)" />
    <mutant id="mutant_1519" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets)))" to="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) || (Arrays.equals(iWallOffsets, other.iWallOffsets)))" />
    <mutant id="mutant_1993" viable="true" in="org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1510" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions)))" to="(Arrays.equals(iTransitions, other.iTransitions))" />
    <mutant id="mutant_1994" viable="true" in="org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1991" viable="true" in="org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="durationToAdd == null" />
    <mutant id="mutant_1992" viable="true" in="org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="(durationToAdd == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1990" viable="true" in="org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1517" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys)))" to="false" />
    <mutant id="mutant_1518" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys)))" to="((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions)))" />
    <mutant id="mutant_1515" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys)))" to="(Arrays.equals(iNameKeys, other.iNameKeys))" />
    <mutant id="mutant_1999" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DateTimeFieldType)" from="(isSupported(range)) || (range == (DurationFieldType.days()))" to="range == (DurationFieldType.days())" />
    <mutant id="mutant_1516" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys)))" to="true" />
    <mutant id="mutant_1513" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions)))" to="(getID().equals(other.getID()))" />
    <mutant id="mutant_1997" viable="true" in="org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_1514" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys)))" to="(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) || (Arrays.equals(iNameKeys, other.iNameKeys)))" />
    <mutant id="mutant_1998" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DateTimeFieldType)" from="(isSupported(range)) || (range == (DurationFieldType.days()))" to="(isSupported(range)) &amp;&amp; (range == (DurationFieldType.days()))" />
    <mutant id="mutant_1511" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions)))" to="true" />
    <mutant id="mutant_1995" viable="true" in="org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1512" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions)))" to="false" />
    <mutant id="mutant_1996" viable="true" in="org.joda.time.LocalDateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1508" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="(iDayOfMonth) == 29" />
    <mutant id="mutant_1509" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions)))" to="((getID().equals(other.getID())) || (Arrays.equals(iTransitions, other.iTransitions)))" />
    <mutant id="mutant_1982" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DurationFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="(field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis())" />
    <mutant id="mutant_1983" viable="true" in="org.joda.time.LocalDate.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1980" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DurationFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="true" />
    <mutant id="mutant_1981" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DurationFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="false" />
    <mutant id="mutant_1506" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="false" />
    <mutant id="mutant_1507" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="((iMonthOfYear) == 2) || ((iDayOfMonth) == 29)" />
    <mutant id="mutant_1504" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="(iMonthOfYear) == 2" />
    <mutant id="mutant_1988" viable="true" in="org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1505" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthPrevious(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="true" />
    <mutant id="mutant_1989" viable="true" in="org.joda.time.LocalDateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1502" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="((iMonthOfYear) == 2) || ((iDayOfMonth) == 29)" />
    <mutant id="mutant_1986" viable="true" in="org.joda.time.LocalDate.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1503" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="(iDayOfMonth) == 29" />
    <mutant id="mutant_1987" viable="true" in="org.joda.time.LocalDate.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_1500" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="true" />
    <mutant id="mutant_1984" viable="true" in="org.joda.time.LocalDate.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1501" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="false" />
    <mutant id="mutant_1985" viable="true" in="org.joda.time.LocalDate.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1971" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((interval.getEndMillis()) == (getStartMillis())) || ((getEndMillis()) == (interval.getStartMillis()))" to="true" />
    <mutant id="mutant_1972" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((interval.getEndMillis()) == (getStartMillis())) || ((getEndMillis()) == (interval.getStartMillis()))" to="false" />
    <mutant id="mutant_1970" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((interval.getEndMillis()) == (getStartMillis())) || ((getEndMillis()) == (interval.getStartMillis()))" to="((interval.getEndMillis()) == (getStartMillis())) &amp;&amp; ((getEndMillis()) == (interval.getStartMillis()))" />
    <mutant id="mutant_1979" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DurationFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="LocalDate.DATE_DURATION_TYPES.contains(type)" />
    <mutant id="mutant_1977" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DateTimeFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(durType)) || ((durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="(durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis())" />
    <mutant id="mutant_1978" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DurationFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="(LocalDate.DATE_DURATION_TYPES.contains(type)) &amp;&amp; ((field.getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" />
    <mutant id="mutant_1975" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DateTimeFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(durType)) || ((durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="LocalDate.DATE_DURATION_TYPES.contains(durType)" />
    <mutant id="mutant_1976" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DateTimeFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(durType)) || ((durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="(LocalDate.DATE_DURATION_TYPES.contains(durType)) &amp;&amp; ((durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" />
    <mutant id="mutant_1973" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DateTimeFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(durType)) || ((durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="true" />
    <mutant id="mutant_1974" viable="true" in="org.joda.time.LocalDate.isSupported(org.joda.time.DateTimeFieldType)" from="(LocalDate.DATE_DURATION_TYPES.contains(durType)) || ((durType.getField(getChronology()).getUnitMillis()) &gt;= (getChronology().days().getUnitMillis()))" to="false" />
    <mutant id="mutant_1960" viable="true" in="org.joda.time.Instant.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1961" viable="true" in="org.joda.time.Instant.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="durationToAdd == null" />
    <mutant id="mutant_1968" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((interval.getEndMillis()) == (getStartMillis())) || ((getEndMillis()) == (interval.getStartMillis()))" to="(getEndMillis()) == (interval.getStartMillis())" />
    <mutant id="mutant_1969" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((interval.getEndMillis()) == (getStartMillis())) || ((getEndMillis()) == (interval.getStartMillis()))" to="(interval.getEndMillis()) == (getStartMillis())" />
    <mutant id="mutant_1966" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((getStartMillis()) == now) || ((getEndMillis()) == now)" to="true" />
    <mutant id="mutant_1967" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((getStartMillis()) == now) || ((getEndMillis()) == now)" to="false" />
    <mutant id="mutant_1964" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((getStartMillis()) == now) || ((getEndMillis()) == now)" to="(getEndMillis()) == now" />
    <mutant id="mutant_1965" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((getStartMillis()) == now) || ((getEndMillis()) == now)" to="((getStartMillis()) == now) &amp;&amp; ((getEndMillis()) == now)" />
    <mutant id="mutant_1962" viable="true" in="org.joda.time.Instant.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="(durationToAdd == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1963" viable="true" in="org.joda.time.Interval.abuts(org.joda.time.ReadableInterval)" from="((getStartMillis()) == now) || ((getEndMillis()) == now)" to="(getStartMillis()) == now" />
    <mutant id="mutant_1553" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey)))" to="((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset))" />
    <mutant id="mutant_1554" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0))" to="((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) || ((p.getYears()) == 0))" />
    <mutant id="mutant_1551" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey)))" to="false" />
    <mutant id="mutant_1552" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey)))" to="(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) || (curNameKey.equals(nextNameKey)))" />
    <mutant id="mutant_1550" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey)))" to="true" />
    <mutant id="mutant_1559" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4))" to="((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0))" />
    <mutant id="mutant_1557" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0))" to="(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey)))" />
    <mutant id="mutant_1558" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0))" to="((p.getYears()) == 0)" />
    <mutant id="mutant_1555" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0))" to="true" />
    <mutant id="mutant_1556" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0))" to="false" />
    <mutant id="mutant_1542" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5)) &amp;&amp; (id.equals(set[0]))" to="((set != null) &amp;&amp; ((set.length) == 5)) || (id.equals(set[0]))" />
    <mutant id="mutant_1543" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5)) &amp;&amp; (id.equals(set[0]))" to="(set != null) &amp;&amp; ((set.length) == 5)" />
    <mutant id="mutant_1540" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5)) &amp;&amp; (id.equals(set[0]))" to="false" />
    <mutant id="mutant_1541" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5)) &amp;&amp; (id.equals(set[0]))" to="id.equals(set[0])" />
    <mutant id="mutant_1548" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset))" to="((curOffset != nextOffset) || (curStdOffset == nextStdOffset))" />
    <mutant id="mutant_1549" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey)))" to="(curNameKey.equals(nextNameKey))" />
    <mutant id="mutant_1546" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset))" to="true" />
    <mutant id="mutant_1547" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset))" to="false" />
    <mutant id="mutant_1544" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset))" to="(curStdOffset == nextStdOffset)" />
    <mutant id="mutant_1545" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset))" to="(curOffset != nextOffset)" />
    <mutant id="mutant_701" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((rightPosition &gt;= 0) &amp;&amp; (matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position)))" to="(rightPosition &gt;= 0)" />
    <mutant id="mutant_702" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((rightPosition &gt;= 0) &amp;&amp; (matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position)))" to="true" />
    <mutant id="mutant_703" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((rightPosition &gt;= 0) &amp;&amp; (matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position)))" to="false" />
    <mutant id="mutant_704" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((rightPosition &gt;= 0) &amp;&amp; (matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position)))" to="(matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position))" />
    <mutant id="mutant_700" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.scan(java.lang.String,int)" from="((rightPosition &gt;= 0) &amp;&amp; (matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position)))" to="((rightPosition &gt;= 0) || (matchesOtherAffix(((iRight.parse(periodStr, rightPosition)) - leftPosition), periodStr, position)))" />
    <mutant id="mutant_709" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(org.joda.time.PeriodType,int)" from="(type.isSupported(org.joda.time.DurationFieldType.seconds())) || (type.isSupported(org.joda.time.DurationFieldType.millis()))" to="type.isSupported(org.joda.time.DurationFieldType.millis())" />
    <mutant id="mutant_705" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(org.joda.time.PeriodType,int)" from="(type.isSupported(org.joda.time.DurationFieldType.seconds())) || (type.isSupported(org.joda.time.DurationFieldType.millis()))" to="type.isSupported(org.joda.time.DurationFieldType.seconds())" />
    <mutant id="mutant_706" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(org.joda.time.PeriodType,int)" from="(type.isSupported(org.joda.time.DurationFieldType.seconds())) || (type.isSupported(org.joda.time.DurationFieldType.millis()))" to="(type.isSupported(org.joda.time.DurationFieldType.seconds())) &amp;&amp; (type.isSupported(org.joda.time.DurationFieldType.millis()))" />
    <mutant id="mutant_707" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(org.joda.time.PeriodType,int)" from="(type.isSupported(org.joda.time.DurationFieldType.seconds())) || (type.isSupported(org.joda.time.DurationFieldType.millis()))" to="true" />
    <mutant id="mutant_708" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.isSupported(org.joda.time.PeriodType,int)" from="(type.isSupported(org.joda.time.DurationFieldType.seconds())) || (type.isSupported(org.joda.time.DurationFieldType.millis()))" to="false" />
    <mutant id="mutant_1531" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))) &amp;&amp; ((iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone))" to="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))" />
    <mutant id="mutant_1532" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))) &amp;&amp; ((iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone))" to="true" />
    <mutant id="mutant_1530" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))) &amp;&amp; ((iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone))" to="(iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone)" />
    <mutant id="mutant_1539" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5)) &amp;&amp; (id.equals(set[0]))" to="true" />
    <mutant id="mutant_1537" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5))" to="((set.length) == 5)" />
    <mutant id="mutant_1538" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5))" to="((set != null) || ((set.length) == 5))" />
    <mutant id="mutant_1535" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5))" to="false" />
    <mutant id="mutant_1536" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5))" to="(set != null)" />
    <mutant id="mutant_1533" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))) &amp;&amp; ((iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone))" to="false" />
    <mutant id="mutant_1534" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((set != null) &amp;&amp; ((set.length) == 5))" to="true" />
    <mutant id="mutant_712" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)) &amp;&amp; (((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0)" to="true" />
    <mutant id="mutant_713" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)) &amp;&amp; (((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0)" to="false" />
    <mutant id="mutant_714" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)) &amp;&amp; (((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0)" to="(iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)" />
    <mutant id="mutant_715" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="((iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)) || ((getFieldValue(period)) != (Long.MAX_VALUE))" to="((iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)) &amp;&amp; ((getFieldValue(period)) != (Long.MAX_VALUE))" />
    <mutant id="mutant_710" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)) &amp;&amp; (((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0)" to="((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)) || (((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0)" />
    <mutant id="mutant_711" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.calculatePrintedLength(org.joda.time.ReadablePeriod,java.util.Locale)" from="((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)) &amp;&amp; (((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0)" to="((Math.abs(valueLong)) % (DateTimeConstants.MILLIS_PER_SECOND)) == 0" />
    <mutant id="mutant_716" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="((iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)) || ((getFieldValue(period)) != (Long.MAX_VALUE))" to="true" />
    <mutant id="mutant_717" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="((iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)) || ((getFieldValue(period)) != (Long.MAX_VALUE))" to="false" />
    <mutant id="mutant_718" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="((iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)) || ((getFieldValue(period)) != (Long.MAX_VALUE))" to="(iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)" />
    <mutant id="mutant_719" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="((iPrintZeroSetting) == (PeriodFormatterBuilder.PRINT_ZERO_ALWAYS)) || ((getFieldValue(period)) != (Long.MAX_VALUE))" to="(getFieldValue(period)) != (Long.MAX_VALUE)" />
    <mutant id="mutant_1520" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets)))" to="true" />
    <mutant id="mutant_1521" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets)))" to="false" />
    <mutant id="mutant_1528" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets)))" to="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) || (Arrays.equals(iStandardOffsets, other.iStandardOffsets)))" />
    <mutant id="mutant_1529" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))) &amp;&amp; ((iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone))" to="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets))) || ((iTailZone) == null ? null == (other.iTailZone) : iTailZone.equals(other.iTailZone))" />
    <mutant id="mutant_1526" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets)))" to="false" />
    <mutant id="mutant_1527" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets)))" to="(Arrays.equals(iStandardOffsets, other.iStandardOffsets))" />
    <mutant id="mutant_1524" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets)))" to="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets)))" />
    <mutant id="mutant_1525" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="(((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets))) &amp;&amp; (Arrays.equals(iStandardOffsets, other.iStandardOffsets)))" to="true" />
    <mutant id="mutant_1522" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets)))" to="(Arrays.equals(iWallOffsets, other.iWallOffsets))" />
    <mutant id="mutant_1523" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.equals(java.lang.Object)" from="((((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys))) &amp;&amp; (Arrays.equals(iWallOffsets, other.iWallOffsets)))" to="(((getID().equals(other.getID())) &amp;&amp; (Arrays.equals(iTransitions, other.iTransitions))) &amp;&amp; (Arrays.equals(iNameKeys, other.iNameKeys)))" />
    <mutant id="mutant_723" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iSuffix) != null) &amp;&amp; (!mustParse)" to="false" />
    <mutant id="mutant_724" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iSuffix) != null) &amp;&amp; (!mustParse)" to="!mustParse" />
    <mutant id="mutant_725" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(!mustParse) &amp;&amp; (!(isSupported(period.getPeriodType(), iFieldType)))" to="true" />
    <mutant id="mutant_726" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(!mustParse) &amp;&amp; (!(isSupported(period.getPeriodType(), iFieldType)))" to="false" />
    <mutant id="mutant_720" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iSuffix) != null) &amp;&amp; (!mustParse)" to="(iSuffix) != null" />
    <mutant id="mutant_721" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iSuffix) != null) &amp;&amp; (!mustParse)" to="((iSuffix) != null) || (!mustParse)" />
    <mutant id="mutant_722" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iSuffix) != null) &amp;&amp; (!mustParse)" to="true" />
    <mutant id="mutant_727" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(!mustParse) &amp;&amp; (!(isSupported(period.getPeriodType(), iFieldType)))" to="!mustParse" />
    <mutant id="mutant_728" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(!mustParse) &amp;&amp; (!(isSupported(period.getPeriodType(), iFieldType)))" to="(!mustParse) || (!(isSupported(period.getPeriodType(), iFieldType)))" />
    <mutant id="mutant_729" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(!mustParse) &amp;&amp; (!(isSupported(period.getPeriodType(), iFieldType)))" to="!(isSupported(period.getPeriodType(), iFieldType))" />
    <mutant id="mutant_1113" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear())))" to="((partial.size()) &gt; 0)" />
    <mutant id="mutant_1597" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="(((iWallOffset) != (other.iWallOffset)) &amp;&amp; (!(iNameKey.equals(other.iNameKey))))" />
    <mutant id="mutant_1114" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear())))" to="(partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))" />
    <mutant id="mutant_1598" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="((iMillis) &gt; (other.iMillis)) &amp;&amp; (((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="((iMillis) &gt; (other.iMillis)) || (((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" />
    <mutant id="mutant_1111" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear())))" to="true" />
    <mutant id="mutant_1595" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="false" />
    <mutant id="mutant_1112" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear())))" to="false" />
    <mutant id="mutant_1596" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="(!(iNameKey.equals(other.iNameKey)))" />
    <mutant id="mutant_1593" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="((iWallOffset) != (other.iWallOffset))" />
    <mutant id="mutant_1110" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear())))" to="(((partial.size()) &gt; 0) || (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear())))" />
    <mutant id="mutant_1594" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="(((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="true" />
    <mutant id="mutant_1591" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(java.lang.String)" from="((startRule.getToYear()) == (Integer.MAX_VALUE)) &amp;&amp; ((endRule.getToYear()) == (Integer.MAX_VALUE))" to="false" />
    <mutant id="mutant_1592" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(java.lang.String)" from="((startRule.getToYear()) == (Integer.MAX_VALUE)) &amp;&amp; ((endRule.getToYear()) == (Integer.MAX_VALUE))" to="(startRule.getToYear()) == (Integer.MAX_VALUE)" />
    <mutant id="mutant_1119" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))) &amp;&amp; (fieldIndex == 0)" to="fieldIndex == 0" />
    <mutant id="mutant_1117" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))) &amp;&amp; (fieldIndex == 0)" to="true" />
    <mutant id="mutant_1118" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))) &amp;&amp; (fieldIndex == 0)" to="false" />
    <mutant id="mutant_1115" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))) &amp;&amp; (fieldIndex == 0)" to="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))) || (fieldIndex == 0)" />
    <mutant id="mutant_1599" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Transition.isTransitionFrom(org.joda.time.tz.DateTimeZoneBuilder$Transition)" from="((iMillis) &gt; (other.iMillis)) &amp;&amp; (((iWallOffset) != (other.iWallOffset)) || (!(iNameKey.equals(other.iNameKey))))" to="true" />
    <mutant id="mutant_1116" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(org.joda.time.ReadablePartial,int,int[],int)" from="(((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))) &amp;&amp; (fieldIndex == 0)" to="((partial.size()) &gt; 0) &amp;&amp; (partial.getFieldType(0).equals(org.joda.time.DateTimeFieldType.monthOfYear()))" />
    <mutant id="mutant_734" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '-') || (c == '+'))" to="(c == '+')" />
    <mutant id="mutant_735" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="((length == 0) || ((c == '-') || (c == '+')))" />
    <mutant id="mutant_736" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="(length == 0)" />
    <mutant id="mutant_737" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="true" />
    <mutant id="mutant_730" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '-') || (c == '+'))" to="((c == '-') &amp;&amp; (c == '+'))" />
    <mutant id="mutant_731" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '-') || (c == '+'))" to="true" />
    <mutant id="mutant_732" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '-') || (c == '+'))" to="false" />
    <mutant id="mutant_733" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '-') || (c == '+'))" to="(c == '-')" />
    <mutant id="mutant_1590" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(java.lang.String)" from="((startRule.getToYear()) == (Integer.MAX_VALUE)) &amp;&amp; ((endRule.getToYear()) == (Integer.MAX_VALUE))" to="true" />
    <mutant id="mutant_738" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="false" />
    <mutant id="mutant_739" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+')))" to="((c == '-') || (c == '+'))" />
    <mutant id="mutant_1102" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)" from="(value &gt; 28) || (value &lt; 1)" to="value &gt; 28" />
    <mutant id="mutant_1586" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))) &amp;&amp; (iOfYear.equals(other.iOfYear))" to="true" />
    <mutant id="mutant_1103" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)" from="(value &gt; 28) || (value &lt; 1)" to="true" />
    <mutant id="mutant_1587" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))) &amp;&amp; (iOfYear.equals(other.iOfYear))" to="false" />
    <mutant id="mutant_1100" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)" from="(value &gt; 28) || (value &lt; 1)" to="value &lt; 1" />
    <mutant id="mutant_1584" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))) &amp;&amp; (iOfYear.equals(other.iOfYear))" to="iOfYear.equals(other.iOfYear)" />
    <mutant id="mutant_1101" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)" from="(value &gt; 28) || (value &lt; 1)" to="(value &gt; 28) &amp;&amp; (value &lt; 1)" />
    <mutant id="mutant_1585" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))) &amp;&amp; (iOfYear.equals(other.iOfYear))" to="((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))" />
    <mutant id="mutant_1582" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey)))" to="(iNameKey.equals(other.iNameKey))" />
    <mutant id="mutant_1583" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey)))" to="(((iSaveMillis) == (other.iSaveMillis)) || (iNameKey.equals(other.iNameKey)))" />
    <mutant id="mutant_1580" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey)))" to="true" />
    <mutant id="mutant_1581" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey)))" to="false" />
    <mutant id="mutant_1108" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="(minuendRem &gt;= (BasicGJChronology.FEB_29)) &amp;&amp; (isLeapYear(minuendYear))" to="minuendRem &gt;= (BasicGJChronology.FEB_29)" />
    <mutant id="mutant_1109" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="(minuendRem &gt;= (BasicGJChronology.FEB_29)) &amp;&amp; (isLeapYear(minuendYear))" to="isLeapYear(minuendYear)" />
    <mutant id="mutant_1106" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="(minuendRem &gt;= (BasicGJChronology.FEB_29)) &amp;&amp; (isLeapYear(minuendYear))" to="true" />
    <mutant id="mutant_1107" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="(minuendRem &gt;= (BasicGJChronology.FEB_29)) &amp;&amp; (isLeapYear(minuendYear))" to="false" />
    <mutant id="mutant_1104" viable="true" in="org.joda.time.chrono.BasicGJChronology.getDaysInMonthMaxForSet(long,int)" from="(value &gt; 28) || (value &lt; 1)" to="false" />
    <mutant id="mutant_1588" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))) &amp;&amp; (iOfYear.equals(other.iOfYear))" to="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey))) || (iOfYear.equals(other.iOfYear))" />
    <mutant id="mutant_1105" viable="true" in="org.joda.time.chrono.BasicGJChronology.getYearDifference(long,long)" from="(minuendRem &gt;= (BasicGJChronology.FEB_29)) &amp;&amp; (isLeapYear(minuendYear))" to="(minuendRem &gt;= (BasicGJChronology.FEB_29)) || (isLeapYear(minuendYear))" />
    <mutant id="mutant_1589" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$RuleSet.buildTailZone(java.lang.String)" from="((startRule.getToYear()) == (Integer.MAX_VALUE)) &amp;&amp; ((endRule.getToYear()) == (Integer.MAX_VALUE))" to="((startRule.getToYear()) == (Integer.MAX_VALUE)) || ((endRule.getToYear()) == (Integer.MAX_VALUE))" />
    <mutant id="mutant_745" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="((length + 1) &gt;= limit)" />
    <mutant id="mutant_746" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="true" />
    <mutant id="mutant_747" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="false" />
    <mutant id="mutant_748" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="(((length + 1) &gt;= limit) &amp;&amp; ((c = text.charAt(((position + length) + 1))) &lt; '0'))" />
    <mutant id="mutant_741" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (!(iRejectSignedValues))" to="true" />
    <mutant id="mutant_742" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (!(iRejectSignedValues))" to="false" />
    <mutant id="mutant_743" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (!(iRejectSignedValues))" to="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) || (!(iRejectSignedValues))" />
    <mutant id="mutant_744" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (!(iRejectSignedValues))" to="(length == 0) &amp;&amp; ((c == '-') || (c == '+'))" />
    <mutant id="mutant_749" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0'))" to="((c = text.charAt(((position + length) + 1))) &lt; '0')" />
    <mutant id="mutant_1575" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))) &amp;&amp; (curNameKey.equals(zoneNameData[4]))" to="curNameKey.equals(zoneNameData[4])" />
    <mutant id="mutant_1576" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))) &amp;&amp; (curNameKey.equals(zoneNameData[4]))" to="true" />
    <mutant id="mutant_1573" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2])))" to="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8))" />
    <mutant id="mutant_1574" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))) &amp;&amp; (curNameKey.equals(zoneNameData[4]))" to="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))) || (curNameKey.equals(zoneNameData[4]))" />
    <mutant id="mutant_1571" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2])))" to="false" />
    <mutant id="mutant_1572" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2])))" to="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) || (curNameKey.equals(zoneNameData[2])))" />
    <mutant id="mutant_1570" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2])))" to="true" />
    <mutant id="mutant_740" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((length == 0) &amp;&amp; ((c == '-') || (c == '+'))) &amp;&amp; (!(iRejectSignedValues))" to="!(iRejectSignedValues)" />
    <mutant id="mutant_1579" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$Recurrence.equals(java.lang.Object)" from="(((iSaveMillis) == (other.iSaveMillis)) &amp;&amp; (iNameKey.equals(other.iNameKey)))" to="((iSaveMillis) == (other.iSaveMillis))" />
    <mutant id="mutant_1577" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))) &amp;&amp; (curNameKey.equals(zoneNameData[4]))" to="false" />
    <mutant id="mutant_1578" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))) &amp;&amp; (curNameKey.equals(zoneNameData[4]))" to="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2]))" />
    <mutant id="mutant_756" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="true" />
    <mutant id="mutant_757" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="false" />
    <mutant id="mutant_758" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="(c &gt;= '0') || (c &lt;= '9')" />
    <mutant id="mutant_759" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="c &gt;= '0'" />
    <mutant id="mutant_752" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')" />
    <mutant id="mutant_753" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) &amp;&amp; (c &gt; '9')" />
    <mutant id="mutant_754" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="c &gt; '9'" />
    <mutant id="mutant_755" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(c &gt;= '0') &amp;&amp; (c &lt;= '9')" to="c &lt;= '9'" />
    <mutant id="mutant_1564" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8))" to="((p.getMonths()) &lt; 8)" />
    <mutant id="mutant_1565" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8))" to="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) || ((p.getMonths()) &lt; 8))" />
    <mutant id="mutant_1562" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4))" to="(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) || ((p.getMonths()) &gt; 4))" />
    <mutant id="mutant_1563" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4))" to="((p.getMonths()) &gt; 4)" />
    <mutant id="mutant_1560" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4))" to="true" />
    <mutant id="mutant_1561" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4))" to="false" />
    <mutant id="mutant_750" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="true" />
    <mutant id="mutant_751" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((length + 1) &gt;= limit) || ((c = text.charAt(((position + length) + 1))) &lt; '0')) || (c &gt; '9')" to="false" />
    <mutant id="mutant_1568" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8))" to="(((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4))" />
    <mutant id="mutant_1569" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="(((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8)) &amp;&amp; (curNameKey.equals(zoneNameData[2])))" to="(curNameKey.equals(zoneNameData[2]))" />
    <mutant id="mutant_1566" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8))" to="true" />
    <mutant id="mutant_1567" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone.create(java.lang.String,boolean,java.util.ArrayList,org.joda.time.tz.DateTimeZoneBuilder$DSTZone)" from="((((((curOffset != nextOffset) &amp;&amp; (curStdOffset == nextStdOffset)) &amp;&amp; (curNameKey.equals(nextNameKey))) &amp;&amp; ((p.getYears()) == 0)) &amp;&amp; ((p.getMonths()) &gt; 4)) &amp;&amp; ((p.getMonths()) &lt; 8))" to="false" />
    <mutant id="mutant_767" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="true" />
    <mutant id="mutant_768" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="false" />
    <mutant id="mutant_769" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" />
    <mutant id="mutant_763" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ','))" to="(c == ',')" />
    <mutant id="mutant_764" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ','))" to="(c == '.')" />
    <mutant id="mutant_765" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" />
    <mutant id="mutant_766" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS))" />
    <mutant id="mutant_1160" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(((year % 100) != 0) || ((year % 400) == 0))" to="true" />
    <mutant id="mutant_1161" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(((year % 100) != 0) || ((year % 400) == 0))" to="false" />
    <mutant id="mutant_1157" viable="true" in="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(monthOfYear != 2) || (dayOfMonth != 29)" to="false" />
    <mutant id="mutant_2004" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DurationFieldType)" from="(LocalTime.TIME_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis()))" to="(field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis())" />
    <mutant id="mutant_1158" viable="true" in="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(monthOfYear != 2) || (dayOfMonth != 29)" to="dayOfMonth != 29" />
    <mutant id="mutant_2005" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DurationFieldType)" from="(LocalTime.TIME_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis()))" to="(LocalTime.TIME_DURATION_TYPES.contains(type)) &amp;&amp; ((field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis()))" />
    <mutant id="mutant_1155" viable="true" in="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(monthOfYear != 2) || (dayOfMonth != 29)" to="monthOfYear != 2" />
    <mutant id="mutant_2002" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DateTimeFieldType)" from="(isSupported(range)) || (range == (DurationFieldType.days()))" to="isSupported(range)" />
    <mutant id="mutant_1156" viable="true" in="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(monthOfYear != 2) || (dayOfMonth != 29)" to="true" />
    <mutant id="mutant_2003" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DurationFieldType)" from="(LocalTime.TIME_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis()))" to="LocalTime.TIME_DURATION_TYPES.contains(type)" />
    <mutant id="mutant_1153" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))) &amp;&amp; (getZone().equals(chrono.getZone()))" to="((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))" />
    <mutant id="mutant_2000" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DateTimeFieldType)" from="(isSupported(range)) || (range == (DurationFieldType.days()))" to="true" />
    <mutant id="mutant_1154" viable="true" in="org.joda.time.chrono.GJChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="(monthOfYear != 2) || (dayOfMonth != 29)" to="(monthOfYear != 2) &amp;&amp; (dayOfMonth != 29)" />
    <mutant id="mutant_2001" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DateTimeFieldType)" from="(isSupported(range)) || (range == (DurationFieldType.days()))" to="false" />
    <mutant id="mutant_1151" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))) &amp;&amp; (getZone().equals(chrono.getZone()))" to="true" />
    <mutant id="mutant_1152" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))) &amp;&amp; (getZone().equals(chrono.getZone()))" to="false" />
    <mutant id="mutant_760" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ','))" to="((c == '.') &amp;&amp; (c == ','))" />
    <mutant id="mutant_761" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ','))" to="true" />
    <mutant id="mutant_762" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ','))" to="false" />
    <mutant id="mutant_2008" viable="true" in="org.joda.time.LocalTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_2009" viable="true" in="org.joda.time.LocalTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1159" viable="true" in="org.joda.time.chrono.GregorianChronology.isLeapYear(int)" from="(((year % 100) != 0) || ((year % 400) == 0))" to="((year % 400) == 0)" />
    <mutant id="mutant_2006" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DurationFieldType)" from="(LocalTime.TIME_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis()))" to="true" />
    <mutant id="mutant_2007" viable="true" in="org.joda.time.LocalTime.isSupported(org.joda.time.DurationFieldType)" from="(LocalTime.TIME_DURATION_TYPES.contains(type)) || ((field.getUnitMillis()) &lt; (getChronology().days().getUnitMillis()))" to="false" />
    <mutant id="mutant_778" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos &gt;= 0) &amp;&amp; ((position + length) != suffixPos)" to="false" />
    <mutant id="mutant_779" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos &gt;= 0) &amp;&amp; ((position + length) != suffixPos)" to="(suffixPos &gt;= 0) || ((position + length) != suffixPos)" />
    <mutant id="mutant_774" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ',')) &amp;&amp; (((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="(c == '.') || (c == ',')" />
    <mutant id="mutant_775" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos &gt;= 0) &amp;&amp; ((position + length) != suffixPos)" to="suffixPos &gt;= 0" />
    <mutant id="mutant_776" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos &gt;= 0) &amp;&amp; ((position + length) != suffixPos)" to="(position + length) != suffixPos" />
    <mutant id="mutant_777" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(suffixPos &gt;= 0) &amp;&amp; ((position + length) != suffixPos)" to="true" />
    <mutant id="mutant_1150" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))) &amp;&amp; (getZone().equals(chrono.getZone()))" to="getZone().equals(chrono.getZone())" />
    <mutant id="mutant_1146" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())))" to="((iCutoverMillis) == (chrono.iCutoverMillis))" />
    <mutant id="mutant_1147" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())))" to="(((iCutoverMillis) == (chrono.iCutoverMillis)) || ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())))" />
    <mutant id="mutant_1144" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())))" to="true" />
    <mutant id="mutant_1145" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())))" to="false" />
    <mutant id="mutant_1142" viable="true" in="org.joda.time.chrono.EthiopicChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="monthOfYear().isLeap(instant)" />
    <mutant id="mutant_1143" viable="true" in="org.joda.time.chrono.EthiopicChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="((dayOfMonth().get(instant)) == 6) || (monthOfYear().isLeap(instant))" />
    <mutant id="mutant_1140" viable="true" in="org.joda.time.chrono.EthiopicChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="true" />
    <mutant id="mutant_1141" viable="true" in="org.joda.time.chrono.EthiopicChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="false" />
    <mutant id="mutant_770" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ',')) &amp;&amp; (((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" />
    <mutant id="mutant_771" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ',')) &amp;&amp; (((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="true" />
    <mutant id="mutant_772" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ',')) &amp;&amp; (((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="false" />
    <mutant id="mutant_773" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((c == '.') || (c == ',')) &amp;&amp; (((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" to="((c == '.') || (c == ',')) || (((iFieldType) == (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) == (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)))" />
    <mutant id="mutant_1148" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek())))" to="((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))" />
    <mutant id="mutant_1149" viable="true" in="org.joda.time.chrono.GJChronology.equals(java.lang.Object)" from="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))) &amp;&amp; (getZone().equals(chrono.getZone()))" to="(((iCutoverMillis) == (chrono.iCutoverMillis)) &amp;&amp; ((getMinimumDaysInFirstWeek()) == (chrono.getMinimumDaysInFirstWeek()))) || (getZone().equals(chrono.getZone()))" />
    <mutant id="mutant_305" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length &lt;= 1) || ((str.charAt((length - 1))) != '0')" to="true" />
    <mutant id="mutant_789" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="negative || (wholeValue &lt; 0)" to="negative &amp;&amp; (wholeValue &lt; 0)" />
    <mutant id="mutant_306" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length &lt;= 1) || ((str.charAt((length - 1))) != '0')" to="false" />
    <mutant id="mutant_307" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length &lt;= 1) || ((str.charAt((length - 1))) != '0')" to="length &lt;= 1" />
    <mutant id="mutant_308" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length &lt;= 1) || ((str.charAt((length - 1))) != '0')" to="(length &lt;= 1) &amp;&amp; ((str.charAt((length - 1))) != '0')" />
    <mutant id="mutant_301" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &lt; '0'" />
    <mutant id="mutant_785" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="negative || (wholeValue &lt; 0)" to="negative" />
    <mutant id="mutant_302" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="true" />
    <mutant id="mutant_786" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="negative || (wholeValue &lt; 0)" to="true" />
    <mutant id="mutant_303" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="false" />
    <mutant id="mutant_787" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="negative || (wholeValue &lt; 0)" to="false" />
    <mutant id="mutant_304" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="c &gt; '9'" />
    <mutant id="mutant_788" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="negative || (wholeValue &lt; 0)" to="wholeValue &lt; 0" />
    <mutant id="mutant_309" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="(length &lt;= 1) || ((str.charAt((length - 1))) != '0')" to="(str.charAt((length - 1))) != '0'" />
    <mutant id="mutant_1135" viable="true" in="org.joda.time.chrono.CopticChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="true" />
    <mutant id="mutant_1136" viable="true" in="org.joda.time.chrono.CopticChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="false" />
    <mutant id="mutant_1133" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)) &amp;&amp; ((iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52)" to="(iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52" />
    <mutant id="mutant_1134" viable="true" in="org.joda.time.chrono.CopticChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="(dayOfMonth().get(instant)) == 6" />
    <mutant id="mutant_1131" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)) &amp;&amp; ((iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52)" to="false" />
    <mutant id="mutant_1132" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)) &amp;&amp; ((iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52)" to="(subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)) || ((iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52)" />
    <mutant id="mutant_1130" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)) &amp;&amp; ((iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52)" to="true" />
    <mutant id="mutant_781" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; ((iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" to="(iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)" />
    <mutant id="mutant_782" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; ((iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" to="true" />
    <mutant id="mutant_783" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; ((iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" to="false" />
    <mutant id="mutant_300" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Fraction.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c &lt; '0') || (c &gt; '9')" to="(c &lt; '0') &amp;&amp; (c &gt; '9')" />
    <mutant id="mutant_784" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; ((iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" to="((iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)) || ((iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" />
    <mutant id="mutant_1139" viable="true" in="org.joda.time.chrono.EthiopicChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="(dayOfMonth().get(instant)) == 6" />
    <mutant id="mutant_1137" viable="true" in="org.joda.time.chrono.CopticChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="monthOfYear().isLeap(instant)" />
    <mutant id="mutant_780" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="((iFieldType) != (PeriodFormatterBuilder.SECONDS_MILLIS)) &amp;&amp; ((iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS))" to="(iFieldType) != (PeriodFormatterBuilder.SECONDS_OPTIONAL_MILLIS)" />
    <mutant id="mutant_1138" viable="true" in="org.joda.time.chrono.CopticChronology.isLeapDay(long)" from="((dayOfMonth().get(instant)) == 6) &amp;&amp; (monthOfYear().isLeap(instant))" to="((dayOfMonth().get(instant)) == 6) || (monthOfYear().isLeap(instant))" />
    <mutant id="mutant_316" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)) || ((parsers[(i + 1)]) == null)" to="(parsers[(i + 1)]) == null" />
    <mutant id="mutant_317" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)) || ((parsers[(i + 1)]) == null)" to="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)) &amp;&amp; ((parsers[(i + 1)]) == null)" />
    <mutant id="mutant_318" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)) || ((parsers[(i + 1)]) == null)" to="true" />
    <mutant id="mutant_319" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)) || ((parsers[(i + 1)]) == null)" to="false" />
    <mutant id="mutant_312" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length))" to="true" />
    <mutant id="mutant_796" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(type != null) &amp;&amp; ((isSupported(type, iFieldType)) == false)" to="(isSupported(type, iFieldType)) == false" />
    <mutant id="mutant_313" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length))" to="false" />
    <mutant id="mutant_797" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(type != null) &amp;&amp; ((isSupported(type, iFieldType)) == false)" to="true" />
    <mutant id="mutant_314" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length))" to="(parsePos &gt;= (text.length()))" />
    <mutant id="mutant_798" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(type != null) &amp;&amp; ((isSupported(type, iFieldType)) == false)" to="false" />
    <mutant id="mutant_315" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)) || ((parsers[(i + 1)]) == null)" to="(parsePos &gt;= (text.length())) || ((i + 1) &gt;= length)" />
    <mutant id="mutant_799" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(type != null) &amp;&amp; ((isSupported(type, iFieldType)) == false)" to="type != null" />
    <mutant id="mutant_1124" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(yearToUse &lt; (iChronology.getMinYear())) || (yearToUse &gt; (iChronology.getMaxYear()))" to="yearToUse &lt; (iChronology.getMinYear())" />
    <mutant id="mutant_1125" viable="true" in="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,java.lang.String,java.util.Locale)" from="((iEraText.equals(text)) == false) &amp;&amp; ((&quot;1&quot;.equals(text)) == false)" to="((iEraText.equals(text)) == false) || ((&quot;1&quot;.equals(text)) == false)" />
    <mutant id="mutant_1122" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(yearToUse &lt; (iChronology.getMinYear())) || (yearToUse &gt; (iChronology.getMaxYear()))" to="false" />
    <mutant id="mutant_1123" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(yearToUse &lt; (iChronology.getMinYear())) || (yearToUse &gt; (iChronology.getMaxYear()))" to="(yearToUse &lt; (iChronology.getMinYear())) &amp;&amp; (yearToUse &gt; (iChronology.getMaxYear()))" />
    <mutant id="mutant_1120" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(yearToUse &lt; (iChronology.getMinYear())) || (yearToUse &gt; (iChronology.getMaxYear()))" to="yearToUse &gt; (iChronology.getMaxYear())" />
    <mutant id="mutant_1121" viable="true" in="org.joda.time.chrono.BasicMonthOfYearDateTimeField.add(long,long)" from="(yearToUse &lt; (iChronology.getMinYear())) || (yearToUse &gt; (iChronology.getMaxYear()))" to="true" />
    <mutant id="mutant_792" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position &gt;= 0) &amp;&amp; ((iSuffix) != null)" to="(position &gt;= 0) || ((iSuffix) != null)" />
    <mutant id="mutant_793" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position &gt;= 0) &amp;&amp; ((iSuffix) != null)" to="true" />
    <mutant id="mutant_310" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length))" to="((parsePos &gt;= (text.length())) &amp;&amp; ((i + 1) &gt;= length))" />
    <mutant id="mutant_794" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position &gt;= 0) &amp;&amp; ((iSuffix) != null)" to="false" />
    <mutant id="mutant_311" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$MatchingParser.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="((parsePos &gt;= (text.length())) || ((i + 1) &gt;= length))" to="((i + 1) &gt;= length)" />
    <mutant id="mutant_795" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.getFieldValue(org.joda.time.ReadablePeriod)" from="(type != null) &amp;&amp; ((isSupported(type, iFieldType)) == false)" to="(type != null) || ((isSupported(type, iFieldType)) == false)" />
    <mutant id="mutant_1128" viable="true" in="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,java.lang.String,java.util.Locale)" from="((iEraText.equals(text)) == false) &amp;&amp; ((&quot;1&quot;.equals(text)) == false)" to="(iEraText.equals(text)) == false" />
    <mutant id="mutant_1129" viable="true" in="org.joda.time.chrono.BasicWeekyearDateTimeField.getDifferenceAsLong(long,long)" from="(subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)) &amp;&amp; ((iChronology.getWeeksInYear(minuendWeekyear)) &lt;= 52)" to="subtrahendRem &gt;= (BasicWeekyearDateTimeField.WEEK_53)" />
    <mutant id="mutant_790" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position &gt;= 0) &amp;&amp; ((iSuffix) != null)" to="position &gt;= 0" />
    <mutant id="mutant_1126" viable="true" in="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,java.lang.String,java.util.Locale)" from="((iEraText.equals(text)) == false) &amp;&amp; ((&quot;1&quot;.equals(text)) == false)" to="true" />
    <mutant id="mutant_791" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$FieldFormatter.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(position &gt;= 0) &amp;&amp; ((iSuffix) != null)" to="(iSuffix) != null" />
    <mutant id="mutant_1127" viable="true" in="org.joda.time.chrono.BasicSingleEraDateTimeField.set(long,java.lang.String,java.util.Locale)" from="((iEraText.equals(text)) == false) &amp;&amp; ((&quot;1&quot;.equals(text)) == false)" to="false" />
    <mutant id="mutant_9" viable="true" in="org.joda.time.base.AbstractInterval.contains(long)" from="(millisInstant &gt;= thisStart) &amp;&amp; (millisInstant &lt; thisEnd)" to="millisInstant &lt; thisEnd" />
    <mutant id="mutant_206" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="true" />
    <mutant id="mutant_8" viable="true" in="org.joda.time.base.AbstractInterval.contains(long)" from="(millisInstant &gt;= thisStart) &amp;&amp; (millisInstant &lt; thisEnd)" to="(millisInstant &gt;= thisStart) || (millisInstant &lt; thisEnd)" />
    <mutant id="mutant_207" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="false" />
    <mutant id="mutant_208" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="(c &gt;= 'A')" />
    <mutant id="mutant_209" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="((c &gt;= 'A') || (c &lt;= 'Z'))" />
    <mutant id="mutant_5" viable="true" in="org.joda.time.base.AbstractInterval.contains(long)" from="(millisInstant &gt;= thisStart) &amp;&amp; (millisInstant &lt; thisEnd)" to="true" />
    <mutant id="mutant_202" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\'')" to="false" />
    <mutant id="mutant_686" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="(sum &lt; stopAt) &amp;&amp; ((--i) &gt;= 0)" to="(sum &lt; stopAt) || ((--i) &gt;= 0)" />
    <mutant id="mutant_4" viable="true" in="org.joda.time.base.AbstractInstant.equals(java.lang.Object)" from="((getMillis()) == (otherInstant.getMillis())) &amp;&amp; (FieldUtils.equals(getChronology(), otherInstant.getChronology()))" to="FieldUtils.equals(getChronology(), otherInstant.getChronology())" />
    <mutant id="mutant_203" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\'')" to="((i + 1) &lt; length) || ((pattern.charAt((i + 1))) == '\'')" />
    <mutant id="mutant_687" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="(sum &lt; stopAt) &amp;&amp; ((--i) &gt;= 0)" to="sum &lt; stopAt" />
    <mutant id="mutant_7" viable="true" in="org.joda.time.base.AbstractInterval.contains(long)" from="(millisInstant &gt;= thisStart) &amp;&amp; (millisInstant &lt; thisEnd)" to="millisInstant &gt;= thisStart" />
    <mutant id="mutant_204" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\'')" to="(i + 1) &lt; length" />
    <mutant id="mutant_688" viable="false" in="org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="(sum &lt; stopAt) &amp;&amp; ((--i) &gt;= 0)" to="true" />
    <mutant id="mutant_6" viable="true" in="org.joda.time.base.AbstractInterval.contains(long)" from="(millisInstant &gt;= thisStart) &amp;&amp; (millisInstant &lt; thisEnd)" to="false" />
    <mutant id="mutant_205" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" to="(c &lt;= 'Z')" />
    <mutant id="mutant_689" viable="false" in="org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="(sum &lt; stopAt) &amp;&amp; ((--i) &gt;= 0)" to="false" />
    <mutant id="mutant_85" viable="true" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="value != 0" />
    <mutant id="mutant_84" viable="true" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="field == null" />
    <mutant id="mutant_87" viable="true" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="true" />
    <mutant id="mutant_86" viable="true" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="(value != 0) &amp;&amp; (field == null)" />
    <mutant id="mutant_89" viable="true" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="field == null" />
    <mutant id="mutant_88" viable="true" in="org.joda.time.base.BasePeriod.setFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="false" />
    <mutant id="mutant_90" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.equals(java.lang.Object)" from="((other.getPeriodType()) == (getPeriodType())) &amp;&amp; ((other.getValue(0)) == (getValue()))" to="((other.getPeriodType()) == (getPeriodType())) || ((other.getValue(0)) == (getValue()))" />
    <mutant id="mutant_92" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.equals(java.lang.Object)" from="((other.getPeriodType()) == (getPeriodType())) &amp;&amp; ((other.getValue(0)) == (getValue()))" to="true" />
    <mutant id="mutant_91" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.equals(java.lang.Object)" from="((other.getPeriodType()) == (getPeriodType())) &amp;&amp; ((other.getValue(0)) == (getValue()))" to="(other.getPeriodType()) == (getPeriodType())" />
    <mutant id="mutant_94" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.equals(java.lang.Object)" from="((other.getPeriodType()) == (getPeriodType())) &amp;&amp; ((other.getValue(0)) == (getValue()))" to="(other.getValue(0)) == (getValue())" />
    <mutant id="mutant_93" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.equals(java.lang.Object)" from="((other.getPeriodType()) == (getPeriodType())) &amp;&amp; ((other.getValue(0)) == (getValue()))" to="false" />
    <mutant id="mutant_1" viable="true" in="org.joda.time.base.AbstractInstant.equals(java.lang.Object)" from="((getMillis()) == (otherInstant.getMillis())) &amp;&amp; (FieldUtils.equals(getChronology(), otherInstant.getChronology()))" to="true" />
    <mutant id="mutant_682" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="true" />
    <mutant id="mutant_0" viable="true" in="org.joda.time.base.AbstractInstant.equals(java.lang.Object)" from="((getMillis()) == (otherInstant.getMillis())) &amp;&amp; (FieldUtils.equals(getChronology(), otherInstant.getChronology()))" to="(getMillis()) == (otherInstant.getMillis())" />
    <mutant id="mutant_683" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="false" />
    <mutant id="mutant_3" viable="true" in="org.joda.time.base.AbstractInstant.equals(java.lang.Object)" from="((getMillis()) == (otherInstant.getMillis())) &amp;&amp; (FieldUtils.equals(getChronology(), otherInstant.getChronology()))" to="((getMillis()) == (otherInstant.getMillis())) || (FieldUtils.equals(getChronology(), otherInstant.getChronology()))" />
    <mutant id="mutant_200" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\'')" to="(pattern.charAt((i + 1))) == '\''" />
    <mutant id="mutant_684" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(locale != null) &amp;&amp; (locale.equals(getLocale()))" />
    <mutant id="mutant_2" viable="true" in="org.joda.time.base.AbstractInstant.equals(java.lang.Object)" from="((getMillis()) == (otherInstant.getMillis())) &amp;&amp; (FieldUtils.equals(getChronology(), otherInstant.getChronology()))" to="false" />
    <mutant id="mutant_201" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((i + 1) &lt; length) &amp;&amp; ((pattern.charAt((i + 1))) == '\'')" to="true" />
    <mutant id="mutant_685" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.countFieldsToPrint(org.joda.time.ReadablePeriod,int,java.util.Locale)" from="(sum &lt; stopAt) &amp;&amp; ((--i) &gt;= 0)" to="(--i) &gt;= 0" />
    <mutant id="mutant_680" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(locale == (getLocale())) &amp;&amp; ((locale != null) &amp;&amp; (locale.equals(getLocale())))" />
    <mutant id="mutant_681" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="locale == (getLocale())" />
    <mutant id="mutant_217" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z'))" />
    <mutant id="mutant_218" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="true" />
    <mutant id="mutant_219" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="false" />
    <mutant id="mutant_213" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="((c &gt;= 'a') || (c &lt;= 'z'))" />
    <mutant id="mutant_697" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="(pos &gt;= 0) &amp;&amp; (matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position))" to="pos &gt;= 0" />
    <mutant id="mutant_214" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(c &gt;= 'a')" />
    <mutant id="mutant_698" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="(pos &gt;= 0) &amp;&amp; (matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position))" to="(pos &gt;= 0) || (matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position))" />
    <mutant id="mutant_215" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" />
    <mutant id="mutant_699" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="(pos &gt;= 0) &amp;&amp; (matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position))" to="matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position)" />
    <mutant id="mutant_216" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="(((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) &amp;&amp; ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" />
    <mutant id="mutant_74" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal))" to="(end instanceof org.joda.time.base.BaseLocal)" />
    <mutant id="mutant_73" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal))" to="(start instanceof org.joda.time.base.BaseLocal)" />
    <mutant id="mutant_76" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)) &amp;&amp; ((start.getClass()) == (end.getClass()))" to="true" />
    <mutant id="mutant_75" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)) &amp;&amp; ((start.getClass()) == (end.getClass()))" to="(start.getClass()) == (end.getClass())" />
    <mutant id="mutant_78" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)) &amp;&amp; ((start.getClass()) == (end.getClass()))" to="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)) || ((start.getClass()) == (end.getClass()))" />
    <mutant id="mutant_77" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)) &amp;&amp; ((start.getClass()) == (end.getClass()))" to="false" />
    <mutant id="mutant_79" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)) &amp;&amp; ((start.getClass()) == (end.getClass()))" to="(start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal)" />
    <mutant id="mutant_81" viable="true" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="(value != 0) &amp;&amp; (field == null)" />
    <mutant id="mutant_80" viable="true" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="value != 0" />
    <mutant id="mutant_83" viable="true" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="false" />
    <mutant id="mutant_82" viable="true" in="org.joda.time.base.BasePeriod.addFieldInto(int[],org.joda.time.DurationFieldType,int)" from="(value != 0) || (field == null)" to="true" />
    <mutant id="mutant_693" viable="false" in="org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="false" />
    <mutant id="mutant_210" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="(c &lt;= 'z')" />
    <mutant id="mutant_694" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="(i &lt; len) || (position &gt;= 0)" />
    <mutant id="mutant_211" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="true" />
    <mutant id="mutant_695" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="(pos &gt;= 0) &amp;&amp; (matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position))" to="true" />
    <mutant id="mutant_212" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" to="false" />
    <mutant id="mutant_696" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$CompositeAffix.parse(java.lang.String,int)" from="(pos &gt;= 0) &amp;&amp; (matchesOtherAffix(((parse(periodStr, pos)) - pos), periodStr, position))" to="false" />
    <mutant id="mutant_690" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="position &gt;= 0" />
    <mutant id="mutant_691" viable="true" in="org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="i &lt; len" />
    <mutant id="mutant_692" viable="false" in="org.joda.time.format.PeriodFormatterBuilder$Composite.parseInto(org.joda.time.ReadWritablePeriod,java.lang.String,int,java.util.Locale)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="true" />
    <mutant id="mutant_228" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)" from="(pattern == null) || ((pattern.length()) == 0)" to="false" />
    <mutant id="mutant_229" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)" from="(pattern == null) || ((pattern.length()) == 0)" to="pattern == null" />
    <mutant id="mutant_224" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="!inLiteral" />
    <mutant id="mutant_225" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)" from="(pattern == null) || ((pattern.length()) == 0)" to="(pattern.length()) == 0" />
    <mutant id="mutant_226" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)" from="(pattern == null) || ((pattern.length()) == 0)" to="(pattern == null) &amp;&amp; ((pattern.length()) == 0)" />
    <mutant id="mutant_227" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForPattern(java.lang.String)" from="(pattern == null) || ((pattern.length()) == 0)" to="true" />
    <mutant id="mutant_220" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="(!inLiteral) || (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" />
    <mutant id="mutant_221" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z'))" />
    <mutant id="mutant_222" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="true" />
    <mutant id="mutant_223" viable="true" in="org.joda.time.format.DateTimeFormat.parseToken(java.lang.String,int[])" from="(!inLiteral) &amp;&amp; (((c &gt;= 'A') &amp;&amp; (c &lt;= 'Z')) || ((c &gt;= 'a') &amp;&amp; (c &lt;= 'z')))" to="false" />
    <mutant id="mutant_239" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(dateStyle == (DateTimeFormat.NONE)) &amp;&amp; (timeStyle == (DateTimeFormat.NONE))" to="(dateStyle == (DateTimeFormat.NONE)) || (timeStyle == (DateTimeFormat.NONE))" />
    <mutant id="mutant_235" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(dateStyle == (DateTimeFormat.NONE)) &amp;&amp; (timeStyle == (DateTimeFormat.NONE))" to="dateStyle == (DateTimeFormat.NONE)" />
    <mutant id="mutant_236" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(dateStyle == (DateTimeFormat.NONE)) &amp;&amp; (timeStyle == (DateTimeFormat.NONE))" to="true" />
    <mutant id="mutant_237" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(dateStyle == (DateTimeFormat.NONE)) &amp;&amp; (timeStyle == (DateTimeFormat.NONE))" to="false" />
    <mutant id="mutant_238" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(dateStyle == (DateTimeFormat.NONE)) &amp;&amp; (timeStyle == (DateTimeFormat.NONE))" to="timeStyle == (DateTimeFormat.NONE)" />
    <mutant id="mutant_96" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)" from="(start == null) || (end == null)" to="start == null" />
    <mutant id="mutant_95" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)" from="(start == null) || (end == null)" to="(start == null) &amp;&amp; (end == null)" />
    <mutant id="mutant_98" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)" from="(start == null) || (end == null)" to="false" />
    <mutant id="mutant_97" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)" from="(start == null) || (end == null)" to="true" />
    <mutant id="mutant_99" viable="true" in="org.joda.time.base.BaseSingleFieldPeriod.between(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.DurationFieldType)" from="(start == null) || (end == null)" to="end == null" />
    <mutant id="mutant_231" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(style == null) || ((style.length()) != 2)" to="(style == null) &amp;&amp; ((style.length()) != 2)" />
    <mutant id="mutant_232" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(style == null) || ((style.length()) != 2)" to="true" />
    <mutant id="mutant_233" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(style == null) || ((style.length()) != 2)" to="false" />
    <mutant id="mutant_234" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(style == null) || ((style.length()) != 2)" to="(style.length()) != 2" />
    <mutant id="mutant_230" viable="true" in="org.joda.time.format.DateTimeFormat.createFormatterForStyle(java.lang.String)" from="(style == null) || ((style.length()) != 2)" to="style == null" />
    <mutant id="mutant_246" viable="true" in="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="true" />
    <mutant id="mutant_247" viable="true" in="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="false" />
    <mutant id="mutant_248" viable="true" in="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="(iOffsetParsed) || ((bucket.getOffsetInteger()) != null)" />
    <mutant id="mutant_249" viable="true" in="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="(bucket.getOffsetInteger()) != null" />
    <mutant id="mutant_242" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="false" />
    <mutant id="mutant_243" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="(iOffsetParsed) || ((bucket.getOffsetInteger()) != null)" />
    <mutant id="mutant_244" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="(bucket.getOffsetInteger()) != null" />
    <mutant id="mutant_245" viable="true" in="org.joda.time.format.DateTimeFormatter.parseDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="iOffsetParsed" />
    <mutant id="mutant_240" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="iOffsetParsed" />
    <mutant id="mutant_241" viable="true" in="org.joda.time.format.DateTimeFormatter.parseInto(org.joda.time.ReadWritableInstant,java.lang.String,int)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="true" />
    <mutant id="mutant_257" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="true" />
    <mutant id="mutant_258" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="false" />
    <mutant id="mutant_259" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="((locale != null) || (locale.equals(getLocale())))" />
    <mutant id="mutant_253" viable="true" in="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="(iOffsetParsed) || ((bucket.getOffsetInteger()) != null)" />
    <mutant id="mutant_254" viable="true" in="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="(bucket.getOffsetInteger()) != null" />
    <mutant id="mutant_255" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(locale != null)" />
    <mutant id="mutant_256" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(locale.equals(getLocale()))" />
    <mutant id="mutant_250" viable="true" in="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="iOffsetParsed" />
    <mutant id="mutant_251" viable="true" in="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="true" />
    <mutant id="mutant_252" viable="true" in="org.joda.time.format.DateTimeFormatter.parseMutableDateTime(java.lang.String)" from="(iOffsetParsed) &amp;&amp; ((bucket.getOffsetInteger()) != null)" to="false" />
    <mutant id="mutant_268" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="(((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="false" />
    <mutant id="mutant_269" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="(((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="(((iPivotYear) != null) || (iPivotYear.equals(pivotYear)))" />
    <mutant id="mutant_264" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(locale != null) &amp;&amp; (locale.equals(getLocale()))" />
    <mutant id="mutant_265" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="(((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="((iPivotYear) != null)" />
    <mutant id="mutant_266" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="(((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="(iPivotYear.equals(pivotYear))" />
    <mutant id="mutant_267" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="(((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="true" />
    <mutant id="mutant_260" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(locale == (getLocale())) &amp;&amp; ((locale != null) &amp;&amp; (locale.equals(getLocale())))" />
    <mutant id="mutant_261" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="locale == (getLocale())" />
    <mutant id="mutant_262" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="true" />
    <mutant id="mutant_263" viable="true" in="org.joda.time.format.DateTimeFormatter.withLocale(java.util.Locale)" from="(locale == (getLocale())) || ((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="false" />
    <mutant id="mutant_279" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="((instant ^ adjustedInstant) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="((instant ^ adjustedInstant) &lt; 0) || ((instant ^ offset) &gt;= 0)" />
    <mutant id="mutant_270" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="((iPivotYear) == pivotYear) || (((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="(iPivotYear) == pivotYear" />
    <mutant id="mutant_275" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="((instant ^ adjustedInstant) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="(instant ^ adjustedInstant) &lt; 0" />
    <mutant id="mutant_276" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="((instant ^ adjustedInstant) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="true" />
    <mutant id="mutant_277" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="((instant ^ adjustedInstant) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="false" />
    <mutant id="mutant_278" viable="true" in="org.joda.time.format.DateTimeFormatter.printTo(java.lang.Appendable,long,org.joda.time.Chronology)" from="((instant ^ adjustedInstant) &lt; 0) &amp;&amp; ((instant ^ offset) &gt;= 0)" to="(instant ^ offset) &gt;= 0" />
    <mutant id="mutant_271" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="((iPivotYear) == pivotYear) || (((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="((iPivotYear) == pivotYear) &amp;&amp; (((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" />
    <mutant id="mutant_272" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="((iPivotYear) == pivotYear) || (((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="true" />
    <mutant id="mutant_273" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="((iPivotYear) == pivotYear) || (((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="false" />
    <mutant id="mutant_274" viable="true" in="org.joda.time.format.DateTimeFormatter.withPivotYear(java.lang.Integer)" from="((iPivotYear) == pivotYear) || (((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear)))" to="((iPivotYear) != null) &amp;&amp; (iPivotYear.equals(pivotYear))" />
    <mutant id="mutant_280" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(printerList.contains(null)) || (printerList.isEmpty())" to="printerList.contains(null)" />
    <mutant id="mutant_281" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(printerList.contains(null)) || (printerList.isEmpty())" to="true" />
    <mutant id="mutant_286" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(parserList.contains(null)) || (parserList.isEmpty())" to="true" />
    <mutant id="mutant_287" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(parserList.contains(null)) || (parserList.isEmpty())" to="false" />
    <mutant id="mutant_288" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(parserList.contains(null)) || (parserList.isEmpty())" to="parserList.isEmpty()" />
    <mutant id="mutant_289" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(parserList.contains(null)) || (parserList.isEmpty())" to="(parserList.contains(null)) &amp;&amp; (parserList.isEmpty())" />
    <mutant id="mutant_282" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(printerList.contains(null)) || (printerList.isEmpty())" to="false" />
    <mutant id="mutant_283" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(printerList.contains(null)) || (printerList.isEmpty())" to="printerList.isEmpty()" />
    <mutant id="mutant_284" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(printerList.contains(null)) || (printerList.isEmpty())" to="(printerList.contains(null)) &amp;&amp; (printerList.isEmpty())" />
    <mutant id="mutant_285" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite(java.util.List)" from="(parserList.contains(null)) || (parserList.isEmpty())" to="parserList.contains(null)" />
    <mutant id="mutant_290" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="position &gt;= 0" />
    <mutant id="mutant_291" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="i &lt; len" />
    <mutant id="mutant_292" viable="false" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="true" />
    <mutant id="mutant_297" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="false" />
    <mutant id="mutant_298" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="c == '-'" />
    <mutant id="mutant_299" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="c == '+'" />
    <mutant id="mutant_293" viable="false" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="false" />
    <mutant id="mutant_294" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$Composite.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(i &lt; len) &amp;&amp; (position &gt;= 0)" to="(i &lt; len) || (position &gt;= 0)" />
    <mutant id="mutant_295" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="(c == '-') &amp;&amp; (c == '+')" />
    <mutant id="mutant_296" viable="true" in="org.joda.time.format.DateTimeFormatterBuilder$FixedNumber.parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.CharSequence,int)" from="(c == '-') || (c == '+')" to="true" />
    <mutant id="mutant_27" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="true" />
    <mutant id="mutant_26" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))) || (FieldUtils.equals(getChronology(), other.getChronology()))" />
    <mutant id="mutant_29" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="FieldUtils.equals(getChronology(), other.getChronology())" />
    <mutant id="mutant_28" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="false" />
    <mutant id="mutant_21" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis())))" to="(((getStartMillis()) == (other.getStartMillis())) || ((getEndMillis()) == (other.getEndMillis())))" />
    <mutant id="mutant_20" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis())))" to="((getEndMillis()) == (other.getEndMillis()))" />
    <mutant id="mutant_23" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis())))" to="false" />
    <mutant id="mutant_22" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis())))" to="true" />
    <mutant id="mutant_25" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))) &amp;&amp; (FieldUtils.equals(getChronology(), other.getChronology()))" to="((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))" />
    <mutant id="mutant_24" viable="true" in="org.joda.time.base.AbstractInterval.equals(java.lang.Object)" from="(((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis())))" to="((getStartMillis()) == (other.getStartMillis()))" />
    <mutant id="mutant_16" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)) &amp;&amp; (otherEnd &lt;= thisEnd)" to="true" />
    <mutant id="mutant_15" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)) &amp;&amp; (otherEnd &lt;= thisEnd)" to="otherEnd &lt;= thisEnd" />
    <mutant id="mutant_18" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)) &amp;&amp; (otherEnd &lt;= thisEnd)" to="(thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)" />
    <mutant id="mutant_17" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)) &amp;&amp; (otherEnd &lt;= thisEnd)" to="false" />
    <mutant id="mutant_19" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)) &amp;&amp; (otherEnd &lt;= thisEnd)" to="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd)) || (otherEnd &lt;= thisEnd)" />
    <mutant id="mutant_10" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd))" to="(otherStart &lt; thisEnd)" />
    <mutant id="mutant_12" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd))" to="((thisStart &lt;= otherStart) || (otherStart &lt; thisEnd))" />
    <mutant id="mutant_11" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd))" to="(thisStart &lt;= otherStart)" />
    <mutant id="mutant_14" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd))" to="false" />
    <mutant id="mutant_13" viable="true" in="org.joda.time.base.AbstractInterval.contains(org.joda.time.ReadableInterval)" from="((thisStart &lt;= otherStart) &amp;&amp; (otherStart &lt; thisEnd))" to="true" />
    <mutant id="mutant_49" viable="true" in="org.joda.time.base.AbstractPartial.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="false" />
    <mutant id="mutant_48" viable="true" in="org.joda.time.base.AbstractPartial.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="true" />
    <mutant id="mutant_1838" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="(((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))" />
    <mutant id="mutant_1839" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="true" />
    <mutant id="mutant_41" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; otherEnd) &amp;&amp; (otherStart &lt; thisEnd)" to="true" />
    <mutant id="mutant_40" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; otherEnd) &amp;&amp; (otherStart &lt; thisEnd)" to="otherStart &lt; thisEnd" />
    <mutant id="mutant_43" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; otherEnd) &amp;&amp; (otherStart &lt; thisEnd)" to="(thisStart &lt; otherEnd) || (otherStart &lt; thisEnd)" />
    <mutant id="mutant_42" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; otherEnd) &amp;&amp; (otherStart &lt; thisEnd)" to="false" />
    <mutant id="mutant_45" viable="true" in="org.joda.time.base.AbstractPartial.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="(getValue(i)) != (other.getValue(i))" />
    <mutant id="mutant_44" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; otherEnd) &amp;&amp; (otherStart &lt; thisEnd)" to="thisStart &lt; otherEnd" />
    <mutant id="mutant_47" viable="true" in="org.joda.time.base.AbstractPartial.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="(getFieldType(i)) != (other.getFieldType(i))" />
    <mutant id="mutant_46" viable="true" in="org.joda.time.base.AbstractPartial.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="((getValue(i)) != (other.getValue(i))) &amp;&amp; ((getFieldType(i)) != (other.getFieldType(i)))" />
    <mutant id="mutant_50" viable="true" in="org.joda.time.base.AbstractPeriod.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="(getValue(i)) != (other.getValue(i))" />
    <mutant id="mutant_1836" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))" to="(iUpperLimit.equals(other.getUpperLimit()))" />
    <mutant id="mutant_1837" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))" to="(((iUpperLimit) != null) || (iUpperLimit.equals(other.getUpperLimit())))" />
    <mutant id="mutant_1834" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))" to="true" />
    <mutant id="mutant_1835" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))" to="false" />
    <mutant id="mutant_1832" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit()))))" to="(((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))" />
    <mutant id="mutant_1833" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))" to="((iUpperLimit) != null)" />
    <mutant id="mutant_1830" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit()))))" to="false" />
    <mutant id="mutant_1831" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit()))))" to="((iLowerLimit) == (other.getLowerLimit()))" />
    <mutant id="mutant_38" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; now) &amp;&amp; (now &lt; thisEnd)" to="true" />
    <mutant id="mutant_37" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; now) &amp;&amp; (now &lt; thisEnd)" to="(thisStart &lt; now) || (now &lt; thisEnd)" />
    <mutant id="mutant_39" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; now) &amp;&amp; (now &lt; thisEnd)" to="false" />
    <mutant id="mutant_1829" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit()))))" to="true" />
    <mutant id="mutant_1827" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))" to="((iLowerLimit) != null)" />
    <mutant id="mutant_1828" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit()))))" to="(((iLowerLimit) == (other.getLowerLimit())) &amp;&amp; (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit()))))" />
    <mutant id="mutant_30" viable="true" in="org.joda.time.base.AbstractInterval.isEqual(org.joda.time.ReadableInterval)" from="((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))" to="(getEndMillis()) == (other.getEndMillis())" />
    <mutant id="mutant_32" viable="true" in="org.joda.time.base.AbstractInterval.isEqual(org.joda.time.ReadableInterval)" from="((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))" to="true" />
    <mutant id="mutant_31" viable="true" in="org.joda.time.base.AbstractInterval.isEqual(org.joda.time.ReadableInterval)" from="((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))" to="((getStartMillis()) == (other.getStartMillis())) || ((getEndMillis()) == (other.getEndMillis()))" />
    <mutant id="mutant_34" viable="true" in="org.joda.time.base.AbstractInterval.isEqual(org.joda.time.ReadableInterval)" from="((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))" to="(getStartMillis()) == (other.getStartMillis())" />
    <mutant id="mutant_33" viable="true" in="org.joda.time.base.AbstractInterval.isEqual(org.joda.time.ReadableInterval)" from="((getStartMillis()) == (other.getStartMillis())) &amp;&amp; ((getEndMillis()) == (other.getEndMillis()))" to="false" />
    <mutant id="mutant_36" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; now) &amp;&amp; (now &lt; thisEnd)" to="now &lt; thisEnd" />
    <mutant id="mutant_35" viable="true" in="org.joda.time.base.AbstractInterval.overlaps(org.joda.time.ReadableInterval)" from="(thisStart &lt; now) &amp;&amp; (now &lt; thisEnd)" to="thisStart &lt; now" />
    <mutant id="mutant_1825" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))" to="false" />
    <mutant id="mutant_1826" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))" to="(iLowerLimit.equals(other.getLowerLimit()))" />
    <mutant id="mutant_1823" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))" to="(((iLowerLimit) != null) || (iLowerLimit.equals(other.getLowerLimit())))" />
    <mutant id="mutant_1824" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))" to="true" />
    <mutant id="mutant_1821" viable="true" in="org.joda.time.DateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1822" viable="true" in="org.joda.time.DateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_1820" viable="true" in="org.joda.time.DateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1818" viable="true" in="org.joda.time.DateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1819" viable="true" in="org.joda.time.DateTime.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1816" viable="true" in="org.joda.time.DateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="durationToAdd == null" />
    <mutant id="mutant_1817" viable="true" in="org.joda.time.DateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="(durationToAdd == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_63" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" from="(startInstant == null) &amp;&amp; (endInstant == null)" to="endInstant == null" />
    <mutant id="mutant_62" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" from="(startInstant == null) &amp;&amp; (endInstant == null)" to="false" />
    <mutant id="mutant_65" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="(start == null) || (end == null)" to="start == null" />
    <mutant id="mutant_64" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" from="(startInstant == null) &amp;&amp; (endInstant == null)" to="startInstant == null" />
    <mutant id="mutant_67" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="(start == null) || (end == null)" to="false" />
    <mutant id="mutant_66" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="(start == null) || (end == null)" to="true" />
    <mutant id="mutant_69" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="(start == null) || (end == null)" to="(start == null) &amp;&amp; (end == null)" />
    <mutant id="mutant_68" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="(start == null) || (end == null)" to="end == null" />
    <mutant id="mutant_70" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal))" to="((start instanceof org.joda.time.base.BaseLocal) || (end instanceof org.joda.time.base.BaseLocal))" />
    <mutant id="mutant_72" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal))" to="false" />
    <mutant id="mutant_71" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadablePartial,org.joda.time.ReadablePartial,org.joda.time.PeriodType)" from="((start instanceof org.joda.time.base.BaseLocal) &amp;&amp; (end instanceof org.joda.time.base.BaseLocal))" to="true" />
    <mutant id="mutant_1814" viable="true" in="org.joda.time.DateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1815" viable="true" in="org.joda.time.DateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1812" viable="true" in="org.joda.time.DateTime.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="durationToAdd == 0" />
    <mutant id="mutant_1813" viable="true" in="org.joda.time.DateTime.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1810" viable="true" in="org.joda.time.DateTime.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="true" />
    <mutant id="mutant_1811" viable="true" in="org.joda.time.DateTime.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="false" />
    <mutant id="mutant_59" viable="true" in="org.joda.time.base.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="end == null" />
    <mutant id="mutant_1809" viable="true" in="org.joda.time.DateTime.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1807" viable="true" in="org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="period == null" />
    <mutant id="mutant_1808" viable="true" in="org.joda.time.DateTime.withDurationAdded(long,int)" from="(durationToAdd == 0) || (scalar == 0)" to="(durationToAdd == 0) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1805" viable="true" in="org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="true" />
    <mutant id="mutant_1806" viable="true" in="org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_52" viable="true" in="org.joda.time.base.AbstractPeriod.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="(getFieldType(i)) != (other.getFieldType(i))" />
    <mutant id="mutant_51" viable="true" in="org.joda.time.base.AbstractPeriod.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="((getValue(i)) != (other.getValue(i))) &amp;&amp; ((getFieldType(i)) != (other.getFieldType(i)))" />
    <mutant id="mutant_54" viable="true" in="org.joda.time.base.AbstractPeriod.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="false" />
    <mutant id="mutant_53" viable="true" in="org.joda.time.base.AbstractPeriod.equals(java.lang.Object)" from="((getValue(i)) != (other.getValue(i))) || ((getFieldType(i)) != (other.getFieldType(i)))" to="true" />
    <mutant id="mutant_56" viable="true" in="org.joda.time.base.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="true" />
    <mutant id="mutant_55" viable="true" in="org.joda.time.base.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="start == null" />
    <mutant id="mutant_58" viable="true" in="org.joda.time.base.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="(start == null) || (end == null)" />
    <mutant id="mutant_57" viable="true" in="org.joda.time.base.BaseInterval(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant)" from="(start == null) &amp;&amp; (end == null)" to="false" />
    <mutant id="mutant_61" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" from="(startInstant == null) &amp;&amp; (endInstant == null)" to="true" />
    <mutant id="mutant_60" viable="true" in="org.joda.time.base.BasePeriod(org.joda.time.ReadableInstant,org.joda.time.ReadableInstant,org.joda.time.PeriodType)" from="(startInstant == null) &amp;&amp; (endInstant == null)" to="(startInstant == null) || (endInstant == null)" />
    <mutant id="mutant_1803" viable="true" in="org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="scalar == 0" />
    <mutant id="mutant_1804" viable="true" in="org.joda.time.DateMidnight.withPeriodAdded(org.joda.time.ReadablePeriod,int)" from="(period == null) || (scalar == 0)" to="(period == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1801" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="durationToAdd == null" />
    <mutant id="mutant_1802" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="(durationToAdd == null) &amp;&amp; (scalar == 0)" />
    <mutant id="mutant_1800" viable="true" in="org.joda.time.DateMidnight.withDurationAdded(org.joda.time.ReadableDuration,int)" from="(durationToAdd == null) || (scalar == 0)" to="false" />
    <mutant id="mutant_1872" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(instant &lt; overlapStart) || (instant &gt;= overlapEnd)" to="instant &lt; overlapStart" />
    <mutant id="mutant_1873" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="strict || (offsetLocal &lt; 0)" to="strict &amp;&amp; (offsetLocal &lt; 0)" />
    <mutant id="mutant_1870" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(instant &lt; overlapStart) || (instant &gt;= overlapEnd)" to="true" />
    <mutant id="mutant_1871" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(instant &lt; overlapStart) || (instant &gt;= overlapEnd)" to="false" />
    <mutant id="mutant_1878" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="((instantLocal ^ instantUTC) &lt; 0) &amp;&amp; ((instantLocal ^ offset) &lt; 0)" to="(instantLocal ^ offset) &lt; 0" />
    <mutant id="mutant_1879" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="((instantLocal ^ instantUTC) &lt; 0) &amp;&amp; ((instantLocal ^ offset) &lt; 0)" to="(instantLocal ^ instantUTC) &lt; 0" />
    <mutant id="mutant_1876" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="strict || (offsetLocal &lt; 0)" to="strict" />
    <mutant id="mutant_1877" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="strict || (offsetLocal &lt; 0)" to="offsetLocal &lt; 0" />
    <mutant id="mutant_1874" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="strict || (offsetLocal &lt; 0)" to="true" />
    <mutant id="mutant_1875" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="strict || (offsetLocal &lt; 0)" to="false" />
    <mutant id="mutant_1861" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == (DateTimeFieldType.dayOfYear()))" to="false" />
    <mutant id="mutant_1862" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == (DateTimeFieldType.dayOfYear()))" to="lowerLimit == null" />
    <mutant id="mutant_1860" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == (DateTimeFieldType.dayOfYear()))" to="true" />
    <mutant id="mutant_1869" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(instant &lt; overlapStart) || (instant &gt;= overlapEnd)" to="instant &gt;= overlapEnd" />
    <mutant id="mutant_1867" viable="true" in="org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial)" from="((loopField.getRangeDurationField()) == null) || ((loopField.getRangeDurationField().getType()) != lastType)" to="((loopField.getRangeDurationField()) == null) &amp;&amp; ((loopField.getRangeDurationField().getType()) != lastType)" />
    <mutant id="mutant_1868" viable="true" in="org.joda.time.DateTimeZone.adjustOffset(long,boolean)" from="(instant &lt; overlapStart) || (instant &gt;= overlapEnd)" to="(instant &lt; overlapStart) &amp;&amp; (instant &gt;= overlapEnd)" />
    <mutant id="mutant_1865" viable="true" in="org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial)" from="((loopField.getRangeDurationField()) == null) || ((loopField.getRangeDurationField().getType()) != lastType)" to="false" />
    <mutant id="mutant_1866" viable="true" in="org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial)" from="((loopField.getRangeDurationField()) == null) || ((loopField.getRangeDurationField().getType()) != lastType)" to="(loopField.getRangeDurationField().getType()) != lastType" />
    <mutant id="mutant_1863" viable="true" in="org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial)" from="((loopField.getRangeDurationField()) == null) || ((loopField.getRangeDurationField().getType()) != lastType)" to="(loopField.getRangeDurationField()) == null" />
    <mutant id="mutant_1864" viable="true" in="org.joda.time.DateTimeUtils.isContiguous(org.joda.time.ReadablePartial)" from="((loopField.getRangeDurationField()) == null) || ((loopField.getRangeDurationField().getType()) != lastType)" to="true" />
    <mutant id="mutant_1850" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == null)" to="true" />
    <mutant id="mutant_1851" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == null)" to="false" />
    <mutant id="mutant_1858" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == (DateTimeFieldType.dayOfYear()))" to="(lowerLimit == null) || (upperLimit == (DateTimeFieldType.dayOfYear()))" />
    <mutant id="mutant_1859" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == (DateTimeFieldType.dayOfYear()))" to="upperLimit == (DateTimeFieldType.dayOfYear())" />
    <mutant id="mutant_1856" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == (DateTimeFieldType.dayOfYear())) &amp;&amp; (upperLimit == null)" to="false" />
    <mutant id="mutant_1857" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == (DateTimeFieldType.dayOfYear())) &amp;&amp; (upperLimit == null)" to="lowerLimit == (DateTimeFieldType.dayOfYear())" />
    <mutant id="mutant_1854" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == (DateTimeFieldType.dayOfYear())) &amp;&amp; (upperLimit == null)" to="(lowerLimit == (DateTimeFieldType.dayOfYear())) || (upperLimit == null)" />
    <mutant id="mutant_1855" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == (DateTimeFieldType.dayOfYear())) &amp;&amp; (upperLimit == null)" to="true" />
    <mutant id="mutant_1852" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == null)" to="lowerLimit == null" />
    <mutant id="mutant_1853" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == (DateTimeFieldType.dayOfYear())) &amp;&amp; (upperLimit == null)" to="upperLimit == null" />
    <mutant id="mutant_1849" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == null)" to="(lowerLimit == null) || (upperLimit == null)" />
    <mutant id="mutant_1840" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="false" />
    <mutant id="mutant_1847" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))) &amp;&amp; (((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit())))" />
    <mutant id="mutant_1848" viable="true" in="org.joda.time.DateTimeComparator.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DateTimeFieldType)" from="(lowerLimit == null) &amp;&amp; (upperLimit == null)" to="upperLimit == null" />
    <mutant id="mutant_1845" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))) &amp;&amp; (((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="true" />
    <mutant id="mutant_1846" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))) &amp;&amp; (((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="false" />
    <mutant id="mutant_1843" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))) &amp;&amp; (((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))" />
    <mutant id="mutant_1844" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))) &amp;&amp; (((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="(((iLowerLimit) == (other.getLowerLimit())) || (((iLowerLimit) != null) &amp;&amp; (iLowerLimit.equals(other.getLowerLimit())))) || (((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" />
    <mutant id="mutant_1841" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="(((iUpperLimit) == (other.getUpperLimit())) &amp;&amp; (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" />
    <mutant id="mutant_1842" viable="true" in="org.joda.time.DateTimeComparator.equals(java.lang.Object)" from="(((iUpperLimit) == (other.getUpperLimit())) || (((iUpperLimit) != null) &amp;&amp; (iUpperLimit.equals(other.getUpperLimit()))))" to="((iUpperLimit) == (other.getUpperLimit()))" />
    <mutant id="mutant_1432" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="false" />
    <mutant id="mutant_1433" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="(getID().equals(other.getID()))" />
    <mutant id="mutant_1430" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="((iStandardOffset) == (other.iStandardOffset))" />
    <mutant id="mutant_1431" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="true" />
    <mutant id="mutant_1438" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence)))" to="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" />
    <mutant id="mutant_1439" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))) &amp;&amp; (iEndRecurrence.equals(other.iEndRecurrence))" to="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))" />
    <mutant id="mutant_1436" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence)))" to="false" />
    <mutant id="mutant_1437" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence)))" to="(iStartRecurrence.equals(other.iStartRecurrence))" />
    <mutant id="mutant_1434" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence)))" to="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) || (iStartRecurrence.equals(other.iStartRecurrence)))" />
    <mutant id="mutant_1435" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence)))" to="true" />
    <mutant id="mutant_1421" viable="true" in="org.joda.time.tz.CachedDateTimeZone.createInfo(long)" from="(next == periodStart) || (next &gt; end)" to="false" />
    <mutant id="mutant_1422" viable="true" in="org.joda.time.tz.CachedDateTimeZone.createInfo(long)" from="(next == periodStart) || (next &gt; end)" to="next &gt; end" />
    <mutant id="mutant_1420" viable="true" in="org.joda.time.tz.CachedDateTimeZone.createInfo(long)" from="(next == periodStart) || (next &gt; end)" to="true" />
    <mutant id="mutant_1429" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset)))" to="((getID().equals(other.getID())) || ((iStandardOffset) == (other.iStandardOffset)))" />
    <mutant id="mutant_1427" viable="true" in="org.joda.time.tz.CachedDateTimeZone.getInfo(long)" from="(info == null) || (((int)(((info.iPeriodStart) &gt;&gt; 32))) != period)" to="true" />
    <mutant id="mutant_1428" viable="true" in="org.joda.time.tz.CachedDateTimeZone.getInfo(long)" from="(info == null) || (((int)(((info.iPeriodStart) &gt;&gt; 32))) != period)" to="false" />
    <mutant id="mutant_1425" viable="true" in="org.joda.time.tz.CachedDateTimeZone.getInfo(long)" from="(info == null) || (((int)(((info.iPeriodStart) &gt;&gt; 32))) != period)" to="((int)(((info.iPeriodStart) &gt;&gt; 32))) != period" />
    <mutant id="mutant_1426" viable="true" in="org.joda.time.tz.CachedDateTimeZone.getInfo(long)" from="(info == null) || (((int)(((info.iPeriodStart) &gt;&gt; 32))) != period)" to="(info == null) &amp;&amp; (((int)(((info.iPeriodStart) &gt;&gt; 32))) != period)" />
    <mutant id="mutant_1423" viable="true" in="org.joda.time.tz.CachedDateTimeZone.createInfo(long)" from="(next == periodStart) || (next &gt; end)" to="(next == periodStart) &amp;&amp; (next &gt; end)" />
    <mutant id="mutant_1424" viable="true" in="org.joda.time.tz.CachedDateTimeZone.getInfo(long)" from="(info == null) || (((int)(((info.iPeriodStart) &gt;&gt; 32))) != period)" to="info == null" />
    <mutant id="mutant_1410" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="((iNextInfo) == null) &amp;&amp; (millis &lt; (iNextInfo.iPeriodStart))" />
    <mutant id="mutant_1894" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset == 0) &amp;&amp; (minutesOffset == 0)" to="(hoursOffset == 0) || (minutesOffset == 0)" />
    <mutant id="mutant_1411" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="true" />
    <mutant id="mutant_1895" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset == 0) &amp;&amp; (minutesOffset == 0)" to="true" />
    <mutant id="mutant_1892" viable="true" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))" to="false" />
    <mutant id="mutant_1893" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset == 0) &amp;&amp; (minutesOffset == 0)" to="minutesOffset == 0" />
    <mutant id="mutant_1890" viable="true" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))" to="(id.startsWith(&quot;+&quot;)) &amp;&amp; (id.startsWith(&quot;-&quot;))" />
    <mutant id="mutant_1891" viable="true" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))" to="true" />
    <mutant id="mutant_1418" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="(iNextInfo) == null" />
    <mutant id="mutant_1419" viable="true" in="org.joda.time.tz.CachedDateTimeZone.createInfo(long)" from="(next == periodStart) || (next &gt; end)" to="next == periodStart" />
    <mutant id="mutant_1416" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="true" />
    <mutant id="mutant_1417" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="false" />
    <mutant id="mutant_1414" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="millis &lt; (iNextInfo.iPeriodStart)" />
    <mutant id="mutant_1898" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &lt; (-23)) || (hoursOffset &gt; 23)" to="(hoursOffset &lt; (-23)) &amp;&amp; (hoursOffset &gt; 23)" />
    <mutant id="mutant_1415" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getNameKey(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="((iNextInfo) == null) &amp;&amp; (millis &lt; (iNextInfo.iPeriodStart))" />
    <mutant id="mutant_1899" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset &lt; (-23)) || (hoursOffset &gt; 23)" to="hoursOffset &lt; (-23)" />
    <mutant id="mutant_1412" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="false" />
    <mutant id="mutant_1896" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset == 0) &amp;&amp; (minutesOffset == 0)" to="false" />
    <mutant id="mutant_1413" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="(iNextInfo) == null" />
    <mutant id="mutant_1897" viable="true" in="org.joda.time.DateTimeZone.forOffsetHoursMinutes(int,int)" from="(hoursOffset == 0) &amp;&amp; (minutesOffset == 0)" to="hoursOffset == 0" />
    <mutant id="mutant_1409" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getStandardOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="millis &lt; (iNextInfo.iPeriodStart)" />
    <mutant id="mutant_1883" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="((instantUTC ^ instantLocal) &lt; 0) &amp;&amp; ((instantUTC ^ offset) &gt;= 0)" to="((instantUTC ^ instantLocal) &lt; 0) || ((instantUTC ^ offset) &gt;= 0)" />
    <mutant id="mutant_1400" viable="true" in="org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getDurationField()) != durationField)" to="(field != null) || ((field.getDurationField()) != durationField)" />
    <mutant id="mutant_1884" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="((instantUTC ^ instantLocal) &lt; 0) &amp;&amp; ((instantUTC ^ offset) &gt;= 0)" to="true" />
    <mutant id="mutant_1881" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="((instantLocal ^ instantUTC) &lt; 0) &amp;&amp; ((instantLocal ^ offset) &lt; 0)" to="false" />
    <mutant id="mutant_1882" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="((instantLocal ^ instantUTC) &lt; 0) &amp;&amp; ((instantLocal ^ offset) &lt; 0)" to="((instantLocal ^ instantUTC) &lt; 0) || ((instantLocal ^ offset) &lt; 0)" />
    <mutant id="mutant_1880" viable="true" in="org.joda.time.DateTimeZone.convertLocalToUTC(long,boolean)" from="((instantLocal ^ instantUTC) &lt; 0) &amp;&amp; ((instantLocal ^ offset) &lt; 0)" to="true" />
    <mutant id="mutant_1407" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="false" />
    <mutant id="mutant_1408" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="(iNextInfo) == null" />
    <mutant id="mutant_1405" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="((iNextInfo) == null) &amp;&amp; (millis &lt; (iNextInfo.iPeriodStart))" />
    <mutant id="mutant_1889" viable="true" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))" to="id.startsWith(&quot;-&quot;)" />
    <mutant id="mutant_1406" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="true" />
    <mutant id="mutant_1403" viable="true" in="org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getDurationField()) != durationField)" to="(field.getDurationField()) != durationField" />
    <mutant id="mutant_1887" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="((instantUTC ^ instantLocal) &lt; 0) &amp;&amp; ((instantUTC ^ offset) &gt;= 0)" to="(instantUTC ^ offset) &gt;= 0" />
    <mutant id="mutant_1404" viable="true" in="org.joda.time.tz.CachedDateTimeZone$Info.getOffset(long)" from="((iNextInfo) == null) || (millis &lt; (iNextInfo.iPeriodStart))" to="millis &lt; (iNextInfo.iPeriodStart)" />
    <mutant id="mutant_1888" viable="true" in="org.joda.time.DateTimeZone.forID(java.lang.String)" from="(id.startsWith(&quot;+&quot;)) || (id.startsWith(&quot;-&quot;))" to="id.startsWith(&quot;+&quot;)" />
    <mutant id="mutant_1401" viable="true" in="org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getDurationField()) != durationField)" to="true" />
    <mutant id="mutant_1885" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="((instantUTC ^ instantLocal) &lt; 0) &amp;&amp; ((instantUTC ^ offset) &gt;= 0)" to="false" />
    <mutant id="mutant_1402" viable="true" in="org.joda.time.field.UnsupportedDateTimeField.getInstance(org.joda.time.DateTimeFieldType,org.joda.time.DurationField)" from="(field != null) &amp;&amp; ((field.getDurationField()) != durationField)" to="false" />
    <mutant id="mutant_1886" viable="true" in="org.joda.time.DateTimeZone.convertUTCToLocal(long)" from="((instantUTC ^ instantLocal) &lt; 0) &amp;&amp; ((instantUTC ^ offset) &gt;= 0)" to="(instantUTC ^ instantLocal) &lt; 0" />
    <mutant id="mutant_602" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; datePresent" to="false" />
    <mutant id="mutant_603" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; datePresent" to="datePresent" />
    <mutant id="mutant_604" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; datePresent" to="strictISO || datePresent" />
    <mutant id="mutant_605" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; second)" to="true" />
    <mutant id="mutant_600" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; datePresent" to="strictISO" />
    <mutant id="mutant_601" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="strictISO &amp;&amp; datePresent" to="true" />
    <mutant id="mutant_1480" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth)))" to="true" />
    <mutant id="mutant_606" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; second)" to="false" />
    <mutant id="mutant_607" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; second)" to="second" />
    <mutant id="mutant_608" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; second)" to="minute" />
    <mutant id="mutant_609" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; second)" to="(minute || second)" />
    <mutant id="mutant_1476" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear)))" to="false" />
    <mutant id="mutant_1477" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear)))" to="((iMonthOfYear) == (other.iMonthOfYear))" />
    <mutant id="mutant_1474" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear)))" to="((iMode) == (other.iMode))" />
    <mutant id="mutant_1475" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear)))" to="true" />
    <mutant id="mutant_1472" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w')) &amp;&amp; (mode != 's')" to="((mode != 'u') &amp;&amp; (mode != 'w')) || (mode != 's')" />
    <mutant id="mutant_1473" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w')) &amp;&amp; (mode != 's')" to="mode != 's'" />
    <mutant id="mutant_1470" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w')) &amp;&amp; (mode != 's')" to="true" />
    <mutant id="mutant_1471" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w')) &amp;&amp; (mode != 's')" to="false" />
    <mutant id="mutant_1478" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear)))" to="(((iMode) == (other.iMode)) || ((iMonthOfYear) == (other.iMonthOfYear)))" />
    <mutant id="mutant_1479" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth)))" to="((iDayOfMonth) == (other.iDayOfMonth))" />
    <mutant id="mutant_613" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; (!milli))" to="(!milli)" />
    <mutant id="mutant_614" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; (!milli))" to="(minute || (!milli))" />
    <mutant id="mutant_615" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((minute &amp;&amp; second) || (minute &amp;&amp; (!milli)))" to="(minute &amp;&amp; second)" />
    <mutant id="mutant_616" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((minute &amp;&amp; second) || (minute &amp;&amp; (!milli)))" to="true" />
    <mutant id="mutant_610" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; (!milli))" to="true" />
    <mutant id="mutant_611" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; (!milli))" to="false" />
    <mutant id="mutant_612" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute &amp;&amp; (!milli))" to="minute" />
    <mutant id="mutant_617" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((minute &amp;&amp; second) || (minute &amp;&amp; (!milli)))" to="false" />
    <mutant id="mutant_618" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((minute &amp;&amp; second) || (minute &amp;&amp; (!milli)))" to="((minute &amp;&amp; second) &amp;&amp; (minute &amp;&amp; (!milli)))" />
    <mutant id="mutant_619" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="((minute &amp;&amp; second) || (minute &amp;&amp; (!milli)))" to="(minute &amp;&amp; (!milli))" />
    <mutant id="mutant_1465" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w'))" to="true" />
    <mutant id="mutant_1466" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w'))" to="false" />
    <mutant id="mutant_1463" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (end &gt; 0)" to="end &gt; 0" />
    <mutant id="mutant_1464" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w'))" to="((mode != 'u') || (mode != 'w'))" />
    <mutant id="mutant_1461" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (end &gt; 0)" to="instant &lt; 0" />
    <mutant id="mutant_1462" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (end &gt; 0)" to="(instant &lt; 0) || (end &gt; 0)" />
    <mutant id="mutant_1460" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (end &gt; 0)" to="false" />
    <mutant id="mutant_1469" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w')) &amp;&amp; (mode != 's')" to="(mode != 'u') &amp;&amp; (mode != 'w')" />
    <mutant id="mutant_1467" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w'))" to="(mode != 'u')" />
    <mutant id="mutant_1468" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear(char,int,int,int,boolean,int)" from="((mode != 'u') &amp;&amp; (mode != 'w'))" to="(mode != 'w')" />
    <mutant id="mutant_624" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="(((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) &amp;&amp; second)" />
    <mutant id="mutant_625" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(!hour) &amp;&amp; (((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="true" />
    <mutant id="mutant_626" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(!hour) &amp;&amp; (((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="false" />
    <mutant id="mutant_627" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(!hour) &amp;&amp; (((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="!hour" />
    <mutant id="mutant_620" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="((minute &amp;&amp; second) || (minute &amp;&amp; (!milli)))" />
    <mutant id="mutant_621" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="true" />
    <mutant id="mutant_622" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="false" />
    <mutant id="mutant_623" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="second" />
    <mutant id="mutant_628" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(!hour) &amp;&amp; (((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="(!hour) || (((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" />
    <mutant id="mutant_629" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(!hour) &amp;&amp; (((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second)" to="((minute &amp;&amp; second) || (minute &amp;&amp; (!milli))) || second" />
    <mutant id="mutant_1454" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (start &gt; 0)" to="(instant &lt; 0) || (start &gt; 0)" />
    <mutant id="mutant_1455" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (start &gt; 0)" to="true" />
    <mutant id="mutant_1452" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (end &lt; 0)" to="true" />
    <mutant id="mutant_1453" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (end &lt; 0)" to="false" />
    <mutant id="mutant_1450" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (end &lt; 0)" to="(instant &gt; 0) || (end &lt; 0)" />
    <mutant id="mutant_1451" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (end &lt; 0)" to="instant &gt; 0" />
    <mutant id="mutant_1458" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (start &gt; 0)" to="start &gt; 0" />
    <mutant id="mutant_1459" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (end &gt; 0)" to="true" />
    <mutant id="mutant_1456" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (start &gt; 0)" to="false" />
    <mutant id="mutant_1457" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.previousTransition(long)" from="(instant &lt; 0) &amp;&amp; (start &gt; 0)" to="instant &lt; 0" />
    <mutant id="mutant_635" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second) || milli" to="milli" />
    <mutant id="mutant_636" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second) || milli" to="true" />
    <mutant id="mutant_637" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second) || milli" to="false" />
    <mutant id="mutant_638" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second) || milli" to="minute || second" />
    <mutant id="mutant_631" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second)" to="true" />
    <mutant id="mutant_632" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second)" to="false" />
    <mutant id="mutant_633" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second)" to="second" />
    <mutant id="mutant_634" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second)" to="minute" />
    <mutant id="mutant_639" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second) || milli" to="(minute || second) &amp;&amp; milli" />
    <mutant id="mutant_1443" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))) &amp;&amp; (iEndRecurrence.equals(other.iEndRecurrence))" to="false" />
    <mutant id="mutant_1444" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (start &lt; 0)" to="start &lt; 0" />
    <mutant id="mutant_1441" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))) &amp;&amp; (iEndRecurrence.equals(other.iEndRecurrence))" to="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))) || (iEndRecurrence.equals(other.iEndRecurrence))" />
    <mutant id="mutant_1442" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))) &amp;&amp; (iEndRecurrence.equals(other.iEndRecurrence))" to="true" />
    <mutant id="mutant_1440" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.equals(java.lang.Object)" from="(((getID().equals(other.getID())) &amp;&amp; ((iStandardOffset) == (other.iStandardOffset))) &amp;&amp; (iStartRecurrence.equals(other.iStartRecurrence))) &amp;&amp; (iEndRecurrence.equals(other.iEndRecurrence))" to="iEndRecurrence.equals(other.iEndRecurrence)" />
    <mutant id="mutant_1449" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (end &lt; 0)" to="end &lt; 0" />
    <mutant id="mutant_630" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(minute || second)" to="(minute &amp;&amp; second)" />
    <mutant id="mutant_1447" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (start &lt; 0)" to="false" />
    <mutant id="mutant_1448" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (start &lt; 0)" to="(instant &gt; 0) || (start &lt; 0)" />
    <mutant id="mutant_1445" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (start &lt; 0)" to="instant &gt; 0" />
    <mutant id="mutant_1446" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$DSTZone.nextTransition(long)" from="(instant &gt; 0) &amp;&amp; (start &lt; 0)" to="true" />
    <mutant id="mutant_646" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour) &amp;&amp; minute" to="extended &amp;&amp; hour" />
    <mutant id="mutant_647" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour) &amp;&amp; minute" to="true" />
    <mutant id="mutant_648" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour) &amp;&amp; minute" to="false" />
    <mutant id="mutant_649" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour) &amp;&amp; minute" to="minute" />
    <mutant id="mutant_642" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour)" to="true" />
    <mutant id="mutant_643" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour)" to="false" />
    <mutant id="mutant_644" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour)" to="extended" />
    <mutant id="mutant_645" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour) &amp;&amp; minute" to="(extended &amp;&amp; hour) || minute" />
    <mutant id="mutant_1040" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="((((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour()))) &amp;&amp; ((iSecondOfMinute) == (iBase.secondOfMinute())))" to="true" />
    <mutant id="mutant_1036" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour())))" to="true" />
    <mutant id="mutant_1037" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour())))" to="false" />
    <mutant id="mutant_1034" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 1) == 1)" to="(base = iBase) != null" />
    <mutant id="mutant_1035" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour())))" to="((iMinuteOfHour) == (iBase.minuteOfHour()))" />
    <mutant id="mutant_1032" viable="false" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 1) == 1)" to="true" />
    <mutant id="mutant_1033" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 1) == 1)" to="false" />
    <mutant id="mutant_1030" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 1) == 1)" to="((base = iBase) != null) || (((iBaseFlags) &amp; 1) == 1)" />
    <mutant id="mutant_1031" viable="false" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(long,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 1) == 1)" to="((iBaseFlags) &amp; 1) == 1" />
    <mutant id="mutant_640" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour)" to="hour" />
    <mutant id="mutant_641" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; hour)" to="(extended || hour)" />
    <mutant id="mutant_1038" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour())))" to="((iHourOfDay) == (iBase.hourOfDay()))" />
    <mutant id="mutant_1039" viable="true" in="org.joda.time.chrono.AssembledChronology.setFields()" from="(((iHourOfDay) == (iBase.hourOfDay())) &amp;&amp; ((iMinuteOfHour) == (iBase.minuteOfHour())))" to="(((iHourOfDay) == (iBase.hourOfDay())) || ((iMinuteOfHour) == (iBase.minuteOfHour())))" />
    <mutant id="mutant_657" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute)" to="false" />
    <mutant id="mutant_658" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute)" to="minute" />
    <mutant id="mutant_659" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute)" to="extended" />
    <mutant id="mutant_653" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="second || milli" to="second" />
    <mutant id="mutant_654" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="second || milli" to="second &amp;&amp; milli" />
    <mutant id="mutant_655" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute)" to="(extended || minute)" />
    <mutant id="mutant_656" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute)" to="true" />
    <mutant id="mutant_1025" viable="false" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 5) == 5)" to="((iBaseFlags) &amp; 5) == 5" />
    <mutant id="mutant_1026" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 5) == 5)" to="((base = iBase) != null) || (((iBaseFlags) &amp; 5) == 5)" />
    <mutant id="mutant_1023" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 6) == 6)" to="(base = iBase) != null" />
    <mutant id="mutant_1024" viable="false" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 6) == 6)" to="((iBaseFlags) &amp; 6) == 6" />
    <mutant id="mutant_1021" viable="false" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 6) == 6)" to="true" />
    <mutant id="mutant_1022" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 6) == 6)" to="false" />
    <mutant id="mutant_1020" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 6) == 6)" to="((base = iBase) != null) || (((iBaseFlags) &amp; 6) == 6)" />
    <mutant id="mutant_650" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="second || milli" to="milli" />
    <mutant id="mutant_651" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="second || milli" to="true" />
    <mutant id="mutant_652" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="second || milli" to="false" />
    <mutant id="mutant_1029" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 5) == 5)" to="(base = iBase) != null" />
    <mutant id="mutant_1027" viable="false" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 5) == 5)" to="true" />
    <mutant id="mutant_1028" viable="true" in="org.joda.time.chrono.AssembledChronology.getDateTimeMillis(int,int,int,int,int,int,int)" from="((base = iBase) != null) &amp;&amp; (((iBaseFlags) &amp; 5) == 5)" to="false" />
    <mutant id="mutant_668" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getParser(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="!(locale.equals(iFormatter.getLocale()))" />
    <mutant id="mutant_669" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getParser(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="(locale != null) || (!(locale.equals(iFormatter.getLocale())))" />
    <mutant id="mutant_664" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute) &amp;&amp; second" to="extended &amp;&amp; minute" />
    <mutant id="mutant_665" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getParser(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="locale != null" />
    <mutant id="mutant_666" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getParser(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="true" />
    <mutant id="mutant_667" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getParser(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="false" />
    <mutant id="mutant_1014" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser))" to="(((originalPrinter == null) || (originalParser == null)) &amp;&amp; (originalPrinter != originalParser))" />
    <mutant id="mutant_1498" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))) &amp;&amp; ((iMillisOfDay) == (other.iMillisOfDay))" to="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))) || ((iMillisOfDay) == (other.iMillisOfDay))" />
    <mutant id="mutant_1015" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)) || (!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter))" to="((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)" />
    <mutant id="mutant_1499" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.setDayOfMonthNext(org.joda.time.Chronology,long)" from="((iMonthOfYear) == 2) &amp;&amp; ((iDayOfMonth) == 29)" to="(iMonthOfYear) == 2" />
    <mutant id="mutant_1012" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser))" to="true" />
    <mutant id="mutant_1496" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))) &amp;&amp; ((iMillisOfDay) == (other.iMillisOfDay))" to="false" />
    <mutant id="mutant_1013" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser))" to="false" />
    <mutant id="mutant_1497" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))) &amp;&amp; ((iMillisOfDay) == (other.iMillisOfDay))" to="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))" />
    <mutant id="mutant_1010" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser))" to="((originalPrinter == null) || (originalParser == null))" />
    <mutant id="mutant_1494" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))) &amp;&amp; ((iMillisOfDay) == (other.iMillisOfDay))" to="(iMillisOfDay) == (other.iMillisOfDay)" />
    <mutant id="mutant_1011" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser))" to="(originalPrinter != originalParser)" />
    <mutant id="mutant_1495" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance))) &amp;&amp; ((iMillisOfDay) == (other.iMillisOfDay))" to="true" />
    <mutant id="mutant_1492" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance)))" to="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek)))" />
    <mutant id="mutant_1493" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance)))" to="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) || ((iAdvance) == (other.iAdvance)))" />
    <mutant id="mutant_660" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute) &amp;&amp; second" to="(extended &amp;&amp; minute) || second" />
    <mutant id="mutant_661" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute) &amp;&amp; second" to="true" />
    <mutant id="mutant_662" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute) &amp;&amp; second" to="false" />
    <mutant id="mutant_663" viable="true" in="org.joda.time.format.ISODateTimeFormat.time(org.joda.time.format.DateTimeFormatterBuilder,java.util.Collection,boolean,boolean,boolean,boolean)" from="(extended &amp;&amp; minute) &amp;&amp; second" to="second" />
    <mutant id="mutant_1018" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)) || (!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter))" to="false" />
    <mutant id="mutant_1019" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)) || (!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter))" to="!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter)" />
    <mutant id="mutant_1016" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)) || (!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter))" to="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)) &amp;&amp; (!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter))" />
    <mutant id="mutant_1017" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="(((originalPrinter == null) || (originalParser == null)) || (originalPrinter != originalParser)) || (!(originalPrinter instanceof org.joda.time.format.PeriodFormatterBuilder.FieldFormatter))" to="true" />
    <mutant id="mutant_679" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="false" />
    <mutant id="mutant_675" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(locale != null)" />
    <mutant id="mutant_676" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="(locale.equals(getLocale()))" />
    <mutant id="mutant_677" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="((locale != null) || (locale.equals(getLocale())))" />
    <mutant id="mutant_678" viable="true" in="org.joda.time.format.PeriodFormatter.withLocale(java.util.Locale)" from="((locale != null) &amp;&amp; (locale.equals(getLocale())))" to="true" />
    <mutant id="mutant_1490" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance)))" to="true" />
    <mutant id="mutant_1491" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance)))" to="false" />
    <mutant id="mutant_1003" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (suffixes.length))" to="true" />
    <mutant id="mutant_1487" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek)))" to="false" />
    <mutant id="mutant_1004" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (suffixes.length))" to="false" />
    <mutant id="mutant_1488" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek)))" to="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) || ((iDayOfWeek) == (other.iDayOfWeek)))" />
    <mutant id="mutant_1001" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (suffixes.length))" to="(regularExpressions.length) != (suffixes.length)" />
    <mutant id="mutant_1485" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek)))" to="((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth)))" />
    <mutant id="mutant_1002" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (suffixes.length))" to="((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)" />
    <mutant id="mutant_1486" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek)))" to="true" />
    <mutant id="mutant_1483" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth)))" to="((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) || ((iDayOfMonth) == (other.iDayOfMonth)))" />
    <mutant id="mutant_1000" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(java.lang.String[],java.lang.String[])" from="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)) || ((regularExpressions.length) != (suffixes.length))" to="(((regularExpressions == null) || (suffixes == null)) || ((regularExpressions.length) &lt; 1)) &amp;&amp; ((regularExpressions.length) != (suffixes.length))" />
    <mutant id="mutant_1484" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="(((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek)))" to="((iDayOfWeek) == (other.iDayOfWeek))" />
    <mutant id="mutant_1481" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth)))" to="false" />
    <mutant id="mutant_1482" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth)))" to="(((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear)))" />
    <mutant id="mutant_671" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getPrinter(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="true" />
    <mutant id="mutant_672" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getPrinter(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="false" />
    <mutant id="mutant_673" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getPrinter(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="!(locale.equals(iFormatter.getLocale()))" />
    <mutant id="mutant_1009" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((originalPrinter == null) || (originalParser == null))" to="(originalPrinter == null)" />
    <mutant id="mutant_674" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getPrinter(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="(locale != null) || (!(locale.equals(iFormatter.getLocale())))" />
    <mutant id="mutant_1007" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((originalPrinter == null) || (originalParser == null))" to="((originalPrinter == null) &amp;&amp; (originalParser == null))" />
    <mutant id="mutant_1008" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((originalPrinter == null) || (originalParser == null))" to="(originalParser == null)" />
    <mutant id="mutant_1005" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((originalPrinter == null) || (originalParser == null))" to="true" />
    <mutant id="mutant_1489" viable="true" in="org.joda.time.tz.DateTimeZoneBuilder$OfYear.equals(java.lang.Object)" from="((((((iMode) == (other.iMode)) &amp;&amp; ((iMonthOfYear) == (other.iMonthOfYear))) &amp;&amp; ((iDayOfMonth) == (other.iDayOfMonth))) &amp;&amp; ((iDayOfWeek) == (other.iDayOfWeek))) &amp;&amp; ((iAdvance) == (other.iAdvance)))" to="((iAdvance) == (other.iAdvance))" />
    <mutant id="mutant_670" viable="true" in="org.joda.time.format.PeriodFormat$DynamicWordBased.getPrinter(java.util.Locale)" from="(locale != null) &amp;&amp; (!(locale.equals(iFormatter.getLocale())))" to="locale != null" />
    <mutant id="mutant_1006" viable="true" in="org.joda.time.format.PeriodFormatterBuilder.appendSuffix(org.joda.time.format.PeriodFormatterBuilder$PeriodFieldAffix)" from="((originalPrinter == null) || (originalParser == null))" to="false" />
  </mutants>
</mutation>
