<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="UOI" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="268021">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_327" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="((&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString())) * -1)" />
    <mutant id="mutant_569" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') * -1)" />
    <mutant id="mutant_328" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="((1000L * ttl) - 1)" />
    <mutant id="mutant_329" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="((1000L * ttl) + 1)" />
    <mutant id="mutant_323" viable="false" in="?" from="((60 * 60) * 24) * 365" to="(((60 * 60) * 24) * 365) + 1" />
    <mutant id="mutant_565" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) - 1)" />
    <mutant id="mutant_324" viable="false" in="?" from="((60 * 60) * 24) * 365" to="(((60 * 60) * 24) * 365) - 1" />
    <mutant id="mutant_566" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) + 1)" />
    <mutant id="mutant_325" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="((&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString())) + 1)" />
    <mutant id="mutant_567" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + 1)" />
    <mutant id="mutant_326" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.isJSONP(javax.servlet.http.HttpServletRequest)" from="(&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString()))" to="((&quot;Wrong format for parameter \'callback\' specified. Must match: &quot; + (HttpUtil.GET_REQUEST_CALLBACK_PATTERN.toString())) - 1)" />
    <mutant id="mutant_568" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') - 1)" />
    <mutant id="mutant_561" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) - 1)" />
    <mutant id="mutant_320" viable="false" in="?" from="((60 * 60) * 24)" to="(((60 * 60) * 24) + 1)" />
    <mutant id="mutant_562" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) * -1)" />
    <mutant id="mutant_321" viable="false" in="?" from="((60 * 60) * 24)" to="(((60 * 60) * 24) - 1)" />
    <mutant id="mutant_563" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) + 1)" />
    <mutant id="mutant_322" viable="false" in="?" from="((60 * 60) * 24) * 365" to="(((60 * 60) * 24) * 365) * -1" />
    <mutant id="mutant_564" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) * -1)" />
    <mutant id="mutant_560" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') * -1)" />
    <mutant id="mutant_338" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="((&quot;public,max-age=&quot; + (Integer.toString(ttl))) + 1)" />
    <mutant id="mutant_339" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="((&quot;public,max-age=&quot; + (Integer.toString(ttl))) - 1)" />
    <mutant id="mutant_334" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="((&quot;private,max-age=&quot; + (Integer.toString(ttl))) * -1)" />
    <mutant id="mutant_576" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + 1)" />
    <mutant id="mutant_335" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="((&quot;private,max-age=&quot; + (Integer.toString(ttl))) - 1)" />
    <mutant id="mutant_577" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') - 1)" />
    <mutant id="mutant_336" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;private,max-age=&quot; + (Integer.toString(ttl)))" to="((&quot;private,max-age=&quot; + (Integer.toString(ttl))) + 1)" />
    <mutant id="mutant_578" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') * -1)" />
    <mutant id="mutant_337" viable="false" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(&quot;public,max-age=&quot; + (Integer.toString(ttl)))" to="((&quot;public,max-age=&quot; + (Integer.toString(ttl))) * -1)" />
    <mutant id="mutant_579" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) + 1)" />
    <mutant id="mutant_330" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="(1000L * ttl)" to="((1000L * ttl) * -1)" />
    <mutant id="mutant_572" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) - 1)" />
    <mutant id="mutant_331" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="(((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl)) * -1)" />
    <mutant id="mutant_573" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) * -1)" />
    <mutant id="mutant_332" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="(((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl)) - 1)" />
    <mutant id="mutant_574" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) - 1)" />
    <mutant id="mutant_333" viable="true" in="org.apache.shindig.common.servlet.HttpUtil.getCachingHeadersToSet(int,java.lang.String,java.lang.String,boolean)" from="((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl))" to="(((HttpUtil.timeSource.currentTimeMillis()) + (1000L * ttl)) + 1)" />
    <mutant id="mutant_575" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) + 1)" />
    <mutant id="mutant_570" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) + 1)" />
    <mutant id="mutant_571" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) * -1)" />
    <mutant id="mutant_107" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="((&quot;Creating cache named &quot; + name) * -1)" />
    <mutant id="mutant_349" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="(((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;) * -1)" />
    <mutant id="mutant_108" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="((&quot;Creating cache named &quot; + name) + 1)" />
    <mutant id="mutant_109" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="((&quot;Creating cache named &quot; + name) - 1)" />
    <mutant id="mutant_103" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="((cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())) * -1" />
    <mutant id="mutant_345" viable="true" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="(((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;) + 1)" />
    <mutant id="mutant_587" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') * -1)" />
    <mutant id="mutant_104" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="((cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())) * -1" />
    <mutant id="mutant_346" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) * -1)" />
    <mutant id="mutant_588" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) + 1)" />
    <mutant id="mutant_105" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="((cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())) - 1" />
    <mutant id="mutant_347" viable="true" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + 1)" />
    <mutant id="mutant_589" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) * -1)" />
    <mutant id="mutant_106" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getSize()" from="(cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())" to="((cache.getMemoryStoreSize()) + (cache.getDiskStoreSize())) + 1" />
    <mutant id="mutant_348" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) - 1)" />
    <mutant id="mutant_341" viable="true" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + 1)" />
    <mutant id="mutant_583" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) - 1)" />
    <mutant id="mutant_100" viable="false" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="((&quot;Failed to create Cache with name &quot; + cacheName) * -1)" />
    <mutant id="mutant_342" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) - 1)" />
    <mutant id="mutant_584" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) + 1)" />
    <mutant id="mutant_101" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="((cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())) + 1" />
    <mutant id="mutant_343" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="(((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;) * -1)" />
    <mutant id="mutant_585" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + 1)" />
    <mutant id="mutant_102" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache.getCapacity()" from="(cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())" to="((cache.getCacheConfiguration().getMaxEntriesLocalHeap()) + (cache.getCacheConfiguration().getMaxEntriesLocalDisk())) - 1" />
    <mutant id="mutant_344" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="(((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;) - 1)" />
    <mutant id="mutant_586" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="((&quot;Could not set property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not set property &quot; + (object.getClass())) + '.') - 1)" />
    <mutant id="mutant_580" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) * -1)" />
    <mutant id="mutant_581" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) - 1)" />
    <mutant id="mutant_340" viable="false" in="org.apache.shindig.common.servlet.InjectedFilter.init(javax.servlet.FilterConfig)" from="(&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName()))" to="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) * -1)" />
    <mutant id="mutant_582" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(&quot;Could not set property &quot; + (object.getClass()))" to="((&quot;Could not set property &quot; + (object.getClass())) * -1)" />
    <mutant id="mutant_118" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="((now + maxAge) * -1)" />
    <mutant id="mutant_119" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="((now + maxAge) + 1)" />
    <mutant id="mutant_114" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="((&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;) * -1" />
    <mutant id="mutant_356" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="((&quot;&quot; + (req.getServerPort())) - 1)" />
    <mutant id="mutant_598" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="((&quot;serializedClass(&quot; + type) + 1)" />
    <mutant id="mutant_115" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="((&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;) + 1" />
    <mutant id="mutant_357" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="((&quot;&quot; + (req.getServerPort())) * -1)" />
    <mutant id="mutant_599" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="((&quot;serializedClass(&quot; + type) * -1)" />
    <mutant id="mutant_116" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;" to="((&quot;shindig.cache.lru.&quot; + name) + &quot;.capacity&quot;) - 1" />
    <mutant id="mutant_358" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1))" to="(!(((path) != null) &amp;&amp; ((path.length()) &gt; 1)))" />
    <mutant id="mutant_117" viable="true" in="org.apache.shindig.common.cache.SoftExpiringCache.addElement(K,V,long)" from="(now + maxAge)" to="((now + maxAge) - 1)" />
    <mutant id="mutant_359" viable="true" in="org.apache.shindig.common.uri.Uri(org.apache.shindig.common.uri.UriBuilder)" from="(((path) != null) &amp;&amp; ((path.length()) &gt; 1)) &amp;&amp; (!(path.startsWith(&quot;/&quot;)))" to="!((((path) != null) &amp;&amp; ((path.length()) &gt; 1)) &amp;&amp; (!(path.startsWith(&quot;/&quot;))))" />
    <mutant id="mutant_110" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="((injector) != null) &amp;&amp; (name != null)" to="!(((injector) != null) &amp;&amp; (name != null))" />
    <mutant id="mutant_352" viable="true" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="((&quot;&quot; + (req.getServerPort())) + 1)" />
    <mutant id="mutant_594" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="((&quot;Converting Child to &quot; + (firstChild.get())) * -1)" />
    <mutant id="mutant_111" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="((&quot;shindig.cache.lru.&quot; + name) - 1)" />
    <mutant id="mutant_353" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="((&quot;&quot; + (req.getServerPort())) - 1)" />
    <mutant id="mutant_595" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="((&quot;Converting Child to &quot; + (firstChild.get())) + 1)" />
    <mutant id="mutant_112" viable="false" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="((&quot;shindig.cache.lru.&quot; + name) * -1)" />
    <mutant id="mutant_354" viable="false" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="((&quot;&quot; + (req.getServerPort())) * -1)" />
    <mutant id="mutant_596" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;Converting Child to &quot; + (firstChild.get()))" to="((&quot;Converting Child to &quot; + (firstChild.get())) - 1)" />
    <mutant id="mutant_113" viable="true" in="org.apache.shindig.common.cache.LruCacheProvider.getCapacity(java.lang.String)" from="(&quot;shindig.cache.lru.&quot; + name)" to="((&quot;shindig.cache.lru.&quot; + name) + 1)" />
    <mutant id="mutant_355" viable="true" in="org.apache.shindig.common.servlet.ServletRequestContext.setRequestInfo(javax.servlet.ServletRequest)" from="(&quot;&quot; + (req.getServerPort()))" to="((&quot;&quot; + (req.getServerPort())) + 1)" />
    <mutant id="mutant_597" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="((&quot;serializedClass(&quot; + type) - 1)" />
    <mutant id="mutant_590" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.writeProperty(java.lang.Object,java.lang.String,java.lang.Object)" from="(((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not set property &quot; + (object.getClass())) + '.') + (property.getName())) - 1)" />
    <mutant id="mutant_591" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.Class)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.itemType.isAssignableFrom(itemType))" to="!((this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.itemType.isAssignableFrom(itemType)))" />
    <mutant id="mutant_350" viable="false" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="(((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;) - 1)" />
    <mutant id="mutant_592" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ImplicitCollectionFieldMapping.matches(java.lang.Class,java.lang.String)" from="(this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.fieldName.equals(fieldName))" to="!((this.definedIn.isAssignableFrom(definedIn)) &amp;&amp; (this.fieldName.equals(fieldName)))" />
    <mutant id="mutant_351" viable="true" in="org.apache.shindig.common.servlet.InjectedServlet.init(javax.servlet.ServletConfig)" from="((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;)" to="(((&quot;Guice Injector not found! Make sure you registered &quot; + (GuiceServletContextListener.class.getName())) + &quot; as a listener&quot;) + 1)" />
    <mutant id="mutant_593" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(Collection.class.isAssignableFrom(type)) &amp;&amp; ((firstChild.get()) != null)" to="!((Collection.class.isAssignableFrom(type)) &amp;&amp; ((firstChild.get()) != null))" />
    <mutant id="mutant_129" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="((&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm) - 1)" />
    <mutant id="mutant_125" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="((bin.length) - (hmacType.getLength())) * -1" />
    <mutant id="mutant_367" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_126" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="((&quot;Unexpectedly empty masterKey:&quot; + masterKey) + 1)" />
    <mutant id="mutant_368" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_127" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="((&quot;Unexpectedly empty masterKey:&quot; + masterKey) - 1)" />
    <mutant id="mutant_369" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_128" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.init(java.lang.String)" from="(&quot;Unexpectedly empty masterKey:&quot; + masterKey)" to="((&quot;Unexpectedly empty masterKey:&quot; + masterKey) * -1)" />
    <mutant id="mutant_121" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="(((sb.length()) - 1) + 1)" />
    <mutant id="mutant_363" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) != '/')" to="!((pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) != '/'))" />
    <mutant id="mutant_122" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="(((sb.length()) - 1) - 1)" />
    <mutant id="mutant_364" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_123" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="((bin.length) - (hmacType.getLength())) + 1" />
    <mutant id="mutant_365" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_124" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.unwrap(java.lang.String)" from="(bin.length) - (hmacType.getLength())" to="((bin.length) - (hmacType.getLength())) - 1" />
    <mutant id="mutant_366" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_360" viable="true" in="org.apache.shindig.common.uri.Uri.isAbsolute()" from="((scheme) != null) &amp;&amp; ((authority) != null)" to="!(((scheme) != null) &amp;&amp; ((authority) != null))" />
    <mutant id="mutant_361" viable="true" in="org.apache.shindig.common.uri.Uri.getFragmentParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="!((values == null) || (values.isEmpty()))" />
    <mutant id="mutant_120" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.serialize(java.util.Map)" from="((sb.length()) - 1)" to="(((sb.length()) - 1) * -1)" />
    <mutant id="mutant_362" viable="true" in="org.apache.shindig.common.uri.Uri.getQueryParameter(java.lang.String)" from="(values == null) || (values.isEmpty())" to="!((values == null) || (values.isEmpty()))" />
    <mutant id="mutant_136" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + 1)" />
    <mutant id="mutant_378" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="(index2 + 1) + 1" />
    <mutant id="mutant_137" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) - 1)" />
    <mutant id="mutant_379" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="(index2 + 1) - 1" />
    <mutant id="mutant_138" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="((((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now) + 1)" />
    <mutant id="mutant_139" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="((((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now) - 1)" />
    <mutant id="mutant_132" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="((&quot;Blob expired. Was valid until &quot; + maxTime) - 1)" />
    <mutant id="mutant_374" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) == '/')" to="!((pathlen &gt; 0) &amp;&amp; ((path.charAt(0)) == '/'))" />
    <mutant id="mutant_133" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="((&quot;Blob expired. Was valid until &quot; + maxTime) + 1)" />
    <mutant id="mutant_375" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_134" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(&quot;Blob expired. Was valid until &quot; + maxTime)" to="((&quot;Blob expired. Was valid until &quot; + maxTime) * -1)" />
    <mutant id="mutant_376" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_135" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;)" to="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) * -1)" />
    <mutant id="mutant_377" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_370" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_371" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_130" viable="true" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="((&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm) + 1)" />
    <mutant id="mutant_372" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_131" viable="false" in="org.apache.shindig.common.crypto.BasicBlobCrypter.setpreferredHMACAlgorithm(java.lang.String)" from="(&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm)" to="((&quot;shindig.crypto.preferredHMACAlgorithm: &quot; + preferredHMACAlgorithm) * -1)" />
    <mutant id="mutant_373" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index + 1) &lt; pathlen) &amp;&amp; ((path.charAt((index + 1))) != '/')" to="!(((index + 1) &lt; pathlen) &amp;&amp; ((path.charAt((index + 1))) != '/'))" />
    <mutant id="mutant_147" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="(((cipherText.length) - offset) + 1)" />
    <mutant id="mutant_389" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="(((seglist.length) - 1) + 1)" />
    <mutant id="mutant_148" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="(((cipherText.length) - offset) - 1)" />
    <mutant id="mutant_149" viable="true" in="org.apache.shindig.common.crypto.Crypto.aes128cbcDecryptWithIv(byte[],byte[],byte[],int)" from="((cipherText.length) - offset)" to="(((cipherText.length) - offset) * -1)" />
    <mutant id="mutant_380" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="index2 + 1" to="(index2 + 1) * -1" />
    <mutant id="mutant_143" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="((now * 1000) - 1)" />
    <mutant id="mutant_385" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(seglist[remove].equals(&quot;..&quot;)))" to="!((remove &gt; (-1)) &amp;&amp; (!(seglist[remove].equals(&quot;..&quot;))))" />
    <mutant id="mutant_144" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="((maxTime * 1000) - 1)" />
    <mutant id="mutant_386" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0))" to="(!((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)))" />
    <mutant id="mutant_145" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="((maxTime * 1000) * -1)" />
    <mutant id="mutant_387" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="(((seglist.length) - 1) * -1)" />
    <mutant id="mutant_146" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(maxTime * 1000)" to="((maxTime * 1000) + 1)" />
    <mutant id="mutant_388" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((seglist.length) - 1)" to="(((seglist.length) - 1) - 1)" />
    <mutant id="mutant_381" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="(i - 1) + 1" />
    <mutant id="mutant_140" viable="false" in="org.apache.shindig.common.crypto.BlobExpiredException(java.util.Date,java.util.Date)" from="(((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now)" to="((((&quot;Blob expired. Was valid until &quot; + maxTime) + &quot;, attempted use at &quot;) + now) * -1)" />
    <mutant id="mutant_382" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="(i - 1) - 1" />
    <mutant id="mutant_141" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="((now * 1000) + 1)" />
    <mutant id="mutant_383" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="i - 1" to="(i - 1) * -1" />
    <mutant id="mutant_142" viable="true" in="org.apache.shindig.common.crypto.BlobExpiredException(long,long)" from="(now * 1000)" to="((now * 1000) * -1)" />
    <mutant id="mutant_384" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(remove &gt; (-1)) &amp;&amp; (!(include[remove]))" to="!((remove &gt; (-1)) &amp;&amp; (!(include[remove])))" />
    <mutant id="mutant_158" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="(((random[i]) % (Crypto.DIGITS.length)) - 1)" />
    <mutant id="mutant_159" viable="false" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="((&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type) * -1)" />
    <mutant id="mutant_390" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)) &amp;&amp; (include[((seglist.length) - 1)])" to="!(((!(path.endsWith(&quot;/&quot;))) &amp;&amp; ((seglist.length) &gt; 0)) &amp;&amp; (include[((seglist.length) - 1)]))" />
    <mutant id="mutant_391" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="(((newpath.length()) - 1) * -1)" />
    <mutant id="mutant_154" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="(((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;) * -1)" />
    <mutant id="mutant_396" viable="false" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="((&quot;No support for opaque Uris &quot; + (uri.toString())) * -1)" />
    <mutant id="mutant_155" viable="true" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="(((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;) + 1)" />
    <mutant id="mutant_397" viable="false" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="((&quot;No support for opaque Uris &quot; + (uri.toString())) - 1)" />
    <mutant id="mutant_156" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="(((random[i]) % (Crypto.DIGITS.length)) + 1)" />
    <mutant id="mutant_398" viable="true" in="org.apache.shindig.common.uri.Uri.fromJavaUri(java.net.URI)" from="(&quot;No support for opaque Uris &quot; + (uri.toString()))" to="((&quot;No support for opaque Uris &quot; + (uri.toString())) + 1)" />
    <mutant id="mutant_157" viable="true" in="org.apache.shindig.common.crypto.Crypto.getRandomDigits(int)" from="((random[i]) % (Crypto.DIGITS.length))" to="(((random[i]) % (Crypto.DIGITS.length)) * -1)" />
    <mutant id="mutant_399" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null))" to="(!((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)))" />
    <mutant id="mutant_150" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) - 1)" />
    <mutant id="mutant_392" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="(((newpath.length()) - 1) + 1)" />
    <mutant id="mutant_151" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) * -1)" />
    <mutant id="mutant_393" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((newpath.length()) - 1)" to="(((newpath.length()) - 1) - 1)" />
    <mutant id="mutant_152" viable="true" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="(&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN))" to="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + 1)" />
    <mutant id="mutant_394" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="((index &lt; index2) || (index2 == (-1)))" to="(!((index &lt; index2) || (index2 == (-1))))" />
    <mutant id="mutant_153" viable="false" in="org.apache.shindig.common.crypto.Crypto.hmacSha(byte[],byte[],java.lang.String)" from="((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;)" to="(((&quot;HMAC key should be at least &quot; + (Crypto.MIN_HMAC_KEY_LEN)) + &quot; bytes.&quot;) - 1)" />
    <mutant id="mutant_395" viable="true" in="org.apache.shindig.common.uri.Uri.normalizePath(java.lang.String)" from="(index != (-1)) &amp;&amp; ((index &lt; index2) || (index2 == (-1)))" to="!((index != (-1)) &amp;&amp; ((index &lt; index2) || (index2 == (-1))))" />
    <mutant id="mutant_169" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_160" viable="false" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="((&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type) - 1)" />
    <mutant id="mutant_165" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="(!(((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray)))" />
    <mutant id="mutant_166" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.isAllLiterals(org.json.JSONArray)" from="(!(jsonArr.isNull(i))) &amp;&amp; (((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray))" to="!((!(jsonArr.isNull(i))) &amp;&amp; (((jsonArr.get(i)) instanceof org.json.JSONObject) || ((jsonArr.get(i)) instanceof JSONArray)))" />
    <mutant id="mutant_167" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(value.startsWith(&quot;(&quot;)) &amp;&amp; (value.endsWith(&quot;)&quot;))" to="!((value.startsWith(&quot;(&quot;)) &amp;&amp; (value.endsWith(&quot;)&quot;)))" />
    <mutant id="mutant_168" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_161" viable="true" in="org.apache.shindig.common.util.GenericDigestUtils.setType(java.lang.String)" from="(&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type)" to="((&quot;shindig.crypto.preferredHashAlgorithm: &quot; + type) + 1)" />
    <mutant id="mutant_162" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="(2 * (hashBytes.length)) - 1" />
    <mutant id="mutant_163" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="(2 * (hashBytes.length)) * -1" />
    <mutant id="mutant_164" viable="true" in="org.apache.shindig.common.util.HashUtil.bytesToHex(byte[])" from="2 * (hashBytes.length)" to="(2 * (hashBytes.length)) + 1" />
    <mutant id="mutant_170" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_171" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="(('[' + (value.substring(1, ((value.length()) - 1)))) + 1)" />
    <mutant id="mutant_176" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="((('[' + (value.substring(1, ((value.length()) - 1)))) + ']') - 1)" />
    <mutant id="mutant_177" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="(('[' + value) - 1)" />
    <mutant id="mutant_178" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="(('[' + value) + 1)" />
    <mutant id="mutant_179" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + value)" to="(('[' + value) * -1)" />
    <mutant id="mutant_172" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="(('[' + (value.substring(1, ((value.length()) - 1)))) * -1)" />
    <mutant id="mutant_173" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="('[' + (value.substring(1, ((value.length()) - 1))))" to="(('[' + (value.substring(1, ((value.length()) - 1)))) - 1)" />
    <mutant id="mutant_174" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="((('[' + (value.substring(1, ((value.length()) - 1)))) + ']') + 1)" />
    <mutant id="mutant_175" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + (value.substring(1, ((value.length()) - 1)))) + ']')" to="((('[' + (value.substring(1, ((value.length()) - 1)))) + ']') * -1)" />
    <mutant id="mutant_180" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="((('[' + value) + ']') - 1)" />
    <mutant id="mutant_181" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="((('[' + value) + ']') + 1)" />
    <mutant id="mutant_182" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(('[' + value) + ']')" to="((('[' + value) + ']') * -1)" />
    <mutant id="mutant_187" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="(((path.length) - 1) * -1)" />
    <mutant id="mutant_188" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="(((path.length) - 1) - 1)" />
    <mutant id="mutant_189" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.fromRequest(javax.servlet.http.HttpServletRequest)" from="((path.length) - 1)" to="(((path.length) - 1) + 1)" />
    <mutant id="mutant_183" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.convertToJsonValue(java.lang.String)" from="(obj instanceof java.lang.Double) &amp;&amp; (!(obj.toString().equals(value)))" to="!((obj instanceof java.lang.Double) &amp;&amp; (!(obj.toString().equals(value))))" />
    <mutant id="mutant_184" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="(((steps.length) - 2) + 1)" />
    <mutant id="mutant_185" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="(((steps.length) - 2) * -1)" />
    <mutant id="mutant_186" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.buildHolder(org.json.JSONObject,java.lang.String[],int)" from="((steps.length) - 2)" to="(((steps.length) - 2) - 1)" />
    <mutant id="mutant_190" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="(((path.length) - 1) * -1)" />
    <mutant id="mutant_191" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="(((path.length) - 1) - 1)" />
    <mutant id="mutant_192" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.parametersToJsonObject(java.util.Map)" from="((path.length) - 1)" to="(((path.length) - 1) + 1)" />
    <mutant id="mutant_193" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="((prefix + '.') * -1)" />
    <mutant id="mutant_198" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="(((prefix + '.') + key) * -1)" />
    <mutant id="mutant_199" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="((prefix + '.') * -1)" />
    <mutant id="mutant_194" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="((prefix + '.') + 1)" />
    <mutant id="mutant_195" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="((prefix + '.') - 1)" />
    <mutant id="mutant_196" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="(((prefix + '.') + key) + 1)" />
    <mutant id="mutant_197" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="(((prefix + '.') + key) - 1)" />
    <mutant id="mutant_900" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) * -1)" />
    <mutant id="mutant_901" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="(((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;) + 1)" />
    <mutant id="mutant_902" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="(((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;) * -1)" />
    <mutant id="mutant_907" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="((&quot;Unexpected error : format param is null &quot; + (t.toString())) * -1)" />
    <mutant id="mutant_908" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="((&quot;Unexpected error : format param is null &quot; + (t.toString())) + 1)" />
    <mutant id="mutant_909" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : format param is null &quot; + (t.toString()))" to="((&quot;Unexpected error : format param is null &quot; + (t.toString())) - 1)" />
    <mutant id="mutant_903" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="(((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;) - 1)" />
    <mutant id="mutant_904" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="((&quot;Handling restful request for &quot; + (servletRequest.getPathInfo())) + 1)" />
    <mutant id="mutant_905" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="((&quot;Handling restful request for &quot; + (servletRequest.getPathInfo())) * -1)" />
    <mutant id="mutant_906" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.executeRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(&quot;Handling restful request for &quot; + (servletRequest.getPathInfo()))" to="((&quot;Handling restful request for &quot; + (servletRequest.getPathInfo())) - 1)" />
    <mutant id="mutant_910" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="((&quot;Unexpected error : content type is null &quot; + (t.toString())) * -1)" />
    <mutant id="mutant_911" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="((&quot;Unexpected error : content type is null &quot; + (t.toString())) - 1)" />
    <mutant id="mutant_912" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(&quot;Unexpected error : content type is null &quot; + (t.toString()))" to="((&quot;Unexpected error : content type is null &quot; + (t.toString())) + 1)" />
    <mutant id="mutant_913" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(servletRequest.getMethod().equals(&quot;GET&quot;))) &amp;&amp; (!(servletRequest.getMethod().equals(&quot;HEAD&quot;)))" to="!((!(servletRequest.getMethod().equals(&quot;GET&quot;))) &amp;&amp; (!(servletRequest.getMethod().equals(&quot;HEAD&quot;))))" />
    <mutant id="mutant_918" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="((callback + '(') + 1)" />
    <mutant id="mutant_919" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="((callback + '(') - 1)" />
    <mutant id="mutant_914" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((responseItem.getErrorCode()) &gt;= 200) &amp;&amp; ((responseItem.getErrorCode()) &lt; 400)" to="!(((responseItem.getErrorCode()) &gt;= 200) &amp;&amp; ((responseItem.getErrorCode()) &lt; 400))" />
    <mutant id="mutant_915" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(!(response instanceof org.apache.shindig.protocol.DataCollection)) &amp;&amp; (!(response instanceof org.apache.shindig.protocol.RestfulCollection))" to="!((!(response instanceof org.apache.shindig.protocol.DataCollection)) &amp;&amp; (!(response instanceof org.apache.shindig.protocol.RestfulCollection)))" />
    <mutant id="mutant_916" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest)))" to="(!((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))))" />
    <mutant id="mutant_917" viable="true" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))) &amp;&amp; (ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType()))" to="!(((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))) &amp;&amp; (ContentTypes.OUTPUT_JSON_CONTENT_TYPE.equals(responseConverter.getContentType())))" />
    <mutant id="mutant_921" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$MethodCaller(java.lang.reflect.Method,boolean)" from="((inputClass) != null) &amp;&amp; (RequestItem.class.isAssignableFrom(inputClass))" to="!(((inputClass) != null) &amp;&amp; (RequestItem.class.isAssignableFrom(inputClass)))" />
    <mutant id="mutant_922" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="(((part.length()) - 2) * -1)" />
    <mutant id="mutant_923" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="(((part.length()) - 2) - 1)" />
    <mutant id="mutant_924" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 2)" to="(((part.length()) - 2) + 1)" />
    <mutant id="mutant_920" viable="false" in="org.apache.shindig.protocol.DataServiceServlet.handleSingleRequest(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.SecurityToken)" from="(callback + '(')" to="((callback + '(') * -1)" />
    <mutant id="mutant_929" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="((&quot;Invalid REST path part format &quot; + part) * -1)" />
    <mutant id="mutant_925" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="(((part.length()) - 1) + 1)" />
    <mutant id="mutant_926" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="(((part.length()) - 1) * -1)" />
    <mutant id="mutant_927" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="((part.length()) - 1)" to="(((part.length()) - 1) - 1)" />
    <mutant id="mutant_928" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="((&quot;Invalid REST path part format &quot; + part) + 1)" />
    <mutant id="mutant_932" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))) &amp;&amp; (Objects.equal(this.operationPath, that.operationPath))" to="!((((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))) &amp;&amp; (Objects.equal(this.operationPath, that.operationPath)))" />
    <mutant id="mutant_933" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(other.constCount) - (this.constCount)" to="((other.constCount) - (this.constCount)) * -1" />
    <mutant id="mutant_934" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(other.constCount) - (this.constCount)" to="((other.constCount) - (this.constCount)) - 1" />
    <mutant id="mutant_935" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(other.constCount) - (this.constCount)" to="((other.constCount) - (this.constCount)) + 1" />
    <mutant id="mutant_930" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath(java.lang.String,org.apache.shindig.protocol.DefaultHandlerRegistry$RestInvocationHandler)" from="(&quot;Invalid REST path part format &quot; + part)" to="((&quot;Invalid REST path part format &quot; + part) - 1)" />
    <mutant id="mutant_931" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.equals(java.lang.Object)" from="(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex)))" to="(!(((this.constCount) == (that.constCount)) &amp;&amp; ((this.lastConstIndex) == (that.lastConstIndex))))" />
    <mutant id="mutant_936" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(this.lastConstIndex) - (other.lastConstIndex)" to="((this.lastConstIndex) - (other.lastConstIndex)) + 1" />
    <mutant id="mutant_937" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(this.lastConstIndex) - (other.lastConstIndex)" to="((this.lastConstIndex) - (other.lastConstIndex)) * -1" />
    <mutant id="mutant_938" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.compareTo(org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath)" from="(this.lastConstIndex) - (other.lastConstIndex)" to="((this.lastConstIndex) - (other.lastConstIndex)) - 1" />
    <mutant id="mutant_939" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)) &amp;&amp; (!(parts.get(i).partName.equals(requestPathParts[i])))" to="!(((parts.get(i).type) == (DefaultHandlerRegistry.RestPath.PartType.CONST)) &amp;&amp; (!(parts.get(i).partName.equals(requestPathParts[i]))))" />
    <mutant id="mutant_701" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) * -1)" />
    <mutant id="mutant_943" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) * -1)" />
    <mutant id="mutant_702" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + 1)" />
    <mutant id="mutant_944" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) - 1)" />
    <mutant id="mutant_703" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="((((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString())) + 1)" />
    <mutant id="mutant_945" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;)" to="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + 1)" />
    <mutant id="mutant_704" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="((((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString())) * -1)" />
    <mutant id="mutant_946" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + 1)" />
    <mutant id="mutant_940" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + 1)" />
    <mutant id="mutant_941" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) * -1)" />
    <mutant id="mutant_700" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;)" to="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) - 1)" />
    <mutant id="mutant_942" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(&quot;Cannot expect plural value &quot; + (requestPathParts[i]))" to="((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) - 1)" />
    <mutant id="mutant_709" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object)" from="(source == null) || ((delegatedClasses) == null)" to="!((source == null) || ((delegatedClasses) == null))" />
    <mutant id="mutant_705" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString()))" to="((((&quot;Enum &quot; + (dataClass.getName())) + &quot; don\'t have mapping for value &quot;) + (f.toString())) - 1)" />
    <mutant id="mutant_947" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) - 1)" />
    <mutant id="mutant_706" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="((&quot;Unknown enum value &quot; + (value.name())) * -1)" />
    <mutant id="mutant_948" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i)))" to="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) * -1)" />
    <mutant id="mutant_707" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="((&quot;Unknown enum value &quot; + (value.name())) + 1)" />
    <mutant id="mutant_949" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) - 1)" />
    <mutant id="mutant_708" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.convertEnum(java.lang.Enum)" from="(&quot;Unknown enum value &quot; + (value.name()))" to="((&quot;Unknown enum value &quot; + (value.name())) - 1)" />
    <mutant id="mutant_712" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="((&quot;Missing enum value &quot; + (val1.name())) - 1)" />
    <mutant id="mutant_954" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="((((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath)) - 1)" />
    <mutant id="mutant_713" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) * -1)" />
    <mutant id="mutant_955" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="(((method.getKey()) + ' ') + 1)" />
    <mutant id="mutant_714" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + 1)" />
    <mutant id="mutant_956" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="(((method.getKey()) + ' ') - 1)" />
    <mutant id="mutant_715" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;)" to="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) - 1)" />
    <mutant id="mutant_957" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="((method.getKey()) + ' ')" to="(((method.getKey()) + ' ') * -1)" />
    <mutant id="mutant_950" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) * -1)" />
    <mutant id="mutant_951" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;)" to="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + 1)" />
    <mutant id="mutant_710" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="((&quot;Missing enum value &quot; + (val1.name())) * -1)" />
    <mutant id="mutant_952" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="((((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath)) * -1)" />
    <mutant id="mutant_711" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(&quot;Missing enum value &quot; + (val1.name()))" to="((&quot;Missing enum value &quot; + (val1.name())) + 1)" />
    <mutant id="mutant_953" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry$RestPath.accept(java.lang.String[])" from="(((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath))" to="((((((&quot;Cannot expect plural value &quot; + (requestPathParts[i])) + &quot; for singular field &quot;) + (parts.get(i))) + &quot; for path &quot;) + (operationPath)) + 1)" />
    <mutant id="mutant_716" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="((((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName())) - 1)" />
    <mutant id="mutant_958" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="((((method.getKey()) + ' ') + (path.operationPath)) * -1)" />
    <mutant id="mutant_717" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="((((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName())) * -1)" />
    <mutant id="mutant_959" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="((((method.getKey()) + ' ') + (path.operationPath)) + 1)" />
    <mutant id="mutant_718" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDefaultEnumMap(java.lang.Class,java.lang.Class)" from="(((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName()))" to="((((&quot;Missing enum value &quot; + (val1.name())) + &quot; for enum &quot;) + (targetEnum.getName())) + 1)" />
    <mutant id="mutant_719" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="((&quot;Method &quot; + (method.getName())) * -1)" />
    <mutant id="mutant_723" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + 1)" />
    <mutant id="mutant_965" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="((&quot;The method &quot; + key) - 1)" />
    <mutant id="mutant_724" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) - 1)" />
    <mutant id="mutant_966" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="((&quot;The method &quot; + key) * -1)" />
    <mutant id="mutant_725" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="((((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName())) - 1)" />
    <mutant id="mutant_967" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="(((&quot;The method &quot; + key) + &quot; is not implemented&quot;) - 1)" />
    <mutant id="mutant_726" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="((((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName())) + 1)" />
    <mutant id="mutant_968" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="(((&quot;The method &quot; + key) + &quot; is not implemented&quot;) + 1)" />
    <mutant id="mutant_961" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="((&quot;No service defined for path &quot; + path) * -1)" />
    <mutant id="mutant_720" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="((&quot;Method &quot; + (method.getName())) - 1)" />
    <mutant id="mutant_962" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="((&quot;No service defined for path &quot; + path) + 1)" />
    <mutant id="mutant_721" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="((&quot;Method &quot; + (method.getName())) + 1)" />
    <mutant id="mutant_963" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRestHandler(java.lang.String,java.lang.String)" from="(&quot;No service defined for path &quot; + path)" to="((&quot;No service defined for path &quot; + path) - 1)" />
    <mutant id="mutant_722" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;)" to="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) * -1)" />
    <mutant id="mutant_964" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="(&quot;The method &quot; + key)" to="((&quot;The method &quot; + key) + 1)" />
    <mutant id="mutant_727" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName()))" to="((((&quot;Method &quot; + (method.getName())) + &quot; is not implemented by &quot;) + (dataClass.getName())) * -1)" />
    <mutant id="mutant_969" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getRpcHandler(org.json.JSONObject)" from="((&quot;The method &quot; + key) + &quot; is not implemented&quot;)" to="(((&quot;The method &quot; + key) + &quot; is not implemented&quot;) * -1)" />
    <mutant id="mutant_728" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="((&quot;Method &quot; + (method.getName())) * -1)" />
    <mutant id="mutant_729" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="((&quot;Method &quot; + (method.getName())) - 1)" />
    <mutant id="mutant_960" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.getSupportedRestServices()" from="(((method.getKey()) + ' ') + (path.operationPath))" to="((((method.getKey()) + ' ') + (path.operationPath)) - 1)" />
    <mutant id="mutant_734" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="((((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName())) * -1)" />
    <mutant id="mutant_976" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="(('/' + serviceName) - 1)" />
    <mutant id="mutant_735" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="((((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName())) + 1)" />
    <mutant id="mutant_977" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="(('/' + serviceName) + 1)" />
    <mutant id="mutant_736" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName()))" to="((((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + (dataClass.getName())) - 1)" />
    <mutant id="mutant_978" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="(('/' + serviceName) * -1)" />
    <mutant id="mutant_737" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="(fieldName + (BeanFilter.DELIMITER)) - 1" />
    <mutant id="mutant_979" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="((('/' + serviceName) + (op.path())) * -1)" />
    <mutant id="mutant_730" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="(&quot;Method &quot; + (method.getName()))" to="((&quot;Method &quot; + (method.getName())) + 1)" />
    <mutant id="mutant_972" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="(('/' + serviceName) * -1)" />
    <mutant id="mutant_731" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) * -1)" />
    <mutant id="mutant_973" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="((('/' + serviceName) + (service.path())) + 1)" />
    <mutant id="mutant_732" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) - 1)" />
    <mutant id="mutant_974" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="((('/' + serviceName) + (service.path())) * -1)" />
    <mutant id="mutant_733" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validate(java.lang.Class,java.lang.Class)" from="((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;)" to="(((&quot;Method &quot; + (method.getName())) + &quot; has wrong return type by &quot;) + 1)" />
    <mutant id="mutant_975" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (service.path()))" to="((('/' + serviceName) + (service.path())) - 1)" />
    <mutant id="mutant_738" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="(fieldName + (BeanFilter.DELIMITER)) + 1" />
    <mutant id="mutant_739" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler(java.lang.Object,java.util.Set,java.lang.String)" from="fieldName + (BeanFilter.DELIMITER)" to="(fieldName + (BeanFilter.DELIMITER)) * -1" />
    <mutant id="mutant_970" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="(('/' + serviceName) - 1)" />
    <mutant id="mutant_971" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="('/' + serviceName)" to="(('/' + serviceName) + 1)" />
    <mutant id="mutant_503" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) - 1)" />
    <mutant id="mutant_745" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null))" to="(!((result != null) &amp;&amp; (fieldName != null)))" />
    <mutant id="mutant_987" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="(((&quot;No REST binding for &quot; + (service.name())) + '.') * -1)" />
    <mutant id="mutant_504" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="(((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;) + 1)" />
    <mutant id="mutant_746" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="((fieldName + (BeanFilter.DELIMITER)) - 1)" />
    <mutant id="mutant_988" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="((((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName())) * -1)" />
    <mutant id="mutant_505" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="(((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;) - 1)" />
    <mutant id="mutant_747" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="((fieldName + (BeanFilter.DELIMITER)) + 1)" />
    <mutant id="mutant_989" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="((((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName())) + 1)" />
    <mutant id="mutant_506" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;)" to="(((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' doesn\'t exist.&quot;) * -1)" />
    <mutant id="mutant_748" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(fieldName + (BeanFilter.DELIMITER))" to="((fieldName + (BeanFilter.DELIMITER)) * -1)" />
    <mutant id="mutant_741" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="((prefix) + (method.getName().substring(3).toLowerCase())) * -1" />
    <mutant id="mutant_983" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="((&quot;No REST binding for &quot; + (service.name())) + 1)" />
    <mutant id="mutant_500" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)) || (file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;))" to="!((file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.js&quot;)) || (file.getName().toLowerCase(java.util.Locale.ENGLISH).endsWith(&quot;.json&quot;)))" />
    <mutant id="mutant_742" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="((prefix) + (method.getName().substring(3).toLowerCase())) + 1" />
    <mutant id="mutant_984" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="((&quot;No REST binding for &quot; + (service.name())) - 1)" />
    <mutant id="mutant_501" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) + 1)" />
    <mutant id="mutant_743" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(prefix) + (method.getName().substring(3).toLowerCase())" to="((prefix) + (method.getName().substring(3).toLowerCase())) - 1" />
    <mutant id="mutant_985" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="(((&quot;No REST binding for &quot; + (service.name())) + '.') - 1)" />
    <mutant id="mutant_502" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) * -1)" />
    <mutant id="mutant_744" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!required) &amp;&amp; (!(fields.contains(fieldName)))" to="!((!required) &amp;&amp; (!(fields.contains(fieldName))))" />
    <mutant id="mutant_986" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No REST binding for &quot; + (service.name())) + '.')" to="(((&quot;No REST binding for &quot; + (service.name())) + '.') + 1)" />
    <mutant id="mutant_507" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="(((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;) - 1)" />
    <mutant id="mutant_749" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)) + 1)" />
    <mutant id="mutant_508" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="(((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;) + 1)" />
    <mutant id="mutant_509" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;)" to="(((file.getAbsolutePath()) + &quot; doesn\'t seem to be a JS or JSON file.&quot;) * -1)" />
    <mutant id="mutant_980" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="((('/' + serviceName) + (op.path())) + 1)" />
    <mutant id="mutant_981" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(('/' + serviceName) + (op.path()))" to="((('/' + serviceName) + (op.path())) - 1)" />
    <mutant id="mutant_740" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(method.getName().startsWith(&quot;get&quot;)) &amp;&amp; (!(method.getReturnType().isPrimitive()))" to="!((method.getName().startsWith(&quot;get&quot;)) &amp;&amp; (!(method.getReturnType().isPrimitive())))" />
    <mutant id="mutant_982" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No REST binding for &quot; + (service.name()))" to="((&quot;No REST binding for &quot; + (service.name())) * -1)" />
    <mutant id="mutant_514" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="(((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;) - 1)" />
    <mutant id="mutant_756" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((depth &gt; 1) &amp;&amp; (returnType != null))" to="(!((depth &gt; 1) &amp;&amp; (returnType != null)))" />
    <mutant id="mutant_998" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="((&quot;No RPC binding for &quot; + (service.name())) - 1)" />
    <mutant id="mutant_515" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="(((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;) + 1)" />
    <mutant id="mutant_757" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive())))" to="(!(((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))))" />
    <mutant id="mutant_999" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="((&quot;No RPC binding for &quot; + (service.name())) * -1)" />
    <mutant id="mutant_516" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(content == null) || ((content.length()) == 0)" to="!((content == null) || ((content.length()) == 0))" />
    <mutant id="mutant_758" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum())))" to="(!((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))))" />
    <mutant id="mutant_517" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="((&quot;The file &quot; + entry) + 1)" />
    <mutant id="mutant_759" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType)))" to="!(((((depth &gt; 1) &amp;&amp; (returnType != null)) &amp;&amp; (!(returnType.isPrimitive()))) &amp;&amp; (!(returnType.isEnum()))) &amp;&amp; (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(returnType))))" />
    <mutant id="mutant_510" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) + 1)" />
    <mutant id="mutant_752" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((result != null) &amp;&amp; (fieldName != null)) &amp;&amp; (!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)))))" to="!(((result != null) &amp;&amp; (fieldName != null)) &amp;&amp; (!(fields.contains(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))))))" />
    <mutant id="mutant_994" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="((((service.name()) + '.') + opName) * -1)" />
    <mutant id="mutant_511" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) * -1)" />
    <mutant id="mutant_753" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="((data == null) || (fields == null))" to="(!((data == null) || (fields == null)))" />
    <mutant id="mutant_995" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="((((service.name()) + '.') + opName) - 1)" />
    <mutant id="mutant_512" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="(&quot;The file \'&quot; + (file.getAbsolutePath()))" to="((&quot;The file \'&quot; + (file.getAbsolutePath())) - 1)" />
    <mutant id="mutant_754" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass())))" to="(!(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))))" />
    <mutant id="mutant_996" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((service.name()) + '.') + opName)" to="((((service.name()) + '.') + opName) + 1)" />
    <mutant id="mutant_513" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFiles(java.io.File[],java.util.List)" from="((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;)" to="(((&quot;The file \'&quot; + (file.getAbsolutePath())) + &quot;\' has errors&quot;) * -1)" />
    <mutant id="mutant_755" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.createFilteredBean(java.lang.Object,java.util.Set,java.lang.String)" from="(((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))) || (fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS))" to="!((((data == null) || (fields == null)) || (BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(data.getClass()))) || (fields.contains(org.apache.shindig.protocol.conversion.BeanFilter.ALL_FIELDS)))" />
    <mutant id="mutant_997" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(&quot;No RPC binding for &quot; + (service.name()))" to="((&quot;No RPC binding for &quot; + (service.name())) + 1)" />
    <mutant id="mutant_518" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="((&quot;The file &quot; + entry) - 1)" />
    <mutant id="mutant_519" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="(&quot;The file &quot; + entry)" to="((&quot;The file &quot; + entry) * -1)" />
    <mutant id="mutant_990" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRestHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName()))" to="((((&quot;No REST binding for &quot; + (service.name())) + '.') + (m.getName())) - 1)" />
    <mutant id="mutant_991" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="(((service.name()) + '.') * -1)" />
    <mutant id="mutant_750" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)) - 1)" />
    <mutant id="mutant_992" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="(((service.name()) + '.') - 1)" />
    <mutant id="mutant_751" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter$FilterInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS))" to="(((fieldName + (BeanFilter.DELIMITER)) + (BeanFilter.ALL_FIELDS)) * -1)" />
    <mutant id="mutant_993" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((service.name()) + '.')" to="(((service.name()) + '.') + 1)" />
    <mutant id="mutant_525" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="((&quot;Property \'&quot; + propertyName) - 1)" />
    <mutant id="mutant_767" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="(((fieldName + (BeanFilter.DELIMITER)) + field) - 1)" />
    <mutant id="mutant_526" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="((&quot;Property \'&quot; + propertyName) + 1)" />
    <mutant id="mutant_768" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="(((fieldName + (BeanFilter.DELIMITER)) + field) + 1)" />
    <mutant id="mutant_527" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + 1)" />
    <mutant id="mutant_769" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="((&quot;No enum value &quot; + value) - 1)" />
    <mutant id="mutant_528" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) - 1)" />
    <mutant id="mutant_521" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="(((&quot;The file &quot; + entry) + &quot;is empty&quot;) - 1)" />
    <mutant id="mutant_763" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="((fieldName + (BeanFilter.DELIMITER)) - 1)" />
    <mutant id="mutant_522" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="(((&quot;The file &quot; + entry) + &quot;is empty&quot;) * -1)" />
    <mutant id="mutant_764" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="((fieldName + (BeanFilter.DELIMITER)) + 1)" />
    <mutant id="mutant_523" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ClassFieldMapping.matches(java.lang.String,java.lang.Class)" from="(fieldParentName.equals(parent)) &amp;&amp; (mappedClazz.isAssignableFrom(type))" to="!((fieldParentName.equals(parent)) &amp;&amp; (mappedClazz.isAssignableFrom(type)))" />
    <mutant id="mutant_765" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(fieldName + (BeanFilter.DELIMITER))" to="((fieldName + (BeanFilter.DELIMITER)) * -1)" />
    <mutant id="mutant_524" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(&quot;Property \'&quot; + propertyName)" to="((&quot;Property \'&quot; + propertyName) * -1)" />
    <mutant id="mutant_766" viable="false" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="((fieldName + (BeanFilter.DELIMITER)) + field)" to="(((fieldName + (BeanFilter.DELIMITER)) + field) * -1)" />
    <mutant id="mutant_529" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;)" to="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) * -1)" />
    <mutant id="mutant_760" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="((depth - 1) - 1)" />
    <mutant id="mutant_761" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="((depth - 1) + 1)" />
    <mutant id="mutant_520" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadResources(java.lang.Iterable,java.util.List)" from="((&quot;The file &quot; + entry) + &quot;is empty&quot;)" to="(((&quot;The file &quot; + entry) + &quot;is empty&quot;) + 1)" />
    <mutant id="mutant_762" viable="true" in="org.apache.shindig.protocol.conversion.BeanFilter.getBeanFields(java.lang.Class,int)" from="(depth - 1)" to="((depth - 1) * -1)" />
    <mutant id="mutant_536" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.canStreamProperty(java.beans.PropertyDescriptor)" from="((descriptor.getReadMethod()) != null) &amp;&amp; ((descriptor.getWriteMethod()) != null)" to="!(((descriptor.getReadMethod()) != null) &amp;&amp; ((descriptor.getWriteMethod()) != null))" />
    <mutant id="mutant_778" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type == null) || (type.equals(java.lang.Object.class))" to="!((type == null) || (type.equals(java.lang.Object.class)))" />
    <mutant id="mutant_537" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) * -1)" />
    <mutant id="mutant_779" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Boolean.class)) || (type.equals(java.lang.Boolean.TYPE))" to="!((type.equals(java.lang.Boolean.class)) || (type.equals(java.lang.Boolean.TYPE)))" />
    <mutant id="mutant_538" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) + 1)" />
    <mutant id="mutant_539" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) - 1)" />
    <mutant id="mutant_532" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="((((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName())) * -1)" />
    <mutant id="mutant_774" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="(((&quot;No enum value &quot; + value) + &quot; in &quot;) - 1)" />
    <mutant id="mutant_533" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="((&quot;Cannot get BeanInfo of type &quot; + (type.getName())) + 1)" />
    <mutant id="mutant_775" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="((((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName())) - 1)" />
    <mutant id="mutant_534" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="((&quot;Cannot get BeanInfo of type &quot; + (type.getName())) * -1)" />
    <mutant id="mutant_776" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="((((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName())) + 1)" />
    <mutant id="mutant_535" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$1.load(java.lang.Class)" from="(&quot;Cannot get BeanInfo of type &quot; + (type.getName()))" to="((&quot;Cannot get BeanInfo of type &quot; + (type.getName())) - 1)" />
    <mutant id="mutant_777" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName()))" to="((((&quot;No enum value &quot; + value) + &quot; in &quot;) + (type.getName())) * -1)" />
    <mutant id="mutant_770" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="((&quot;No enum value &quot; + value) * -1)" />
    <mutant id="mutant_771" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="(&quot;No enum value &quot; + value)" to="((&quot;No enum value &quot; + value) + 1)" />
    <mutant id="mutant_530" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="((((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName())) - 1)" />
    <mutant id="mutant_772" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="(((&quot;No enum value &quot; + value) + &quot; in &quot;) * -1)" />
    <mutant id="mutant_531" viable="true" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanConverter.unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext)" from="(((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName()))" to="((((&quot;Property \'&quot; + propertyName) + &quot;\' not defined in class &quot;) + (result.getClass().getName())) + 1)" />
    <mutant id="mutant_773" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToEnum(java.lang.String,java.lang.Class)" from="((&quot;No enum value &quot; + value) + &quot; in &quot;)" to="(((&quot;No enum value &quot; + value) + &quot; in &quot;) + 1)" />
    <mutant id="mutant_305" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.patch) - (object2.patch)" to="((object1.patch) - (object2.patch)) * -1" />
    <mutant id="mutant_547" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) + 1)" />
    <mutant id="mutant_789" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="((name.substring(3, 4).toLowerCase()) + (name.substring(4))) - 1" />
    <mutant id="mutant_306" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="(((getScheme()) + &quot;://&quot;) * -1)" />
    <mutant id="mutant_548" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) - 1)" />
    <mutant id="mutant_307" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="(((getScheme()) + &quot;://&quot;) - 1)" />
    <mutant id="mutant_549" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') - 1)" />
    <mutant id="mutant_308" viable="true" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;)" to="(((getScheme()) + &quot;://&quot;) + 1)" />
    <mutant id="mutant_301" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.minor) - (object2.minor)" to="((object1.minor) - (object2.minor)) * -1" />
    <mutant id="mutant_543" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) - 1)" />
    <mutant id="mutant_785" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers()))))" to="(!((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))))" />
    <mutant id="mutant_302" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.minor) - (object2.minor)" to="((object1.minor) - (object2.minor)) + 1" />
    <mutant id="mutant_544" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) * -1)" />
    <mutant id="mutant_786" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))) &amp;&amp; (!(setter.isBridge()))" to="!(((name.startsWith(&quot;set&quot;)) &amp;&amp; (!(Modifier.isStatic(setter.getModifiers())))) &amp;&amp; (!(setter.isBridge())))" />
    <mutant id="mutant_303" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.patch) - (object2.patch)" to="((object1.patch) - (object2.patch)) - 1" />
    <mutant id="mutant_545" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) + 1)" />
    <mutant id="mutant_787" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="((name.substring(3, 4).toLowerCase()) + (name.substring(4))) + 1" />
    <mutant id="mutant_304" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.patch) - (object2.patch)" to="((object1.patch) - (object2.patch)) + 1" />
    <mutant id="mutant_546" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) * -1)" />
    <mutant id="mutant_788" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.getPropertyName(java.lang.reflect.Method)" from="(name.substring(3, 4).toLowerCase()) + (name.substring(4))" to="((name.substring(3, 4).toLowerCase()) + (name.substring(4))) * -1" />
    <mutant id="mutant_309" viable="true" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="(((getScheme()) + &quot;://&quot;) + (getAuthority())) + 1" />
    <mutant id="mutant_781" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Long.class)) || (type.equals(java.lang.Long.TYPE))" to="!((type.equals(java.lang.Long.class)) || (type.equals(java.lang.Long.TYPE)))" />
    <mutant id="mutant_540" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') - 1)" />
    <mutant id="mutant_782" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Double.class)) || (type.equals(java.lang.Double.TYPE))" to="!((type.equals(java.lang.Double.class)) || (type.equals(java.lang.Double.TYPE)))" />
    <mutant id="mutant_541" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + 1)" />
    <mutant id="mutant_783" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Float.class)) || (type.equals(java.lang.Float.TYPE))" to="!((type.equals(java.lang.Float.class)) || (type.equals(java.lang.Float.TYPE)))" />
    <mutant id="mutant_300" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.minor) - (object2.minor)" to="((object1.minor) - (object2.minor)) - 1" />
    <mutant id="mutant_542" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') * -1)" />
    <mutant id="mutant_784" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.util.List.class)) || (type.equals(java.util.Collection.class))" to="!((type.equals(java.util.List.class)) || (type.equals(java.util.Collection.class)))" />
    <mutant id="mutant_780" viable="false" in="org.apache.shindig.protocol.conversion.BeanJsonConverter.convertToObject(java.lang.Object,java.lang.reflect.Type)" from="(type.equals(java.lang.Integer.class)) || (type.equals(java.lang.Integer.TYPE))" to="!((type.equals(java.lang.Integer.class)) || (type.equals(java.lang.Integer.TYPE)))" />
    <mutant id="mutant_316" viable="false" in="?" from="(60 * 60)" to="((60 * 60) + 1)" />
    <mutant id="mutant_558" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') - 1)" />
    <mutant id="mutant_317" viable="false" in="?" from="(60 * 60)" to="((60 * 60) * -1)" />
    <mutant id="mutant_559" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + 1)" />
    <mutant id="mutant_318" viable="false" in="?" from="(60 * 60)" to="((60 * 60) - 1)" />
    <mutant id="mutant_319" viable="false" in="?" from="((60 * 60) * 24)" to="(((60 * 60) * 24) * -1)" />
    <mutant id="mutant_312" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(systemProperties != null) &amp;&amp; ((systemProperties.trim().length()) &gt; 0)" to="!((systemProperties != null) &amp;&amp; ((systemProperties.trim().length()) &gt; 0))" />
    <mutant id="mutant_554" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) + 1)" />
    <mutant id="mutant_796" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) + 1)" />
    <mutant id="mutant_313" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="((key != null) &amp;&amp; ((key.trim().length()) &gt; 0))" to="(!((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)))" />
    <mutant id="mutant_555" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) * -1)" />
    <mutant id="mutant_797" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) - 1)" />
    <mutant id="mutant_314" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null))" to="(!(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)))" />
    <mutant id="mutant_556" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) + 1)" />
    <mutant id="mutant_798" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) * -1)" />
    <mutant id="mutant_315" viable="true" in="org.apache.shindig.common.servlet.GuiceServletContextListener.setSystemProperties(javax.servlet.ServletContext)" from="(((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)) &amp;&amp; ((value.trim().length()) &gt; 0)" to="!((((key != null) &amp;&amp; ((key.trim().length()) &gt; 0)) &amp;&amp; (value != null)) &amp;&amp; ((value.trim().length()) &gt; 0))" />
    <mutant id="mutant_557" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(&quot;Could not get property &quot; + (object.getClass()))" to="((&quot;Could not get property &quot; + (object.getClass())) - 1)" />
    <mutant id="mutant_799" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) * -1)" />
    <mutant id="mutant_550" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + 1)" />
    <mutant id="mutant_792" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) * -1)" />
    <mutant id="mutant_551" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="((&quot;Could not get property &quot; + (object.getClass())) + '.')" to="(((&quot;Could not get property &quot; + (object.getClass())) + '.') * -1)" />
    <mutant id="mutant_793" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="((BeanXStreamConverter.XML_DECL) + result) * -1" />
    <mutant id="mutant_310" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="(((getScheme()) + &quot;://&quot;) + (getAuthority())) - 1" />
    <mutant id="mutant_552" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) - 1)" />
    <mutant id="mutant_794" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="((BeanXStreamConverter.XML_DECL) + result) - 1" />
    <mutant id="mutant_311" viable="false" in="org.apache.shindig.common.servlet.BasicAuthority.getOrigin()" from="((getScheme()) + &quot;://&quot;) + (getAuthority())" to="(((getScheme()) + &quot;://&quot;) + (getAuthority())) * -1" />
    <mutant id="mutant_553" viable="false" in="org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider.visitSerializableProperties(java.lang.Object,org.apache.shindig.protocol.conversion.xstream.GuiceBeanProvider$Visitor)" from="(((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName()))" to="((((&quot;Could not get property &quot; + (object.getClass())) + '.') + (property.getName())) * -1)" />
    <mutant id="mutant_795" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="((BeanXStreamConverter.XML_DECL) + result) + 1" />
    <mutant id="mutant_790" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) + 1)" />
    <mutant id="mutant_791" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) - 1)" />
    <mutant id="mutant_9" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="((((&quot;Method &quot; + prefix) + ':') + methodName) * -1)" />
    <mutant id="mutant_206" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="(((jsonArrayString.length()) - 1) * -1)" />
    <mutant id="mutant_448" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((array.length()) * (JsonSerializer.BASE_MULTIPLIER)) - 1)" />
    <mutant id="mutant_8" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="(((&quot;Method &quot; + prefix) + ':') + 1)" />
    <mutant id="mutant_207" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="(((jsonArrayString.length()) - 1) - 1)" />
    <mutant id="mutant_449" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((array.length()) * (JsonSerializer.BASE_MULTIPLIER)) * -1)" />
    <mutant id="mutant_208" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="(('(' + jsonArrayString) - 1)" />
    <mutant id="mutant_209" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="(('(' + jsonArrayString) * -1)" />
    <mutant id="mutant_5" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="((&quot;Method &quot; + prefix) - 1)" />
    <mutant id="mutant_202" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="(((prefix + '.') + key) + 1)" />
    <mutant id="mutant_444" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((map.size()) * (JsonSerializer.BASE_MULTIPLIER)) * -1)" />
    <mutant id="mutant_686" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source instanceof java.lang.Enum&lt;?&gt;) &amp;&amp; (delegatedClasses.containsKey(source.getClass()))" to="!((source instanceof java.lang.Enum&lt;?&gt;) &amp;&amp; (delegatedClasses.containsKey(source.getClass())))" />
    <mutant id="mutant_4" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="((&quot;Method &quot; + prefix) + 1)" />
    <mutant id="mutant_203" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="(((prefix + '.') + key) - 1)" />
    <mutant id="mutant_445" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((map.size()) * (JsonSerializer.BASE_MULTIPLIER)) + 1)" />
    <mutant id="mutant_687" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="!((!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass())))" />
    <mutant id="mutant_7" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="(((&quot;Method &quot; + prefix) + ':') - 1)" />
    <mutant id="mutant_204" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '.') + key)" to="(((prefix + '.') + key) * -1)" />
    <mutant id="mutant_446" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Map)" from="((map.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((map.size()) * (JsonSerializer.BASE_MULTIPLIER)) - 1)" />
    <mutant id="mutant_688" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass()))" to="!((!(mapSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(mapSource.values().iterator().next().getClass())))" />
    <mutant id="mutant_6" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((&quot;Method &quot; + prefix) + ':')" to="(((&quot;Method &quot; + prefix) + ':') * -1)" />
    <mutant id="mutant_205" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((jsonArrayString.length()) - 1)" to="(((jsonArrayString.length()) - 1) + 1)" />
    <mutant id="mutant_447" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONArray)" from="((array.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((array.length()) * (JsonSerializer.BASE_MULTIPLIER)) + 1)" />
    <mutant id="mutant_689" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(!(listSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(listSource.get(0).getClass()))" to="!((!(listSource.isEmpty())) &amp;&amp; (delegatedClasses.containsKey(listSource.get(0).getClass())))" />
    <mutant id="mutant_85" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="((((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType) * -1)" />
    <mutant id="mutant_84" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + 1)" />
    <mutant id="mutant_87" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="((((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType) + 1)" />
    <mutant id="mutant_86" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType)" to="((((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) + tokenType) - 1)" />
    <mutant id="mutant_89" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure) &amp;&amp; ((request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null)" to="!(((token == null) &amp;&amp; isSecure) &amp;&amp; ((request.getParameter(net.oauth.OAuth.OAUTH_SIGNATURE_METHOD)) == null))" />
    <mutant id="mutant_88" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="((token == null) &amp;&amp; isSecure)" to="(!((token == null) &amp;&amp; isSecure))" />
    <mutant id="mutant_90" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(token == null) &amp;&amp; isSecure" to="!((token == null) &amp;&amp; isSecure)" />
    <mutant id="mutant_92" viable="false" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="((&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME))) * -1)" />
    <mutant id="mutant_91" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getMappedParameters(javax.servlet.http.HttpServletRequest)" from="(headers != null) &amp;&amp; (headers.hasMoreElements())" to="!((headers != null) &amp;&amp; (headers.hasMoreElements()))" />
    <mutant id="mutant_94" viable="true" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="((&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME))) + 1)" />
    <mutant id="mutant_93" viable="false" in="org.apache.shindig.auth.UrlParameterAuthenticationHandler.getSecurityTokenFromRequest(javax.servlet.http.HttpServletRequest)" from="(&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME)))" to="((&quot;Malformed security token &quot; + (parameters.get(org.apache.shindig.auth.SecurityTokenCodec.SECURITY_TOKEN_NAME))) - 1)" />
    <mutant id="mutant_1" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class)))" to="(!(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))))" />
    <mutant id="mutant_440" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="(((array.length) * (JsonSerializer.BASE_MULTIPLIER)) + 1)" />
    <mutant id="mutant_682" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="((&quot;Unsupported function: &quot; + (method.getName())) + 1)" />
    <mutant id="mutant_0" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="((type == (Boolean.class)) || (type == (Boolean.TYPE)))" to="(!((type == (Boolean.class)) || (type == (Boolean.TYPE))))" />
    <mutant id="mutant_441" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((collection.size()) * (JsonSerializer.BASE_MULTIPLIER)) * -1)" />
    <mutant id="mutant_683" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="((&quot;Unsupported function: &quot; + (method.getName())) - 1)" />
    <mutant id="mutant_3" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(&quot;Method &quot; + prefix)" to="((&quot;Method &quot; + prefix) * -1)" />
    <mutant id="mutant_200" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="((prefix + '.') + 1)" />
    <mutant id="mutant_442" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((collection.size()) * (JsonSerializer.BASE_MULTIPLIER)) - 1)" />
    <mutant id="mutant_684" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(source == null) &amp;&amp; (!(extraFields.isEmpty()))" to="!((source == null) &amp;&amp; (!(extraFields.isEmpty())))" />
    <mutant id="mutant_2" viable="true" in="org.apache.shindig.expressions.jasper.JasperTypeConverter.isPostConvertible(java.lang.Class)" from="(((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))) || (type == (Iterable.class))" to="!((((type == (Boolean.class)) || (type == (Boolean.TYPE))) || (type == (JSONArray.class))) || (type == (Iterable.class)))" />
    <mutant id="mutant_201" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '.')" to="((prefix + '.') - 1)" />
    <mutant id="mutant_443" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.util.Collection)" from="((collection.size()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((collection.size()) * (JsonSerializer.BASE_MULTIPLIER)) + 1)" />
    <mutant id="mutant_685" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.createDelegator(java.lang.Object,java.lang.Class,java.util.Map)" from="(apiInterface.isPrimitive()) || (apiInterface.isAssignableFrom(source.getClass()))" to="!((apiInterface.isPrimitive()) || (apiInterface.isAssignableFrom(source.getClass())))" />
    <mutant id="mutant_680" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(!(extraFields.isEmpty())) &amp;&amp; (method.getName().startsWith(&quot;get&quot;))" to="!((!(extraFields.isEmpty())) &amp;&amp; (method.getName().startsWith(&quot;get&quot;)))" />
    <mutant id="mutant_681" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator$DelegateInvocationHandler.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])" from="(&quot;Unsupported function: &quot; + (method.getName()))" to="((&quot;Unsupported function: &quot; + (method.getName())) * -1)" />
    <mutant id="mutant_217" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="(((prefix + '(') + i) * -1)" />
    <mutant id="mutant_459" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute)))" to="(!((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))))" />
    <mutant id="mutant_218" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="(((prefix + '(') + i) + 1)" />
    <mutant id="mutant_219" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="(((prefix + '(') + i) - 1)" />
    <mutant id="mutant_213" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="(('(' + jsonArrayString) + ')') * -1" />
    <mutant id="mutant_455" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime))" to="(!((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)))" />
    <mutant id="mutant_697" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="((&quot;Enum &quot; + (dataClass.getName())) * -1)" />
    <mutant id="mutant_214" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="((prefix + '(') - 1)" />
    <mutant id="mutant_456" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale))" to="(!(((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)))" />
    <mutant id="mutant_698" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="((&quot;Enum &quot; + (dataClass.getName())) + 1)" />
    <mutant id="mutant_215" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="((prefix + '(') + 1)" />
    <mutant id="mutant_457" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri))" to="(!((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)))" />
    <mutant id="mutant_699" viable="false" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(&quot;Enum &quot; + (dataClass.getName()))" to="((&quot;Enum &quot; + (dataClass.getName())) - 1)" />
    <mutant id="mutant_216" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="((prefix + '(') * -1)" />
    <mutant id="mutant_458" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)) || (value.getClass().isEnum())" to="!(((((value instanceof java.lang.CharSequence) || (value instanceof org.joda.time.DateTime)) || (value instanceof java.util.Locale)) || (value instanceof org.apache.shindig.common.uri.Uri)) || (value.getClass().isEnum()))" />
    <mutant id="mutant_74" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) * -1)" />
    <mutant id="mutant_73" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + 1)" />
    <mutant id="mutant_76" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + 1)" />
    <mutant id="mutant_75" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER))" to="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) - 1)" />
    <mutant id="mutant_78" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) * -1)" />
    <mutant id="mutant_77" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;)" to="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) - 1)" />
    <mutant id="mutant_79" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) - 1)" />
    <mutant id="mutant_81" viable="true" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + 1)" />
    <mutant id="mutant_80" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="(((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE))" to="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) * -1)" />
    <mutant id="mutant_83" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) - 1)" />
    <mutant id="mutant_82" viable="false" in="org.apache.shindig.auth.DefaultSecurityTokenCodec(org.apache.shindig.config.ContainerConfig)" from="((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;)" to="(((((&quot;Unknown security token type specified in &quot; + (ContainerConfig.DEFAULT_CONTAINER)) + &quot; container configuration. &quot;) + (DefaultSecurityTokenCodec.SECURITY_TOKEN_TYPE)) + &quot;: &quot;) * -1)" />
    <mutant id="mutant_451" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((object.length()) * (JsonSerializer.BASE_MULTIPLIER)) + 1)" />
    <mutant id="mutant_693" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="!((Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Multimap.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType())))))" />
    <mutant id="mutant_210" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString)" to="(('(' + jsonArrayString) + 1)" />
    <mutant id="mutant_452" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((object.length()) * (JsonSerializer.BASE_MULTIPLIER)) - 1)" />
    <mutant id="mutant_694" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="!((dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType))))" />
    <mutant id="mutant_211" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="(('(' + jsonArrayString) + ')') + 1" />
    <mutant id="mutant_453" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value == null) || (value == (JSONObject.NULL))" to="!((value == null) || (value == (JSONObject.NULL)))" />
    <mutant id="mutant_695" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="((!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType))) &amp;&amp; (!(((Class&lt;?&gt;)(dataType)).isPrimitive())))" to="(!((!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataType))) &amp;&amp; (!(((Class&lt;?&gt;)(dataType)).isPrimitive()))))" />
    <mutant id="mutant_212" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="('(' + jsonArrayString) + ')'" to="(('(' + jsonArrayString) + ')') - 1" />
    <mutant id="mutant_454" viable="true" in="org.apache.shindig.common.JsonSerializer.append(java.lang.Appendable,java.lang.Object)" from="(value instanceof java.lang.Number) || (value instanceof java.lang.Boolean)" to="!((value instanceof java.lang.Number) || (value instanceof java.lang.Boolean))" />
    <mutant id="mutant_696" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(!(enumConvertionMap.containsKey(f))) || ((enumConvertionMap.get(f).getClass()) != interfaceType)" to="!((!(enumConvertionMap.containsKey(f))) || ((enumConvertionMap.get(f).getClass()) != interfaceType))" />
    <mutant id="mutant_690" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="!((List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (List.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType())))))" />
    <mutant id="mutant_691" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType()))))" to="!((Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(dataParamType.getRawType())))) &amp;&amp; (Map.class.isAssignableFrom(((java.lang.Class&lt;?&gt;)(interfaceParamType.getRawType())))))" />
    <mutant id="mutant_450" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(org.json.JSONObject)" from="((object.length()) * (JsonSerializer.BASE_MULTIPLIER))" to="(((object.length()) * (JsonSerializer.BASE_MULTIPLIER)) * -1)" />
    <mutant id="mutant_692" viable="true" in="org.apache.shindig.protocol.conversion.BeanDelegator.validateTypes(java.lang.reflect.Type,java.lang.reflect.Type)" from="(dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType)))" to="!((dataKeyType != interfaceKeyType) || (!(BeanDelegator.PRIMITIVE_TYPE_CLASSES.contains(dataKeyType))))" />
    <mutant id="mutant_228" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="(((prefix + '(') + i) - 1)" />
    <mutant id="mutant_229" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="((((prefix + '(') + i) + ')') + 1)" />
    <mutant id="mutant_224" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="((prefix + '(') + 1)" />
    <mutant id="mutant_466" viable="false" in="org.apache.shindig.common.JsonUtil$1.load(java.lang.Class)" from="((method.getParameterTypes().length) == 0) &amp;&amp; (!(method.isSynthetic()))" to="!(((method.getParameterTypes().length) == 0) &amp;&amp; (!(method.isSynthetic())))" />
    <mutant id="mutant_225" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="((prefix + '(') * -1)" />
    <mutant id="mutant_467" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="(name.startsWith(&quot;get&quot;)) &amp;&amp; (!(JsonUtil.EXCLUDE_METHODS.contains(name)))" to="!((name.startsWith(&quot;get&quot;)) &amp;&amp; (!(JsonUtil.EXCLUDE_METHODS.contains(name))))" />
    <mutant id="mutant_226" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="(((prefix + '(') + i) * -1)" />
    <mutant id="mutant_468" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2))" to="(!((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)))" />
    <mutant id="mutant_227" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="((prefix + '(') + i)" to="(((prefix + '(') + i) + 1)" />
    <mutant id="mutant_469" viable="false" in="org.apache.shindig.common.JsonUtil.getPropertyName(java.lang.reflect.Method)" from="((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)) &amp;&amp; (Character.isUpperCase(name.charAt(2)))" to="!(((name.startsWith(&quot;is&quot;)) &amp;&amp; ((name.length()) &gt; 2)) &amp;&amp; (Character.isUpperCase(name.charAt(2))))" />
    <mutant id="mutant_220" viable="true" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="((((prefix + '(') + i) + ')') + 1)" />
    <mutant id="mutant_462" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= '') &amp;&amp; (current &lt; ' '))" to="(!((current &gt;= '') &amp;&amp; (current &lt; ' ')))" />
    <mutant id="mutant_221" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="((((prefix + '(') + i) + ')') - 1)" />
    <mutant id="mutant_463" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' ')))" to="(!((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))))" />
    <mutant id="mutant_222" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="((((prefix + '(') + i) + ')') * -1)" />
    <mutant id="mutant_464" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="(!((current &gt;= ' ') &amp;&amp; (current &lt; '℀')))" />
    <mutant id="mutant_223" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(prefix + '(')" to="((prefix + '(') - 1)" />
    <mutant id="mutant_465" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))) || ((current &gt;= ' ') &amp;&amp; (current &lt; '℀'))" to="!(((current &lt; ' ') || ((current &gt;= '') &amp;&amp; (current &lt; ' '))) || ((current &gt;= ' ') &amp;&amp; (current &lt; '℀')))" />
    <mutant id="mutant_460" viable="true" in="org.apache.shindig.common.JsonSerializer.appendPojo(java.lang.Appendable,java.lang.Object)" from="(((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))) &amp;&amp; (value.equals(java.lang.Boolean.FALSE)))" to="(!(((&quot;isOwner&quot;.equals(attribute)) || (&quot;isViewer&quot;.equals(attribute))) &amp;&amp; (value.equals(java.lang.Boolean.FALSE))))" />
    <mutant id="mutant_461" viable="true" in="org.apache.shindig.common.JsonSerializer.appendString(java.lang.Appendable,java.lang.CharSequence)" from="(string == null) || ((string.length()) == 0)" to="!((string == null) || ((string.length()) == 0))" />
    <mutant id="mutant_239" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="((version.minor) - (minor)) * -1" />
    <mutant id="mutant_235" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="((version.major) - (major)) - 1" />
    <mutant id="mutant_477" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="((&quot;Unable to locate parent \'&quot; + parent) + 1)" />
    <mutant id="mutant_236" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="((version.major) - (major)) * -1" />
    <mutant id="mutant_478" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + 1)" />
    <mutant id="mutant_237" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.minor) &gt; (-1)) &amp;&amp; ((minor) &gt; (-1))" to="!(((version.minor) &gt; (-1)) &amp;&amp; ((minor) &gt; (-1)))" />
    <mutant id="mutant_479" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) * -1)" />
    <mutant id="mutant_238" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="((version.minor) - (minor)) - 1" />
    <mutant id="mutant_96" viable="true" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="((&quot;Creating cache named &quot; + name) + 1)" />
    <mutant id="mutant_95" viable="false" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="((&quot;Creating cache named &quot; + name) * -1)" />
    <mutant id="mutant_98" viable="true" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="((&quot;Failed to create Cache with name &quot; + cacheName) + 1)" />
    <mutant id="mutant_97" viable="false" in="org.apache.shindig.common.cache.ehcache.EhCacheCacheProvider.createCache(java.lang.String)" from="(&quot;Creating cache named &quot; + name)" to="((&quot;Creating cache named &quot; + name) - 1)" />
    <mutant id="mutant_99" viable="false" in="org.apache.shindig.common.cache.ehcache.EhConfiguredCache(java.lang.String,net.sf.ehcache.CacheManager)" from="(&quot;Failed to create Cache with name &quot; + cacheName)" to="((&quot;Failed to create Cache with name &quot; + cacheName) - 1)" />
    <mutant id="mutant_231" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="((((prefix + '(') + i) + ')') * -1)" />
    <mutant id="mutant_473" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="((&quot;Unable to load properties: &quot; + propertyFile) + 1)" />
    <mutant id="mutant_232" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor)))" to="(!(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))))" />
    <mutant id="mutant_474" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeObjects(java.util.Map,java.util.Map)" from="(fromContainer instanceof java.util.Map&lt;?, ?&gt;) &amp;&amp; (fromParents instanceof java.util.Map&lt;?, ?&gt;)" to="!((fromContainer instanceof java.util.Map&lt;?, ?&gt;) &amp;&amp; (fromParents instanceof java.util.Map&lt;?, ?&gt;))" />
    <mutant id="mutant_233" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.equals(java.lang.Object)" from="(((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))) &amp;&amp; ((ver.patch) == (patch))" to="!((((ver.major) == (major)) &amp;&amp; ((ver.minor) == (minor))) &amp;&amp; ((ver.patch) == (patch)))" />
    <mutant id="mutant_475" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="((&quot;Unable to locate parent \'&quot; + parent) * -1)" />
    <mutant id="mutant_234" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="((version.major) - (major)) + 1" />
    <mutant id="mutant_476" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(&quot;Unable to locate parent \'&quot; + parent)" to="((&quot;Unable to locate parent \'&quot; + parent) - 1)" />
    <mutant id="mutant_470" viable="true" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(value != null) &amp;&amp; (value.contains(&quot;%contextRoot%&quot;))" to="!((value != null) &amp;&amp; (value.contains(&quot;%contextRoot%&quot;)))" />
    <mutant id="mutant_471" viable="false" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="((&quot;Unable to load properties: &quot; + propertyFile) * -1)" />
    <mutant id="mutant_230" viable="false" in="org.apache.shindig.common.util.JsonConversionUtil.collect(java.lang.Object,java.lang.String,java.util.Map)" from="(((prefix + '(') + i) + ')')" to="((((prefix + '(') + i) + ')') - 1)" />
    <mutant id="mutant_472" viable="false" in="org.apache.shindig.common.PropertiesModule.readPropertyFile(java.lang.String)" from="(&quot;Unable to load properties: &quot; + propertyFile)" to="((&quot;Unable to load properties: &quot; + propertyFile) - 1)" />
    <mutant id="mutant_246" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="((version.major) - (major)) - 1" />
    <mutant id="mutant_488" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="(((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;) + 1)" />
    <mutant id="mutant_247" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="((version.major) - (major)) * -1" />
    <mutant id="mutant_489" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="(((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;) - 1)" />
    <mutant id="mutant_248" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1)))" to="(!((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))))" />
    <mutant id="mutant_249" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))) &amp;&amp; ((minor) &gt; (-1))" to="!(((cmp == 0) &amp;&amp; ((version.minor) &gt; (-1))) &amp;&amp; ((minor) &gt; (-1)))" />
    <mutant id="mutant_242" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="((version.patch) - (patch)) - 1" />
    <mutant id="mutant_484" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) * -1)" />
    <mutant id="mutant_243" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="((version.patch) - (patch)) + 1" />
    <mutant id="mutant_485" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + 1)" />
    <mutant id="mutant_244" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="((version.patch) - (patch)) * -1" />
    <mutant id="mutant_486" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="(&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY))" to="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) - 1)" />
    <mutant id="mutant_245" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.major) - (major)" to="((version.major) - (major)) + 1" />
    <mutant id="mutant_487" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.addContainer(java.util.Map)" from="((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;)" to="(((&quot;A container configuration doesn\'t have the &quot; + (ContainerConfig.CONTAINER_KEY)) + &quot; property&quot;) * -1)" />
    <mutant id="mutant_480" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;)" to="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) - 1)" />
    <mutant id="mutant_481" viable="true" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="((((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY))) + 1)" />
    <mutant id="mutant_240" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="((version.minor) - (minor)) + 1" />
    <mutant id="mutant_482" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="((((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY))) - 1)" />
    <mutant id="mutant_241" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEqualOrGreaterThan(org.apache.shindig.common.util.OpenSocialVersion)" from="((version.patch) &gt; (-1)) &amp;&amp; ((patch) &gt; (-1))" to="!(((version.patch) &gt; (-1)) &amp;&amp; ((patch) &gt; (-1)))" />
    <mutant id="mutant_483" viable="false" in="org.apache.shindig.config.BasicContainerConfig$BasicTransaction.mergeParents(java.lang.String,java.util.Map)" from="(((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY)))" to="((((&quot;Unable to locate parent \'&quot; + parent) + &quot;\' required by &quot;) + (container.get(org.apache.shindig.config.ContainerConfig.CONTAINER_KEY))) * -1)" />
    <mutant id="mutant_257" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="((version.patch) - (patch)) * -1" />
    <mutant id="mutant_499" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.addHostAndPortToDefaultContainer(java.util.List,java.lang.String,java.lang.String,java.lang.String)" from="(names != null) &amp;&amp; (names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER))" to="!((names != null) &amp;&amp; (names.contains(org.apache.shindig.config.ContainerConfig.DEFAULT_CONTAINER)))" />
    <mutant id="mutant_258" viable="true" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="((&quot;Can not locate resource: &quot; + resource) + 1)" />
    <mutant id="mutant_259" viable="false" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="((&quot;Can not locate resource: &quot; + resource) - 1)" />
    <mutant id="mutant_490" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="!((base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference))" />
    <mutant id="mutant_253" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1)))" to="(!((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))))" />
    <mutant id="mutant_495" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.jsonToMap(org.json.JSONObject)" from="(stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)) || (stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX))" to="!((stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.RESOURCE_PREFIX)) || (stringVal.startsWith(org.apache.shindig.common.util.ResourceLoader.FILE_PREFIX)))" />
    <mutant id="mutant_254" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))) &amp;&amp; ((patch) &gt; (-1))" to="!(((cmp == 0) &amp;&amp; ((version.patch) &gt; (-1))) &amp;&amp; ((patch) &gt; (-1)))" />
    <mutant id="mutant_496" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="((&quot;Trouble parsing &quot; + json) * -1)" />
    <mutant id="mutant_255" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="((version.patch) - (patch)) - 1" />
    <mutant id="mutant_497" viable="false" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="((&quot;Trouble parsing &quot; + json) - 1)" />
    <mutant id="mutant_256" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.patch) - (patch)" to="((version.patch) - (patch)) + 1" />
    <mutant id="mutant_498" viable="true" in="org.apache.shindig.config.JsonContainerConfigLoader.loadFromString(java.lang.String)" from="(&quot;Trouble parsing &quot; + json)" to="((&quot;Trouble parsing &quot; + json) + 1)" />
    <mutant id="mutant_491" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getCommonPropertyType(javax.el.ELContext,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="!((base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference))" />
    <mutant id="mutant_250" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="((version.minor) - (minor)) - 1" />
    <mutant id="mutant_492" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="!((base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference))" />
    <mutant id="mutant_251" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="((version.minor) - (minor)) * -1" />
    <mutant id="mutant_493" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)) &amp;&amp; (base == null)" to="!((ContainerConfigELResolver.CURRENT_CONFIG_KEY.equals(property)) &amp;&amp; (base == null))" />
    <mutant id="mutant_252" viable="true" in="org.apache.shindig.common.util.OpenSocialVersion.isEquivalent(org.apache.shindig.common.util.OpenSocialVersion)" from="(version.minor) - (minor)" to="((version.minor) - (minor)) + 1" />
    <mutant id="mutant_494" viable="true" in="org.apache.shindig.config.ContainerConfigELResolver.setValue(javax.el.ELContext,java.lang.Object,java.lang.Object,java.lang.Object)" from="(base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference)" to="!((base == null) || (base instanceof org.apache.shindig.config.ContainerConfigELResolver.ContainerReference))" />
    <mutant id="mutant_268" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="(((MASK) + 1) - 1)" />
    <mutant id="mutant_269" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="(((MASK) + 1) + 1)" />
    <mutant id="mutant_264" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="(((MASK) + 1) * -1)" />
    <mutant id="mutant_265" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="(((MASK) + 1) - 1)" />
    <mutant id="mutant_266" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="(((MASK) + 1) + 1)" />
    <mutant id="mutant_267" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="((MASK) + 1)" to="(((MASK) + 1) * -1)" />
    <mutant id="mutant_260" viable="false" in="org.apache.shindig.common.util.ResourceLoader.openResource(java.lang.ClassLoader,java.lang.String)" from="(&quot;Can not locate resource: &quot; + resource)" to="((&quot;Can not locate resource: &quot; + resource) * -1)" />
    <mutant id="mutant_261" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="((digits.length) - 1) * -1" />
    <mutant id="mutant_262" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="((digits.length) - 1) - 1" />
    <mutant id="mutant_263" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(digits.length) - 1" to="((digits.length) - 1) + 1" />
    <mutant id="mutant_279" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="((bitsLeft - 8) + 1)" />
    <mutant id="mutant_270" viable="true" in="org.apache.shindig.common.util.StringEncoding(char[])" from="(((MASK) + 1) != (1 &lt;&lt; (SHIFT))) || ((digits.length) &gt;= 256)" to="!((((MASK) + 1) != (1 &lt;&lt; (SHIFT))) || ((digits.length) &gt;= 256))" />
    <mutant id="mutant_275" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="((encodedLength * (SHIFT)) / 8) - 1" />
    <mutant id="mutant_276" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="((encodedLength * (SHIFT)) / 8) * -1" />
    <mutant id="mutant_277" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="((bitsLeft - 8) * -1)" />
    <mutant id="mutant_278" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(bitsLeft - 8)" to="((bitsLeft - 8) - 1)" />
    <mutant id="mutant_271" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="((encodedLength * (SHIFT)) + 1)" />
    <mutant id="mutant_272" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="((encodedLength * (SHIFT)) * -1)" />
    <mutant id="mutant_273" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT))" to="((encodedLength * (SHIFT)) - 1)" />
    <mutant id="mutant_274" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(encodedLength * (SHIFT)) / 8" to="((encodedLength * (SHIFT)) / 8) + 1" />
    <mutant id="mutant_280" viable="true" in="org.apache.shindig.common.util.StringEncoding.decode(java.lang.String)" from="(next == outLength) &amp;&amp; (bitsLeft &lt; (SHIFT))" to="!((next == outLength) &amp;&amp; (bitsLeft &lt; (SHIFT)))" />
    <mutant id="mutant_281" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="(((data.length) * 8) * -1)" />
    <mutant id="mutant_286" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="((((data.length) * 8) / (DIGITS.length)) * -1)" />
    <mutant id="mutant_287" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="((1 + (((data.length) * 8) / (DIGITS.length))) - 1)" />
    <mutant id="mutant_288" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="((1 + (((data.length) * 8) / (DIGITS.length))) * -1)" />
    <mutant id="mutant_289" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(1 + (((data.length) * 8) / (DIGITS.length)))" to="((1 + (((data.length) * 8) / (DIGITS.length))) + 1)" />
    <mutant id="mutant_282" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="(((data.length) * 8) - 1)" />
    <mutant id="mutant_283" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="((data.length) * 8)" to="(((data.length) * 8) + 1)" />
    <mutant id="mutant_284" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="((((data.length) * 8) / (DIGITS.length)) - 1)" />
    <mutant id="mutant_285" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(((data.length) * 8) / (DIGITS.length))" to="((((data.length) * 8) / (DIGITS.length)) + 1)" />
    <mutant id="mutant_290" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft &gt; 0) || (next &lt; (data.length))" to="!((bitsLeft &gt; 0) || (next &lt; (data.length)))" />
    <mutant id="mutant_291" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="((SHIFT) - bitsLeft) * -1" />
    <mutant id="mutant_292" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="((SHIFT) - bitsLeft) - 1" />
    <mutant id="mutant_297" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.major) - (object2.major)" to="((object1.major) - (object2.major)) + 1" />
    <mutant id="mutant_298" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.major) - (object2.major)" to="((object1.major) - (object2.major)) - 1" />
    <mutant id="mutant_299" viable="true" in="org.apache.shindig.common.util.VersionComparator.compare(org.apache.shindig.common.util.OpenSocialVersion,org.apache.shindig.common.util.OpenSocialVersion)" from="(object1.major) - (object2.major)" to="((object1.major) - (object2.major)) * -1" />
    <mutant id="mutant_293" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(SHIFT) - bitsLeft" to="((SHIFT) - bitsLeft) + 1" />
    <mutant id="mutant_294" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="((bitsLeft - (SHIFT)) + 1)" />
    <mutant id="mutant_295" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="((bitsLeft - (SHIFT)) - 1)" />
    <mutant id="mutant_296" viable="true" in="org.apache.shindig.common.util.StringEncoding.encode(byte[])" from="(bitsLeft - (SHIFT))" to="((bitsLeft - (SHIFT)) * -1)" />
    <mutant id="mutant_27" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="(((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;) * -1)" />
    <mutant id="mutant_26" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="(((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;) - 1)" />
    <mutant id="mutant_29" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="(expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)) * -1" />
    <mutant id="mutant_28" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="(expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)) + 1" />
    <mutant id="mutant_21" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToBoolean(java.lang.Object)" from="((&quot;&quot;.equals(obj)) || (&quot;false&quot;.equals(obj)))" to="(!((&quot;&quot;.equals(obj)) || (&quot;false&quot;.equals(obj))))" />
    <mutant id="mutant_20" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.convert(java.lang.Object,java.lang.Class)" from="(type == (Boolean.class)) || (type == (Boolean.TYPE))" to="!((type == (Boolean.class)) || (type == (Boolean.TYPE)))" />
    <mutant id="mutant_23" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="((&quot;Could not coerce &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_22" viable="false" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="((&quot;Could not coerce &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_25" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;)" to="(((&quot;Could not coerce &quot; + (obj.getClass().getName())) + &quot; to JSONArray&quot;) + 1)" />
    <mutant id="mutant_24" viable="true" in="org.apache.shindig.expressions.ShindigTypeConverter.coerceToJsonArray(java.lang.Object)" from="(&quot;Could not coerce &quot; + (obj.getClass().getName()))" to="((&quot;Could not coerce &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_16" viable="true" in="org.apache.shindig.expressions.OpensocialFunctions.parseJson(java.lang.String)" from="(text == null) || (&quot;&quot;.equals(text))" to="!((text == null) || (&quot;&quot;.equals(text)))" />
    <mutant id="mutant_15" viable="true" in="org.apache.shindig.expressions.JsonELResolver.isJson(java.lang.Object)" from="(base instanceof org.json.JSONObject) || (base instanceof org.json.JSONArray)" to="!((base instanceof org.json.JSONObject) || (base instanceof org.json.JSONArray))" />
    <mutant id="mutant_18" viable="true" in="org.apache.shindig.expressions.RootELResolver.getType(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="!((base == null) &amp;&amp; (map.containsKey(property)))" />
    <mutant id="mutant_17" viable="true" in="org.apache.shindig.expressions.RootELResolver.isReadOnly(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="!((base == null) &amp;&amp; (map.containsKey(property)))" />
    <mutant id="mutant_19" viable="true" in="org.apache.shindig.expressions.RootELResolver.getValue(javax.el.ELContext,java.lang.Object,java.lang.Object)" from="(base == null) &amp;&amp; (map.containsKey(property))" to="!((base == null) &amp;&amp; (map.containsKey(property)))" />
    <mutant id="mutant_10" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="((((&quot;Method &quot; + prefix) + ':') + methodName) + 1)" />
    <mutant id="mutant_12" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="(((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;) - 1)" />
    <mutant id="mutant_11" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="(((&quot;Method &quot; + prefix) + ':') + methodName)" to="((((&quot;Method &quot; + prefix) + ':') + methodName) - 1)" />
    <mutant id="mutant_14" viable="true" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="(((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;) + 1)" />
    <mutant id="mutant_13" viable="false" in="org.apache.shindig.expressions.Functions.addMethod(java.lang.reflect.Method)" from="((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;)" to="(((((&quot;Method &quot; + prefix) + ':') + methodName) + &quot; re-defined.&quot;) * -1)" />
    <mutant id="mutant_49" viable="false" in="org.apache.shindig.auth.AuthenticationServletFilter.onError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.AuthenticationHandler$InvalidAuthenticationException)" from="(iae.getMessage()) + (cause.getMessage())" to="((iae.getMessage()) + (cause.getMessage())) - 1" />
    <mutant id="mutant_48" viable="true" in="org.apache.shindig.auth.AuthenticationServletFilter.onError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.AuthenticationHandler$InvalidAuthenticationException)" from="(iae.getMessage()) + (cause.getMessage())" to="((iae.getMessage()) + (cause.getMessage())) + 1" />
    <mutant id="mutant_41" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="(((AuthInfoUtil.Attribute.class.getName()) + '.') - 1)" />
    <mutant id="mutant_40" viable="true" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="(((AuthInfoUtil.Attribute.class.getName()) + '.') + 1)" />
    <mutant id="mutant_43" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="(((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())) - 1" />
    <mutant id="mutant_42" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.')" to="(((AuthInfoUtil.Attribute.class.getName()) + '.') * -1)" />
    <mutant id="mutant_45" viable="false" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="(((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())) * -1" />
    <mutant id="mutant_44" viable="true" in="org.apache.shindig.auth.AuthInfoUtil$Attribute.getId()" from="((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())" to="(((AuthInfoUtil.Attribute.class.getName()) + '.') + (name())) + 1" />
    <mutant id="mutant_47" viable="false" in="org.apache.shindig.auth.AuthenticationServletFilter.onError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.shindig.auth.AuthenticationHandler$InvalidAuthenticationException)" from="(iae.getMessage()) + (cause.getMessage())" to="((iae.getMessage()) + (cause.getMessage())) * -1" />
    <mutant id="mutant_46" viable="true" in="org.apache.shindig.auth.AuthenticationServletFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)" from="((request instanceof javax.servlet.http.HttpServletRequest) &amp;&amp; (response instanceof javax.servlet.http.HttpServletResponse))" to="(!((request instanceof javax.servlet.http.HttpServletRequest) &amp;&amp; (response instanceof javax.servlet.http.HttpServletResponse)))" />
    <mutant id="mutant_50" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="((BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1) * -1" />
    <mutant id="mutant_38" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="((((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL())) - 1)" />
    <mutant id="mutant_37" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="((((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL())) + 1)" />
    <mutant id="mutant_39" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="(((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL()))" to="((((getTimeSource().currentTimeMillis()) / 1000) + (getMaxTokenTTL())) * -1)" />
    <mutant id="mutant_30" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)" to="(expiresAt + (AbstractSecurityToken.CLOCK_SKEW_ALLOWANCE)) - 1" />
    <mutant id="mutant_32" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="((getTimeSource().currentTimeMillis()) / 1000) - 1" />
    <mutant id="mutant_31" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="((getTimeSource().currentTimeMillis()) / 1000) + 1" />
    <mutant id="mutant_34" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="(((getTimeSource().currentTimeMillis()) / 1000) + 1)" />
    <mutant id="mutant_33" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.enforceNotExpired()" from="(getTimeSource().currentTimeMillis()) / 1000" to="((getTimeSource().currentTimeMillis()) / 1000) * -1" />
    <mutant id="mutant_36" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="(((getTimeSource().currentTimeMillis()) / 1000) * -1)" />
    <mutant id="mutant_35" viable="true" in="org.apache.shindig.auth.AbstractSecurityToken.setExpires(int)" from="((getTimeSource().currentTimeMillis()) / 1000)" to="(((getTimeSource().currentTimeMillis()) / 1000) - 1)" />
    <mutant id="mutant_63" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="(((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))) + 1" />
    <mutant id="mutant_62" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="(((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))) - 1" />
    <mutant id="mutant_65" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="((&quot;Invalid security token &quot; + token) + 1)" />
    <mutant id="mutant_64" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="((&quot;Invalid security token &quot; + token) - 1)" />
    <mutant id="mutant_67" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="((&quot;Unknown container &quot; + token) - 1)" />
    <mutant id="mutant_66" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Invalid security token &quot; + token)" to="((&quot;Invalid security token &quot; + token) * -1)" />
    <mutant id="mutant_69" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="((&quot;Unknown container &quot; + token) * -1)" />
    <mutant id="mutant_68" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.createToken(java.util.Map)" from="(&quot;Unknown container &quot; + token)" to="((&quot;Unknown container &quot; + token) + 1)" />
    <mutant id="mutant_70" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="((&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;) * -1)" />
    <mutant id="mutant_72" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="((&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;) - 1)" />
    <mutant id="mutant_71" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.containersChanged(org.apache.shindig.config.ContainerConfig,java.util.Collection,java.util.Collection)" from="(&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;)" to="((&quot;There was an error loading an updated container configuration. &quot; + &quot;Keeping old configuration.&quot;) + 1)" />
    <mutant id="mutant_59" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="(((aToken.getContainer()) + ':') + 1)" />
    <mutant id="mutant_52" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="((BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1) - 1" />
    <mutant id="mutant_51" viable="false" in="?" from="(BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1" to="((BasicSecurityTokenCodec.CONTAINER_ID_INDEX) + 1) + 1" />
    <mutant id="mutant_54" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="((tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)) &amp;&amp; (!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;)))" to="!(((tokens.length) &gt; (BasicSecurityTokenCodec.TOKEN_COUNT)) &amp;&amp; (!(tokens[BasicSecurityTokenCodec.EXPIRY_INDEX].equals(&quot;&quot;))))" />
    <mutant id="mutant_53" viable="true" in="org.apache.shindig.auth.BasicSecurityTokenCodec.createToken(java.util.Map)" from="(token == null) || ((token.trim().length()) == 0)" to="!((token == null) || ((token.trim().length()) == 0))" />
    <mutant id="mutant_56" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="((&quot;Unknown container &quot; + (aToken.getContainer())) - 1)" />
    <mutant id="mutant_55" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="((&quot;Unknown container &quot; + (aToken.getContainer())) * -1)" />
    <mutant id="mutant_58" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="(((aToken.getContainer()) + ':') * -1)" />
    <mutant id="mutant_57" viable="true" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="(&quot;Unknown container &quot; + (aToken.getContainer()))" to="((&quot;Unknown container &quot; + (aToken.getContainer())) + 1)" />
    <mutant id="mutant_61" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))" to="(((aToken.getContainer()) + ':') + (crypter.wrap(aToken.toMap()))) * -1" />
    <mutant id="mutant_60" viable="false" in="org.apache.shindig.auth.BlobCrypterSecurityTokenCodec.encodeToken(org.apache.shindig.auth.SecurityToken)" from="((aToken.getContainer()) + ':')" to="(((aToken.getContainer()) + ':') - 1)" />
    <mutant id="mutant_800" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) - 1)" />
    <mutant id="mutant_801" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + 1)" />
    <mutant id="mutant_802" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + 1)" />
    <mutant id="mutant_803" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) - 1)" />
    <mutant id="mutant_808" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) + 1)" />
    <mutant id="mutant_809" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) - 1)" />
    <mutant id="mutant_804" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) * -1)" />
    <mutant id="mutant_805" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;) * -1" />
    <mutant id="mutant_806" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;) - 1" />
    <mutant id="mutant_807" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;) + 1" />
    <mutant id="mutant_811" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="((BeanXStreamConverter.XML_DECL) + result) * -1" />
    <mutant id="mutant_812" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="((BeanXStreamConverter.XML_DECL) + result) - 1" />
    <mutant id="mutant_813" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(BeanXStreamConverter.XML_DECL) + result" to="((BeanXStreamConverter.XML_DECL) + result) + 1" />
    <mutant id="mutant_814" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) + 1)" />
    <mutant id="mutant_810" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) * -1)" />
    <mutant id="mutant_819" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + 1)" />
    <mutant id="mutant_815" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) - 1)" />
    <mutant id="mutant_816" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(&quot;Result is &quot; + result)" to="((&quot;Result is &quot; + result) * -1)" />
    <mutant id="mutant_817" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) * -1)" />
    <mutant id="mutant_818" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;)" to="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) - 1)" />
    <mutant id="mutant_822" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) * -1)" />
    <mutant id="mutant_823" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;) * -1" />
    <mutant id="mutant_824" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;) - 1" />
    <mutant id="mutant_825" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + &quot;&lt;/response&gt;&quot;) + 1" />
    <mutant id="mutant_820" viable="true" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) + 1)" />
    <mutant id="mutant_821" viable="false" in="org.apache.shindig.protocol.conversion.BeanXStreamConverter.convertToXml(java.lang.Object)" from="(((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result)" to="((((BeanXStreamConverter.XML_DECL) + &quot;&lt;response xmlns=\&quot;http://ns.opensocial.org/2008/opensocial\&quot;&gt;&quot;) + result) - 1)" />
    <mutant id="mutant_826" viable="true" in="org.apache.shindig.protocol.ApiServlet.init(javax.servlet.ServletConfig)" from="(handlers == null) || (&quot;&quot;.equals(handlers))" to="!((handlers == null) || (&quot;&quot;.equals(handlers)))" />
    <mutant id="mutant_827" viable="false" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="((&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;) - 1)" />
    <mutant id="mutant_828" viable="false" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="((&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;) * -1)" />
    <mutant id="mutant_829" viable="true" in="org.apache.shindig.protocol.ApiServlet.sendSecurityError(javax.servlet.http.HttpServletResponse)" from="(&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;)" to="((&quot;The request did not have a proper security token nor oauth message and unauthenticated &quot; + &quot;requests are not allowed&quot;) + 1)" />
    <mutant id="mutant_833" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="((&quot;Parameter &quot; + (RequestItem.COUNT)) + 1)" />
    <mutant id="mutant_834" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="((&quot;Parameter &quot; + (RequestItem.COUNT)) - 1)" />
    <mutant id="mutant_835" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(&quot;Parameter &quot; + (RequestItem.COUNT))" to="((&quot;Parameter &quot; + (RequestItem.COUNT)) * -1)" />
    <mutant id="mutant_836" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) - 1)" />
    <mutant id="mutant_830" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="((&quot;missing data for &quot; + parameterName) * -1)" />
    <mutant id="mutant_831" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="((&quot;missing data for &quot; + parameterName) - 1)" />
    <mutant id="mutant_832" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getTypedParameter(java.lang.String,java.lang.Class)" from="(&quot;missing data for &quot; + parameterName)" to="((&quot;missing data for &quot; + parameterName) + 1)" />
    <mutant id="mutant_837" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) * -1)" />
    <mutant id="mutant_838" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + 1)" />
    <mutant id="mutant_839" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) * -1)" />
    <mutant id="mutant_602" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + 1)" />
    <mutant id="mutant_844" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;) * -1)" />
    <mutant id="mutant_603" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="((((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type))) - 1)" />
    <mutant id="mutant_845" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + 1)" />
    <mutant id="mutant_604" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="((((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type))) + 1)" />
    <mutant id="mutant_846" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) * -1)" />
    <mutant id="mutant_605" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type)))" to="((((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) + (Collection.class.isAssignableFrom(type))) * -1)" />
    <mutant id="mutant_847" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(&quot;Parameter &quot; + (RequestItem.START_INDEX))" to="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) - 1)" />
    <mutant id="mutant_840" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + 1)" />
    <mutant id="mutant_841" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="(((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count)" to="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) - 1)" />
    <mutant id="mutant_600" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) * -1)" />
    <mutant id="mutant_842" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;) - 1)" />
    <mutant id="mutant_601" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;)" to="(((&quot;serializedClass(&quot; + type) + &quot;) is a collection member &quot;) - 1)" />
    <mutant id="mutant_843" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getCount()" from="((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.COUNT)) + &quot; (&quot;) + count) + &quot;) is not a number.&quot;) + 1)" />
    <mutant id="mutant_606" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="((&quot;serializedClass(&quot; + type) - 1)" />
    <mutant id="mutant_848" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) * -1)" />
    <mutant id="mutant_607" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="((&quot;serializedClass(&quot; + type) + 1)" />
    <mutant id="mutant_849" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + 1)" />
    <mutant id="mutant_608" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;serializedClass(&quot; + type)" to="((&quot;serializedClass(&quot; + type) * -1)" />
    <mutant id="mutant_609" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="(((&quot;serializedClass(&quot; + type) + ')') + 1)" />
    <mutant id="mutant_613" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="((&quot;From MAP serializedClass(&quot; + type) - 1)" />
    <mutant id="mutant_855" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;) * -1)" />
    <mutant id="mutant_614" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="((&quot;From MAP serializedClass(&quot; + type) + 1)" />
    <mutant id="mutant_856" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;) + 1)" />
    <mutant id="mutant_615" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) * -1)" />
    <mutant id="mutant_857" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getAppId()" from="(appId != null) &amp;&amp; (appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN))" to="!((appId != null) &amp;&amp; (appId.equals(org.apache.shindig.protocol.RequestItem.APP_SUBSTITUTION_TOKEN)))" />
    <mutant id="mutant_616" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + 1)" />
    <mutant id="mutant_858" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getListParameter(java.lang.String)" from="(param instanceof String) &amp;&amp; ((((String)(param)).indexOf(',')) != (-1))" to="!((param instanceof String) &amp;&amp; ((((String)(param)).indexOf(',')) != (-1)))" />
    <mutant id="mutant_851" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + 1)" />
    <mutant id="mutant_610" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="(((&quot;serializedClass(&quot; + type) + ')') - 1)" />
    <mutant id="mutant_852" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) - 1)" />
    <mutant id="mutant_611" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;serializedClass(&quot; + type) + ')')" to="(((&quot;serializedClass(&quot; + type) + ')') * -1)" />
    <mutant id="mutant_853" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex)" to="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) * -1)" />
    <mutant id="mutant_612" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;From MAP serializedClass(&quot; + type)" to="((&quot;From MAP serializedClass(&quot; + type) * -1)" />
    <mutant id="mutant_854" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) + startIndex) + &quot;) is not a number.&quot;) - 1)" />
    <mutant id="mutant_617" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) - 1)" />
    <mutant id="mutant_859" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + 1)" />
    <mutant id="mutant_618" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="((((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName())) * -1)" />
    <mutant id="mutant_619" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="((((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName())) + 1)" />
    <mutant id="mutant_850" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getStartIndex()" from="((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.START_INDEX)) + &quot; (&quot;) - 1)" />
    <mutant id="mutant_624" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + 1)" />
    <mutant id="mutant_866" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) - 1)" />
    <mutant id="mutant_625" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) * -1)" />
    <mutant id="mutant_867" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + 1)" />
    <mutant id="mutant_626" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;)" to="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) - 1)" />
    <mutant id="mutant_868" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;) * -1)" />
    <mutant id="mutant_627" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="((((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName) - 1)" />
    <mutant id="mutant_869" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;) - 1)" />
    <mutant id="mutant_620" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName()))" to="((((&quot;From MAP serializedClass(&quot; + type) + &quot;)  ==&quot;) + (cfm.getElementName())) - 1)" />
    <mutant id="mutant_862" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + 1)" />
    <mutant id="mutant_621" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="((&quot;--- From Super serializedClass(&quot; + type) * -1)" />
    <mutant id="mutant_863" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) - 1)" />
    <mutant id="mutant_622" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="((&quot;--- From Super serializedClass(&quot; + type) + 1)" />
    <mutant id="mutant_864" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) * -1)" />
    <mutant id="mutant_623" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(&quot;--- From Super serializedClass(&quot; + type)" to="((&quot;--- From Super serializedClass(&quot; + type) - 1)" />
    <mutant id="mutant_865" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp)" to="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) * -1)" />
    <mutant id="mutant_628" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="((((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName) * -1)" />
    <mutant id="mutant_629" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.serializedClass(java.lang.Class)" from="(((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName)" to="((((&quot;--- From Super serializedClass(&quot; + type) + &quot;)  ==&quot;) + fieldName) + 1)" />
    <mutant id="mutant_860" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) - 1)" />
    <mutant id="mutant_861" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="(&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION))" to="((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) * -1)" />
    <mutant id="mutant_635" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="(((type) + &quot;.get&quot;) + 1)" />
    <mutant id="mutant_877" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) - 1)" />
    <mutant id="mutant_636" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="((((type) + &quot;.get&quot;) + (fieldName)) * -1)" />
    <mutant id="mutant_878" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + 1)" />
    <mutant id="mutant_637" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="((((type) + &quot;.get&quot;) + (fieldName)) + 1)" />
    <mutant id="mutant_879" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder)" to="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) * -1)" />
    <mutant id="mutant_638" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="((((type) + &quot;.get&quot;) + (fieldName)) - 1)" />
    <mutant id="mutant_631" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="((&quot;First Child set to &quot; + clazz) - 1)" />
    <mutant id="mutant_873" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) * -1)" />
    <mutant id="mutant_632" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="((&quot;First Child set to &quot; + clazz) * -1)" />
    <mutant id="mutant_874" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) - 1)" />
    <mutant id="mutant_633" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="(((type) + &quot;.get&quot;) - 1)" />
    <mutant id="mutant_875" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + 1)" />
    <mutant id="mutant_634" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="(((type) + &quot;.get&quot;) * -1)" />
    <mutant id="mutant_876" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;)" to="(((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) * -1)" />
    <mutant id="mutant_639" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) - 1)" />
    <mutant id="mutant_870" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getFilterOperation()" from="((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.FILTER_OPERATION)) + &quot; (&quot;) + filterOp) + &quot;) is not valid.&quot;) + 1)" />
    <mutant id="mutant_871" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) - 1)" />
    <mutant id="mutant_630" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceClassMapper.setBaseObject(java.lang.Object)" from="(&quot;First Child set to &quot; + clazz)" to="((&quot;First Child set to &quot; + clazz) + 1)" />
    <mutant id="mutant_872" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="(&quot;Parameter &quot; + (RequestItem.SORT_ORDER))" to="((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + 1)" />
    <mutant id="mutant_404" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="((basePath.lastIndexOf('/')) + 1) - 1" />
    <mutant id="mutant_646" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;') * -1" />
    <mutant id="mutant_888" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="(((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;) - 1)" />
    <mutant id="mutant_405" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="((basePath.lastIndexOf('/')) + 1) + 1" />
    <mutant id="mutant_647" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;') - 1" />
    <mutant id="mutant_889" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="((&quot;Cannot use disallowed Content-Type &quot; + contentType) - 1)" />
    <mutant id="mutant_406" viable="false" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="(((basePath.substring(0, endindex)) + relativePath) * -1)" />
    <mutant id="mutant_648" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="(((type) + &quot;.get&quot;) - 1)" />
    <mutant id="mutant_407" viable="false" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="(((basePath.substring(0, endindex)) + relativePath) - 1)" />
    <mutant id="mutant_649" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="(((type) + &quot;.get&quot;) * -1)" />
    <mutant id="mutant_400" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null))" to="(!(((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)))" />
    <mutant id="mutant_642" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + 1)" />
    <mutant id="mutant_884" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + 1)" />
    <mutant id="mutant_401" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null))" to="(!((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)))" />
    <mutant id="mutant_643" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) - 1)" />
    <mutant id="mutant_885" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) - 1)" />
    <mutant id="mutant_402" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)) &amp;&amp; ((relative.fragment) != null)" to="!(((((Strings.isNullOrEmpty(relative.path)) &amp;&amp; ((relative.scheme) == null)) &amp;&amp; ((relative.authority) == null)) &amp;&amp; ((relative.query) == null)) &amp;&amp; ((relative.fragment) != null))" />
    <mutant id="mutant_644" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) * -1)" />
    <mutant id="mutant_886" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="(((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;) + 1)" />
    <mutant id="mutant_403" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="(basePath.lastIndexOf('/')) + 1" to="((basePath.lastIndexOf('/')) + 1) * -1" />
    <mutant id="mutant_645" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;'" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + '&gt;') + 1" />
    <mutant id="mutant_887" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;)" to="(((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + &quot; is required&quot;) * -1)" />
    <mutant id="mutant_408" viable="true" in="org.apache.shindig.common.uri.Uri.resolve(org.apache.shindig.common.uri.Uri)" from="((basePath.substring(0, endindex)) + relativePath)" to="(((basePath.substring(0, endindex)) + relativePath) + 1)" />
    <mutant id="mutant_409" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path)))" to="(!((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))))" />
    <mutant id="mutant_880" viable="true" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;) + 1)" />
    <mutant id="mutant_881" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;) - 1)" />
    <mutant id="mutant_640" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) * -1)" />
    <mutant id="mutant_882" viable="false" in="org.apache.shindig.protocol.BaseRequestItem.getSortOrder()" from="((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;)" to="(((((&quot;Parameter &quot; + (RequestItem.SORT_ORDER)) + &quot; (&quot;) + sortOrder) + &quot;) is not valid.&quot;) * -1)" />
    <mutant id="mutant_641" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + 1)" />
    <mutant id="mutant_883" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="((&quot;No Content-Type specified. One of &quot; + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) * -1)" />
    <mutant id="mutant_415" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0)" to="!((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0))" />
    <mutant id="mutant_657" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + 1)" />
    <mutant id="mutant_899" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) - 1)" />
    <mutant id="mutant_416" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="(&quot;:&quot; + serverPort) * -1" />
    <mutant id="mutant_658" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) - 1)" />
    <mutant id="mutant_417" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="(&quot;:&quot; + serverPort) - 1" />
    <mutant id="mutant_659" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias))" to="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) * -1)" />
    <mutant id="mutant_418" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="&quot;:&quot; + serverPort" to="(&quot;:&quot; + serverPort) + 1" />
    <mutant id="mutant_411" viable="true" in="org.apache.shindig.common.uri.UriBuilder$ParamString.get(java.lang.String)" from="(values == null) || (values.isEmpty())" to="!((values == null) || (values.isEmpty()))" />
    <mutant id="mutant_653" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="((((type) + &quot;.get&quot;) + (fieldName)) - 1)" />
    <mutant id="mutant_895" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + 1)" />
    <mutant id="mutant_412" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme)))" to="(!((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))))" />
    <mutant id="mutant_654" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) - 1)" />
    <mutant id="mutant_896" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) - 1)" />
    <mutant id="mutant_413" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))" to="(!((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme))))" />
    <mutant id="mutant_655" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) * -1)" />
    <mutant id="mutant_897" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;)" to="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) * -1)" />
    <mutant id="mutant_414" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme))))" to="(!(((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))))" />
    <mutant id="mutant_656" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;)" to="(((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + 1)" />
    <mutant id="mutant_898" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes)))" to="((((&quot;Unsupported Content-Type &quot; + contentType) + &quot;. One of &quot;) + (Joiner.on(&quot;, &quot;).join(allowedContentTypes))) + 1)" />
    <mutant id="mutant_419" viable="true" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="((req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)) + 1" />
    <mutant id="mutant_1023" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation())))" to="(!((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))))" />
    <mutant id="mutant_1024" viable="true" in="org.apache.shindig.protocol.SystemHandler.listMethods(org.apache.shindig.protocol.RequestItem)" from="((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))) &amp;&amp; (&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue()))" to="!(((&quot;protocol&quot;.equalsIgnoreCase(request.getFilterBy())) &amp;&amp; ((FilterOperation.equals) == (request.getFilterOperation()))) &amp;&amp; (&quot;REST&quot;.equalsIgnoreCase(request.getFilterValue())))" />
    <mutant id="mutant_1021" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage)))" to="(!(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))))" />
    <mutant id="mutant_1022" viable="true" in="org.apache.shindig.protocol.ResponseItem.equals(java.lang.Object)" from="(((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))) &amp;&amp; (Objects.equal(response, that.response))" to="!((((errorCode) == (that.errorCode)) &amp;&amp; (Objects.equal(errorMessage, that.errorMessage))) &amp;&amp; (Objects.equal(response, that.response)))" />
    <mutant id="mutant_1020" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="(this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest))" to="!((this.isJSONPAllowed) &amp;&amp; (HttpUtil.isJSONP(servletRequest)))" />
    <mutant id="mutant_891" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="((&quot;Cannot use disallowed Content-Type &quot; + contentType) * -1)" />
    <mutant id="mutant_650" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((type) + &quot;.get&quot;)" to="(((type) + &quot;.get&quot;) + 1)" />
    <mutant id="mutant_892" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="((&quot;Unsupported Content-Type &quot; + contentType) * -1)" />
    <mutant id="mutant_651" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="((((type) + &quot;.get&quot;) + (fieldName)) * -1)" />
    <mutant id="mutant_893" viable="false" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="((&quot;Unsupported Content-Type &quot; + contentType) - 1)" />
    <mutant id="mutant_410" viable="true" in="org.apache.shindig.common.uri.Uri.validate(org.apache.shindig.common.uri.Uri)" from="((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))) &amp;&amp; (Strings.isNullOrEmpty(uri.query))" to="!(((Strings.isNullOrEmpty(uri.authority)) &amp;&amp; (Strings.isNullOrEmpty(uri.path))) &amp;&amp; (Strings.isNullOrEmpty(uri.query)))" />
    <mutant id="mutant_652" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((type) + &quot;.get&quot;) + (fieldName))" to="((((type) + &quot;.get&quot;) + (fieldName)) + 1)" />
    <mutant id="mutant_894" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Unsupported Content-Type &quot; + contentType)" to="((&quot;Unsupported Content-Type &quot; + contentType) + 1)" />
    <mutant id="mutant_890" viable="true" in="org.apache.shindig.protocol.ContentTypes.checkContentTypes(java.util.Set,java.lang.String)" from="(&quot;Cannot use disallowed Content-Type &quot; + contentType)" to="((&quot;Cannot use disallowed Content-Type &quot; + contentType) + 1)" />
    <mutant id="mutant_426" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) * -1)" />
    <mutant id="mutant_668" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="((((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;') - 1" />
    <mutant id="mutant_427" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) - 1)" />
    <mutant id="mutant_669" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasingMapper.serializedMember(java.lang.Class,java.lang.String)" from="(ifa.getType().isAssignableFrom(type)) &amp;&amp; (ifa.getParent().equals(writerStack.peek()))" to="!((ifa.getType().isAssignableFrom(type)) &amp;&amp; (ifa.getParent().equals(writerStack.peek())))" />
    <mutant id="mutant_428" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber()))" to="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + 1)" />
    <mutant id="mutant_429" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') * -1)" />
    <mutant id="mutant_422" viable="true" in="org.apache.shindig.common.xml.XmlUtil.getHttpUriAttribute(org.w3c.dom.Node,java.lang.String,org.apache.shindig.common.uri.Uri,org.apache.shindig.common.uri.Uri)" from="(!(&quot;http&quot;.equalsIgnoreCase(uri.getScheme()))) &amp;&amp; (!(&quot;https&quot;.equalsIgnoreCase(uri.getScheme())))" to="!((!(&quot;http&quot;.equalsIgnoreCase(uri.getScheme()))) &amp;&amp; (!(&quot;https&quot;.equalsIgnoreCase(uri.getScheme()))))" />
    <mutant id="mutant_664" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="((((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + 1)" />
    <mutant id="mutant_423" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="(((e.getMessage()) + &quot; At: (&quot;) + 1)" />
    <mutant id="mutant_665" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="((((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) - 1)" />
    <mutant id="mutant_424" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="(((e.getMessage()) + &quot; At: (&quot;) * -1)" />
    <mutant id="mutant_666" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="((((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;') + 1" />
    <mutant id="mutant_425" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((e.getMessage()) + &quot; At: (&quot;)" to="(((e.getMessage()) + &quot; At: (&quot;) - 1)" />
    <mutant id="mutant_667" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;'" to="((((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) + '&gt;') * -1" />
    <mutant id="mutant_1014" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="((&quot;Invalid input - &quot; + (t.getMessage())) - 1)" />
    <mutant id="mutant_1015" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="((&quot;Invalid input - &quot; + (t.getMessage())) * -1)" />
    <mutant id="mutant_1012" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))) &amp;&amp; (content == null)" to="!(((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))) &amp;&amp; (content == null))" />
    <mutant id="mutant_1013" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.sendBadRequest(java.lang.Throwable,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid input - &quot; + (t.getMessage()))" to="((&quot;Invalid input - &quot; + (t.getMessage())) + 1)" />
    <mutant id="mutant_1010" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getJSONResponse(java.lang.String,org.apache.shindig.protocol.ResponseItem)" from="((responseItem.getErrorCode()) &lt; 200) || ((responseItem.getErrorCode()) &gt;= 400)" to="!(((responseItem.getErrorCode()) &lt; 200) || ((responseItem.getErrorCode()) &gt;= 400))" />
    <mutant id="mutant_1011" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getPostContent(javax.servlet.http.HttpServletRequest,java.util.Map)" from="((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName())))" to="(!((item.isFormField()) &amp;&amp; (JsonRpcServlet.REQUEST_PARAM.equals(item.getFieldName()))))" />
    <mutant id="mutant_660" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) * -1)" />
    <mutant id="mutant_661" viable="true" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + 1)" />
    <mutant id="mutant_420" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="((req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)) - 1" />
    <mutant id="mutant_662" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;)" to="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) - 1)" />
    <mutant id="mutant_421" viable="false" in="org.apache.shindig.common.uri.UriBuilder(javax.servlet.http.HttpServletRequest)" from="(req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)" to="((req.getServerName()) + ((((serverPort == 80) &amp;&amp; (&quot;http&quot;.equals(scheme))) || ((serverPort == 443) &amp;&amp; (&quot;https&quot;.equals(scheme)))) || (serverPort &lt;= 0) ? &quot;&quot; : &quot;:&quot; + serverPort)) * -1" />
    <mutant id="mutant_663" viable="false" in="org.apache.shindig.protocol.conversion.xstream.InterfaceFieldAliasMapping.toString()" from="(((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent))" to="((((((((type) + &quot;.get&quot;) + (fieldName)) + &quot;() &lt;-&gt; &lt;&quot;) + (alias)) + &quot;&gt; inside parent &lt;&quot;) + (parent)) * -1)" />
    <mutant id="mutant_1018" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="((&quot;Invalid JSON - &quot; + (e.getMessage())) - 1)" />
    <mutant id="mutant_1019" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)" from="((&quot;GET&quot;.equals(method)) || (&quot;POST&quot;.equals(method)))" to="(!((&quot;GET&quot;.equals(method)) || (&quot;POST&quot;.equals(method))))" />
    <mutant id="mutant_1016" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="((&quot;Invalid JSON - &quot; + (e.getMessage())) * -1)" />
    <mutant id="mutant_1017" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.sendJsonParseError(org.json.JSONException,javax.servlet.http.HttpServletResponse)" from="(&quot;Invalid JSON - &quot; + (e.getMessage()))" to="((&quot;Invalid JSON - &quot; + (e.getMessage())) + 1)" />
    <mutant id="mutant_437" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="(((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')') - 1)" />
    <mutant id="mutant_679" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="(o != null) &amp;&amp; ((o.length) &gt; 0)" to="!((o != null) &amp;&amp; ((o.length) &gt; 0))" />
    <mutant id="mutant_438" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="(((array.length) * (JsonSerializer.BASE_MULTIPLIER)) - 1)" />
    <mutant id="mutant_439" viable="true" in="org.apache.shindig.common.JsonSerializer.serialize(java.lang.Object[])" from="((array.length) * (JsonSerializer.BASE_MULTIPLIER))" to="(((array.length) * (JsonSerializer.BASE_MULTIPLIER)) * -1)" />
    <mutant id="mutant_433" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) * -1)" />
    <mutant id="mutant_675" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="(o != null) &amp;&amp; ((o.length) &gt; i)" to="!((o != null) &amp;&amp; ((o.length) &gt; i))" />
    <mutant id="mutant_434" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + 1)" />
    <mutant id="mutant_676" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="(((stack.size()) - 1) * -1)" />
    <mutant id="mutant_435" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="(((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')') * -1)" />
    <mutant id="mutant_677" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="(((stack.size()) - 1) - 1)" />
    <mutant id="mutant_436" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')')" to="(((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) + ')') + 1)" />
    <mutant id="mutant_678" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.pop()" from="((stack.size()) - 1)" to="(((stack.size()) - 1) + 1)" />
    <mutant id="mutant_1003" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="((((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName())) + 1)" />
    <mutant id="mutant_1004" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="((((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName())) * -1)" />
    <mutant id="mutant_1001" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="(((&quot;No RPC binding for &quot; + (service.name())) + '.') - 1)" />
    <mutant id="mutant_1002" viable="true" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + 1)" />
    <mutant id="mutant_1000" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="((&quot;No RPC binding for &quot; + (service.name())) + '.')" to="(((&quot;No RPC binding for &quot; + (service.name())) + '.') * -1)" />
    <mutant id="mutant_671" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.addNamespace(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="!((namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace))" />
    <mutant id="mutant_430" viable="true" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + 1)" />
    <mutant id="mutant_672" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="(((stack.size()) - 1) * -1)" />
    <mutant id="mutant_431" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',')" to="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') - 1)" />
    <mutant id="mutant_673" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="(((stack.size()) - 1) - 1)" />
    <mutant id="mutant_1009" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="(&quot;: &quot; + (responseItem.getErrorMessage())) - 1" />
    <mutant id="mutant_432" viable="false" in="org.apache.shindig.common.xml.XmlUtil.parse(java.lang.String)" from="(((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber()))" to="((((((e.getMessage()) + &quot; At: (&quot;) + (e.getLineNumber())) + ',') + (e.getColumnNumber())) - 1)" />
    <mutant id="mutant_674" viable="true" in="org.apache.shindig.protocol.conversion.xstream.ThreadSafeWriterStack.peek(int)" from="((stack.size()) - 1)" to="(((stack.size()) - 1) + 1)" />
    <mutant id="mutant_1007" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="(&quot;: &quot; + (responseItem.getErrorMessage())) + 1" />
    <mutant id="mutant_1008" viable="false" in="org.apache.shindig.protocol.JsonRpcServlet.getErrorJson(org.apache.shindig.protocol.ResponseItem)" from="&quot;: &quot; + (responseItem.getErrorMessage())" to="(&quot;: &quot; + (responseItem.getErrorMessage())) * -1" />
    <mutant id="mutant_1005" viable="false" in="org.apache.shindig.protocol.DefaultHandlerRegistry.createRpcHandler(com.google.inject.Provider,org.apache.shindig.protocol.Service,org.apache.shindig.protocol.Operation,java.lang.reflect.Method)" from="(((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName()))" to="((((&quot;No RPC binding for &quot; + (service.name())) + '.') + (m.getName())) - 1)" />
    <mutant id="mutant_670" viable="true" in="org.apache.shindig.protocol.conversion.xstream.StackWriterWrapper.translateName(java.lang.String)" from="(namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace)" to="!((namespaceSet != null) &amp;&amp; (namespaceSet != currentNamespace))" />
    <mutant id="mutant_1006" viable="true" in="org.apache.shindig.protocol.JsonRpcServlet.isContentJsonBatch(java.lang.String)" from="((content.indexOf('[')) != (-1)) &amp;&amp; ((content.indexOf('[')) &lt; (content.indexOf('{')))" to="!(((content.indexOf('[')) != (-1)) &amp;&amp; ((content.indexOf('[')) &lt; (content.indexOf('{'))))" />
  </mutants>
</mutation>
