<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_7082" time="415129">
  <failing>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName</case>
    <case>org.eclipse.jgit.revwalk.ObjectWalkFilterTest.testRevFilterAndObjectFilterCanCombine</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.insertExplicitChangeId</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_mixed_encoded</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_PublicParseMethod</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.insertChangeId</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.amendCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.insertChangeIdIgnoresExisting</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessage</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeInItself</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.cherryPick</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedAndEndingLF</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test026_CreateCommitMultipleparents</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyNoLF</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_OnlyLFMessage</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEmbeddedLF</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_encoded</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.indexDelete</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.indexAdd</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test023_createCommitNonAnullii</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logPathWithSkip</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.amendHead</case>
    <case>org.eclipse.jgit.junit.TestRepositoryTest.cherryPickWithContentMerge</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend</case>
    <case>org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_implicit_UTF8_encoded</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_explicit_bad_encoded2</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_ShortLineOnlyEndLF</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test009_CreateCommitOldFormat</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits</case>
    <case>org.eclipse.jgit.revwalk.RevCommitParseTest.testParse_GitStyleMessageWithCRLF</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevert</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit</case>
  </hanging>
</mutation-execution>
