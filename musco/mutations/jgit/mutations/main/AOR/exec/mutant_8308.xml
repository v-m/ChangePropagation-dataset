<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_8308" time="1712666">
  <failing>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepository</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty</case>
    <case>org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testConcurrentInsertionOfBlobsToTheSameNewFanOutDirectory</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommits</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash</case>
  </hanging>
</mutation-execution>
