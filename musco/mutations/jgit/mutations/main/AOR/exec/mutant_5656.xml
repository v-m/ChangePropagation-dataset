<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_5656" time="273179">
  <failing>
    <case>org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts</case>
    <case>org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testAbortWrite</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTheirs</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeInItself</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testDelete</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommits</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2</case>
    <case>org.eclipse.jgit.lib.IndexModificationTimesTest.testModify</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_disjointhistories</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeMessage</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexAdd</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepository</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForward</case>
    <case>org.eclipse.jgit.lib.RefTest.testRefsUnderRefs</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMerge</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveDate</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig</case>
    <case>org.eclipse.jgit.lib.T0002_TreeTest.test009_SymlinkAndGitlink</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testDeleteFullName</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateForce</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_ok</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateAndList</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testDerefBlob</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects</case>
    <case>org.eclipse.jgit.lib.RefTest.testResolvedNamesBranch</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix</case>
    <case>org.eclipse.jgit.lib.RefTest.testGetShortRef</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexDelete</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testOurs</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward</case>
    <case>org.eclipse.jgit.merge.SimpleMergeTest.testTrivialTwoWay_conflict</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testDistance_past_root</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testRef_refname</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckout</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushAfterGC</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent</case>
    <case>org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadLineWithMissingComment</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testNoLog</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForward</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevert</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
