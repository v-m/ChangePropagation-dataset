<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_14847" time="193544">
  <failing>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedWithPeeled</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedBySelf</case>
    <case>org.eclipse.jgit.api.RmCommandTest.testRemove</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testEmptyTagName</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixOfExisting</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithNonDeletedFiles</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNoCacheObjectIdSubclass</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseParentOntoHeadShouldBeUptoDate</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeBaseCommit</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeleted</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk</case>
    <case>org.eclipse.jgit.lib.IndexModificationTimesTest.testLastModifiedTimes</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testLooseDelete</case>
    <case>org.eclipse.jgit.revplot.AbstractPlotRendererTest.testDrawTextAlignment</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooters</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoHeadOtherThanMaster</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedCommittedComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.api.AddCommandTest.testAddWithParameterUpdate</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.multiplePathsSecondParent</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFile</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeWithNoContentChangeUpdate</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testDetachedHeadOnCheckout</case>
    <case>org.eclipse.jgit.lib.IndexModificationTimesTest.testModify</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommitted</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindowsOnUnix</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration</case>
    <case>org.eclipse.jgit.api.StashListCommandTest.singleStashedCommit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeFailingWithDirtyWorkingTree</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeMessage</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.multipleBranches</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModified</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testWhitespaceMerge</case>
    <case>org.eclipse.jgit.api.RmCommandTest.testRemoveCached</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListDeletionBetweenTwoCommits</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_e</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesWildcardNoTracking</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnDirs</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutCommit</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testDeleteEmptyTagNames</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_a</case>
    <case>org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkInNormalCase</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_11_b</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexAdd</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeleted</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark2</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMark4</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeNoConflict</case>
    <case>org.eclipse.jgit.api.GitConstructionTest.testClose</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.indexDelete</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.indexAdd</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnly</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.testIsModifiedSymlinkAsFile</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.resolveExprSimple</case>
    <case>org.eclipse.jgit.api.StatusCommandTest.testEmptyStatus</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategiesNoCommit</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetOnTag</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgLpt1</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_b</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_FetchHead</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_8_e</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromLightweightTag</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick</case>
    <case>org.eclipse.jgit.lib.RefTest.testGetShortExactRef</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug368927</case>
    <case>org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveMasterCommits</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffModified</case>
    <case>org.eclipse.jgit.submodule.SubmoduleInitTest.resolveTwoLevelHigherRelativeUrl</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c</case>
    <case>org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmodule</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchHasPreviousLog</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADSOnUnix</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedIgnored</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testPathsReset</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedIgnoredComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockTo</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleDeletions</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testSoftReset</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testAutoCRLFInput</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithMaxCount</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderIgnored</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare</case>
    <case>org.eclipse.jgit.api.blame.BlameGeneratorTest.testLinesAllDeletedShortenedWalk</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionAndConflict</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testResetDefaultMode</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testInsertChangeId</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHEADreferencedRef</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeleted</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1OnUnix</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad</case>
    <case>org.eclipse.jgit.lib.ReflogConfigTest.testlogAllRefUpdates</case>
    <case>org.eclipse.jgit.api.GitConstructionTest.testWrap</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteNotFound</case>
    <case>org.eclipse.jgit.api.AddCommandTest.testAddExistingSingleFileTwiceWithCommit</case>
    <case>org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkAll</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualHeadMerge</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelLooseTag</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMergeWithDirtyWorkTree</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTwoRefSpecs</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_a</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_TagsOnly_AllLoose</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiff</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testUnannotatedTagging</case>
    <case>org.eclipse.jgit.api.AddCommandTest.testAddRemovedCommittedFile</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitRange</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSortedCorrectly</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFileThenSymlink</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testDuplicateParents</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug419359</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testFailureF2</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.test2SideBranches</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolvePreviousBranch</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testFailureF1</case>
    <case>org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testDiff</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testDeleteBadName</case>
    <case>org.eclipse.jgit.diff.PatchIdDiffFormatterTest.testSameDiff</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches</case>
    <case>org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyWorktree</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseNonGitDescribe</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_f2_14_e</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_c</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.ref</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_4_e</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMultipleMerges</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeeplyNestedBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission1avoided</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromAnnotatetdTag</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOurs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveReflogParent</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyNL1</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedAllIgnoredComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testAssumeUnchanged</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseLookupPath</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testRecursiveTreeWalk</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testIsNameConflicting</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderIgnored</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState_mergeAndReset_bug</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testConflicts</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testClean</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkActuallyModified</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefKeySameAsName</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictWithMessageOption</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingDeletedAndModified</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanDirs</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkip</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedTopicChange</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchAlsoInPack</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitUpdatesSmudgedEntries</case>
    <case>org.eclipse.jgit.api.AddCommandTest.testAssumeUnchanged</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOk</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutSecond</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState_simulated_bug</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflicting</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRunAndNoIgnore</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMergeLongerFirstParentPath</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeleted</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommitted</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadAllIncludingSymrefs</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testTwoRenames</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsWithFooterlikeLineInBody</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetOnUnbornBranch</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgDotCon</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testBranchReflog</case>
    <case>org.eclipse.jgit.api.StatusCommandTest.testDifferentStates</case>
    <case>org.eclipse.jgit.util.HookTest.testCommitMsgHookCanModifyCommitMessage</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldReportFileModeChange</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPointOnlyCertainFiles</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseOverridesPacked</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testMixedReset</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutLightweightTag</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameRefNameColission2avoided</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnSideConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testInteractiveRebaseWithModificationShouldNotDeleteDataOnAbort</case>
    <case>org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadSpecificPath</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithModificationShouldNotDeleteData</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnoredNotHonored</case>
    <case>org.eclipse.jgit.lib.RefTest.testRefsUnderRefs</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooterNoLineBreak</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderUntracked</case>
    <case>org.eclipse.jgit.api.NotesCommandTest.testAddAndRemoveNote</case>
    <case>org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithDifferentRevCheckedOutSubmodule</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAmendWithoutAuthorShouldSetOriginalAuthorAndAuthorTime</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartCommit</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logPathWithSkip</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockTo</case>
    <case>org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFile</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.oneCommit</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveDate</case>
    <case>org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testDirtyFileModeEqualIndexMerge</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetached</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testPathsResetOnUnbornBranch</case>
    <case>org.eclipse.jgit.api.StashListCommandTest.emptyStashReflog</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testMixedResetRetainsSizeAndModifiedTime</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitIgnoresSmudgedEntryWithDifferentId</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testNonRecursiveTreeWalk</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkModifiedNotNormalized</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchExistingSection</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testRename</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testUpdateSmudgedEntries</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.createFileSymlinkBeforeTarget</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_IgnoresGarbageRef</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_EmptyDatabase</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteFastForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMergeConflict</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testUntrackedNotIgnoredFolders</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testBug300282_1</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testLinear</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef4</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef3</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName</case>
    <case>org.eclipse.jgit.api.StatusCommandTest.testDifferentStatesWithPaths</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef2</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_IgnoresGarbageRef1</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testEditAllLines</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateAndList</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset</case>
    <case>org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdateLooseOnly</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testModeChange</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameCurrentBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testExactRef_FetchHead</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withCommitLoadedByDifferentRevWalk</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPush</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_d</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testOverwriteUntrackedIgnoredFile</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_e</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_b</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateBranchOnCheckout</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_14_c</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_EmptyDatabase</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testDeleteD</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestFolderThenSymlink</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testAddUnstagedChanges</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS</case>
    <case>org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1OnUnix</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testEgitHistory</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice</case>
    <case>org.eclipse.jgit.api.GitConstructionTest.testOpen</case>
    <case>org.eclipse.jgit.api.ArchiveCommandTest.archiveByDirectoryPath</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testModifiedAndRenamed</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesTrackingRef</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockFrom</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testFirstExactRef_Mixed</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRun</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test027_UnpackedRefHigherPriorityThanPacked</case>
    <case>org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleAbsoluteRef</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenWindowsNamesOnUnixEgCon</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadLooseRef</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadSymRefToPacked</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectory</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMerge</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoHead</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFileModeMerge</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushAfterGC</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithoutModifiedTrees</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadOnOneBranch</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.simpleAncestor</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreationsSameContent</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedTopicChange</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.testExecutableRetention</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutRepository</case>
    <case>org.eclipse.jgit.merge.SquashMessageFormatterTest.testCommit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileInInitialCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockTo</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanDirsWithDryRun</case>
    <case>org.eclipse.jgit.api.AddCommandTest.testAddWithoutParameterUpdate</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyWorktree</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.twoCommits</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefDetachedUnbornHead</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs</case>
    <case>org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testReadRightLog</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithoutLocalRepository</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testRecursiveMergeWithConflict</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.ReflogReaderTest.testCheckout</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeNonVersionedPaths</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder</case>
    <case>org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithNoHeadInSubmodule</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldMarkEntriesWhenGivenMarkTreeFilter</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversModifiedLoose</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithRef</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testDeleteNonExisting</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testInvalidTagName</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoOtherThanMaster</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileUntracked</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedDeletedCommittedComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testStageState</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpr</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLooseAndItsDirectory</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAnnotatedTag</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommittedDeletedCommittedIgnoredComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate</case>
    <case>org.eclipse.jgit.revwalk.RevWalkUtilsReachableTest.withMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithStartPoint</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForward</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.noLocalChanges</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck2</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull</case>
    <case>org.eclipse.jgit.api.StashListCommandTest.multipleStashedCommits</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_e</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_10_c</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedAllDeletedCommittedComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testSimpleCheckout</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeAndDirtyworkingTree</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_Mixed</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversDeletedLoose</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationInDirWithModifiedTrees</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMergeBlockedByOther</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchMultipleConfigValues</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.createDirSymlinkBeforeTarget</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_e</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepository</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_9_d</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testOneBranch</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testDeletionOnMasterConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixOfExisting</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testConflictingFromMultipleCreations</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails</case>
    <case>org.eclipse.jgit.util.HookTest.testCommitMsgHookReceivesCorrectParameter</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenMissing</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.annotatedTagsNoResult</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testListBranchesWithContains</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadBranchNotBorn</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testMergeEmptyBranches</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteHead</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAmendWithAuthorShouldUseIt</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkTwoLevels</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveNonExistingBranch</case>
    <case>org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropNegativeRef</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHardFromIndexEntryWithoutFileToTreeWithoutFile</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteLoosePacked</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeOtherCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisOtherLockFrom</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testTwoBranches</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutFirst</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testDeleteFullName</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFoldersWithoutFastForward</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testTag</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreationImplicitStart</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoTracking</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateForce</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanWithPaths</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteForce</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testPathsResetWithUnmerged</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCreateOrphanBranchWithStartPoint</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleCreations</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testListAllTagsInRepositoryInOrder</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMergeNoCommit</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_a</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedAllIgnored</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.nameExact</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_DiscoversModifiedLoose</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2</case>
    <case>org.eclipse.jgit.api.CleanCommandTest.testCleanWithDryRunAndNoIgnore</case>
    <case>org.eclipse.jgit.lib.RefTest.testAmbiguousRefsUnderRefs</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testThreeBranches</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListChangesInWorkingTree</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForwardNoCommit</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldCommitUnmergedPathAndNotAffectOthers</case>
    <case>org.eclipse.jgit.submodule.SubmoduleStatusTest.repositoryWithInitializedSubmodule</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisFromLockHEAD</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testTagging</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeWithMessageOption</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testSingleRevision</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.resolveUpstream</case>
    <case>org.eclipse.jgit.api.blame.BlameGeneratorTest.testBoundLineDelete</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testMerged</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testUpdateRefForwardWithCheck1</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChange</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_c</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_b</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSingleDeletion</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_AllLoose</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_e</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_5_d</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChangeBaseCommit</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFolderChangedToFileCommittedComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfDirectoryShouldBeRecursive</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_e</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testInitialCheckout</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckout</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_f2_14_d</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorJava7Test.testSymlinkNotModifiedThoughNormalized</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testPushResult</case>
    <case>org.eclipse.jgit.transport.TransportTest.testFindRemoteRefUpdatesNoWildcardNoDestination</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListModificationBetweenTwoCommits</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchCannotLockAFileHEADisToLockFrom</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testResetHard</case>
    <case>org.eclipse.jgit.api.ArchiveCommandTest.archiveByIdSpecificFile</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_a</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_c</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldLeaveWorkspaceUntouchedWithUnstagedChangesConflict</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_b</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose2</case>
    <case>org.eclipse.jgit.transport.TransportTest.testLocalTransportFetchWithoutLocalRepository</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversNewLoose1</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadSymRefToLoosePacked</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testPullWithUri</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedChangedNotModified</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testSideBranch</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.annotatedTags</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testFirstExactRef_IgnoresGarbageRef</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows3</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator</case>
    <case>org.eclipse.jgit.submodule.SubmoduleInitTest.resolveSameLevelRelativeUrl</case>
    <case>org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitOnlyShouldHandleIgnored</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedNonRecursive</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_HeadsOnly_SymrefToPacked</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_e</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_3_d</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testShouldNotBlowUpIfThereAreNoTagsInRepository</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutTheirs</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardOnlyNotPossible</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchNoConfigValues</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathIsOkSecondCheckout</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeTag</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedModifiedCommittedComparedWithInitialCommit</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testPeelCommit</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeInItself</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOfFileWithInexistentParentDir</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileIgnored</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderAllIgnored</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testUntrackedFolders</case>
    <case>org.eclipse.jgit.lib.RefTest.testResolvedSymRef</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete</case>
    <case>org.eclipse.jgit.submodule.SubmoduleInitTest.resolveWorkingDirectoryRelativeUrl</case>
    <case>org.eclipse.jgit.api.AddCommandTest.testExecutableRetention</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_PackedNotPeeled_Sorted</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_LooseSorting_Bug_348834</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_SkipsLockFiles</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testTwoRoots1</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAutoCrlfTrue</case>
    <case>org.eclipse.jgit.api.NotesCommandTest.testListNotes</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUnstagedMasterChange</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testHeadReflog</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropWithNoStashedCommits</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testHEAD</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithLoosePrefixNameExists</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testFastForwardWithFiles</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testContentMerge</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CycleInSymbolicRef</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.onePathMergeSecondParent</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropAll</case>
    <case>org.eclipse.jgit.submodule.SubmoduleWalkTest.repositoryWithRootLevelSubmoduleRelativeRef</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose4</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_a</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose3</case>
    <case>org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose2</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose1</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.createSymlinkAfterTarget</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_e</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify</case>
    <case>org.eclipse.jgit.lib.IndexDiffTest.testRemovedUntracked</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_d</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_f2_14_b</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testFormatWithConflictsNoFooter</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testNoFastForward</case>
    <case>org.eclipse.jgit.submodule.SubmoduleInitTest.resolveOneLevelHigherRelativeUrl</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testUpToDate</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit</case>
    <case>org.eclipse.jgit.api.RenameBranchCommandTest.renameBranchSingleConfigValue</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderUntracked</case>
    <case>org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyX</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyY</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyZ</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testModifyE</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testMixed</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DiscoversDeletedLoose5</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testCommitAmend</case>
    <case>org.eclipse.jgit.revplot.PlotCommitListTest.testDanglingCommitShouldContinueLane</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromHeadWithIndexChange</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModified</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTestWithSymlinks.testDontDeleteSymlinkOnTopOfRootDir</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRenameBranchNoPreviousLog</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testEmptyFolderCommitted</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutAllPaths</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldListAddedFileBetweenTwoCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testNewNamespaceConflictWithPackedPrefixNameExists</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_f2_14_e</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.testFetch</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_e</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_b</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_c</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_13_d</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToNullCommit</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.prefix</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedMasterChangeOtherCommit</case>
    <case>org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreationNullStartPoint</case>
    <case>org.eclipse.jgit.api.ArchiveCommandTest.archiveHeadAllFiles</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_AnyHeadWithGarbage</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardReset</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch</case>
    <case>org.eclipse.jgit.api.ReflogCommandTest.testAmendReflog</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testMixedResetWithUnmerged</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutOrphanBranch</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestMissingThenSymlink</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullFastForward</case>
    <case>org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeConflictFileFolder</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadSimplePackedRefSameRepo</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testSomeCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOptionWithDirectory</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_PackedNotPeeled_WrongSort</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffCached</case>
    <case>org.eclipse.jgit.symlinks.SymlinksTest.fileModeTestSymlinkThenFolder</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSuccessfulContentMerge</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned</case>
    <case>org.eclipse.jgit.lib.BranchTrackingStatusTest.shouldWorkWithoutMergeBase</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testIntoSymbolicRefHeadPointingToMaster</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead1</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify</case>
    <case>org.eclipse.jgit.lib.RefTest.testReadLoosePackedRef</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_DeatchedHead2</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileCommittedModifiedIgnored</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testAlreadyUpToDate</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeRemovingFolders</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testTaggingOnHead</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.test_repack</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testRefsCacheAfterUpdate</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag</case>
    <case>org.eclipse.jgit.merge.MergeMessageFormatterTest.testRemoteBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testUpdateWorkingDirectoryFromIndex2</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithSkipAndMaxCount</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testDelete</case>
    <case>org.eclipse.jgit.api.NameRevCommandTest.multiplePathsNoMerge</case>
    <case>org.eclipse.jgit.treewalk.filter.IndexDiffFilterTest.testFileInFolderCommittedChangedNotModified</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutMultiple</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevert</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
