<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_2015" time="408708">
  <failing>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModify</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_38</case>
    <case>org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_WithMode</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffModified</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictMarkers</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropMiddleStashCommit</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultipleWithFail</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testRemoveDeletesTreeFanout2_38</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffTwoCommits</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyInSubfolder</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOurCommitName</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.testApplyStashWithDeletedFile</case>
    <case>org.eclipse.jgit.notes.NoteMapMergerTest.testLargeTreesWithoutConflict</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootNullToTree</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyWorktree</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput</case>
    <case>org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateOnEmptyRepository</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict</case>
    <case>org.eclipse.jgit.notes.NoteMapMergerTest.testCollapseFanoutAfterMerge</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashChangeInANewSubdirectory</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictReset</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup</case>
    <case>org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWithoutConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testNoOutputStreamSet</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyInSubfolder</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileNotIncluded</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictMarkers</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.notes.NoteMapMergerTest.testFanoutAndLeafWitConflict</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolution</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranchWithStagedChange</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffWithPrefixes</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict</case>
    <case>org.eclipse.jgit.patch.FileHeaderTest.testParseAbbrIndexLine_NoMode</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexAdd</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiffRootTreeToNull</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexEdit</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_7</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryEditPreCommit</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDelete</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testWriteUnchangedFanout2_38</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedApplyOnOtherBranch</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertConflictResolution</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickConflictResolutionNoCOmmit</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.refLogIncludesCommitMessage</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testReadFanout2_2_36</case>
    <case>org.eclipse.jgit.lib.AbbreviatedObjectIdTest.testPrefixCompare_1</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyWorktree</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileNotIncluded</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster</case>
    <case>org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModify</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.multipleEdits</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testSequentialCherryPick</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexDelete</case>
    <case>org.eclipse.jgit.diff.DiffFormatterTest.testDiff</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropAll</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffCached</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.newFileInIndexThenModifiedInWorkTree</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertDirtyIndex</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryModifyIndexChanged</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryDeleteIndexEdit</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickDirtyIndex</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexAdd</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.workingDirectoryCleanIndexModify</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropBoundaryStashedCommits</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testReadFullyFannedOut</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDeleteIndexAdd</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropSingleStashedCommit</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.indexDelete</case>
    <case>org.eclipse.jgit.api.DiffCommandTest.testDiffWithNegativeLineCount</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.indexAdd</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryCleanIndexModify</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryModifyIndexChanged</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileIncluded</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOverExecutableChangeOnNonExectuableFileSystem</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateLooseBlob</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.internal.storage.dfs.DfsInserterTest.testReaderResolve</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickNoCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryDelete</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropFirstStashedCommit</case>
    <case>org.eclipse.jgit.notes.NoteMapTest.testEditFanout2_38</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertMultiple</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertkConflictReset</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevertOurCommitName</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPick</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.multipleEdits</case>
    <case>org.eclipse.jgit.api.RevertCommandTest.testRevert</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging />
</mutation-execution>
