<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_34704" time="1646320">
  <failing>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchAll</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1_NoParentRewriting</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2_NoParentRewriting</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logPathWithMaxCount</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testEdits_MatchNone</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test7</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath3</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter6012Test.test6</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath1</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_FilePath2</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logPathWithSkip</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2_NoParentRewriting</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath1</case>
    <case>org.eclipse.jgit.revwalk.TreeRevFilterTest.testStringOfPearls_DirPath2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_DirPath2</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath2</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testLogWithFilter</case>
    <case>org.eclipse.jgit.revwalk.RevWalkPathFilter1Test.testStringOfPearls_FilePath3_NoParentRewriting</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOursWhenNoBase</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToHighMarkMulitpleBlocks</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullFastForward</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMergeSuccessAllStrategies</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.internal.storage.file.ObjectDirectoryTest.testConcurrentInsertionOfBlobsToTheSameNewFanOutDirectory</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testConflictingMergeFailsDueToDirtyIndex</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches</case>
    <case>org.eclipse.jgit.revwalk.RevCommitListTest.testFillToUnknownCommit</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
  </hanging>
</mutation-execution>
