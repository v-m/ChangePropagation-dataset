<?xml version="1.0" encoding="UTF-8"?>
<mutation-execution id="mutant_9400" time="237938">
  <failing>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.concurrentOnlyOneWritesPackedRefs</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test000_openRepoBadArgs</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test028_LockPackedRef</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPruneNone</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit</case>
    <case>org.eclipse.jgit.nls.RootLocaleTest.testCLIText</case>
    <case>org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testCorruptChecksumAtFooter</case>
    <case>org.eclipse.jgit.util.TemporaryBufferTest.testHeap</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDir</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMixedCaseGit</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasCRC32Copy</case>
    <case>org.eclipse.jgit.transport.SideBandOutputStreamTest.testConstructor_RejectsBadChannel</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithHeads</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.workingDirectoryContentConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRepositoryStateChecks</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithTagName</case>
    <case>org.eclipse.jgit.fnmatch.FileNameMatcherTest.testSpecialGroupCase9</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testDeleteNotEmptyTreeNotOk</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testEmptyTagName</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownBlobFails</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateDeleteNonExisting</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveEdit</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithExistingSubmoduleDefined</case>
    <case>org.eclipse.jgit.internal.storage.file.T0003_BasicTest.test008_FailOnWrongVersion</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testInvalidTagName</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteMergedBranch_historyNotPruned</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithSubmodules</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_NewlinesOnly</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceUnixOk</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeMissingName</case>
    <case>org.eclipse.jgit.internal.storage.file.PackReverseIndexTest.testFindNextOffsetWrongOffset</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testCheckoutOfConflictingFileShouldThrow</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleSquashAndModifyMessage</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInObjectId</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testAbortWrite</case>
    <case>org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeByte_Timeout</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatMonths</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDot</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullEmptyRepository</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDotSpace</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitSubmoduleUpdate</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testNotIgnoreNonExistingObjects</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateMixedCases</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide2</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMergesWithUnrelatedSide1</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeStartsWithZero1</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeStartsWithZero2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeStartsWithZero3</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testRenameLocalBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.GcTagTest.annotatedTag_objectNotPruned</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0001</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0003</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadString_Len0002</case>
    <case>org.eclipse.jgit.api.InitCommandTest.testInitWithDefaultsBare</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testDelete</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.stashedContentMerge</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsFirstBad</case>
    <case>org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testExceptionThrown_BareRepoGetWorkDir</case>
    <case>org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitLimit_0</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptObjectIdReference</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2</case>
    <case>org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_4097</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.branch_historyNotPruned</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePath</case>
    <case>org.eclipse.jgit.transport.URIishTest.shouldRaiseErrorOnNullURI</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRenameOneModify</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfiguration</case>
    <case>org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack1</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWhenDestinationDirectoryExistsAndIsNotEmpty</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackRepoWithCorruptReflog</case>
    <case>org.eclipse.jgit.lib.T0001_PersonIdentTest.nullForEmailShouldThrowIllegalArgumentException</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndFailContinueIfFileIsDirty</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingUnknownTreeFails</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathSecondCheckout</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenMoreThanOneWildcardInDestination</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndSpaceWindows</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutToNonExistingBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_512</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testRejectInvalidWindowsCharacters</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObjectTree_pruned</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithWorkingDirectory</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TrailingGarbage</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testMultiRename</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateUpToDate</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotDot</case>
    <case>org.eclipse.jgit.revwalk.RevWalkFollowFilterTest.testSingleRename</case>
    <case>org.eclipse.jgit.transport.PushCertificateParserTest.testConcatPacketLines</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSingleFixup</case>
    <case>org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readBuffer_Timeout</case>
    <case>org.eclipse.jgit.transport.SideBandOutputStreamTest.testConstructor_RejectsBadBufferSize</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepository</case>
    <case>org.eclipse.jgit.api.InitCommandTest.testInitBare_DirAndGitDirMustBeEqual</case>
    <case>org.eclipse.jgit.api.GitConstructionTest.testClose</case>
    <case>org.eclipse.jgit.lib.RepositoryCacheTest.testFileKeyOpenNew</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_TruncatedZLibStream</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotSupportedMode1</case>
    <case>org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedToNewPack2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotSupportedMode2</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithBranchInSource</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_CorruptZLibStream</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_MultipleIdenticalDeletes</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testCreateBranchAtHiddenCommitFails</case>
    <case>org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithoutNonNoteConflict</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitDot</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatSeconds</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFilesAddedFromTwoBranches</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_LargeObject</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testRenameRemoteTrackingBranch</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathDotDot</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_b</case>
    <case>org.eclipse.jgit.nls.NLSTest.testParallelThreadsWithDifferentLocales</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_d</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_e</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenScanShouldIncludeTreesAndWalkIsRecursive</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflict</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_12_a</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushWithoutPushRefSpec</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SingleByteFiles</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader3</case>
    <case>org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_LargeObject</case>
    <case>org.eclipse.jgit.submodule.SubmoduleUpdateTest.repositoryWithSubmodule</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagInvalidTaggerHeader1</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleNestedWithHeadMatchingIndex</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testNoLeadingOrTrailingDot</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testNoAsciiControlCharacters</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRenameLocalBranch</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldFixupInCaseOfConflict</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveUnnamedCurrentBranchCommits</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoteAlias</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject</case>
    <case>org.eclipse.jgit.transport.TestProtocolTest.testFetch</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TrailingGarbage</case>
    <case>org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithSubmodule</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath3Case</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_DifferentObjects</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadNotExistingBranchConfig</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_d</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testConflictFreeWithSingleFile</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_c</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testSetRenameScore_IllegalArgs</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_e</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows1</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_f2_14_a</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmpty</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardUnknownObject</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullConflict</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAfterSquashMerge</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testDeleteTrailingLines</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoTree4</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoTree3</case>
    <case>org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectInNewPack</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoTree2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoTree1</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepository</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_a</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_c</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRefs_CorruptSymbolicReference</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_b</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateForce</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_e</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForwardForced</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_7_d</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testDeleteRecursive</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigLocalBranch</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NoHeader</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testWindowsReservedNames</case>
    <case>org.eclipse.jgit.api.StashDropCommandTest.dropWithInvalidLogIndex</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneWithAutoSetupRebase</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testRenameOverExistingNonEmptyDirectory</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardBeforeTextAtEnd</case>
    <case>org.eclipse.jgit.transport.TestProtocolTest.testReceivePackFactory</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefLockedRefNotPackedNoError</case>
    <case>org.eclipse.jgit.patch.PatchErrorTest.testError_DisconnectedHunk</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitNewSubmodule</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGiTTilde1</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardRebaseWithModification</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStashConflictOnApply</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmptyDirectoriesOnlyButIsFile</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithNewFile</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4SizeThinVsNoThin</case>
    <case>org.eclipse.jgit.util.RawSubStringPatternTest.testEmptyPattern</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_bare</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeOffsetsVsRefs</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4ThinPack</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipNoConflict</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushRefUpdate</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForRewordInCaseOfConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1NoObjectReuse</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseOffsets</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_RejoinIfUnpaired</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidSetDestination</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_b</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_a</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_d</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenCommonBlobFails</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_c</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testResetToNonexistingHEAD</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranchShortName</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges2</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_6_e</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.untrackedFileConflictsWithCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithAutoStash</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebasePreservingMerges1</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidDestinationDoubleSlashes</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OnePair</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsolutePathTwoLevelsSecondBad</case>
    <case>org.eclipse.jgit.api.GitConstructionTest.testWrap</case>
    <case>org.eclipse.jgit.internal.storage.file.ConcurrentRepackTest.testObjectMovedWithinPack</case>
    <case>org.eclipse.jgit.submodule.SubmoduleSyncTest.repositoryWithRelativeUriSubmodule</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestCopyFile</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatYears</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_GarbageAfterSize</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullLocalConflict</case>
    <case>org.eclipse.jgit.revwalk.SkipRevFilterTest.testSkipRevFilterNegative</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testExclude</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testSingleRevision</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.unstashNoHead</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatMinutes</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testUntrackedConflicts</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath2Case</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithUpdatedTagShouldNotTryToUpdateLocal</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutHierarchy</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateNonFastForwardDoesNotDoExpensiveMergeCheck</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitHeaderRead</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleWithNoGitDirectory</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneWithPruneNowNoReflog</case>
    <case>org.eclipse.jgit.util.HookTest.testFailedPreCommitHookBlockCommit</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testDeleteRecursiveEmptyNeedsToCheckFilesFirst</case>
    <case>org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedOld</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackRepoWithNoRefs</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testPushResult</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testRejectNulInPathSegment</case>
    <case>org.eclipse.jgit.api.PathCheckoutCommandTest.testStageNotPossibleWithBranch</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMergeProgrammaticConfigurationImpliedTargetBranch</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_SameContentMultipleTimes</case>
    <case>org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSizeAbovePackedGitLimit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testUnknownUpstream</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testMiddleClearAllLines</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testFailureF2</case>
    <case>org.eclipse.jgit.lib.ConfigTest.testReadLong</case>
    <case>org.eclipse.jgit.api.ApplyCommandTest.testFailureF1</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithoutConfig</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommitsOnDifferentBranches</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaResultSize</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateEnabled</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullPath</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedObjects_onlyExpiredPruned</case>
    <case>org.eclipse.jgit.util.HookTest.testFailedCommitMsgHookBlocksCommit</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testWriteSingleRef</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenTreeWalkHasLessThanTwoTrees</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeTruncatedInName</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDotAtEndOnWindows</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveSquashFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateNonFastForward</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames4</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testWrongParams</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames5</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirNonStd</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGit</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames6</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2SizeDeltasVsNoDeltas</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames7</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUncommittedDelete</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testListAllBranchesShouldNotDie</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testNoDirectorySuffix</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_LargeObject_CorruptZLibStream</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneRename</case>
    <case>org.eclipse.jgit.patch.PatchErrorTest.testError_GarbageBetweenFiles</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames1</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testCopyFileBare</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPath1Case</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeDuplicateNames3</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateOnReject</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptSymbolicReference</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyUri</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserve1Config</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinue</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit2</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testIncrementalBundle</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGit3</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testFastForwardWithMultipleCommits</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateCreateRef</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardAfterText</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackAllObjectsInOnePack</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testRenameLimit</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testFileModeChangeAndContentChangeConflict</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidCommitter</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakBelowScore</case>
    <case>org.eclipse.jgit.transport.PushCertificateParserTest.disabledParserStillRequiresCorrectSyntax</case>
    <case>org.eclipse.jgit.api.GarbageCollectCommandTest.testGCmoreCommits</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSingleRead</case>
    <case>org.eclipse.jgit.api.LogCommandTest.logAllCommitsWithTag</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenOnlyDestinationWildcard</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_b</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows1</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_a</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotWindows2</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_d</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotOctal2</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedNonExpiredObject_notPruned</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_c</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndSkipWithConflict</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeModeNotOctal1</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid2</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithBranch</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid3</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleDirectoryIterator</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpaceDot</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid1</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree4</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree3</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree2</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryOnlyOneBranch</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadACK_Invalid4</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidTree1</case>
    <case>org.eclipse.jgit.internal.storage.file.GcTagTest.lightweightTag_objectNotPruned</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenWildcardBeforeText</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBranchPrunedTest.deleteBranch_historyPruned</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptAuthor</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testMkdir</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndAbortWithDetachedHEAD</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testCheckoutOutChanges</case>
    <case>org.eclipse.jgit.patch.PatchErrorTest.testError_TruncatedNew</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testValidSpecialCharacterUnixs</case>
    <case>org.eclipse.jgit.dircache.DirCacheEntryTest.testIsValidPath</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testInexactRenames_OnePair2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testRejectSpaceAtEndOnWindows</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.dontPackHEAD_nonBare</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgCon</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMixedSquashAndFixup</case>
    <case>org.eclipse.jgit.lib.ConstantsEncodingTest.testEncodeASCII_FailOnNonASCII</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testMergeFirstStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithMultipleHeadBranches</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatYearsMonths</case>
    <case>org.eclipse.jgit.util.Base64Test.testDecodeFail_NonBase64Character</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject3</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject4</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addExistentSubmodule</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject1</case>
    <case>org.eclipse.jgit.api.AddCommandTest.testAddNothing</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_a</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject2</case>
    <case>org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testExceptionThrown_BareRepoGetIndexFile</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_c</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_b</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject5</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_e</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoObject6</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_1_d</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteIndex</case>
    <case>org.eclipse.jgit.api.blame.BlameGeneratorTest.testRenamedBoundLineDelete</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatDays</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteCurDrivePathWindows</case>
    <case>org.eclipse.jgit.api.CommitCommandTest.commitAmendOnInitialShouldFail</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack1</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeFullBlob</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyUnix</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutWithConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWriteEmptyPack2</case>
    <case>org.eclipse.jgit.api.CommitOnlyTest.testOnlyOption_f1_2_e</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateExpectedRemote</case>
    <case>org.eclipse.jgit.notes.NoteMapMergerTest.testNonNotesWithNonNoteConflict</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndContinue</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidType</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath2</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteWindowsPath1</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenSourceOnlyAndWildcard</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testMultipleHeads</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBare</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchWithExplicitTagsShouldUpdateLocal</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testNonMarkingInputStream</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testDeleteFile</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousGitPathEndDotUnixOk</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testDeleteMiddleLines</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRepoManifestGroups</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testTwoRenames</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictAndContinueWithNoDeltaToMaster</case>
    <case>org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviateIsActuallyUnique</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testBareCloneRepositoryNullRemote</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameContainsSlash</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithoutLocalBranch</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemote</case>
    <case>org.eclipse.jgit.patch.PatchCcErrorTest.testError_CcTruncatedOld</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryExplicitGitDirBare</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsGITTilde1</case>
    <case>org.eclipse.jgit.dircache.DirCacheBasicTest.testRejectInvalidWindowsPaths</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFuture</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testRejectDevicesOnWindows</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForwardWithLocalCommitAndRebaseFlagSet</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjects</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testConflictingMerge2</case>
    <case>org.eclipse.jgit.internal.storage.file.PackFileTest.testDelta_SmallObjectChain</case>
    <case>org.eclipse.jgit.internal.storage.file.PackFileTest.testWhole_SmallObject</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmoduleWithRelativeUri</case>
    <case>org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_writeBuffer_Timeout</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionTag</case>
    <case>org.eclipse.jgit.nls.NLSTest.testJVMDefaultLocale</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testIncludeTag</case>
    <case>org.eclipse.jgit.transport.PackParserTest.test1</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsEmpty</case>
    <case>org.eclipse.jgit.transport.PackParserTest.test2</case>
    <case>org.eclipse.jgit.diff.DiffFormatterReflowTest.testNegativeContextFails</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testDataAfterPackFooterSplitObjectRead</case>
    <case>org.eclipse.jgit.patch.PatchErrorTest.testError_GitBinaryNoForwardHunk</case>
    <case>org.eclipse.jgit.internal.storage.file.GcConcurrentTest.concurrentRepack</case>
    <case>org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_close_Timeout</case>
    <case>org.eclipse.jgit.util.TemporaryBufferTest.testHeapWithEstimatedSize</case>
    <case>org.eclipse.jgit.transport.URIishTest.shouldRaiseErrorOnEmptyURI</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testCommitCorruptCommitter</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoCommitter1</case>
    <case>org.eclipse.jgit.api.TagCommandTest.testFailureOnSignedTags</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testEmptyString</case>
    <case>org.eclipse.jgit.api.LsRemoteCommandTest.testLsRemoteWithTags</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_BreakAll</case>
    <case>org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjectsWithPruneNow</case>
    <case>org.eclipse.jgit.api.StashCreateCommandTest.unmergedPathsShouldCauseException</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashMerge</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveReword</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.looseRefPacked</case>
    <case>org.eclipse.jgit.lib.ReflogResolveTest.resolveDate</case>
    <case>org.eclipse.jgit.internal.storage.file.GcKeepFilesTest.testKeepFiles</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testReadBranchConfig</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryWithNestedSubmodules</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testMoveToOtherDir</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testTinyThinPack</case>
    <case>org.eclipse.jgit.lib.ConfigTest.testGetInvalidEnum</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDotGitSpace</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1DotSuffix</case>
    <case>org.eclipse.jgit.diff.DiffEntryTest.shouldThrowIAEWhenTreeWalkHasMoreThanTwoTrees</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenOnlySourceWildcard</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd2</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testIgnoreNonExistingObjectsWithBitmaps</case>
    <case>org.eclipse.jgit.internal.storage.file.RefUpdateTest.testDeleteWithoutHead</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFile</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_NegativeSize</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousPathEmptyWindows</case>
    <case>org.eclipse.jgit.nls.RootLocaleTest.testUIText</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadString_LenHELO</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_SmallObject_TruncatedZLibStream</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevisionBranch</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testPathsResetToNonexistingRef</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldStopForEditInCaseOfConflict</case>
    <case>org.eclipse.jgit.transport.PacketLineInTest.testReadStringRaw4</case>
    <case>org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUnsupportedGroupCase1</case>
    <case>org.eclipse.jgit.nls.NLSTest.testNLSLocale</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRemoveOverlappingBare</case>
    <case>org.eclipse.jgit.fnmatch.FileNameMatcherTest.testUnsupportedGroupCase0</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testTrackingRefUpdateDisabled</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testRename</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType3</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType1</case>
    <case>org.eclipse.jgit.dircache.DirCacheEntryTest.testSetFileMode</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutTest.testDontOverwriteDirtyFile</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateFastForward</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_OneRenameTwoUnrelatedFiles</case>
    <case>org.eclipse.jgit.dircache.DirCacheCGitCompatabilityTest.testUnsupportedRequiredExtension</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.testFetch</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseEndsIfLastStepIsEdit</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_GitlinkAndFile</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemoteVsForce</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgLpt1</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.noStashedCommits</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testReplaceManifestBare</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupWithBlankLines</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.testParseGitDescribeOutput</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testShellGlob</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testInvalidRefName</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testCreateNewFile</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldSquashInCaseOfConflict</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousAbsoluteUNCPathWindows2OnUnix</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testNonDefaultRemotes</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testEditAllLines</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testSuccess</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testPackWithTrailingGarbage</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoType4</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateAndList</case>
    <case>org.eclipse.jgit.patch.PatchErrorTest.testError_BodyTooLong</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testRenameInSubDir</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseWithUntrackedFile</case>
    <case>org.eclipse.jgit.internal.storage.file.GcDirCacheSavesObjectsTest.testDirCacheSavesObjects</case>
    <case>org.eclipse.jgit.treewalk.FileTreeIteratorTest.submoduleHeadMatchesIndex</case>
    <case>org.eclipse.jgit.api.CommitAndLogCommandTest.testMultipleInvocations</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidSlashAtStart</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_OneDeleteManyAdds</case>
    <case>org.eclipse.jgit.api.ResetCommandTest.testHardResetAfterSquashMerge</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.repackEmptyRepo_noPackCreated</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPush</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldNotFailIfUserAddCommentLinesInPrepareSteps</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflict</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader3</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTagNoTagHeader1</case>
    <case>org.eclipse.jgit.submodule.SubmoduleInitTest.resolveInvalidParentUrl</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent1</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor3</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent2</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor2</case>
    <case>org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitOpenFiles_0</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent3</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor5</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent4</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor4</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidParent5</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor7</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor6</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.addSubmodule</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithNullUri</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatWeeks</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testGetRef_CorruptObjectIdReference</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenMoreThanOneWildcardInSource</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsMacHFSGitCorruptUTF8AtEnd</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitInvalidAuthor1</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testAbortShouldAlsoAbortNonInteractiveRebaseWithRebaseApplyDir</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testForbiddenNamesOnWindowsEgConDotSuffix</case>
    <case>org.eclipse.jgit.api.CloneCommandTest.testCloneRepositoryCustomRemote</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2DeltasReuseRefs</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testPackWithDuplicateBlob</case>
    <case>org.eclipse.jgit.lib.T0001_PersonIdentTest.nullForNameShouldThrowIllegalArgumentException</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig3</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebasePreserveConfig2</case>
    <case>org.eclipse.jgit.internal.storage.file.GcReflogTest.testPackCommitsAndLooseOneNoReflog</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeNameIsDot</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveFixupFirstCommitShouldFail</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTagForFetchedObjects</case>
    <case>org.eclipse.jgit.api.CherryPickCommandTest.testCherryPickMerge</case>
    <case>org.eclipse.jgit.internal.storage.file.WindowCacheReconfigureTest.testConfigureCache_PackedGitWindowSize_0</case>
    <case>org.eclipse.jgit.util.FileUtilTest.testMkdirs</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting1</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictFileCreationAndDeletion</case>
    <case>org.eclipse.jgit.lib.DirCacheCheckoutMaliciousPathTest.testMaliciousWindowsADS</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_SymlinkAndFileSamePath</case>
    <case>org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.unknownRepositoryFormatVersion</case>
    <case>org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_skip_Timeout</case>
    <case>org.eclipse.jgit.submodule.SubmoduleAddTest.commandWithEmptyPath</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting2</case>
    <case>org.eclipse.jgit.internal.storage.file.LockFileTest.lockFailedExceptionRecovery</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidTreeBadSorting3</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testFilterHidesPrivate</case>
    <case>org.eclipse.jgit.util.GitDateFormatterTest.RELATIVE</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testTwoRevisions</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testBareRepo</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullFastForward</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testNotPackTwice</case>
    <case>org.eclipse.jgit.api.GitConstructionTest.testOpen</case>
    <case>org.eclipse.jgit.api.GarbageCollectCommandTest.testGConeCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnLastConflictAndSkip</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.unstashNonStashCommit</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testStopOnConflictCommitAndContinue</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidSourceDoubleSlashes</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateDelete</case>
    <case>org.eclipse.jgit.api.StashApplyCommandTest.indexContentConflict</case>
    <case>org.eclipse.jgit.internal.storage.file.RepositorySetupWorkDirTest.testExceptionThrown_BareRepoGetIndex</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testCheckoutRemoteTrackingWithUpstream</case>
    <case>org.eclipse.jgit.transport.TestProtocolTest.testUploadPackFactory</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testNoRenames_EmptyFile2</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testNoMagicRefCharacters</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_PathBreaksTie</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.testPackCommitsAndLooseOneWithPruneNow</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf4</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf5</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldNotFetchTagsFromOtherBranches</case>
    <case>org.eclipse.jgit.lib.ObjectCheckerTest.testInvalidCommitNoAuthor</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf1</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf2</case>
    <case>org.eclipse.jgit.api.BlameCommandTest.testCoreAutoCrlf3</case>
    <case>org.eclipse.jgit.api.MergeCommandTest.testSquashFastForward</case>
    <case>org.eclipse.jgit.lib.ValidRefNameTest.testNoBareDot</case>
    <case>org.eclipse.jgit.internal.storage.file.FileRepositoryBuilderTest.invalidRepositoryFormatVersion</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateConflictThanksToDelete</case>
    <case>org.eclipse.jgit.transport.PackParserTest.testMaxObjectSizeDeltaBlock</case>
    <case>org.eclipse.jgit.api.PullCommandWithRebaseTest.testPullFastForward</case>
    <case>org.eclipse.jgit.internal.storage.file.GcPruneNonReferencedTest.nonReferencedExpiredObject_pruned</case>
    <case>org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPathAndStage</case>
    <case>org.eclipse.jgit.dircache.DirCacheBuilderTest.testBuildRejectsUnsetFileMode</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testAddRepoManifest</case>
    <case>org.eclipse.jgit.transport.BundleWriterTest.testWriteHEAD</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testNullRefName</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseShouldIgnoreMergeCommits</case>
    <case>org.eclipse.jgit.internal.storage.file.AbbreviationTest.testAbbreviatePackedBlob</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushWithRefSpecFromConfig</case>
    <case>org.eclipse.jgit.transport.ReceivePackAdvertiseRefsHookTest.testUsingHiddenDeltaBaseFails</case>
    <case>org.eclipse.jgit.lib.RepositoryResolveTest.invalidNames</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testInexactRename_LastByteDifferent</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseInteractiveMultipleSquash</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testPackFormat_DeltaNotAllowed</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testDetachedHead</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithMergeConfig2</case>
    <case>org.eclipse.jgit.internal.storage.file.UnpackedObjectTest.testStandardFormat_InvalidType</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateUnexpectedRemote</case>
    <case>org.eclipse.jgit.api.InitCommandTest.testInitNonBare_GitdirAndDirShouldntBeSame</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleForce</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testPushAfterGC</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testDonePruneTooYoungPacks</case>
    <case>org.eclipse.jgit.api.CheckoutCommandTest.testAlreadyExists</case>
    <case>org.eclipse.jgit.gitrepo.RepoCommandTest.testRevision</case>
    <case>org.eclipse.jgit.api.PushCommandTest.testTrackingUpdate</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testBreakModify_DontBreakAboveScore</case>
    <case>org.eclipse.jgit.transport.TestProtocolTest.testPush</case>
    <case>org.eclipse.jgit.revwalk.RevWalkMergeBaseTest.testDisallowTreeFilter</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack4</case>
    <case>org.eclipse.jgit.transport.PushProcessTest.testUpdateRejectedByConnection</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidWhenDestinationOnlyAndWildcard</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack3</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack2</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullMerge</case>
    <case>org.eclipse.jgit.internal.storage.file.PackWriterTest.testWritePack1</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testCreateFromCommit</case>
    <case>org.eclipse.jgit.util.RelativeDateFormatterTest.testFormatHours</case>
    <case>org.eclipse.jgit.internal.storage.file.RefDirectoryTest.testBatchRefUpdateSimpleNoForce</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig2</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig3</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPackCommitsAndLooseOne</case>
    <case>org.eclipse.jgit.api.FetchCommandTest.fetchShouldAutoFollowTag</case>
    <case>org.eclipse.jgit.util.io.TimeoutInputStreamTest.testTimeout_readByte_Timeout</case>
    <case>org.eclipse.jgit.dircache.DirCacheEntryTest.testCreate_ByStringPath</case>
    <case>org.eclipse.jgit.internal.storage.file.GcBasicPackingTest.testPack2Commits</case>
    <case>org.eclipse.jgit.nls.NLSTest.testThreadTranslationBundleInheritance</case>
    <case>org.eclipse.jgit.diff.RenameDetectorTest.testExactRename_ManyRenames</case>
    <case>org.eclipse.jgit.api.BranchCommandTest.testPullConfigRemoteBranch</case>
    <case>org.eclipse.jgit.transport.RefSpecTest.invalidSetSource</case>
    <case>org.eclipse.jgit.util.io.TimeoutOutputStreamTest.testTimeout_flush_Timeout</case>
    <case>org.eclipse.jgit.nls.RootLocaleTest.testJGitText</case>
    <case>org.eclipse.jgit.api.RebaseCommandTest.testRebaseTodoLineSetComment</case>
    <case>org.eclipse.jgit.api.PullCommandTest.testPullWithRebaseConfig1</case>
  </failing>
  <ignored>
    <case>org.eclipse.jgit.transport.URIishTest.testFileWithUserHome</case>
    <case>org.eclipse.jgit.api.HugeFileTest.testAddHugeFile</case>
  </ignored>
  <hanging>
    <case>org.eclipse.jgit.internal.storage.file.GcPackRefsTest.whileRefUpdatedRefUpdateSucceeds</case>
  </hanging>
</mutation-execution>
