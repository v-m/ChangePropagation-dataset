<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="ROR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="138786">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_569" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-')" to="(code == '-')" />
    <mutant id="mutant_565" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'N')" to="false" />
    <mutant id="mutant_566" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'N')" to="(chr &lt; 'N')" />
    <mutant id="mutant_567" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-')" to="(code &gt;= '-')" />
    <mutant id="mutant_568" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-')" to="(code &lt;= '-')" />
    <mutant id="mutant_3020" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &lt;= (BinaryCodec.BITS.length)" />
    <mutant id="mutant_3017" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &gt; (BinaryCodec.BITS.length)" />
    <mutant id="mutant_3016" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="ii &lt; (raw.length)" to="ii != (raw.length)" />
    <mutant id="mutant_3015" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="ii &lt; (raw.length)" to="ii == (raw.length)" />
    <mutant id="mutant_3014" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="ii &lt; (raw.length)" to="ii &lt;= (raw.length)" />
    <mutant id="mutant_3013" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="ii &lt; (raw.length)" to="false" />
    <mutant id="mutant_3012" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="ii &lt; (raw.length)" to="true" />
    <mutant id="mutant_3011" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="ii &lt; (raw.length)" to="ii &gt;= (raw.length)" />
    <mutant id="mutant_3010" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="ii &lt; (raw.length)" to="ii &gt; (raw.length)" />
    <mutant id="mutant_561" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'N')" to="(chr &gt;= 'N')" />
    <mutant id="mutant_562" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'N')" to="(chr &gt; 'N')" />
    <mutant id="mutant_563" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'N')" to="(chr != 'N')" />
    <mutant id="mutant_564" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'N')" to="true" />
    <mutant id="mutant_3019" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits == (BinaryCodec.BITS.length)" />
    <mutant id="mutant_560" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'N')" to="(chr &lt;= 'N')" />
    <mutant id="mutant_3018" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &gt;= (BinaryCodec.BITS.length)" />
    <mutant id="mutant_576" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode != code)" to="(lastCode &lt;= code)" />
    <mutant id="mutant_577" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode != code)" to="(lastCode &lt; code)" />
    <mutant id="mutant_578" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode != code)" to="true" />
    <mutant id="mutant_579" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode != code)" to="false" />
    <mutant id="mutant_3006" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toByteArray(java.lang.String)" from="ascii == null" to="false" />
    <mutant id="mutant_3005" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toByteArray(java.lang.String)" from="ascii == null" to="true" />
    <mutant id="mutant_3004" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toByteArray(java.lang.String)" from="ascii == null" to="ascii &lt; null" />
    <mutant id="mutant_3003" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toByteArray(java.lang.String)" from="ascii == null" to="ascii != null" />
    <mutant id="mutant_3002" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) &lt;= 0" />
    <mutant id="mutant_3001" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) &lt; 0" />
    <mutant id="mutant_3000" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) != 0" />
    <mutant id="mutant_572" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-')" to="(code &gt; '-')" />
    <mutant id="mutant_573" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-')" to="(code &lt; '-')" />
    <mutant id="mutant_574" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode != code)" to="(lastCode &gt; code)" />
    <mutant id="mutant_575" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode != code)" to="(lastCode == code)" />
    <mutant id="mutant_3009" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toByteArray(java.lang.String)" from="ascii == null" to="ascii &gt; null" />
    <mutant id="mutant_570" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-')" to="true" />
    <mutant id="mutant_3008" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toByteArray(java.lang.String)" from="ascii == null" to="ascii &lt;= null" />
    <mutant id="mutant_571" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-')" to="false" />
    <mutant id="mutant_3007" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toByteArray(java.lang.String)" from="ascii == null" to="ascii &gt;= null" />
    <mutant id="mutant_587" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '0')" to="(code &gt; '0')" />
    <mutant id="mutant_588" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode == '/')" to="(lastCode != '/')" />
    <mutant id="mutant_589" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode == '/')" to="(lastCode &gt;= '/')" />
    <mutant id="mutant_1298" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_1299" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_1296" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="true" />
    <mutant id="mutant_1297" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="false" />
    <mutant id="mutant_1294" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_1295" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_583" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '0')" to="(code &gt;= '0')" />
    <mutant id="mutant_584" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '0')" to="true" />
    <mutant id="mutant_585" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '0')" to="false" />
    <mutant id="mutant_586" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '0')" to="(code &lt;= '0')" />
    <mutant id="mutant_580" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode != code)" to="(lastCode &gt;= code)" />
    <mutant id="mutant_581" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '0')" to="(code == '0')" />
    <mutant id="mutant_582" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '0')" to="(code &lt; '0')" />
    <mutant id="mutant_598" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &lt; '0')" to="true" />
    <mutant id="mutant_599" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &lt; '0')" to="false" />
    <mutant id="mutant_1292" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_1293" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_1290" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="false" />
    <mutant id="mutant_1291" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_1289" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="true" />
    <mutant id="mutant_1287" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'R'" to="(charAt(value, (index + 1))) != 'R'" />
    <mutant id="mutant_1288" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_1285" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'R'" to="(charAt(value, (index + 1))) &lt; 'R'" />
    <mutant id="mutant_1286" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'R'" to="(charAt(value, (index + 1))) &gt; 'R'" />
    <mutant id="mutant_1283" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'R'" to="true" />
    <mutant id="mutant_1284" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'R'" to="false" />
    <mutant id="mutant_594" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode == '/')" to="(lastCode &lt; '/')" />
    <mutant id="mutant_595" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &lt; '0')" to="(code != '0')" />
    <mutant id="mutant_596" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &lt; '0')" to="(code == '0')" />
    <mutant id="mutant_597" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &lt; '0')" to="(code &gt;= '0')" />
    <mutant id="mutant_590" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode == '/')" to="(lastCode &lt;= '/')" />
    <mutant id="mutant_591" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode == '/')" to="(lastCode &gt; '/')" />
    <mutant id="mutant_592" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode == '/')" to="true" />
    <mutant id="mutant_593" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(lastCode == '/')" to="false" />
    <mutant id="mutant_3064" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="false" />
    <mutant id="mutant_3063" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="true" />
    <mutant id="mutant_3062" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="((Character.toLowerCase(c1)) &gt;= (Character.toLowerCase(c2)))" />
    <mutant id="mutant_3061" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="((Character.toLowerCase(c1)) &gt; (Character.toLowerCase(c2)))" />
    <mutant id="mutant_3060" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="((Character.toLowerCase(c1)) &lt;= (Character.toLowerCase(c2)))" />
    <mutant id="mutant_3059" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="((Character.toLowerCase(c1)) &lt; (Character.toLowerCase(c2)))" />
    <mutant id="mutant_3058" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2)))" to="((Character.toUpperCase(c1)) &gt; (Character.toUpperCase(c2)))" />
    <mutant id="mutant_3057" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2)))" to="((Character.toUpperCase(c1)) == (Character.toUpperCase(c2)))" />
    <mutant id="mutant_3056" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2)))" to="false" />
    <mutant id="mutant_3055" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2)))" to="true" />
    <mutant id="mutant_3054" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2)))" to="((Character.toUpperCase(c1)) &lt; (Character.toUpperCase(c2)))" />
    <mutant id="mutant_3053" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2)))" to="((Character.toUpperCase(c1)) &lt;= (Character.toUpperCase(c2)))" />
    <mutant id="mutant_3052" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2)))" to="((Character.toUpperCase(c1)) &gt;= (Character.toUpperCase(c2)))" />
    <mutant id="mutant_3051" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="c1 == c2" to="c1 &lt; c2" />
    <mutant id="mutant_3050" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="c1 == c2" to="c1 &gt;= c2" />
    <mutant id="mutant_3049" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="c1 == c2" to="false" />
    <mutant id="mutant_3048" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="c1 == c2" to="true" />
    <mutant id="mutant_3047" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="c1 == c2" to="c1 &lt;= c2" />
    <mutant id="mutant_3046" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="c1 == c2" to="c1 &gt; c2" />
    <mutant id="mutant_3045" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="c1 == c2" to="c1 != c2" />
    <mutant id="mutant_3044" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(tmpLen--) &gt; 0" to="(tmpLen--) == 0" />
    <mutant id="mutant_3043" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(tmpLen--) &gt; 0" to="(tmpLen--) &lt;= 0" />
    <mutant id="mutant_3042" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(tmpLen--) &gt; 0" to="(tmpLen--) &lt; 0" />
    <mutant id="mutant_3041" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(tmpLen--) &gt; 0" to="(tmpLen--) != 0" />
    <mutant id="mutant_3040" viable="false" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(tmpLen--) &gt; 0" to="false" />
    <mutant id="mutant_3039" viable="false" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(tmpLen--) &gt; 0" to="true" />
    <mutant id="mutant_3038" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(tmpLen--) &gt; 0" to="(tmpLen--) &gt;= 0" />
    <mutant id="mutant_3037" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.decode(java.lang.Object)" from="ascii == null" to="ascii != null" />
    <mutant id="mutant_3036" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.decode(java.lang.Object)" from="ascii == null" to="false" />
    <mutant id="mutant_3035" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.decode(java.lang.Object)" from="ascii == null" to="true" />
    <mutant id="mutant_3034" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.decode(java.lang.Object)" from="ascii == null" to="ascii &lt;= null" />
    <mutant id="mutant_3033" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.decode(java.lang.Object)" from="ascii == null" to="ascii &gt; null" />
    <mutant id="mutant_3032" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.decode(java.lang.Object)" from="ascii == null" to="ascii &lt; null" />
    <mutant id="mutant_3031" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.decode(java.lang.Object)" from="ascii == null" to="ascii &gt;= null" />
    <mutant id="mutant_3030" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) &lt;= 0" />
    <mutant id="mutant_3028" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) != 0" />
    <mutant id="mutant_3027" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) &gt; 0" />
    <mutant id="mutant_3026" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="false" />
    <mutant id="mutant_3025" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="true" />
    <mutant id="mutant_3024" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) &gt;= 0" />
    <mutant id="mutant_3023" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits != (BinaryCodec.BITS.length)" />
    <mutant id="mutant_3022" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="false" />
    <mutant id="mutant_3021" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="true" />
    <mutant id="mutant_3029" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) &lt; 0" />
    <mutant id="mutant_3099" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1 == cs2" to="cs1 != cs2" />
    <mutant id="mutant_3098" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1 == cs2" to="false" />
    <mutant id="mutant_3097" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1 == cs2" to="true" />
    <mutant id="mutant_3096" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1 == cs2" to="cs1 &lt; cs2" />
    <mutant id="mutant_3095" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1 == cs2" to="cs1 &gt;= cs2" />
    <mutant id="mutant_3094" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1 == cs2" to="cs1 &gt; cs2" />
    <mutant id="mutant_3093" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="digit == (-1)" to="digit &gt;= (-1)" />
    <mutant id="mutant_3092" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="digit == (-1)" to="digit &lt;= (-1)" />
    <mutant id="mutant_3091" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="digit == (-1)" to="digit != (-1)" />
    <mutant id="mutant_3090" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="digit == (-1)" to="false" />
    <mutant id="mutant_3089" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="digit == (-1)" to="true" />
    <mutant id="mutant_3088" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="digit == (-1)" to="digit &gt; (-1)" />
    <mutant id="mutant_3087" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="digit == (-1)" to="digit &lt; (-1)" />
    <mutant id="mutant_3086" viable="true" in="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" from="i &lt; l" to="i &lt;= l" />
    <mutant id="mutant_3085" viable="true" in="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" from="i &lt; l" to="i != l" />
    <mutant id="mutant_3084" viable="true" in="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" from="i &lt; l" to="i &gt; l" />
    <mutant id="mutant_3083" viable="false" in="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" from="i &lt; l" to="false" />
    <mutant id="mutant_3082" viable="false" in="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" from="i &lt; l" to="true" />
    <mutant id="mutant_3081" viable="true" in="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" from="i &lt; l" to="i &gt;= l" />
    <mutant id="mutant_3080" viable="true" in="org.apache.commons.codec.binary.Hex.encodeHex(byte[],char[])" from="i &lt; l" to="i == l" />
    <mutant id="mutant_3079" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="j &lt; len" to="j &gt;= len" />
    <mutant id="mutant_3078" viable="false" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="j &lt; len" to="false" />
    <mutant id="mutant_3077" viable="false" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="j &lt; len" to="true" />
    <mutant id="mutant_3076" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="j &lt; len" to="j &lt;= len" />
    <mutant id="mutant_3075" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="j &lt; len" to="j &gt; len" />
    <mutant id="mutant_3074" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="j &lt; len" to="j != len" />
    <mutant id="mutant_3073" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="j &lt; len" to="j == len" />
    <mutant id="mutant_3072" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="(len &amp; 1) != 0" to="(len &amp; 1) &lt; 0" />
    <mutant id="mutant_3071" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="(len &amp; 1) != 0" to="(len &amp; 1) &lt;= 0" />
    <mutant id="mutant_3070" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="(len &amp; 1) != 0" to="(len &amp; 1) == 0" />
    <mutant id="mutant_3069" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="(len &amp; 1) != 0" to="(len &amp; 1) &gt; 0" />
    <mutant id="mutant_3068" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="(len &amp; 1) != 0" to="false" />
    <mutant id="mutant_3067" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="(len &amp; 1) != 0" to="true" />
    <mutant id="mutant_3066" viable="true" in="org.apache.commons.codec.binary.Hex.decodeHex(char[])" from="(len &amp; 1) != 0" to="(len &amp; 1) &gt;= 0" />
    <mutant id="mutant_3065" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="((Character.toLowerCase(c1)) == (Character.toLowerCase(c2)))" />
    <mutant id="mutant_2608" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="false" />
    <mutant id="mutant_2609" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i != inAvail" />
    <mutant id="mutant_3939" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b &lt; 0" to="b &gt;= 0" />
    <mutant id="mutant_3930" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="urlsafe == null" to="true" />
    <mutant id="mutant_2606" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &gt;= inAvail" />
    <mutant id="mutant_3938" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b &lt; 0" to="b &gt; 0" />
    <mutant id="mutant_2607" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="true" />
    <mutant id="mutant_3937" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b &lt; 0" to="false" />
    <mutant id="mutant_2604" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &gt; inAvail" />
    <mutant id="mutant_3936" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b &lt; 0" to="true" />
    <mutant id="mutant_2605" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &lt;= inAvail" />
    <mutant id="mutant_3935" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b &lt; 0" to="b == 0" />
    <mutant id="mutant_2602" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="false" />
    <mutant id="mutant_3934" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b &lt; 0" to="b != 0" />
    <mutant id="mutant_2603" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) &gt;= 0)" />
    <mutant id="mutant_3933" viable="false" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="urlsafe == null" to="urlsafe &gt;= null" />
    <mutant id="mutant_2600" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) &lt; 0)" />
    <mutant id="mutant_3932" viable="false" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="urlsafe == null" to="urlsafe &lt; null" />
    <mutant id="mutant_2601" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="true" />
    <mutant id="mutant_3931" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="urlsafe == null" to="false" />
    <mutant id="mutant_3929" viable="false" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="urlsafe == null" to="urlsafe &lt;= null" />
    <mutant id="mutant_3928" viable="false" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="urlsafe == null" to="urlsafe &gt; null" />
    <mutant id="mutant_3927" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="urlsafe == null" to="urlsafe != null" />
    <mutant id="mutant_3926" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_3925" viable="false" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_3924" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="bytes == null" to="false" />
    <mutant id="mutant_3923" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="bytes == null" to="true" />
    <mutant id="mutant_3922" viable="false" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_3921" viable="false" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_3920" viable="false" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_3919" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == (URLCodec.ESCAPE_CHAR)" to="b != (URLCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_3918" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == (URLCodec.ESCAPE_CHAR)" to="b &gt; (URLCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_3917" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == (URLCodec.ESCAPE_CHAR)" to="false" />
    <mutant id="mutant_3916" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == (URLCodec.ESCAPE_CHAR)" to="true" />
    <mutant id="mutant_3915" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == (URLCodec.ESCAPE_CHAR)" to="b &lt;= (URLCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_3914" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == (URLCodec.ESCAPE_CHAR)" to="b &lt; (URLCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_3913" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == (URLCodec.ESCAPE_CHAR)" to="b &gt;= (URLCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_3912" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == '+'" to="b &gt;= '+'" />
    <mutant id="mutant_3911" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == '+'" to="b &lt; '+'" />
    <mutant id="mutant_3910" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == '+'" to="b &lt;= '+'" />
    <mutant id="mutant_3909" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == '+'" to="false" />
    <mutant id="mutant_3908" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == '+'" to="true" />
    <mutant id="mutant_3907" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == '+'" to="b != '+'" />
    <mutant id="mutant_3906" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="b == '+'" to="b &gt; '+'" />
    <mutant id="mutant_3905" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="i &lt; (bytes.length)" to="i == (bytes.length)" />
    <mutant id="mutant_3904" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="i &lt; (bytes.length)" to="i &gt;= (bytes.length)" />
    <mutant id="mutant_3903" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="i &lt; (bytes.length)" to="i &lt;= (bytes.length)" />
    <mutant id="mutant_3902" viable="false" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="i &lt; (bytes.length)" to="false" />
    <mutant id="mutant_3901" viable="false" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="i &lt; (bytes.length)" to="true" />
    <mutant id="mutant_3900" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="i &lt; (bytes.length)" to="i &gt; (bytes.length)" />
    <mutant id="mutant_1311" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'H'" to="(charAt(value, (index + 2))) &gt; 'H'" />
    <mutant id="mutant_2642" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0)" to="(lineLength == 0)" />
    <mutant id="mutant_3974" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_1312" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'H'" to="(charAt(value, (index + 2))) &gt;= 'H'" />
    <mutant id="mutant_2643" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0)" to="true" />
    <mutant id="mutant_3973" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_2640" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0)" to="(lineLength &lt; 0)" />
    <mutant id="mutant_3972" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_1310" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'H'" to="(charAt(value, (index + 2))) != 'H'" />
    <mutant id="mutant_2641" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0)" to="(lineLength != 0)" />
    <mutant id="mutant_3971" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_3970" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_1319" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_1317" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="true" />
    <mutant id="mutant_2648" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(chunkSeparatorLength &gt; 0)" to="(chunkSeparatorLength != 0)" />
    <mutant id="mutant_1318" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="false" />
    <mutant id="mutant_2649" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(chunkSeparatorLength &gt; 0)" to="true" />
    <mutant id="mutant_3979" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_1315" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'H'" to="(charAt(value, (index + 2))) &lt;= 'H'" />
    <mutant id="mutant_2646" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(chunkSeparatorLength &gt; 0)" to="(chunkSeparatorLength &lt;= 0)" />
    <mutant id="mutant_3978" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_1316" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_2647" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(chunkSeparatorLength &gt; 0)" to="(chunkSeparatorLength &lt; 0)" />
    <mutant id="mutant_3977" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_1313" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'H'" to="true" />
    <mutant id="mutant_2644" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0)" to="false" />
    <mutant id="mutant_3976" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_1314" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'H'" to="false" />
    <mutant id="mutant_2645" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0)" to="(lineLength &gt;= 0)" />
    <mutant id="mutant_3975" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_1300" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2631" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &lt;= 0)" />
    <mutant id="mutant_3963" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_1301" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2632" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) == (context.currentLinePos))" />
    <mutant id="mutant_3962" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_3961" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="obj == null" to="obj &gt;= null" />
    <mutant id="mutant_2630" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) != 0)" />
    <mutant id="mutant_3960" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="obj == null" to="obj != null" />
    <mutant id="mutant_1308" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="false" />
    <mutant id="mutant_2639" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0)" to="(lineLength &lt;= 0)" />
    <mutant id="mutant_1309" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'H'" to="(charAt(value, (index + 2))) &lt; 'H'" />
    <mutant id="mutant_1306" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index &gt;= ((value.length()) - 1))" />
    <mutant id="mutant_2637" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) &gt; (context.currentLinePos))" />
    <mutant id="mutant_3969" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_1307" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="true" />
    <mutant id="mutant_2638" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) &lt; (context.currentLinePos))" />
    <mutant id="mutant_3968" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_1304" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index != ((value.length()) - 1))" />
    <mutant id="mutant_2635" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="true" />
    <mutant id="mutant_3967" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_1305" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index &lt; ((value.length()) - 1))" />
    <mutant id="mutant_2636" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="false" />
    <mutant id="mutant_3966" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_1302" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index &gt; ((value.length()) - 1))" />
    <mutant id="mutant_2633" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) != (context.currentLinePos))" />
    <mutant id="mutant_3965" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_1303" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index &lt;= ((value.length()) - 1))" />
    <mutant id="mutant_2634" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) &gt;= (context.currentLinePos))" />
    <mutant id="mutant_3964" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_2620" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="true" />
    <mutant id="mutant_3952" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="obj == null" to="false" />
    <mutant id="mutant_2621" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="false" />
    <mutant id="mutant_3951" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="obj == null" to="true" />
    <mutant id="mutant_3950" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="obj == null" to="obj &gt; null" />
    <mutant id="mutant_2628" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &gt;= 0)" />
    <mutant id="mutant_2629" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &lt; 0)" />
    <mutant id="mutant_3959" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="obj == null" to="false" />
    <mutant id="mutant_2626" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="true" />
    <mutant id="mutant_3958" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="obj == null" to="true" />
    <mutant id="mutant_2627" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="false" />
    <mutant id="mutant_3957" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="obj == null" to="obj &gt; null" />
    <mutant id="mutant_2624" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 &lt;= (context.modulus)" />
    <mutant id="mutant_3956" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="obj == null" to="obj &lt; null" />
    <mutant id="mutant_2625" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) == 0)" />
    <mutant id="mutant_3955" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="obj == null" to="obj &lt;= null" />
    <mutant id="mutant_2622" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 != (context.modulus)" />
    <mutant id="mutant_3954" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="obj == null" to="obj &gt;= null" />
    <mutant id="mutant_2623" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 &gt;= (context.modulus)" />
    <mutant id="mutant_3953" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="obj == null" to="obj != null" />
    <mutant id="mutant_2619" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 &lt; (context.modulus)" />
    <mutant id="mutant_3941" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b == ' '" to="b &gt; ' '" />
    <mutant id="mutant_2610" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i == inAvail" />
    <mutant id="mutant_3940" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b &lt; 0" to="b &lt;= 0" />
    <mutant id="mutant_2617" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b &lt;= 0" />
    <mutant id="mutant_3949" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="obj == null" to="obj &lt; null" />
    <mutant id="mutant_2618" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 &gt; (context.modulus)" />
    <mutant id="mutant_3948" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="obj == null" to="obj &lt;= null" />
    <mutant id="mutant_2615" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b &gt; 0" />
    <mutant id="mutant_3947" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b == ' '" to="b != ' '" />
    <mutant id="mutant_2616" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b &gt;= 0" />
    <mutant id="mutant_3946" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b == ' '" to="false" />
    <mutant id="mutant_2613" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="true" />
    <mutant id="mutant_3945" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b == ' '" to="true" />
    <mutant id="mutant_2614" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="false" />
    <mutant id="mutant_3944" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b == ' '" to="b &gt;= ' '" />
    <mutant id="mutant_2611" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b != 0" />
    <mutant id="mutant_3943" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b == ' '" to="b &lt;= ' '" />
    <mutant id="mutant_2612" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b == 0" />
    <mutant id="mutant_3942" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="b == ' '" to="b &lt; ' '" />
    <mutant id="mutant_2690" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null)" to="(pArray &gt; null)" />
    <mutant id="mutant_1355" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index &gt;= ((value.length()) - 1))" />
    <mutant id="mutant_2686" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((arrayOctet[i]) != (pad))" to="((arrayOctet[i]) &lt; (pad))" />
    <mutant id="mutant_1356" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="true" />
    <mutant id="mutant_2687" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((arrayOctet[i]) != (pad))" to="((arrayOctet[i]) &lt;= (pad))" />
    <mutant id="mutant_1353" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index != ((value.length()) - 1))" />
    <mutant id="mutant_2684" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((arrayOctet[i]) != (pad))" to="false" />
    <mutant id="mutant_1354" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index &lt; ((value.length()) - 1))" />
    <mutant id="mutant_2685" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((arrayOctet[i]) != (pad))" to="((arrayOctet[i]) == (pad))" />
    <mutant id="mutant_1351" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index &gt; ((value.length()) - 1))" />
    <mutant id="mutant_2682" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((arrayOctet[i]) != (pad))" to="((arrayOctet[i]) &gt; (pad))" />
    <mutant id="mutant_1352" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index &lt;= ((value.length()) - 1))" />
    <mutant id="mutant_2683" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((arrayOctet[i]) != (pad))" to="true" />
    <mutant id="mutant_2680" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="i &lt; (arrayOctet.length)" to="i == (arrayOctet.length)" />
    <mutant id="mutant_1350" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &lt;= 0" />
    <mutant id="mutant_2681" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((arrayOctet[i]) != (pad))" to="((arrayOctet[i]) &gt;= (pad))" />
    <mutant id="mutant_1359" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &lt; 'H'" />
    <mutant id="mutant_1357" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="false" />
    <mutant id="mutant_2688" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null)" to="(pArray &gt;= null)" />
    <mutant id="mutant_1358" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) != 'H'" />
    <mutant id="mutant_2689" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null)" to="(pArray &lt; null)" />
    <mutant id="mutant_1344" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index != 0" />
    <mutant id="mutant_2675" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="i &lt; (arrayOctet.length)" to="i &gt; (arrayOctet.length)" />
    <mutant id="mutant_1345" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="true" />
    <mutant id="mutant_2676" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="i &lt; (arrayOctet.length)" to="true" />
    <mutant id="mutant_1342" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="true" />
    <mutant id="mutant_2673" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) == null" />
    <mutant id="mutant_1343" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="false" />
    <mutant id="mutant_2674" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="i &lt; (arrayOctet.length)" to="i != (arrayOctet.length)" />
    <mutant id="mutant_1340" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index &lt; ((value.length()) - 1))" />
    <mutant id="mutant_2671" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="false" />
    <mutant id="mutant_1341" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index &gt;= ((value.length()) - 1))" />
    <mutant id="mutant_2672" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &gt;= null" />
    <mutant id="mutant_2670" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="true" />
    <mutant id="mutant_1348" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &gt;= 0" />
    <mutant id="mutant_2679" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="i &lt; (arrayOctet.length)" to="i &gt;= (arrayOctet.length)" />
    <mutant id="mutant_1349" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &lt; 0" />
    <mutant id="mutant_1346" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="false" />
    <mutant id="mutant_2677" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="i &lt; (arrayOctet.length)" to="false" />
    <mutant id="mutant_1347" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &gt; 0" />
    <mutant id="mutant_2678" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="i &lt; (arrayOctet.length)" to="i &lt;= (arrayOctet.length)" />
    <mutant id="mutant_503" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'T')" to="(chr &gt; 'T')" />
    <mutant id="mutant_504" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X')" to="(chr &lt; 'X')" />
    <mutant id="mutant_505" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X')" to="(chr &gt; 'X')" />
    <mutant id="mutant_506" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X')" to="true" />
    <mutant id="mutant_500" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'T')" to="true" />
    <mutant id="mutant_501" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'T')" to="false" />
    <mutant id="mutant_502" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'T')" to="(chr &lt;= 'T')" />
    <mutant id="mutant_507" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X')" to="false" />
    <mutant id="mutant_508" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X')" to="(chr &gt;= 'X')" />
    <mutant id="mutant_509" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X')" to="(chr != 'X')" />
    <mutant id="mutant_1333" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2664" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element)" to="false" />
    <mutant id="mutant_3996" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="i == (-1)" to="false" />
    <mutant id="mutant_1334" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2665" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element)" to="((pad) &gt; element)" />
    <mutant id="mutant_3995" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="i == (-1)" to="true" />
    <mutant id="mutant_1331" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="true" />
    <mutant id="mutant_2662" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element)" to="((pad) &gt;= element)" />
    <mutant id="mutant_3994" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="i == (-1)" to="i &gt;= (-1)" />
    <mutant id="mutant_1332" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="false" />
    <mutant id="mutant_2663" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element)" to="true" />
    <mutant id="mutant_3993" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="i == (-1)" to="i &lt; (-1)" />
    <mutant id="mutant_2660" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element)" to="((pad) &lt; element)" />
    <mutant id="mutant_3992" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="i == (-1)" to="i &lt;= (-1)" />
    <mutant id="mutant_1330" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_2661" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element)" to="((pad) != element)" />
    <mutant id="mutant_3991" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="i == (-1)" to="i &gt; (-1)" />
    <mutant id="mutant_3990" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="i == (-1)" to="i != (-1)" />
    <mutant id="mutant_1339" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index != ((value.length()) - 1))" />
    <mutant id="mutant_1337" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index &gt; ((value.length()) - 1))" />
    <mutant id="mutant_2668" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &lt; null" />
    <mutant id="mutant_1338" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == ((value.length()) - 1))" to="(index &lt;= ((value.length()) - 1))" />
    <mutant id="mutant_2669" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &gt; null" />
    <mutant id="mutant_3999" viable="true" in="org.apache.commons.codec.Charsets.toCharset(java.lang.String)" from="charset == null" to="true" />
    <mutant id="mutant_1335" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2666" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element)" to="((pad) &lt;= element)" />
    <mutant id="mutant_3998" viable="false" in="org.apache.commons.codec.Charsets.toCharset(java.lang.String)" from="charset == null" to="charset &gt; null" />
    <mutant id="mutant_1336" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2667" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &lt;= null" />
    <mutant id="mutant_3997" viable="false" in="org.apache.commons.codec.Charsets.toCharset(java.lang.String)" from="charset == null" to="charset &gt;= null" />
    <mutant id="mutant_514" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S')" to="false" />
    <mutant id="mutant_515" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S')" to="(chr &lt;= 'S')" />
    <mutant id="mutant_516" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S')" to="(chr &lt; 'S')" />
    <mutant id="mutant_517" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S')" to="(chr &gt; 'S')" />
    <mutant id="mutant_510" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X')" to="(chr &lt;= 'X')" />
    <mutant id="mutant_511" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S')" to="(chr != 'S')" />
    <mutant id="mutant_512" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S')" to="(chr &gt;= 'S')" />
    <mutant id="mutant_513" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S')" to="true" />
    <mutant id="mutant_518" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'Z')" to="(chr &gt; 'Z')" />
    <mutant id="mutant_519" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'Z')" to="(chr &lt; 'Z')" />
    <mutant id="mutant_1322" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2653" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="arrayOctet == null" to="arrayOctet != null" />
    <mutant id="mutant_3985" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_1323" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 3)) != 'W')" to="((charAt(value, 3)) &lt;= 'W')" />
    <mutant id="mutant_2654" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="arrayOctet == null" to="arrayOctet &gt; null" />
    <mutant id="mutant_3984" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_1320" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2651" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(chunkSeparatorLength &gt; 0)" to="(chunkSeparatorLength &gt;= 0)" />
    <mutant id="mutant_3983" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_1321" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2652" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(chunkSeparatorLength &gt; 0)" to="(chunkSeparatorLength == 0)" />
    <mutant id="mutant_3982" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_3981" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_2650" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(chunkSeparatorLength &gt; 0)" to="false" />
    <mutant id="mutant_3980" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_1328" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 3)) != 'W')" to="((charAt(value, 3)) == 'W')" />
    <mutant id="mutant_2659" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="arrayOctet == null" to="arrayOctet &lt; null" />
    <mutant id="mutant_1329" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 3)) != 'W')" to="((charAt(value, 3)) &lt; 'W')" />
    <mutant id="mutant_1326" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 3)) != 'W')" to="true" />
    <mutant id="mutant_2657" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="arrayOctet == null" to="true" />
    <mutant id="mutant_3989" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_1327" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 3)) != 'W')" to="false" />
    <mutant id="mutant_2658" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="arrayOctet == null" to="false" />
    <mutant id="mutant_3988" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_1324" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 3)) != 'W')" to="((charAt(value, 3)) &gt;= 'W')" />
    <mutant id="mutant_2655" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="arrayOctet == null" to="arrayOctet &lt;= null" />
    <mutant id="mutant_3987" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_1325" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 3)) != 'W')" to="((charAt(value, 3)) &gt; 'W')" />
    <mutant id="mutant_2656" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="arrayOctet == null" to="arrayOctet &gt;= null" />
    <mutant id="mutant_3986" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_525" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'C'" to="chr != 'C'" />
    <mutant id="mutant_526" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'C'" to="chr &gt;= 'C'" />
    <mutant id="mutant_527" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'C'" to="true" />
    <mutant id="mutant_528" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'C'" to="false" />
    <mutant id="mutant_521" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'Z')" to="false" />
    <mutant id="mutant_522" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'Z')" to="(chr != 'Z')" />
    <mutant id="mutant_523" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'Z')" to="(chr &lt;= 'Z')" />
    <mutant id="mutant_524" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'Z')" to="(chr &gt;= 'Z')" />
    <mutant id="mutant_529" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'C'" to="chr &lt;= 'C'" />
    <mutant id="mutant_1399" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="(input.length()) == 0" to="(input.length()) &gt;= 0" />
    <mutant id="mutant_1397" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="(input.length()) == 0" to="true" />
    <mutant id="mutant_1398" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="(input.length()) == 0" to="false" />
    <mutant id="mutant_1395" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="(input.length()) == 0" to="(input.length()) &lt;= 0" />
    <mutant id="mutant_1396" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="(input.length()) == 0" to="(input.length()) &lt; 0" />
    <mutant id="mutant_1393" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="(input.length()) == 0" to="(input.length()) &gt; 0" />
    <mutant id="mutant_1394" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="(input.length()) == 0" to="(input.length()) != 0" />
    <mutant id="mutant_520" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'Z')" to="true" />
    <mutant id="mutant_536" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="true" />
    <mutant id="mutant_537" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="false" />
    <mutant id="mutant_538" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode &lt; '/'" />
    <mutant id="mutant_539" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'R'" to="chr != 'R'" />
    <mutant id="mutant_532" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode != '/'" />
    <mutant id="mutant_533" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode &gt;= '/'" />
    <mutant id="mutant_534" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode &lt;= '/'" />
    <mutant id="mutant_535" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode &gt; '/'" />
    <mutant id="mutant_1391" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="input == null" to="input != null" />
    <mutant id="mutant_1392" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="input == null" to="input &lt; null" />
    <mutant id="mutant_1390" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="input == null" to="false" />
    <mutant id="mutant_1388" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="input == null" to="input &gt; null" />
    <mutant id="mutant_1389" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="input == null" to="true" />
    <mutant id="mutant_1386" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="input == null" to="input &gt;= null" />
    <mutant id="mutant_1387" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.cleanInput(java.lang.String)" from="input == null" to="input &lt;= null" />
    <mutant id="mutant_1384" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'Z'" to="false" />
    <mutant id="mutant_1385" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'Z'" to="(charAt(value, (index + 1))) &lt;= 'Z'" />
    <mutant id="mutant_1382" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'Z'" to="(charAt(value, (index + 1))) &gt;= 'Z'" />
    <mutant id="mutant_1383" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'Z'" to="true" />
    <mutant id="mutant_530" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'C'" to="chr &lt; 'C'" />
    <mutant id="mutant_531" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'C'" to="chr &gt; 'C'" />
    <mutant id="mutant_547" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'L'" to="chr &gt; 'L'" />
    <mutant id="mutant_548" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'L'" to="chr != 'L'" />
    <mutant id="mutant_549" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'L'" to="true" />
    <mutant id="mutant_543" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'R'" to="true" />
    <mutant id="mutant_544" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'R'" to="false" />
    <mutant id="mutant_545" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'R'" to="chr &lt; 'R'" />
    <mutant id="mutant_546" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'L'" to="chr &lt;= 'L'" />
    <mutant id="mutant_1380" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'Z'" to="(charAt(value, (index + 1))) &gt; 'Z'" />
    <mutant id="mutant_1381" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'Z'" to="(charAt(value, (index + 1))) != 'Z'" />
    <mutant id="mutant_1377" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index - 1))) != 'T')" to="false" />
    <mutant id="mutant_1378" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index - 1))) != 'T')" to="((charAt(value, (index - 1))) &lt; 'T')" />
    <mutant id="mutant_1375" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index - 1))) != 'T')" to="((charAt(value, (index - 1))) == 'T')" />
    <mutant id="mutant_1376" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index - 1))) != 'T')" to="true" />
    <mutant id="mutant_1373" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index - 1))) != 'T')" to="((charAt(value, (index - 1))) &gt;= 'T')" />
    <mutant id="mutant_1374" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index - 1))) != 'T')" to="((charAt(value, (index - 1))) &gt; 'T')" />
    <mutant id="mutant_1371" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index &gt; 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_1372" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index - 1))) != 'T')" to="((charAt(value, (index - 1))) &lt;= 'T')" />
    <mutant id="mutant_540" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'R'" to="chr &lt;= 'R'" />
    <mutant id="mutant_541" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'R'" to="chr &gt;= 'R'" />
    <mutant id="mutant_542" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'R'" to="chr &gt; 'R'" />
    <mutant id="mutant_1379" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'Z'" to="(charAt(value, (index + 1))) &lt; 'Z'" />
    <mutant id="mutant_558" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M')" to="(chr &lt; 'M')" />
    <mutant id="mutant_559" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M')" to="(chr &gt;= 'M')" />
    <mutant id="mutant_554" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M')" to="(chr &gt; 'M')" />
    <mutant id="mutant_555" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M')" to="(chr != 'M')" />
    <mutant id="mutant_556" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M')" to="true" />
    <mutant id="mutant_557" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M')" to="false" />
    <mutant id="mutant_1370" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index &gt; 0)" to="(index &lt; 0)" />
    <mutant id="mutant_1366" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index &gt; 0)" to="(index == 0)" />
    <mutant id="mutant_2697" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="((pArray.length) == 0)" to="true" />
    <mutant id="mutant_1367" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index &gt; 0)" to="true" />
    <mutant id="mutant_2698" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="((pArray.length) == 0)" to="false" />
    <mutant id="mutant_1364" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &gt;= 'H'" />
    <mutant id="mutant_2695" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) &gt;= 0)" />
    <mutant id="mutant_1365" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index &gt; 0)" to="(index != 0)" />
    <mutant id="mutant_2696" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) != 0)" />
    <mutant id="mutant_1362" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="false" />
    <mutant id="mutant_2693" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null)" to="false" />
    <mutant id="mutant_1363" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &lt;= 'H'" />
    <mutant id="mutant_2694" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null)" to="(pArray != null)" />
    <mutant id="mutant_1360" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &gt; 'H'" />
    <mutant id="mutant_2691" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null)" to="(pArray &lt;= null)" />
    <mutant id="mutant_1361" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="true" />
    <mutant id="mutant_2692" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null)" to="true" />
    <mutant id="mutant_550" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'L'" to="false" />
    <mutant id="mutant_551" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'L'" to="chr &lt; 'L'" />
    <mutant id="mutant_552" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="chr == 'L'" to="chr &gt;= 'L'" />
    <mutant id="mutant_553" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M')" to="(chr &lt;= 'M')" />
    <mutant id="mutant_1368" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index &gt; 0)" to="false" />
    <mutant id="mutant_2699" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) &lt;= 0)" />
    <mutant id="mutant_1369" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index &gt; 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_448" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &lt; 'A')" to="(chr &gt;= 'A')" />
    <mutant id="mutant_449" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &lt; 'A')" to="(chr != 'A')" />
    <mutant id="mutant_444" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'H')" to="false" />
    <mutant id="mutant_445" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'H')" to="(chr &gt;= 'H')" />
    <mutant id="mutant_446" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'H')" to="(chr != 'H')" />
    <mutant id="mutant_447" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'H')" to="(chr &lt;= 'H')" />
    <mutant id="mutant_1199" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="false" />
    <mutant id="mutant_1197" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_1198" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="true" />
    <mutant id="mutant_1195" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) != 'I')" to="((charAt(value, (index - 1))) &lt; 'I')" />
    <mutant id="mutant_1196" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) != 'I')" to="((charAt(value, (index - 1))) &gt; 'I')" />
    <mutant id="mutant_440" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(rightLength = input.length()) &gt; 0" to="(rightLength = input.length()) == 0" />
    <mutant id="mutant_441" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'H')" to="(chr &lt; 'H')" />
    <mutant id="mutant_442" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'H')" to="(chr &gt; 'H')" />
    <mutant id="mutant_443" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'H')" to="true" />
    <mutant id="mutant_459" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &gt; 'Z')" to="(chr != 'Z')" />
    <mutant id="mutant_455" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &gt; 'Z')" to="(chr == 'Z')" />
    <mutant id="mutant_456" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &gt; 'Z')" to="(chr &lt; 'Z')" />
    <mutant id="mutant_457" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &gt; 'Z')" to="true" />
    <mutant id="mutant_458" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &gt; 'Z')" to="false" />
    <mutant id="mutant_1193" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) != 'I')" to="((charAt(value, (index - 1))) == 'I')" />
    <mutant id="mutant_1194" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) != 'I')" to="((charAt(value, (index - 1))) &lt;= 'I')" />
    <mutant id="mutant_1191" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) != 'I')" to="true" />
    <mutant id="mutant_1192" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) != 'I')" to="false" />
    <mutant id="mutant_1190" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) != 'I')" to="((charAt(value, (index - 1))) &gt;= 'I')" />
    <mutant id="mutant_1188" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &lt; 0)" />
    <mutant id="mutant_1189" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_1186" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="false" />
    <mutant id="mutant_1187" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_1184" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index == 0)" />
    <mutant id="mutant_1185" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="true" />
    <mutant id="mutant_451" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &lt; 'A')" to="true" />
    <mutant id="mutant_452" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &lt; 'A')" to="false" />
    <mutant id="mutant_453" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &lt; 'A')" to="(chr == 'A')" />
    <mutant id="mutant_454" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &lt; 'A')" to="(chr &gt; 'A')" />
    <mutant id="mutant_450" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &lt; 'A')" to="(chr &lt;= 'A')" />
    <mutant id="mutant_466" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="true" />
    <mutant id="mutant_467" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="false" />
    <mutant id="mutant_468" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode &lt; '/'" />
    <mutant id="mutant_469" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B')" to="(chr != 'B')" />
    <mutant id="mutant_1182" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'U')" to="((charAt(value, (index - 1))) &lt; 'U')" />
    <mutant id="mutant_1183" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index != 0)" />
    <mutant id="mutant_1180" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'U')" to="false" />
    <mutant id="mutant_1181" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'U')" to="((charAt(value, (index - 1))) &gt; 'U')" />
    <mutant id="mutant_1179" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'U')" to="true" />
    <mutant id="mutant_1177" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'U')" to="((charAt(value, (index - 1))) != 'U')" />
    <mutant id="mutant_1178" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'U')" to="((charAt(value, (index - 1))) &lt;= 'U')" />
    <mutant id="mutant_1175" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index == 2)" />
    <mutant id="mutant_1176" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'U')" to="((charAt(value, (index - 1))) &gt;= 'U')" />
    <mutant id="mutant_1173" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="true" />
    <mutant id="mutant_1174" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="false" />
    <mutant id="mutant_462" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode != '/'" />
    <mutant id="mutant_463" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode &gt;= '/'" />
    <mutant id="mutant_464" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode &lt;= '/'" />
    <mutant id="mutant_465" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="lastCode == '/'" to="lastCode &gt; '/'" />
    <mutant id="mutant_460" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &gt; 'Z')" to="(chr &lt;= 'Z')" />
    <mutant id="mutant_461" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr &gt; 'Z')" to="(chr &gt;= 'Z')" />
    <mutant id="mutant_477" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'P')" to="(chr != 'P')" />
    <mutant id="mutant_478" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'P')" to="(chr &lt;= 'P')" />
    <mutant id="mutant_479" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'P')" to="(chr &lt; 'P')" />
    <mutant id="mutant_1171" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index &lt;= 2)" />
    <mutant id="mutant_1172" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index &gt;= 2)" />
    <mutant id="mutant_1170" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index &lt; 2)" />
    <mutant id="mutant_1168" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 3)" to="(index &gt;= 3)" />
    <mutant id="mutant_2499" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &lt;= 0" />
    <mutant id="mutant_1169" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index != 2)" />
    <mutant id="mutant_1166" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 3)" to="false" />
    <mutant id="mutant_2497" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8) == 0" to="((bigInt.bitLength()) % 8) &lt;= 0" />
    <mutant id="mutant_1167" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 3)" to="(index == 3)" />
    <mutant id="mutant_2498" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8) == 0" to="((bigInt.bitLength()) % 8) != 0" />
    <mutant id="mutant_1164" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 3)" to="(index &lt;= 3)" />
    <mutant id="mutant_2495" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8) == 0" to="false" />
    <mutant id="mutant_1165" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 3)" to="true" />
    <mutant id="mutant_2496" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8) == 0" to="((bigInt.bitLength()) % 8) &lt; 0" />
    <mutant id="mutant_1162" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 3)" to="(index != 3)" />
    <mutant id="mutant_2493" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8) == 0" to="((bigInt.bitLength()) % 8) &gt; 0" />
    <mutant id="mutant_1163" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 3)" to="(index &lt; 3)" />
    <mutant id="mutant_2494" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8) == 0" to="true" />
    <mutant id="mutant_473" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B')" to="true" />
    <mutant id="mutant_474" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B')" to="false" />
    <mutant id="mutant_475" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B')" to="(chr &lt; 'B')" />
    <mutant id="mutant_476" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'P')" to="(chr &gt;= 'P')" />
    <mutant id="mutant_470" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B')" to="(chr &lt;= 'B')" />
    <mutant id="mutant_471" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B')" to="(chr &gt;= 'B')" />
    <mutant id="mutant_472" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B')" to="(chr &gt; 'B')" />
    <mutant id="mutant_488" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(nextChar != 'H')" to="(nextChar == 'H')" />
    <mutant id="mutant_489" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(nextChar != 'H')" to="(nextChar &lt;= 'H')" />
    <mutant id="mutant_484" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(nextChar != 'H')" to="(nextChar &lt; 'H')" />
    <mutant id="mutant_485" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(nextChar != 'H')" to="true" />
    <mutant id="mutant_486" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(nextChar != 'H')" to="false" />
    <mutant id="mutant_487" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(nextChar != 'H')" to="(nextChar &gt;= 'H')" />
    <mutant id="mutant_480" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'P')" to="true" />
    <mutant id="mutant_481" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'P')" to="false" />
    <mutant id="mutant_482" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'P')" to="(chr &gt; 'P')" />
    <mutant id="mutant_483" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(nextChar != 'H')" to="(nextChar &gt; 'H')" />
    <mutant id="mutant_499" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'T')" to="(chr &gt;= 'T')" />
    <mutant id="mutant_490" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'D')" to="(chr != 'D')" />
    <mutant id="mutant_495" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'D')" to="(chr &lt;= 'D')" />
    <mutant id="mutant_496" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'D')" to="(chr &gt; 'D')" />
    <mutant id="mutant_497" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'T')" to="(chr != 'T')" />
    <mutant id="mutant_498" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'T')" to="(chr &lt; 'T')" />
    <mutant id="mutant_491" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'D')" to="(chr &lt; 'D')" />
    <mutant id="mutant_492" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'D')" to="(chr &gt;= 'D')" />
    <mutant id="mutant_493" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'D')" to="true" />
    <mutant id="mutant_494" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'D')" to="false" />
    <mutant id="mutant_3819" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_3818" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_3817" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="false" />
    <mutant id="mutant_3816" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="true" />
    <mutant id="mutant_3815" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str != null" />
    <mutant id="mutant_3814" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_3813" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_3812" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_3811" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_3810" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_3809" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_3808" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_3807" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="obj == null" to="obj &gt;= null" />
    <mutant id="mutant_3806" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="obj == null" to="obj != null" />
    <mutant id="mutant_3805" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="obj == null" to="false" />
    <mutant id="mutant_3804" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="obj == null" to="true" />
    <mutant id="mutant_3803" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="obj == null" to="obj &gt; null" />
    <mutant id="mutant_3802" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="obj == null" to="obj &lt; null" />
    <mutant id="mutant_3801" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="obj == null" to="obj &lt;= null" />
    <mutant id="mutant_3800" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="obj == null" to="obj &gt;= null" />
    <mutant id="mutant_2521" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b != 0)" />
    <mutant id="mutant_3853" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to &gt;= terminator" />
    <mutant id="mutant_2522" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b &lt; 0)" />
    <mutant id="mutant_3852" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to &lt; terminator" />
    <mutant id="mutant_3851" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to &lt;= terminator" />
    <mutant id="mutant_2520" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b &lt;= 0)" />
    <mutant id="mutant_3850" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to &gt; terminator" />
    <mutant id="mutant_2529" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (Base64.DECODE_TABLE.length))" to="false" />
    <mutant id="mutant_2527" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (Base64.DECODE_TABLE.length))" to="(b &gt; (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3859" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.lang.String)" from="text == null" to="true" />
    <mutant id="mutant_2528" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (Base64.DECODE_TABLE.length))" to="true" />
    <mutant id="mutant_3858" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.lang.String)" from="text == null" to="text != null" />
    <mutant id="mutant_2525" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="true" />
    <mutant id="mutant_3857" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.lang.String)" from="text == null" to="text &gt;= null" />
    <mutant id="mutant_2526" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="false" />
    <mutant id="mutant_3856" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to != terminator" />
    <mutant id="mutant_2523" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b &gt; 0)" />
    <mutant id="mutant_3855" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="false" />
    <mutant id="mutant_2524" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b == 0)" />
    <mutant id="mutant_3854" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="true" />
    <mutant id="mutant_2510" viable="false" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="false" />
    <mutant id="mutant_3842" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="text == null" to="text &lt;= null" />
    <mutant id="mutant_2511" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i != inAvail" />
    <mutant id="mutant_3841" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="text == null" to="text &gt; null" />
    <mutant id="mutant_3840" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="text == null" to="text &lt; null" />
    <mutant id="mutant_2518" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b != (pad)" />
    <mutant id="mutant_2519" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b &lt;= (pad)" />
    <mutant id="mutant_3849" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to != terminator" />
    <mutant id="mutant_2516" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="true" />
    <mutant id="mutant_3848" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="false" />
    <mutant id="mutant_2517" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="false" />
    <mutant id="mutant_3847" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="true" />
    <mutant id="mutant_2514" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b &gt; (pad)" />
    <mutant id="mutant_3846" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to &gt;= terminator" />
    <mutant id="mutant_2515" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b &gt;= (pad)" />
    <mutant id="mutant_3845" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to &lt; terminator" />
    <mutant id="mutant_2512" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i == inAvail" />
    <mutant id="mutant_3844" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to &lt;= terminator" />
    <mutant id="mutant_2513" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b &lt; (pad)" />
    <mutant id="mutant_3843" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to == terminator" to="to &gt; terminator" />
    <mutant id="mutant_2509" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="true" />
    <mutant id="mutant_3831" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="false" />
    <mutant id="mutant_2500" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &gt;= 0" />
    <mutant id="mutant_3830" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="true" />
    <mutant id="mutant_2507" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &lt;= inAvail" />
    <mutant id="mutant_3839" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="text == null" to="false" />
    <mutant id="mutant_2508" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &gt;= inAvail" />
    <mutant id="mutant_3838" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="text == null" to="true" />
    <mutant id="mutant_2505" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail != 0" />
    <mutant id="mutant_3837" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="text == null" to="text != null" />
    <mutant id="mutant_2506" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &gt; inAvail" />
    <mutant id="mutant_3836" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="text == null" to="text &gt;= null" />
    <mutant id="mutant_2503" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="true" />
    <mutant id="mutant_3835" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_2504" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="false" />
    <mutant id="mutant_3834" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_2501" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &gt; 0" />
    <mutant id="mutant_3833" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_2502" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail == 0" />
    <mutant id="mutant_3832" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_3829" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str != null" />
    <mutant id="mutant_3820" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_3828" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_3827" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_3826" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_3825" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_3824" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_3823" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_3822" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_3821" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_1234" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'A')" to="true" />
    <mutant id="mutant_2565" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="false" />
    <mutant id="mutant_3897" viable="false" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_1235" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'A')" to="false" />
    <mutant id="mutant_2566" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 != (context.modulus))" />
    <mutant id="mutant_3896" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="bytes == null" to="false" />
    <mutant id="mutant_1232" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'A')" to="((charAt(value, (index + 1))) &lt;= 'A')" />
    <mutant id="mutant_2563" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 &lt; (context.modulus))" />
    <mutant id="mutant_3895" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="bytes == null" to="true" />
    <mutant id="mutant_1233" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'A')" to="((charAt(value, (index + 1))) &gt;= 'A')" />
    <mutant id="mutant_2564" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="true" />
    <mutant id="mutant_3894" viable="false" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_1230" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2561" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail != 0" />
    <mutant id="mutant_3893" viable="false" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_1231" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2562" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 &gt; (context.modulus))" />
    <mutant id="mutant_3892" viable="false" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_3891" viable="false" in="?" from="i &lt;= '9'" to="i &lt; '9'" />
    <mutant id="mutant_2560" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="false" />
    <mutant id="mutant_3890" viable="false" in="?" from="i &lt;= '9'" to="false" />
    <mutant id="mutant_1238" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'A')" to="((charAt(value, (index + 1))) != 'A')" />
    <mutant id="mutant_2569" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="true" />
    <mutant id="mutant_1239" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'O')" to="((charAt(value, (index + 1))) &lt;= 'O')" />
    <mutant id="mutant_1236" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'A')" to="((charAt(value, (index + 1))) &lt; 'A')" />
    <mutant id="mutant_2567" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 &gt;= (context.modulus))" />
    <mutant id="mutant_3899" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="i &lt; (bytes.length)" to="i != (bytes.length)" />
    <mutant id="mutant_1237" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'A')" to="((charAt(value, (index + 1))) &gt; 'A')" />
    <mutant id="mutant_2568" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 &lt;= (context.modulus))" />
    <mutant id="mutant_3898" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_1223" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) == 4)" to="((value.length()) &lt;= 4)" />
    <mutant id="mutant_2554" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) != 0)" to="((context.modulus) &gt; 0)" />
    <mutant id="mutant_3886" viable="false" in="?" from="i &lt;= '9'" to="i &gt;= '9'" />
    <mutant id="mutant_1224" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) == 4)" to="((value.length()) &lt; 4)" />
    <mutant id="mutant_2555" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &lt;= 0" />
    <mutant id="mutant_3885" viable="false" in="?" from="i &lt;= '9'" to="i &gt; '9'" />
    <mutant id="mutant_1221" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) == 4)" to="true" />
    <mutant id="mutant_2552" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) != 0)" to="((context.modulus) == 0)" />
    <mutant id="mutant_3884" viable="false" in="?" from="i &lt;= 'Z'" to="i &lt; 'Z'" />
    <mutant id="mutant_1222" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) == 4)" to="false" />
    <mutant id="mutant_2553" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) != 0)" to="((context.modulus) &gt;= 0)" />
    <mutant id="mutant_3883" viable="false" in="?" from="i &lt;= 'Z'" to="i &gt; 'Z'" />
    <mutant id="mutant_2550" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) != 0)" to="false" />
    <mutant id="mutant_3882" viable="false" in="?" from="i &lt;= 'Z'" to="i != 'Z'" />
    <mutant id="mutant_1220" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) == 4)" to="((value.length()) != 4)" />
    <mutant id="mutant_2551" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) != 0)" to="((context.modulus) &lt;= 0)" />
    <mutant id="mutant_3881" viable="false" in="?" from="i &lt;= 'Z'" to="false" />
    <mutant id="mutant_3880" viable="false" in="?" from="i &lt;= 'Z'" to="true" />
    <mutant id="mutant_1229" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_1227" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="false" />
    <mutant id="mutant_2558" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail == 0" />
    <mutant id="mutant_1228" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2559" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="true" />
    <mutant id="mutant_3889" viable="false" in="?" from="i &lt;= '9'" to="true" />
    <mutant id="mutant_1225" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_2556" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &gt;= 0" />
    <mutant id="mutant_3888" viable="false" in="?" from="i &lt;= '9'" to="i != '9'" />
    <mutant id="mutant_1226" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="true" />
    <mutant id="mutant_2557" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &gt; 0" />
    <mutant id="mutant_3887" viable="false" in="?" from="i &lt;= '9'" to="i == '9'" />
    <mutant id="mutant_1212" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 4))) == ' ')" to="((charAt(value, (index + 4))) &gt;= ' ')" />
    <mutant id="mutant_2543" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="false" />
    <mutant id="mutant_3875" viable="false" in="?" from="i &lt;= 'z'" to="i != 'z'" />
    <mutant id="mutant_1213" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 4))) == ' ')" to="true" />
    <mutant id="mutant_2544" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) != 0" />
    <mutant id="mutant_3874" viable="false" in="?" from="i &lt;= 'z'" to="false" />
    <mutant id="mutant_1210" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2541" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) &lt; 0" />
    <mutant id="mutant_3873" viable="false" in="?" from="i &lt;= 'z'" to="true" />
    <mutant id="mutant_1211" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 4))) == ' ')" to="((charAt(value, (index + 4))) != ' ')" />
    <mutant id="mutant_2542" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="true" />
    <mutant id="mutant_3872" viable="false" in="?" from="i &lt;= 'z'" to="i == 'z'" />
    <mutant id="mutant_3871" viable="false" in="?" from="i &lt;= 'z'" to="i &gt;= 'z'" />
    <mutant id="mutant_2540" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result == 0" />
    <mutant id="mutant_3870" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.nio.charset.Charset)" from="text == null" to="text &lt;= null" />
    <mutant id="mutant_1218" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) == 4)" to="((value.length()) &gt;= 4)" />
    <mutant id="mutant_2549" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) != 0)" to="true" />
    <mutant id="mutant_1219" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) == 4)" to="((value.length()) &gt; 4)" />
    <mutant id="mutant_1216" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 4))) == ' ')" to="((charAt(value, (index + 4))) &lt; ' ')" />
    <mutant id="mutant_2547" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) &gt; 0" />
    <mutant id="mutant_3879" viable="false" in="?" from="i &lt;= 'Z'" to="i == 'Z'" />
    <mutant id="mutant_1217" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 4))) == ' ')" to="((charAt(value, (index + 4))) &gt; ' ')" />
    <mutant id="mutant_2548" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) != 0)" to="((context.modulus) &lt; 0)" />
    <mutant id="mutant_3878" viable="false" in="?" from="i &lt;= 'Z'" to="i &gt;= 'Z'" />
    <mutant id="mutant_1214" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 4))) == ' ')" to="false" />
    <mutant id="mutant_2545" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) &lt;= 0" />
    <mutant id="mutant_3877" viable="false" in="?" from="i &lt;= 'z'" to="i &lt; 'z'" />
    <mutant id="mutant_1215" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 4))) == ' ')" to="((charAt(value, (index + 4))) &lt;= ' ')" />
    <mutant id="mutant_2546" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) &gt;= 0" />
    <mutant id="mutant_3876" viable="false" in="?" from="i &lt;= 'z'" to="i &gt; 'z'" />
    <mutant id="mutant_1201" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2532" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (Base64.DECODE_TABLE.length))" to="(b == (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3864" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.nio.charset.Charset)" from="text == null" to="text &gt;= null" />
    <mutant id="mutant_1202" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2533" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (Base64.DECODE_TABLE.length))" to="(b &lt;= (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3863" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.lang.String)" from="text == null" to="text &lt;= null" />
    <mutant id="mutant_2530" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (Base64.DECODE_TABLE.length))" to="(b != (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3862" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.lang.String)" from="text == null" to="text &gt; null" />
    <mutant id="mutant_1200" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2531" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (Base64.DECODE_TABLE.length))" to="(b &gt;= (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3861" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.lang.String)" from="text == null" to="text &lt; null" />
    <mutant id="mutant_3860" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.lang.String)" from="text == null" to="false" />
    <mutant id="mutant_1209" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_1207" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2538" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="true" />
    <mutant id="mutant_1208" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2539" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="false" />
    <mutant id="mutant_3869" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.nio.charset.Charset)" from="text == null" to="text &gt; null" />
    <mutant id="mutant_1205" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="true" />
    <mutant id="mutant_2536" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result &lt; 0" />
    <mutant id="mutant_3868" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.nio.charset.Charset)" from="text == null" to="text &lt; null" />
    <mutant id="mutant_1206" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="false" />
    <mutant id="mutant_2537" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result &gt; 0" />
    <mutant id="mutant_3867" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.nio.charset.Charset)" from="text == null" to="false" />
    <mutant id="mutant_1203" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2534" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result &lt;= 0" />
    <mutant id="mutant_3866" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.nio.charset.Charset)" from="text == null" to="true" />
    <mutant id="mutant_1204" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_2535" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result != 0" />
    <mutant id="mutant_3865" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String,java.nio.charset.Charset)" from="text == null" to="text != null" />
    <mutant id="mutant_404" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null)" to="false" />
    <mutant id="mutant_405" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null)" to="(txt &gt;= null)" />
    <mutant id="mutant_406" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) &gt; 0)" />
    <mutant id="mutant_407" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) != 0)" />
    <mutant id="mutant_400" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null)" to="(txt != null)" />
    <mutant id="mutant_401" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null)" to="(txt &lt; null)" />
    <mutant id="mutant_402" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null)" to="(txt &lt;= null)" />
    <mutant id="mutant_403" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null)" to="true" />
    <mutant id="mutant_1281" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'R'" to="(charAt(value, (index + 1))) &gt;= 'R'" />
    <mutant id="mutant_1282" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'R'" to="(charAt(value, (index + 1))) &lt;= 'R'" />
    <mutant id="mutant_1280" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="false" />
    <mutant id="mutant_408" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) &lt;= 0)" />
    <mutant id="mutant_409" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) &lt; 0)" />
    <mutant id="mutant_1278" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index &gt;= ((value.length()) - 1))" />
    <mutant id="mutant_1279" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="true" />
    <mutant id="mutant_1276" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index != ((value.length()) - 1))" />
    <mutant id="mutant_1277" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index &lt; ((value.length()) - 1))" />
    <mutant id="mutant_1274" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index &gt; ((value.length()) - 1))" />
    <mutant id="mutant_1275" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1))" to="(index &lt;= ((value.length()) - 1))" />
    <mutant id="mutant_1272" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &lt;= 'H'" />
    <mutant id="mutant_1273" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &gt;= 'H'" />
    <mutant id="mutant_415" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" from="element == key" to="element &lt; key" />
    <mutant id="mutant_416" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" from="element == key" to="element &lt;= key" />
    <mutant id="mutant_417" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" from="element == key" to="true" />
    <mutant id="mutant_418" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" from="element == key" to="false" />
    <mutant id="mutant_411" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="((txt.length()) == 0)" to="false" />
    <mutant id="mutant_412" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) &gt;= 0)" />
    <mutant id="mutant_413" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" from="element == key" to="element &gt;= key" />
    <mutant id="mutant_414" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" from="element == key" to="element != key" />
    <mutant id="mutant_1270" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'H'" to="true" />
    <mutant id="mutant_1271" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'H'" to="false" />
    <mutant id="mutant_419" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.arrayContains(char[],char)" from="element == key" to="element &gt; key" />
    <mutant id="mutant_1267" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) != 'H'" />
    <mutant id="mutant_2598" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) == 0)" />
    <mutant id="mutant_1268" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &lt; 'H'" />
    <mutant id="mutant_2599" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) != 0)" />
    <mutant id="mutant_1265" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'L'" to="(charAt(value, (index + 1))) &gt;= 'L'" />
    <mutant id="mutant_2596" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &lt;= 0)" />
    <mutant id="mutant_1266" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'L'" to="(charAt(value, (index + 1))) &lt; 'L'" />
    <mutant id="mutant_2597" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) &lt;= 0)" />
    <mutant id="mutant_1263" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'L'" to="true" />
    <mutant id="mutant_2594" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &lt; 0)" />
    <mutant id="mutant_1264" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'L'" to="false" />
    <mutant id="mutant_2595" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) != 0)" />
    <mutant id="mutant_1261" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'L'" to="(charAt(value, (index + 1))) != 'L'" />
    <mutant id="mutant_2592" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="false" />
    <mutant id="mutant_1262" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'L'" to="(charAt(value, (index + 1))) &lt;= 'L'" />
    <mutant id="mutant_2593" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &gt;= 0)" />
    <mutant id="mutant_410" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="((txt.length()) == 0)" to="true" />
    <mutant id="mutant_1269" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &gt; 'H'" />
    <mutant id="mutant_426" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="text == null" to="text &lt;= null" />
    <mutant id="mutant_427" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="rightLength &gt; 0" to="rightLength != 0" />
    <mutant id="mutant_428" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="rightLength &gt; 0" to="rightLength &lt; 0" />
    <mutant id="mutant_429" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="rightLength &gt; 0" to="true" />
    <mutant id="mutant_422" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="text == null" to="true" />
    <mutant id="mutant_423" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="text == null" to="false" />
    <mutant id="mutant_424" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="text == null" to="text &lt; null" />
    <mutant id="mutant_425" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="text == null" to="text &gt; null" />
    <mutant id="mutant_2590" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) == 0)" />
    <mutant id="mutant_1260" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 1))) == 'L'" to="(charAt(value, (index + 1))) &gt; 'L'" />
    <mutant id="mutant_2591" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="true" />
    <mutant id="mutant_1256" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'J'" to="(charAt(value, (index + 1))) &gt;= 'J'" />
    <mutant id="mutant_2587" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="false" />
    <mutant id="mutant_1257" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'J'" to="true" />
    <mutant id="mutant_2588" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) &lt; (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1254" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'J'" to="(charAt(value, (index + 1))) &gt; 'J'" />
    <mutant id="mutant_2585" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) &gt; (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1255" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'J'" to="(charAt(value, (index + 1))) != 'J'" />
    <mutant id="mutant_2586" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="true" />
    <mutant id="mutant_1252" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index == ((value.length()) - 1)" to="false" />
    <mutant id="mutant_2583" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) != (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1253" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'J'" to="(charAt(value, (index + 1))) &lt; 'J'" />
    <mutant id="mutant_2584" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) &gt;= (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1250" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index == ((value.length()) - 1)" to="index &gt;= ((value.length()) - 1)" />
    <mutant id="mutant_2581" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) &lt; (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1251" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index == ((value.length()) - 1)" to="true" />
    <mutant id="mutant_2582" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) &lt;= (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_420" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="text == null" to="text &gt;= null" />
    <mutant id="mutant_421" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="text == null" to="text != null" />
    <mutant id="mutant_1258" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'J'" to="false" />
    <mutant id="mutant_2589" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) &lt;= (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1259" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'J'" to="(charAt(value, (index + 1))) &lt;= 'J'" />
    <mutant id="mutant_437" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(rightLength = input.length()) &gt; 0" to="(rightLength = input.length()) &lt; 0" />
    <mutant id="mutant_438" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(rightLength = input.length()) &gt; 0" to="(rightLength = input.length()) &lt;= 0" />
    <mutant id="mutant_439" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(rightLength = input.length()) &gt; 0" to="(rightLength = input.length()) &gt;= 0" />
    <mutant id="mutant_433" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="rightLength &gt; 0" to="rightLength &gt;= 0" />
    <mutant id="mutant_434" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(rightLength = input.length()) &gt; 0" to="(rightLength = input.length()) != 0" />
    <mutant id="mutant_435" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(rightLength = input.length()) &gt; 0" to="true" />
    <mutant id="mutant_436" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(rightLength = input.length()) &gt; 0" to="false" />
    <mutant id="mutant_2580" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="false" />
    <mutant id="mutant_1245" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'O')" to="((charAt(value, (index + 1))) &gt; 'O')" />
    <mutant id="mutant_2576" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) != (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1246" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index == ((value.length()) - 1)" to="index &gt; ((value.length()) - 1)" />
    <mutant id="mutant_2577" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) &gt;= (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1243" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'O')" to="false" />
    <mutant id="mutant_2574" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) != 0)" />
    <mutant id="mutant_1244" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'O')" to="((charAt(value, (index + 1))) &lt; 'O')" />
    <mutant id="mutant_2575" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) &lt;= 0)" />
    <mutant id="mutant_1241" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'O')" to="((charAt(value, (index + 1))) != 'O')" />
    <mutant id="mutant_2572" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) &gt; 0)" />
    <mutant id="mutant_1242" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'O')" to="true" />
    <mutant id="mutant_2573" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) &lt; 0)" />
    <mutant id="mutant_2570" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="false" />
    <mutant id="mutant_1240" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'O')" to="((charAt(value, (index + 1))) &gt;= 'O')" />
    <mutant id="mutant_2571" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) &gt;= 0)" />
    <mutant id="mutant_430" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="rightLength &gt; 0" to="false" />
    <mutant id="mutant_431" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="rightLength &gt; 0" to="rightLength &lt;= 0" />
    <mutant id="mutant_432" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="rightLength &gt; 0" to="rightLength == 0" />
    <mutant id="mutant_1249" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index == ((value.length()) - 1)" to="index &lt; ((value.length()) - 1)" />
    <mutant id="mutant_1247" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index == ((value.length()) - 1)" to="index &lt;= ((value.length()) - 1)" />
    <mutant id="mutant_2578" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="(encodeTable) &gt; (Base64.STANDARD_ENCODE_TABLE)" />
    <mutant id="mutant_1248" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index == ((value.length()) - 1)" to="index != ((value.length()) - 1)" />
    <mutant id="mutant_2579" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(encodeTable) == (Base64.STANDARD_ENCODE_TABLE)" to="true" />
    <mutant id="mutant_1083" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) != 'N'" />
    <mutant id="mutant_1084" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) &lt; 'N'" />
    <mutant id="mutant_1081" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="true" />
    <mutant id="mutant_1082" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="false" />
    <mutant id="mutant_1080" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) &lt;= 'N'" />
    <mutant id="mutant_1078" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) &gt; 'N'" />
    <mutant id="mutant_1079" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) &gt;= 'N'" />
    <mutant id="mutant_1076" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &lt;= 'H'" />
    <mutant id="mutant_1077" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &gt;= 'H'" />
    <mutant id="mutant_1074" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="true" />
    <mutant id="mutant_1075" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="false" />
    <mutant id="mutant_1072" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &lt; 'H'" />
    <mutant id="mutant_1073" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) &gt; 'H'" />
    <mutant id="mutant_1070" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index &gt; 0" to="index &lt;= 0" />
    <mutant id="mutant_1071" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'H'" to="(charAt(value, (index + 1))) != 'H'" />
    <mutant id="mutant_1069" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index &gt; 0" to="index &lt; 0" />
    <mutant id="mutant_1067" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index &gt; 0" to="false" />
    <mutant id="mutant_2398" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &gt;= 0)" to="false" />
    <mutant id="mutant_1068" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index &gt; 0" to="index &gt;= 0" />
    <mutant id="mutant_2399" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &gt;= 0)" to="(octet &lt;= 0)" />
    <mutant id="mutant_1065" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index &gt; 0" to="index == 0" />
    <mutant id="mutant_2396" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &gt;= 0)" to="(octet != 0)" />
    <mutant id="mutant_1066" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index &gt; 0" to="true" />
    <mutant id="mutant_2397" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &gt;= 0)" to="true" />
    <mutant id="mutant_1063" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2394" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &gt;= 0)" to="(octet &gt; 0)" />
    <mutant id="mutant_1064" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index &gt; 0" to="index != 0" />
    <mutant id="mutant_2395" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &gt;= 0)" to="(octet == 0)" />
    <mutant id="mutant_1061" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2392" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT))" to="(octet &lt; (BaseNCodec.PAD_DEFAULT))" />
    <mutant id="mutant_1062" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2393" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT))" to="(octet &gt; (BaseNCodec.PAD_DEFAULT))" />
    <mutant id="mutant_2390" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT))" to="false" />
    <mutant id="mutant_1060" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="false" />
    <mutant id="mutant_2391" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT))" to="(octet &gt;= (BaseNCodec.PAD_DEFAULT))" />
    <mutant id="mutant_1058" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index == 0)" />
    <mutant id="mutant_2389" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT))" to="true" />
    <mutant id="mutant_1059" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="true" />
    <mutant id="mutant_1056" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'A')" to="((charAt(value, (index - 1))) &gt;= 'A')" />
    <mutant id="mutant_2387" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT))" to="(octet &lt;= (BaseNCodec.PAD_DEFAULT))" />
    <mutant id="mutant_1057" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index != 0)" />
    <mutant id="mutant_2388" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT))" to="(octet != (BaseNCodec.PAD_DEFAULT))" />
    <mutant id="mutant_1054" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'A')" to="false" />
    <mutant id="mutant_2385" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineLength &gt; 0" to="false" />
    <mutant id="mutant_1055" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'A')" to="((charAt(value, (index - 1))) != 'A')" />
    <mutant id="mutant_2386" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineLength &gt; 0" to="lineLength &gt;= 0" />
    <mutant id="mutant_1052" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'A')" to="((charAt(value, (index - 1))) &gt; 'A')" />
    <mutant id="mutant_2383" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineLength &gt; 0" to="lineLength == 0" />
    <mutant id="mutant_1053" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'A')" to="true" />
    <mutant id="mutant_2384" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineLength &gt; 0" to="true" />
    <mutant id="mutant_1050" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'A')" to="((charAt(value, (index - 1))) &lt;= 'A')" />
    <mutant id="mutant_2381" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineLength &gt; 0" to="lineLength &lt; 0" />
    <mutant id="mutant_1051" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, (index - 1))) == 'A')" to="((charAt(value, (index - 1))) &lt; 'A')" />
    <mutant id="mutant_2382" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineLength &gt; 0" to="lineLength != 0" />
    <mutant id="mutant_2380" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineLength &gt; 0" to="lineLength &lt;= 0" />
    <mutant id="mutant_1047" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="false" />
    <mutant id="mutant_2378" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator != null" to="true" />
    <mutant id="mutant_1048" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index &gt;= 1)" />
    <mutant id="mutant_2379" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator != null" to="false" />
    <mutant id="mutant_1045" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index &gt; 1)" />
    <mutant id="mutant_2376" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator != null" to="lineSeparator &gt; null" />
    <mutant id="mutant_1046" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="true" />
    <mutant id="mutant_2377" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator != null" to="lineSeparator &lt;= null" />
    <mutant id="mutant_1043" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index != 1)" />
    <mutant id="mutant_2374" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator != null" to="lineSeparator == null" />
    <mutant id="mutant_1044" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index &lt; 1)" />
    <mutant id="mutant_2375" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator != null" to="lineSeparator &lt; null" />
    <mutant id="mutant_1041" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 0)) == 'M')" to="((charAt(value, 0)) &lt; 'M')" />
    <mutant id="mutant_2372" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator == null" to="lineSeparator != null" />
    <mutant id="mutant_1042" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 0)) == 'M')" to="((charAt(value, 0)) &lt;= 'M')" />
    <mutant id="mutant_2373" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator != null" to="lineSeparator &gt;= null" />
    <mutant id="mutant_1049" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index &lt;= 1)" />
    <mutant id="mutant_1098" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) != 'Y')" to="((charAt(value, (index + 1))) &gt;= 'Y')" />
    <mutant id="mutant_1099" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_1096" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) != 'Y')" to="true" />
    <mutant id="mutant_1097" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) != 'Y')" to="false" />
    <mutant id="mutant_1094" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) != 'Y')" to="((charAt(value, (index + 1))) &gt; 'Y')" />
    <mutant id="mutant_1095" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) != 'Y')" to="((charAt(value, (index + 1))) &lt;= 'Y')" />
    <mutant id="mutant_1092" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) != 'Y')" to="((charAt(value, (index + 1))) == 'Y')" />
    <mutant id="mutant_1093" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) != 'Y')" to="((charAt(value, (index + 1))) &lt; 'Y')" />
    <mutant id="mutant_1090" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 1)" to="(index &gt;= 1)" />
    <mutant id="mutant_1091" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 1)" to="(index &lt;= 1)" />
    <mutant id="mutant_1089" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 1)" to="false" />
    <mutant id="mutant_1087" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 1)" to="(index &gt; 1)" />
    <mutant id="mutant_1088" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 1)" to="true" />
    <mutant id="mutant_1085" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 1)" to="(index != 1)" />
    <mutant id="mutant_1086" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 1)" to="(index &lt; 1)" />
    <mutant id="mutant_1919" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'C')" to="(next &lt; 'C')" />
    <mutant id="mutant_1917" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'S')" to="(curr &lt; 'S')" />
    <mutant id="mutant_1918" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'C')" to="(next &gt; 'C')" />
    <mutant id="mutant_1915" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'S')" to="false" />
    <mutant id="mutant_1916" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'S')" to="(curr &gt;= 'S')" />
    <mutant id="mutant_1913" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'S')" to="(curr != 'S')" />
    <mutant id="mutant_1914" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'S')" to="true" />
    <mutant id="mutant_1911" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'S')" to="(curr &gt; 'S')" />
    <mutant id="mutant_1912" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'S')" to="(curr &lt;= 'S')" />
    <mutant id="mutant_1910" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="next == 'N'" to="next &lt; 'N'" />
    <mutant id="mutant_1908" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="next == 'N'" to="next &lt;= 'N'" />
    <mutant id="mutant_1909" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="next == 'N'" to="next &gt;= 'N'" />
    <mutant id="mutant_1906" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="next == 'N'" to="true" />
    <mutant id="mutant_1907" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="next == 'N'" to="false" />
    <mutant id="mutant_1904" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="next == 'N'" to="next != 'N'" />
    <mutant id="mutant_1905" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="next == 'N'" to="next &gt; 'N'" />
    <mutant id="mutant_1902" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'K'" to="curr &lt;= 'K'" />
    <mutant id="mutant_1903" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'K'" to="curr != 'K'" />
    <mutant id="mutant_1900" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'K'" to="false" />
    <mutant id="mutant_1901" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'K'" to="curr &gt; 'K'" />
    <mutant id="mutant_1959" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W')" to="(curr &gt; 'W')" />
    <mutant id="mutant_1950" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H')" to="false" />
    <mutant id="mutant_1957" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W')" to="(curr &lt; 'W')" />
    <mutant id="mutant_1958" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W')" to="(curr != 'W')" />
    <mutant id="mutant_1955" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W')" to="true" />
    <mutant id="mutant_1956" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W')" to="false" />
    <mutant id="mutant_1953" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W')" to="(curr &gt;= 'W')" />
    <mutant id="mutant_1954" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W')" to="(curr &lt;= 'W')" />
    <mutant id="mutant_1951" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H')" to="(curr != 'H')" />
    <mutant id="mutant_1952" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H')" to="(curr &gt; 'H')" />
    <mutant id="mutant_1948" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H')" to="(curr &lt; 'H')" />
    <mutant id="mutant_1949" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H')" to="true" />
    <mutant id="mutant_1946" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H')" to="(curr &gt;= 'H')" />
    <mutant id="mutant_1947" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H')" to="(curr &lt;= 'H')" />
    <mutant id="mutant_1944" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'H')" to="(next &gt; 'H')" />
    <mutant id="mutant_1945" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'H')" to="(next != 'H')" />
    <mutant id="mutant_1942" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'H')" to="true" />
    <mutant id="mutant_1943" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'H')" to="false" />
    <mutant id="mutant_1940" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'H')" to="(next &gt;= 'H')" />
    <mutant id="mutant_1941" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'H')" to="(next &lt; 'H')" />
    <mutant id="mutant_1939" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'H')" to="(next &lt;= 'H')" />
    <mutant id="mutant_1937" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P')" to="false" />
    <mutant id="mutant_1938" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P')" to="(curr &lt;= 'P')" />
    <mutant id="mutant_1935" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P')" to="(curr &gt;= 'P')" />
    <mutant id="mutant_1936" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P')" to="true" />
    <mutant id="mutant_1933" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P')" to="(curr != 'P')" />
    <mutant id="mutant_1934" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P')" to="(curr &gt; 'P')" />
    <mutant id="mutant_1931" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(aNext == 'H')" to="(aNext &lt;= 'H')" />
    <mutant id="mutant_1932" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P')" to="(curr &lt; 'P')" />
    <mutant id="mutant_1930" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(aNext == 'H')" to="(aNext != 'H')" />
    <mutant id="mutant_1928" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(aNext == 'H')" to="true" />
    <mutant id="mutant_1929" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(aNext == 'H')" to="false" />
    <mutant id="mutant_1926" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(aNext == 'H')" to="(aNext &lt; 'H')" />
    <mutant id="mutant_1927" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(aNext == 'H')" to="(aNext &gt;= 'H')" />
    <mutant id="mutant_1924" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'C')" to="(next != 'C')" />
    <mutant id="mutant_1925" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(aNext == 'H')" to="(aNext &gt; 'H')" />
    <mutant id="mutant_1922" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'C')" to="false" />
    <mutant id="mutant_1923" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'C')" to="(next &gt;= 'C')" />
    <mutant id="mutant_1920" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'C')" to="(next &lt;= 'C')" />
    <mutant id="mutant_1921" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'C')" to="true" />
    <mutant id="mutant_1993" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 2)" to="false" />
    <mutant id="mutant_1994" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 2)" to="i &lt;= (len - 2)" />
    <mutant id="mutant_1991" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 2)" to="i == (len - 2)" />
    <mutant id="mutant_1992" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 2)" to="true" />
    <mutant id="mutant_1990" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 2)" to="i &gt;= (len - 2)" />
    <mutant id="mutant_1999" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(chars[i]) != (chars[(i - 1)])" to="false" />
    <mutant id="mutant_1997" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(chars[i]) != (chars[(i - 1)])" to="(chars[i]) &lt;= (chars[(i - 1)])" />
    <mutant id="mutant_1998" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(chars[i]) != (chars[(i - 1)])" to="true" />
    <mutant id="mutant_1995" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(chars[i]) != (chars[(i - 1)])" to="(chars[i]) &gt; (chars[(i - 1)])" />
    <mutant id="mutant_1996" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(chars[i]) != (chars[(i - 1)])" to="(chars[i]) == (chars[(i - 1)])" />
    <mutant id="mutant_1982" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 1)" to="i == (len - 1)" />
    <mutant id="mutant_1983" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 1)" to="i &gt; (len - 1)" />
    <mutant id="mutant_1980" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; len" to="i != len" />
    <mutant id="mutant_1981" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 1)" to="i != (len - 1)" />
    <mutant id="mutant_1988" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 2)" to="i != (len - 2)" />
    <mutant id="mutant_1989" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 2)" to="i &gt; (len - 2)" />
    <mutant id="mutant_1986" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 1)" to="i &gt;= (len - 1)" />
    <mutant id="mutant_1987" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 1)" to="i &lt;= (len - 1)" />
    <mutant id="mutant_1984" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 1)" to="true" />
    <mutant id="mutant_1985" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; (len - 1)" to="false" />
    <mutant id="mutant_1971" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(str.length()) == 0" to="true" />
    <mutant id="mutant_1972" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(str.length()) == 0" to="false" />
    <mutant id="mutant_1970" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &lt; 0" />
    <mutant id="mutant_1979" viable="false" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; len" to="false" />
    <mutant id="mutant_1977" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; len" to="i &gt;= len" />
    <mutant id="mutant_1978" viable="false" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; len" to="true" />
    <mutant id="mutant_1975" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; len" to="i &lt;= len" />
    <mutant id="mutant_1976" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; len" to="i &gt; len" />
    <mutant id="mutant_1973" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &gt;= 0" />
    <mutant id="mutant_1974" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="i &lt; len" to="i == len" />
    <mutant id="mutant_1960" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_1961" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_1968" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(str.length()) == 0" to="(str.length()) != 0" />
    <mutant id="mutant_1969" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &lt;= 0" />
    <mutant id="mutant_1966" viable="false" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_1967" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &gt; 0" />
    <mutant id="mutant_1964" viable="false" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_1965" viable="false" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_1962" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_1963" viable="false" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_2400" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &gt;= 0)" to="(octet &lt; 0)" />
    <mutant id="mutant_3732" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="printable == null" to="printable &lt;= null" />
    <mutant id="mutant_2401" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &lt; (Base64.DECODE_TABLE.length))" to="(octet &gt;= (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3731" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="printable == null" to="printable != null" />
    <mutant id="mutant_3730" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_2408" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((Base64.DECODE_TABLE[octet]) != (-1))" to="((Base64.DECODE_TABLE[octet]) &gt; (-1))" />
    <mutant id="mutant_2409" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((Base64.DECODE_TABLE[octet]) != (-1))" to="((Base64.DECODE_TABLE[octet]) &lt; (-1))" />
    <mutant id="mutant_3739" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; ((bytes.length) - 3)" to="i != ((bytes.length) - 3)" />
    <mutant id="mutant_2406" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &lt; (Base64.DECODE_TABLE.length))" to="true" />
    <mutant id="mutant_3738" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; ((bytes.length) - 3)" to="i == ((bytes.length) - 3)" />
    <mutant id="mutant_2407" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &lt; (Base64.DECODE_TABLE.length))" to="false" />
    <mutant id="mutant_3737" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="printable == null" to="printable &gt; null" />
    <mutant id="mutant_2404" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &lt; (Base64.DECODE_TABLE.length))" to="(octet != (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3736" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="printable == null" to="printable &lt; null" />
    <mutant id="mutant_2405" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &lt; (Base64.DECODE_TABLE.length))" to="(octet == (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3735" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="printable == null" to="false" />
    <mutant id="mutant_2402" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &lt; (Base64.DECODE_TABLE.length))" to="(octet &lt;= (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3734" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="printable == null" to="true" />
    <mutant id="mutant_2403" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet &lt; (Base64.DECODE_TABLE.length))" to="(octet &gt; (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_3733" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="printable == null" to="printable &gt;= null" />
    <mutant id="mutant_3721" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.LF))" to="false" />
    <mutant id="mutant_3720" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.LF))" to="true" />
    <mutant id="mutant_3729" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_3728" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="bytes == null" to="false" />
    <mutant id="mutant_3727" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="bytes == null" to="true" />
    <mutant id="mutant_3726" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_3725" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_3724" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_3723" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.LF))" to="(b &lt;= (QuotedPrintableCodec.LF))" />
    <mutant id="mutant_3722" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.LF))" to="(b &lt; (QuotedPrintableCodec.LF))" />
    <mutant id="mutant_701" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'o')" to="(ch &gt;= 'o')" />
    <mutant id="mutant_702" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'o')" to="true" />
    <mutant id="mutant_703" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'o')" to="false" />
    <mutant id="mutant_704" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'o')" to="(ch &lt;= 'o')" />
    <mutant id="mutant_700" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'o')" to="(ch != 'o')" />
    <mutant id="mutant_3719" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.LF))" to="(b &gt; (QuotedPrintableCodec.LF))" />
    <mutant id="mutant_709" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'u')" to="true" />
    <mutant id="mutant_705" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'o')" to="(ch &gt; 'o')" />
    <mutant id="mutant_706" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'o')" to="(ch &lt; 'o')" />
    <mutant id="mutant_707" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'u')" to="(ch &gt; 'u')" />
    <mutant id="mutant_708" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'u')" to="(ch &lt; 'u')" />
    <mutant id="mutant_3710" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR))" to="(b &lt;= (QuotedPrintableCodec.CR))" />
    <mutant id="mutant_3718" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.LF))" to="(b == (QuotedPrintableCodec.LF))" />
    <mutant id="mutant_3717" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.LF))" to="(b &gt;= (QuotedPrintableCodec.LF))" />
    <mutant id="mutant_3716" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR))" to="(b &lt; (QuotedPrintableCodec.CR))" />
    <mutant id="mutant_3715" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR))" to="(b &gt; (QuotedPrintableCodec.CR))" />
    <mutant id="mutant_3714" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR))" to="false" />
    <mutant id="mutant_3713" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR))" to="true" />
    <mutant id="mutant_3712" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR))" to="(b == (QuotedPrintableCodec.CR))" />
    <mutant id="mutant_3711" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR))" to="(b &gt;= (QuotedPrintableCodec.CR))" />
    <mutant id="mutant_712" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'u')" to="(ch &gt;= 'u')" />
    <mutant id="mutant_713" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'u')" to="(ch &lt;= 'u')" />
    <mutant id="mutant_714" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getReplacements(java.lang.String,boolean)" from="nextIndex &lt; (context.length())" to="nextIndex == (context.length())" />
    <mutant id="mutant_715" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getReplacements(java.lang.String,boolean)" from="nextIndex &lt; (context.length())" to="nextIndex &gt;= (context.length())" />
    <mutant id="mutant_710" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'u')" to="false" />
    <mutant id="mutant_3709" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(bytes[++i]) == (QuotedPrintableCodec.CR)" to="(bytes[++i]) &lt; (QuotedPrintableCodec.CR)" />
    <mutant id="mutant_711" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'u')" to="(ch != 'u')" />
    <mutant id="mutant_3708" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(bytes[++i]) == (QuotedPrintableCodec.CR)" to="(bytes[++i]) &gt; (QuotedPrintableCodec.CR)" />
    <mutant id="mutant_716" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getReplacements(java.lang.String,boolean)" from="nextIndex &lt; (context.length())" to="true" />
    <mutant id="mutant_717" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getReplacements(java.lang.String,boolean)" from="nextIndex &lt; (context.length())" to="false" />
    <mutant id="mutant_718" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getReplacements(java.lang.String,boolean)" from="nextIndex &lt; (context.length())" to="nextIndex &gt; (context.length())" />
    <mutant id="mutant_719" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getReplacements(java.lang.String,boolean)" from="nextIndex &lt; (context.length())" to="nextIndex != (context.length())" />
    <mutant id="mutant_3707" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(bytes[++i]) == (QuotedPrintableCodec.CR)" to="false" />
    <mutant id="mutant_3706" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(bytes[++i]) == (QuotedPrintableCodec.CR)" to="true" />
    <mutant id="mutant_3705" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(bytes[++i]) == (QuotedPrintableCodec.CR)" to="(bytes[++i]) &lt;= (QuotedPrintableCodec.CR)" />
    <mutant id="mutant_3704" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(bytes[++i]) == (QuotedPrintableCodec.CR)" to="(bytes[++i]) &gt;= (QuotedPrintableCodec.CR)" />
    <mutant id="mutant_3703" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(bytes[++i]) == (QuotedPrintableCodec.CR)" to="(bytes[++i]) != (QuotedPrintableCodec.CR)" />
    <mutant id="mutant_3702" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="b == (QuotedPrintableCodec.ESCAPE_CHAR)" to="b != (QuotedPrintableCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_3701" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="b == (QuotedPrintableCodec.ESCAPE_CHAR)" to="b &gt; (QuotedPrintableCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_3700" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="b == (QuotedPrintableCodec.ESCAPE_CHAR)" to="false" />
    <mutant id="mutant_723" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)" from="source == null" to="true" />
    <mutant id="mutant_724" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)" from="source == null" to="false" />
    <mutant id="mutant_725" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)" from="source == null" to="source != null" />
    <mutant id="mutant_726" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)" from="source == null" to="source &gt; null" />
    <mutant id="mutant_720" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.getReplacements(java.lang.String,boolean)" from="nextIndex &lt; (context.length())" to="nextIndex &lt;= (context.length())" />
    <mutant id="mutant_721" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)" from="source == null" to="source &lt;= null" />
    <mutant id="mutant_722" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)" from="source == null" to="source &gt;= null" />
    <mutant id="mutant_727" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(java.lang.String)" from="source == null" to="source &lt; null" />
    <mutant id="mutant_728" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)" from="(++index) &lt; (branches.length)" to="(++index) == (branches.length)" />
    <mutant id="mutant_729" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)" from="(++index) &lt; (branches.length)" to="(++index) &gt; (branches.length)" />
    <mutant id="mutant_1113" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) &lt; 'Y')" />
    <mutant id="mutant_2444" viable="false" in="org.apache.commons.codec.binary.Base64.isUrlSafe()" from="(this.encodeTable) == (Base64.URL_SAFE_ENCODE_TABLE)" to="(this.encodeTable) &lt;= (Base64.URL_SAFE_ENCODE_TABLE)" />
    <mutant id="mutant_3776" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(i &gt; ((bytes.length) - 2))" to="true" />
    <mutant id="mutant_1114" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) &gt; 'Y')" />
    <mutant id="mutant_2445" viable="false" in="org.apache.commons.codec.binary.Base64.isUrlSafe()" from="(this.encodeTable) == (Base64.URL_SAFE_ENCODE_TABLE)" to="(this.encodeTable) &gt;= (Base64.URL_SAFE_ENCODE_TABLE)" />
    <mutant id="mutant_3775" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(i &gt; ((bytes.length) - 2))" to="(i != ((bytes.length) - 2))" />
    <mutant id="mutant_1111" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="false" />
    <mutant id="mutant_2442" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) &gt; (-1))" />
    <mutant id="mutant_3774" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(i &gt; ((bytes.length) - 2))" to="(i == ((bytes.length) - 2))" />
    <mutant id="mutant_1112" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) &gt;= 'Y')" />
    <mutant id="mutant_2443" viable="false" in="org.apache.commons.codec.binary.Base64.isUrlSafe()" from="(this.encodeTable) == (Base64.URL_SAFE_ENCODE_TABLE)" to="(this.encodeTable) &lt; (Base64.URL_SAFE_ENCODE_TABLE)" />
    <mutant id="mutant_3773" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(i &gt; ((bytes.length) - 2))" to="(i &gt;= ((bytes.length) - 2))" />
    <mutant id="mutant_2440" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) &gt;= (-1))" />
    <mutant id="mutant_3772" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; (bytes.length)" to="i == (bytes.length)" />
    <mutant id="mutant_1110" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="true" />
    <mutant id="mutant_2441" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) &lt; (-1))" />
    <mutant id="mutant_3771" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; (bytes.length)" to="i &gt;= (bytes.length)" />
    <mutant id="mutant_3770" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; (bytes.length)" to="i &lt;= (bytes.length)" />
    <mutant id="mutant_1119" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) &gt;= 'Y')" />
    <mutant id="mutant_1117" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="true" />
    <mutant id="mutant_2448" viable="true" in="org.apache.commons.codec.binary.Base64.isUrlSafe()" from="(this.encodeTable) == (Base64.URL_SAFE_ENCODE_TABLE)" to="(this.encodeTable) != (Base64.URL_SAFE_ENCODE_TABLE)" />
    <mutant id="mutant_1118" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="false" />
    <mutant id="mutant_2449" viable="false" in="org.apache.commons.codec.binary.Base64.isUrlSafe()" from="(this.encodeTable) == (Base64.URL_SAFE_ENCODE_TABLE)" to="(this.encodeTable) &gt; (Base64.URL_SAFE_ENCODE_TABLE)" />
    <mutant id="mutant_3779" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(i &gt; ((bytes.length) - 2))" to="(i &lt;= ((bytes.length) - 2))" />
    <mutant id="mutant_1115" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) != 'Y')" />
    <mutant id="mutant_2446" viable="true" in="org.apache.commons.codec.binary.Base64.isUrlSafe()" from="(this.encodeTable) == (Base64.URL_SAFE_ENCODE_TABLE)" to="true" />
    <mutant id="mutant_3778" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(i &gt; ((bytes.length) - 2))" to="(i &lt; ((bytes.length) - 2))" />
    <mutant id="mutant_1116" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) &lt;= 'Y')" />
    <mutant id="mutant_2447" viable="true" in="org.apache.commons.codec.binary.Base64.isUrlSafe()" from="(this.encodeTable) == (Base64.URL_SAFE_ENCODE_TABLE)" to="false" />
    <mutant id="mutant_3777" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(i &gt; ((bytes.length) - 2))" to="false" />
    <mutant id="mutant_734" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)" from="(++index) &lt; (branches.length)" to="(++index) &gt;= (branches.length)" />
    <mutant id="mutant_735" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="source == null" to="source &lt;= null" />
    <mutant id="mutant_736" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="source == null" to="source &gt;= null" />
    <mutant id="mutant_737" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="source == null" to="true" />
    <mutant id="mutant_730" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)" from="(++index) &lt; (branches.length)" to="(++index) &lt;= (branches.length)" />
    <mutant id="mutant_731" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)" from="(++index) &lt; (branches.length)" to="(++index) != (branches.length)" />
    <mutant id="mutant_732" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)" from="(++index) &lt; (branches.length)" to="true" />
    <mutant id="mutant_733" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String)" from="(++index) &lt; (branches.length)" to="false" />
    <mutant id="mutant_738" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="source == null" to="false" />
    <mutant id="mutant_739" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="source == null" to="source != null" />
    <mutant id="mutant_1102" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2433" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet == (decodeTable.length))" />
    <mutant id="mutant_3765" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="pos == ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" />
    <mutant id="mutant_1103" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2434" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="true" />
    <mutant id="mutant_3764" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="false" />
    <mutant id="mutant_1100" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="true" />
    <mutant id="mutant_2431" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet &gt; (decodeTable.length))" />
    <mutant id="mutant_3763" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="true" />
    <mutant id="mutant_1101" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="false" />
    <mutant id="mutant_2432" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet != (decodeTable.length))" />
    <mutant id="mutant_3762" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="pos &lt; ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" />
    <mutant id="mutant_3761" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="pos &lt;= ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" />
    <mutant id="mutant_2430" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet &lt;= (decodeTable.length))" />
    <mutant id="mutant_3760" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="pos &gt;= ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" />
    <mutant id="mutant_1108" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) != 'Y')" />
    <mutant id="mutant_2439" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="false" />
    <mutant id="mutant_1109" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) &lt;= 'Y')" />
    <mutant id="mutant_1106" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) &lt; 'Y')" />
    <mutant id="mutant_2437" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) &lt;= (-1))" />
    <mutant id="mutant_3769" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; (bytes.length)" to="false" />
    <mutant id="mutant_1107" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((charAt(value, (index + 1))) == 'Y')" to="((charAt(value, (index + 1))) &gt; 'Y')" />
    <mutant id="mutant_2438" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="true" />
    <mutant id="mutant_3768" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; (bytes.length)" to="true" />
    <mutant id="mutant_1104" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2435" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="false" />
    <mutant id="mutant_3767" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; (bytes.length)" to="i &gt; (bytes.length)" />
    <mutant id="mutant_1105" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2436" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) == (-1))" />
    <mutant id="mutant_3766" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; (bytes.length)" to="i != (bytes.length)" />
    <mutant id="mutant_745" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="index &lt; (input.length())" to="true" />
    <mutant id="mutant_746" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="index &lt; (input.length())" to="false" />
    <mutant id="mutant_747" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="index &lt; (input.length())" to="index &gt;= (input.length())" />
    <mutant id="mutant_748" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="index &lt; (input.length())" to="index &gt; (input.length())" />
    <mutant id="mutant_741" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="source == null" to="source &lt; null" />
    <mutant id="mutant_742" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="index &lt; (input.length())" to="index &lt;= (input.length())" />
    <mutant id="mutant_743" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="index &lt; (input.length())" to="index != (input.length())" />
    <mutant id="mutant_744" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="index &lt; (input.length())" to="index == (input.length())" />
    <mutant id="mutant_749" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="rules == null" to="rules &lt; null" />
    <mutant id="mutant_2422" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet &gt; 0)" />
    <mutant id="mutant_3754" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" to="true" />
    <mutant id="mutant_2423" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet == 0)" />
    <mutant id="mutant_3753" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" to="(pos != ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" />
    <mutant id="mutant_2420" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="i &lt; (arrayOctet.length)" to="i &gt;= (arrayOctet.length)" />
    <mutant id="mutant_3752" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" to="(pos &gt;= ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" />
    <mutant id="mutant_2421" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="i &lt; (arrayOctet.length)" to="i == (arrayOctet.length)" />
    <mutant id="mutant_3751" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &lt; (QuotedPrintableCodec.SAFE_LENGTH)" to="pos &lt;= (QuotedPrintableCodec.SAFE_LENGTH)" />
    <mutant id="mutant_3750" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &lt; (QuotedPrintableCodec.SAFE_LENGTH)" to="pos &gt;= (QuotedPrintableCodec.SAFE_LENGTH)" />
    <mutant id="mutant_2428" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet &lt; 0)" />
    <mutant id="mutant_740" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="source == null" to="source &gt; null" />
    <mutant id="mutant_2429" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet &gt;= (decodeTable.length))" />
    <mutant id="mutant_3759" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="pos != ((QuotedPrintableCodec.SAFE_LENGTH) - 2)" />
    <mutant id="mutant_2426" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &gt;= 0)" to="false" />
    <mutant id="mutant_3758" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" to="(pos &lt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" />
    <mutant id="mutant_2427" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet &lt;= 0)" />
    <mutant id="mutant_3757" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" to="(pos == ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" />
    <mutant id="mutant_2424" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet != 0)" />
    <mutant id="mutant_3756" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" to="(pos &lt;= ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" />
    <mutant id="mutant_2425" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="(octet &gt;= 0)" to="true" />
    <mutant id="mutant_3755" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" to="false" />
    <mutant id="mutant_756" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == '/0')" to="(lastChar &gt;= '/0')" />
    <mutant id="mutant_757" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == '/0')" to="(lastChar &lt; '/0')" />
    <mutant id="mutant_758" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == '/0')" to="true" />
    <mutant id="mutant_759" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == '/0')" to="false" />
    <mutant id="mutant_752" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="rules == null" to="rules &gt; null" />
    <mutant id="mutant_753" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="rules == null" to="true" />
    <mutant id="mutant_754" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="rules == null" to="false" />
    <mutant id="mutant_755" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="rules == null" to="rules != null" />
    <mutant id="mutant_2411" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((Base64.DECODE_TABLE[octet]) != (-1))" to="false" />
    <mutant id="mutant_3743" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; ((bytes.length) - 3)" to="i &gt; ((bytes.length) - 3)" />
    <mutant id="mutant_2412" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((Base64.DECODE_TABLE[octet]) != (-1))" to="((Base64.DECODE_TABLE[octet]) &gt;= (-1))" />
    <mutant id="mutant_3742" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; ((bytes.length) - 3)" to="false" />
    <mutant id="mutant_3741" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; ((bytes.length) - 3)" to="true" />
    <mutant id="mutant_2410" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((Base64.DECODE_TABLE[octet]) != (-1))" to="true" />
    <mutant id="mutant_3740" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; ((bytes.length) - 3)" to="i &gt;= ((bytes.length) - 3)" />
    <mutant id="mutant_2419" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="i &lt; (arrayOctet.length)" to="i &lt;= (arrayOctet.length)" />
    <mutant id="mutant_750" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="rules == null" to="rules &gt;= null" />
    <mutant id="mutant_2417" viable="false" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="i &lt; (arrayOctet.length)" to="true" />
    <mutant id="mutant_3749" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &lt; (QuotedPrintableCodec.SAFE_LENGTH)" to="pos &gt; (QuotedPrintableCodec.SAFE_LENGTH)" />
    <mutant id="mutant_751" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="rules == null" to="rules &lt;= null" />
    <mutant id="mutant_2418" viable="false" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="i &lt; (arrayOctet.length)" to="false" />
    <mutant id="mutant_3748" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &lt; (QuotedPrintableCodec.SAFE_LENGTH)" to="pos != (QuotedPrintableCodec.SAFE_LENGTH)" />
    <mutant id="mutant_2415" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="i &lt; (arrayOctet.length)" to="i != (arrayOctet.length)" />
    <mutant id="mutant_3747" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &lt; (QuotedPrintableCodec.SAFE_LENGTH)" to="false" />
    <mutant id="mutant_2416" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="i &lt; (arrayOctet.length)" to="i &gt; (arrayOctet.length)" />
    <mutant id="mutant_3746" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &lt; (QuotedPrintableCodec.SAFE_LENGTH)" to="true" />
    <mutant id="mutant_2413" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((Base64.DECODE_TABLE[octet]) != (-1))" to="((Base64.DECODE_TABLE[octet]) &lt;= (-1))" />
    <mutant id="mutant_3745" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="pos &lt; (QuotedPrintableCodec.SAFE_LENGTH)" to="pos == (QuotedPrintableCodec.SAFE_LENGTH)" />
    <mutant id="mutant_2414" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((Base64.DECODE_TABLE[octet]) != (-1))" to="((Base64.DECODE_TABLE[octet]) == (-1))" />
    <mutant id="mutant_3744" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="i &lt; ((bytes.length) - 3)" to="i &lt;= ((bytes.length) - 3)" />
    <mutant id="mutant_767" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1)" to="((replacements.length) &lt;= 1)" />
    <mutant id="mutant_768" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1)" to="((replacements.length) == 1)" />
    <mutant id="mutant_769" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1)" to="((replacements.length) &gt;= 1)" />
    <mutant id="mutant_763" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1)" to="((replacements.length) &lt; 1)" />
    <mutant id="mutant_764" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1)" to="true" />
    <mutant id="mutant_765" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1)" to="false" />
    <mutant id="mutant_766" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1)" to="((replacements.length) != 1)" />
    <mutant id="mutant_1160" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="false" />
    <mutant id="mutant_2491" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="((((bigInt.bitLength()) / 8) + 1) != (bitlen / 8))" />
    <mutant id="mutant_1161" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index == 2)" />
    <mutant id="mutant_2492" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8) == 0" to="((bigInt.bitLength()) % 8) &gt;= 0" />
    <mutant id="mutant_2490" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="((((bigInt.bitLength()) / 8) + 1) &gt; (bitlen / 8))" />
    <mutant id="mutant_1157" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index &lt;= 2)" />
    <mutant id="mutant_2488" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="true" />
    <mutant id="mutant_1158" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index &gt;= 2)" />
    <mutant id="mutant_2489" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="false" />
    <mutant id="mutant_1155" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index != 2)" />
    <mutant id="mutant_2486" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="((((bigInt.bitLength()) / 8) + 1) &lt; (bitlen / 8))" />
    <mutant id="mutant_1156" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="(index &lt; 2)" />
    <mutant id="mutant_2487" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="((((bigInt.bitLength()) / 8) + 1) &lt;= (bitlen / 8))" />
    <mutant id="mutant_1153" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 1)" to="(index &lt;= 1)" />
    <mutant id="mutant_2484" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0)" to="(((bigInt.bitLength()) % 8) &lt;= 0)" />
    <mutant id="mutant_1154" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 1)" to="(index == 1)" />
    <mutant id="mutant_2485" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="((((bigInt.bitLength()) / 8) + 1) &gt;= (bitlen / 8))" />
    <mutant id="mutant_1151" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 1)" to="false" />
    <mutant id="mutant_2482" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0)" to="false" />
    <mutant id="mutant_1152" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 1)" to="(index &gt;= 1)" />
    <mutant id="mutant_2483" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0)" to="(((bigInt.bitLength()) % 8) &lt; 0)" />
    <mutant id="mutant_760" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == '/0')" to="(lastChar &gt; '/0')" />
    <mutant id="mutant_761" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == '/0')" to="(lastChar != '/0')" />
    <mutant id="mutant_762" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == '/0')" to="(lastChar &lt;= '/0')" />
    <mutant id="mutant_1159" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 2)" to="true" />
    <mutant id="mutant_778" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'n')" to="(ch &gt;= 'n')" />
    <mutant id="mutant_779" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'n')" to="(ch &lt;= 'n')" />
    <mutant id="mutant_774" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'm')" to="(lastChar != 'm')" />
    <mutant id="mutant_775" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'm')" to="(lastChar &lt; 'm')" />
    <mutant id="mutant_776" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'm')" to="(lastChar &gt; 'm')" />
    <mutant id="mutant_777" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'n')" to="(ch != 'n')" />
    <mutant id="mutant_2480" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0)" to="(((bigInt.bitLength()) % 8) &gt; 0)" />
    <mutant id="mutant_1150" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 1)" to="true" />
    <mutant id="mutant_2481" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0)" to="true" />
    <mutant id="mutant_1146" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'I'" to="(charAt(value, (index + 2))) &lt;= 'I'" />
    <mutant id="mutant_2477" viable="false" in="org.apache.commons.codec.binary.Base64.encodeInteger(java.math.BigInteger)" from="bigInt == null" to="bigInt &gt; null" />
    <mutant id="mutant_1147" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'I'" to="(charAt(value, (index + 2))) &gt;= 'I'" />
    <mutant id="mutant_2478" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0)" to="(((bigInt.bitLength()) % 8) &gt;= 0)" />
    <mutant id="mutant_1144" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'I'" to="true" />
    <mutant id="mutant_2475" viable="false" in="org.apache.commons.codec.binary.Base64.encodeInteger(java.math.BigInteger)" from="bigInt == null" to="bigInt &lt;= null" />
    <mutant id="mutant_1145" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'I'" to="false" />
    <mutant id="mutant_2476" viable="false" in="org.apache.commons.codec.binary.Base64.encodeInteger(java.math.BigInteger)" from="bigInt == null" to="bigInt &gt;= null" />
    <mutant id="mutant_1142" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'I'" to="(charAt(value, (index + 2))) != 'I'" />
    <mutant id="mutant_2473" viable="true" in="org.apache.commons.codec.binary.Base64.encodeInteger(java.math.BigInteger)" from="bigInt == null" to="true" />
    <mutant id="mutant_1143" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'I'" to="(charAt(value, (index + 2))) &gt; 'I'" />
    <mutant id="mutant_2474" viable="true" in="org.apache.commons.codec.binary.Base64.encodeInteger(java.math.BigInteger)" from="bigInt == null" to="false" />
    <mutant id="mutant_1140" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &lt;= 0" />
    <mutant id="mutant_2471" viable="true" in="org.apache.commons.codec.binary.Base64.encodeInteger(java.math.BigInteger)" from="bigInt == null" to="bigInt != null" />
    <mutant id="mutant_1141" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(charAt(value, (index + 2))) == 'I'" to="(charAt(value, (index + 2))) &lt; 'I'" />
    <mutant id="mutant_2472" viable="false" in="org.apache.commons.codec.binary.Base64.encodeInteger(java.math.BigInteger)" from="bigInt == null" to="bigInt &lt; null" />
    <mutant id="mutant_770" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'm')" to="(lastChar &lt;= 'm')" />
    <mutant id="mutant_771" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'm')" to="(lastChar &gt;= 'm')" />
    <mutant id="mutant_772" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'm')" to="true" />
    <mutant id="mutant_773" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'm')" to="false" />
    <mutant id="mutant_1148" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 1)" to="(index != 1)" />
    <mutant id="mutant_2479" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0)" to="(((bigInt.bitLength()) % 8) == 0)" />
    <mutant id="mutant_1149" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 1)" to="(index &lt; 1)" />
    <mutant id="mutant_789" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'n')" to="(lastChar &gt; 'n')" />
    <mutant id="mutant_785" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'n')" to="(lastChar &gt;= 'n')" />
    <mutant id="mutant_786" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'n')" to="true" />
    <mutant id="mutant_787" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'n')" to="false" />
    <mutant id="mutant_788" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'n')" to="(lastChar &lt; 'n')" />
    <mutant id="mutant_2470" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="len &gt; maxResultSize" to="len != maxResultSize" />
    <mutant id="mutant_1135" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="true" />
    <mutant id="mutant_2466" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="len &gt; maxResultSize" to="true" />
    <mutant id="mutant_3798" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="obj == null" to="false" />
    <mutant id="mutant_1136" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="false" />
    <mutant id="mutant_2467" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="len &gt; maxResultSize" to="false" />
    <mutant id="mutant_3797" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="obj == null" to="true" />
    <mutant id="mutant_1133" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2464" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="len &gt; maxResultSize" to="len &lt; maxResultSize" />
    <mutant id="mutant_3796" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="obj == null" to="obj &gt; null" />
    <mutant id="mutant_1134" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index != 0" />
    <mutant id="mutant_2465" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="len &gt; maxResultSize" to="len &lt;= maxResultSize" />
    <mutant id="mutant_3795" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="obj == null" to="obj &lt; null" />
    <mutant id="mutant_1131" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2462" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((binaryData.length) == 0)" to="((binaryData.length) &lt; 0)" />
    <mutant id="mutant_3794" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="obj == null" to="obj &lt;= null" />
    <mutant id="mutant_1132" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2463" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((binaryData.length) == 0)" to="((binaryData.length) &gt; 0)" />
    <mutant id="mutant_3793" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="b &lt; 0" to="b &lt;= 0" />
    <mutant id="mutant_2460" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((binaryData.length) == 0)" to="false" />
    <mutant id="mutant_3792" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="b &lt; 0" to="b &gt;= 0" />
    <mutant id="mutant_1130" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="false" />
    <mutant id="mutant_2461" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((binaryData.length) == 0)" to="((binaryData.length) &lt;= 0)" />
    <mutant id="mutant_3791" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="b &lt; 0" to="b &gt; 0" />
    <mutant id="mutant_781" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'n')" to="false" />
    <mutant id="mutant_782" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'n')" to="(ch &gt; 'n')" />
    <mutant id="mutant_783" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'n')" to="(ch &lt; 'n')" />
    <mutant id="mutant_784" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'n')" to="(lastChar &lt;= 'n')" />
    <mutant id="mutant_1139" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &lt; 0" />
    <mutant id="mutant_1137" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &gt; 0" />
    <mutant id="mutant_2468" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="len &gt; maxResultSize" to="len == maxResultSize" />
    <mutant id="mutant_780" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'n')" to="true" />
    <mutant id="mutant_1138" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &gt;= 0" />
    <mutant id="mutant_2469" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="len &gt; maxResultSize" to="len &gt;= maxResultSize" />
    <mutant id="mutant_3799" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="obj == null" to="obj != null" />
    <mutant id="mutant_796" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'm')" to="(ch &gt; 'm')" />
    <mutant id="mutant_797" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'm')" to="(ch &lt; 'm')" />
    <mutant id="mutant_798" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="cmtI &gt;= 0" to="cmtI &gt; 0" />
    <mutant id="mutant_799" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="cmtI &gt;= 0" to="cmtI == 0" />
    <mutant id="mutant_3790" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="b &lt; 0" to="false" />
    <mutant id="mutant_1124" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'G'" to="false" />
    <mutant id="mutant_2455" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null)" to="false" />
    <mutant id="mutant_3787" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="b &lt; 0" to="b != 0" />
    <mutant id="mutant_1125" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'G'" to="(charAt(value, (index + 1))) &lt;= 'G'" />
    <mutant id="mutant_2456" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null)" to="(binaryData &lt; null)" />
    <mutant id="mutant_3786" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="b &lt; 0" to="b &lt;= 0" />
    <mutant id="mutant_1122" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'G'" to="(charAt(value, (index + 1))) &gt; 'G'" />
    <mutant id="mutant_2453" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null)" to="(binaryData &gt; null)" />
    <mutant id="mutant_3785" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="b &lt; 0" to="b &gt;= 0" />
    <mutant id="mutant_1123" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'G'" to="true" />
    <mutant id="mutant_2454" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null)" to="true" />
    <mutant id="mutant_3784" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="b &lt; 0" to="b &gt; 0" />
    <mutant id="mutant_1120" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'G'" to="(charAt(value, (index + 1))) != 'G'" />
    <mutant id="mutant_2451" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null)" to="(binaryData &gt;= null)" />
    <mutant id="mutant_3783" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="b &lt; 0" to="false" />
    <mutant id="mutant_1121" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'G'" to="(charAt(value, (index + 1))) &lt; 'G'" />
    <mutant id="mutant_2452" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null)" to="(binaryData != null)" />
    <mutant id="mutant_3782" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="b &lt; 0" to="true" />
    <mutant id="mutant_3781" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="b &lt; 0" to="b == 0" />
    <mutant id="mutant_2450" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null)" to="(binaryData &lt;= null)" />
    <mutant id="mutant_3780" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="b &lt; 0" to="b != 0" />
    <mutant id="mutant_792" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'm')" to="(ch &gt;= 'm')" />
    <mutant id="mutant_793" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'm')" to="(ch &lt;= 'm')" />
    <mutant id="mutant_794" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'm')" to="true" />
    <mutant id="mutant_795" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'm')" to="false" />
    <mutant id="mutant_1128" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index == 0)" />
    <mutant id="mutant_2459" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((binaryData.length) == 0)" to="true" />
    <mutant id="mutant_1129" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="true" />
    <mutant id="mutant_790" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(lastChar == 'n')" to="(lastChar != 'n')" />
    <mutant id="mutant_1126" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(charAt(value, (index + 1))) == 'G'" to="(charAt(value, (index + 1))) &gt;= 'G'" />
    <mutant id="mutant_2457" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((binaryData.length) == 0)" to="((binaryData.length) &gt;= 0)" />
    <mutant id="mutant_3789" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="b &lt; 0" to="true" />
    <mutant id="mutant_791" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(ch == 'm')" to="(ch != 'm')" />
    <mutant id="mutant_1127" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0)" to="(index != 0)" />
    <mutant id="mutant_2458" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((binaryData.length) == 0)" to="((binaryData.length) != 0)" />
    <mutant id="mutant_3788" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="b &lt; 0" to="b == 0" />
    <mutant id="mutant_9" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="lRulesIS == null" to="false" />
    <mutant id="mutant_8" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="lRulesIS == null" to="true" />
    <mutant id="mutant_5" viable="false" in="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.String)" from="source == null" to="source &gt; null" />
    <mutant id="mutant_686" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'e')" to="(ch &gt; 'e')" />
    <mutant id="mutant_4" viable="true" in="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.String)" from="source == null" to="source != null" />
    <mutant id="mutant_687" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'e')" to="(ch &lt; 'e')" />
    <mutant id="mutant_7" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="lRulesIS == null" to="lRulesIS != null" />
    <mutant id="mutant_688" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'e')" to="true" />
    <mutant id="mutant_6" viable="false" in="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.String)" from="source == null" to="source &lt; null" />
    <mutant id="mutant_689" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'e')" to="false" />
    <mutant id="mutant_85" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.makeString()" from="(sb.length()) &gt; 0" to="(sb.length()) &gt;= 0" />
    <mutant id="mutant_2293" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) &gt;= 2)" to="((context.modulus) &lt;= 2)" />
    <mutant id="mutant_84" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.makeString()" from="(sb.length()) &gt; 0" to="(sb.length()) == 0" />
    <mutant id="mutant_2294" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) &gt;= 2)" to="((context.modulus) == 2)" />
    <mutant id="mutant_87" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.makeString()" from="(sb.length()) &gt; 0" to="(sb.length()) &lt; 0" />
    <mutant id="mutant_2291" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) &gt;= 2)" to="true" />
    <mutant id="mutant_86" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.makeString()" from="(sb.length()) &gt; 0" to="(sb.length()) != 0" />
    <mutant id="mutant_2292" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) &gt;= 2)" to="false" />
    <mutant id="mutant_89" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.makeString()" from="(sb.length()) &gt; 0" to="true" />
    <mutant id="mutant_88" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.makeString()" from="(sb.length()) &gt; 0" to="(sb.length()) &lt;= 0" />
    <mutant id="mutant_2290" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) &gt;= 2)" to="((context.modulus) != 2)" />
    <mutant id="mutant_90" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.makeString()" from="(sb.length()) &gt; 0" to="false" />
    <mutant id="mutant_2288" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) &gt; 0" />
    <mutant id="mutant_2289" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) &gt;= 2)" to="((context.modulus) &lt; 2)" />
    <mutant id="mutant_92" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &lt; maxPhonemes" to="(newPhonemes.size()) &gt;= maxPhonemes" />
    <mutant id="mutant_2286" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) &lt;= 0" />
    <mutant id="mutant_91" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &lt; maxPhonemes" to="(newPhonemes.size()) == maxPhonemes" />
    <mutant id="mutant_2287" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) &gt;= 0" />
    <mutant id="mutant_94" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &lt; maxPhonemes" to="(newPhonemes.size()) &gt; maxPhonemes" />
    <mutant id="mutant_2284" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="false" />
    <mutant id="mutant_93" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &lt; maxPhonemes" to="(newPhonemes.size()) != maxPhonemes" />
    <mutant id="mutant_2285" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) != 0" />
    <mutant id="mutant_1" viable="false" in="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.String)" from="source == null" to="source &gt;= null" />
    <mutant id="mutant_682" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'a')" to="false" />
    <mutant id="mutant_0" viable="false" in="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.String)" from="source == null" to="source &lt;= null" />
    <mutant id="mutant_683" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'a')" to="(ch &lt;= 'a')" />
    <mutant id="mutant_3" viable="true" in="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.String)" from="source == null" to="false" />
    <mutant id="mutant_684" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'a')" to="(ch != 'a')" />
    <mutant id="mutant_2" viable="true" in="org.apache.commons.codec.language.bm.BeiderMorseEncoder.encode(java.lang.String)" from="source == null" to="true" />
    <mutant id="mutant_685" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'a')" to="(ch &gt; 'a')" />
    <mutant id="mutant_680" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'a')" to="(ch &gt;= 'a')" />
    <mutant id="mutant_681" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'a')" to="true" />
    <mutant id="mutant_697" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'i')" to="false" />
    <mutant id="mutant_698" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'i')" to="(ch &lt; 'i')" />
    <mutant id="mutant_699" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'i')" to="(ch &gt;= 'i')" />
    <mutant id="mutant_74" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="langIS == null" to="langIS &gt; null" />
    <mutant id="mutant_2282" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="(context.modulus) &lt; 0" />
    <mutant id="mutant_73" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="langIS == null" to="false" />
    <mutant id="mutant_2283" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.modulus) == 0" to="true" />
    <mutant id="mutant_76" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="langIS == null" to="langIS != null" />
    <mutant id="mutant_2280" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="false" />
    <mutant id="mutant_75" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="langIS == null" to="langIS &gt;= null" />
    <mutant id="mutant_2281" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result == 0" />
    <mutant id="mutant_78" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(line.length()) &gt; 0" to="(line.length()) != 0" />
    <mutant id="mutant_77" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(line.length()) &gt; 0" to="(line.length()) == 0" />
    <mutant id="mutant_79" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(line.length()) &gt; 0" to="(line.length()) &lt;= 0" />
    <mutant id="mutant_2279" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="true" />
    <mutant id="mutant_2277" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result &lt; 0" />
    <mutant id="mutant_2278" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result &gt; 0" />
    <mutant id="mutant_81" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(line.length()) &gt; 0" to="true" />
    <mutant id="mutant_2275" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result &lt;= 0" />
    <mutant id="mutant_80" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(line.length()) &gt; 0" to="(line.length()) &lt; 0" />
    <mutant id="mutant_2276" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="result &gt;= 0" to="result != 0" />
    <mutant id="mutant_83" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(line.length()) &gt; 0" to="(line.length()) &gt;= 0" />
    <mutant id="mutant_2273" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (this.decodeTable.length))" to="(b == (this.decodeTable.length))" />
    <mutant id="mutant_82" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(line.length()) &gt; 0" to="false" />
    <mutant id="mutant_2274" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (this.decodeTable.length))" to="(b &lt;= (this.decodeTable.length))" />
    <mutant id="mutant_693" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'i')" to="(ch &lt;= 'i')" />
    <mutant id="mutant_694" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'i')" to="(ch != 'i')" />
    <mutant id="mutant_695" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'i')" to="(ch &gt; 'i')" />
    <mutant id="mutant_696" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'i')" to="true" />
    <mutant id="mutant_690" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'e')" to="(ch != 'e')" />
    <mutant id="mutant_691" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'e')" to="(ch &gt;= 'e')" />
    <mutant id="mutant_692" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'e')" to="(ch &lt;= 'e')" />
    <mutant id="mutant_2271" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (this.decodeTable.length))" to="(b != (this.decodeTable.length))" />
    <mutant id="mutant_2272" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (this.decodeTable.length))" to="(b &gt;= (this.decodeTable.length))" />
    <mutant id="mutant_2270" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (this.decodeTable.length))" to="false" />
    <mutant id="mutant_2268" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (this.decodeTable.length))" to="(b &gt; (this.decodeTable.length))" />
    <mutant id="mutant_2269" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &lt; (this.decodeTable.length))" to="true" />
    <mutant id="mutant_3599" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="i &lt; (data.length)" to="i &gt; (data.length)" />
    <mutant id="mutant_2266" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="true" />
    <mutant id="mutant_3598" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="i &lt; (data.length)" to="i != (data.length)" />
    <mutant id="mutant_2267" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="false" />
    <mutant id="mutant_3597" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_2264" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b &gt; 0)" />
    <mutant id="mutant_3596" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_2265" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b == 0)" />
    <mutant id="mutant_3595" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="bytes == null" to="false" />
    <mutant id="mutant_2262" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b != 0)" />
    <mutant id="mutant_3594" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="bytes == null" to="true" />
    <mutant id="mutant_2263" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b &lt; 0)" />
    <mutant id="mutant_3593" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_96" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &lt; maxPhonemes" to="false" />
    <mutant id="mutant_2260" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b &lt;= (pad)" />
    <mutant id="mutant_3592" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_95" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &lt; maxPhonemes" to="true" />
    <mutant id="mutant_2261" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0)" to="(b &lt;= 0)" />
    <mutant id="mutant_3591" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_98" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &gt;= maxPhonemes" to="(newPhonemes.size()) == maxPhonemes" />
    <mutant id="mutant_3590" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b != (QCodec.UNDERSCORE)" to="false" />
    <mutant id="mutant_97" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &lt; maxPhonemes" to="(newPhonemes.size()) &lt;= maxPhonemes" />
    <mutant id="mutant_99" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &gt;= maxPhonemes" to="(newPhonemes.size()) != maxPhonemes" />
    <mutant id="mutant_2257" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="true" />
    <mutant id="mutant_3589" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b != (QCodec.UNDERSCORE)" to="true" />
    <mutant id="mutant_2258" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="false" />
    <mutant id="mutant_3588" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b != (QCodec.UNDERSCORE)" to="b &lt; (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2255" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b &gt; (pad)" />
    <mutant id="mutant_3587" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b != (QCodec.UNDERSCORE)" to="b &lt;= (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2256" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b &gt;= (pad)" />
    <mutant id="mutant_3586" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b != (QCodec.UNDERSCORE)" to="b &gt; (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2253" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i == inAvail" />
    <mutant id="mutant_3585" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b != (QCodec.UNDERSCORE)" to="b &gt;= (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2254" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b &lt; (pad)" />
    <mutant id="mutant_3584" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b != (QCodec.UNDERSCORE)" to="b == (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2251" viable="false" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="false" />
    <mutant id="mutant_3583" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="i &lt; (bytes.length)" to="i == (bytes.length)" />
    <mutant id="mutant_2252" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i != inAvail" />
    <mutant id="mutant_3582" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="i &lt; (bytes.length)" to="i &gt;= (bytes.length)" />
    <mutant id="mutant_2259" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b == (pad)" to="b != (pad)" />
    <mutant id="mutant_4010" viable="false" in="org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)" from="charset == null" to="charset &gt; null" />
    <mutant id="mutant_4007" viable="true" in="org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)" from="charset == null" to="false" />
    <mutant id="mutant_4006" viable="true" in="org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)" from="charset == null" to="true" />
    <mutant id="mutant_4005" viable="true" in="org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)" from="charset == null" to="charset != null" />
    <mutant id="mutant_4004" viable="false" in="org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)" from="charset == null" to="charset &lt;= null" />
    <mutant id="mutant_4003" viable="false" in="org.apache.commons.codec.Charsets.toCharset(java.lang.String)" from="charset == null" to="charset &lt; null" />
    <mutant id="mutant_4002" viable="false" in="org.apache.commons.codec.Charsets.toCharset(java.lang.String)" from="charset == null" to="charset &lt;= null" />
    <mutant id="mutant_4001" viable="true" in="org.apache.commons.codec.Charsets.toCharset(java.lang.String)" from="charset == null" to="charset != null" />
    <mutant id="mutant_4000" viable="true" in="org.apache.commons.codec.Charsets.toCharset(java.lang.String)" from="charset == null" to="false" />
    <mutant id="mutant_4009" viable="false" in="org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)" from="charset == null" to="charset &gt;= null" />
    <mutant id="mutant_4008" viable="false" in="org.apache.commons.codec.Charsets.toCharset(java.nio.charset.Charset)" from="charset == null" to="charset &lt; null" />
    <mutant id="mutant_2299" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail == 0" />
    <mutant id="mutant_2297" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &gt;= 0" />
    <mutant id="mutant_2298" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &gt; 0" />
    <mutant id="mutant_2295" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) &gt;= 2)" to="((context.modulus) &gt; 2)" />
    <mutant id="mutant_2296" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &lt;= 0" />
    <mutant id="mutant_27" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(line.length()) == 0" to="(line.length()) &gt;= 0" />
    <mutant id="mutant_26" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(line.length()) == 0" to="false" />
    <mutant id="mutant_29" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(parts.length) != 3" to="true" />
    <mutant id="mutant_28" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(parts.length) != 3" to="(parts.length) &lt; 3" />
    <mutant id="mutant_21" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(line.length()) == 0" to="(line.length()) &gt; 0" />
    <mutant id="mutant_20" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="cmtI &gt;= 0" to="cmtI &lt; 0" />
    <mutant id="mutant_23" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(line.length()) == 0" to="(line.length()) &lt;= 0" />
    <mutant id="mutant_22" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(line.length()) == 0" to="(line.length()) != 0" />
    <mutant id="mutant_25" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(line.length()) == 0" to="true" />
    <mutant id="mutant_24" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(line.length()) == 0" to="(line.length()) &lt; 0" />
    <mutant id="mutant_16" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="cmtI &gt;= 0" to="cmtI &lt;= 0" />
    <mutant id="mutant_15" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="cmtI &gt;= 0" to="cmtI == 0" />
    <mutant id="mutant_18" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="cmtI &gt;= 0" to="true" />
    <mutant id="mutant_17" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="cmtI &gt;= 0" to="cmtI != 0" />
    <mutant id="mutant_19" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="cmtI &gt;= 0" to="false" />
    <mutant id="mutant_10" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="lRulesIS == null" to="lRulesIS &lt; null" />
    <mutant id="mutant_12" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="lRulesIS == null" to="lRulesIS &lt;= null" />
    <mutant id="mutant_11" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="lRulesIS == null" to="lRulesIS &gt;= null" />
    <mutant id="mutant_14" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="cmtI &gt;= 0" to="cmtI &gt; 0" />
    <mutant id="mutant_13" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="lRulesIS == null" to="lRulesIS &gt; null" />
    <mutant id="mutant_49" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other &lt;= (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_48" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other &gt; (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_1838" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'E')" to="(c &gt;= 'E')" />
    <mutant id="mutant_1839" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'E')" to="true" />
    <mutant id="mutant_41" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.isSingleton()" from="(this.languages.size()) == 1" to="(this.languages.size()) &lt;= 1" />
    <mutant id="mutant_40" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.isSingleton()" from="(this.languages.size()) == 1" to="(this.languages.size()) != 1" />
    <mutant id="mutant_43" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other != (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_42" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other &lt; (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_45" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="true" />
    <mutant id="mutant_44" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other &lt;= (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_47" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other &gt;= (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_46" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="false" />
    <mutant id="mutant_50" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other &gt; (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_1836" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'E')" to="(c != 'E')" />
    <mutant id="mutant_1837" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'E')" to="(c &lt;= 'E')" />
    <mutant id="mutant_1834" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'E')" to="(c &lt; 'E')" />
    <mutant id="mutant_1835" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'E')" to="(c &gt; 'E')" />
    <mutant id="mutant_1832" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'A')" to="(c &lt;= 'A')" />
    <mutant id="mutant_1833" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'A')" to="(c &gt;= 'A')" />
    <mutant id="mutant_1830" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'A')" to="true" />
    <mutant id="mutant_1831" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'A')" to="false" />
    <mutant id="mutant_38" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.isSingleton()" from="(this.languages.size()) == 1" to="true" />
    <mutant id="mutant_37" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.isSingleton()" from="(this.languages.size()) == 1" to="(this.languages.size()) &lt; 1" />
    <mutant id="mutant_39" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.isSingleton()" from="(this.languages.size()) == 1" to="false" />
    <mutant id="mutant_1829" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'A')" to="(c &gt; 'A')" />
    <mutant id="mutant_1827" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'A')" to="(c != 'A')" />
    <mutant id="mutant_1828" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'A')" to="(c &lt; 'A')" />
    <mutant id="mutant_30" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(parts.length) != 3" to="false" />
    <mutant id="mutant_32" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(parts.length) != 3" to="(parts.length) == 3" />
    <mutant id="mutant_31" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(parts.length) != 3" to="(parts.length) &lt;= 3" />
    <mutant id="mutant_34" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(parts.length) != 3" to="(parts.length) &gt; 3" />
    <mutant id="mutant_33" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(parts.length) != 3" to="(parts.length) &gt;= 3" />
    <mutant id="mutant_36" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.isSingleton()" from="(this.languages.size()) == 1" to="(this.languages.size()) &gt; 1" />
    <mutant id="mutant_35" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.isSingleton()" from="(this.languages.size()) == 1" to="(this.languages.size()) &gt;= 1" />
    <mutant id="mutant_1825" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(code.length()) &gt; (getMaxCodeLen())" to="(code.length()) &gt;= (getMaxCodeLen())" />
    <mutant id="mutant_1826" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(code.length()) &gt; (getMaxCodeLen())" to="(code.length()) != (getMaxCodeLen())" />
    <mutant id="mutant_1823" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(code.length()) &gt; (getMaxCodeLen())" to="true" />
    <mutant id="mutant_1824" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(code.length()) &gt; (getMaxCodeLen())" to="false" />
    <mutant id="mutant_1821" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(code.length()) &gt; (getMaxCodeLen())" to="(code.length()) &lt; (getMaxCodeLen())" />
    <mutant id="mutant_1822" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(code.length()) &gt; (getMaxCodeLen())" to="(code.length()) == (getMaxCodeLen())" />
    <mutant id="mutant_1820" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(code.length()) &gt; (getMaxCodeLen())" to="(code.length()) &lt;= (getMaxCodeLen())" />
    <mutant id="mutant_1818" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n &gt; 0" to="n &lt;= 0" />
    <mutant id="mutant_1819" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n &gt; 0" to="n != 0" />
    <mutant id="mutant_1816" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n &gt; 0" to="false" />
    <mutant id="mutant_1817" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n &gt; 0" to="n &lt; 0" />
    <mutant id="mutant_63" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other &lt;= (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_62" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other &gt; (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_65" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other != (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_64" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other &gt; (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_67" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="false" />
    <mutant id="mutant_66" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="true" />
    <mutant id="mutant_69" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other &gt;= (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_68" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other &lt; (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_70" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="langIS == null" to="langIS &lt;= null" />
    <mutant id="mutant_72" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="langIS == null" to="true" />
    <mutant id="mutant_71" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="langIS == null" to="langIS &lt; null" />
    <mutant id="mutant_1814" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n &gt; 0" to="n == 0" />
    <mutant id="mutant_1815" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n &gt; 0" to="true" />
    <mutant id="mutant_1812" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="false" />
    <mutant id="mutant_1813" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n &gt; 0" to="n &gt;= 0" />
    <mutant id="mutant_1810" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) == 0)" />
    <mutant id="mutant_1811" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="true" />
    <mutant id="mutant_59" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="true" />
    <mutant id="mutant_1809" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt; 0)" />
    <mutant id="mutant_1807" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &lt;= 0)" />
    <mutant id="mutant_1808" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &lt; 0)" />
    <mutant id="mutant_1805" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n != 0)" />
    <mutant id="mutant_1806" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) != 0)" />
    <mutant id="mutant_52" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="true" />
    <mutant id="mutant_51" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other != (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_54" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other &lt; (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_53" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="false" />
    <mutant id="mutant_56" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other &lt; (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_55" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.merge(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.ANY_LANGUAGE)" to="other &gt;= (Languages.ANY_LANGUAGE)" />
    <mutant id="mutant_58" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other &lt;= (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_57" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other != (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_61" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="other &gt;= (Languages.NO_LANGUAGES)" />
    <mutant id="mutant_60" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.restrictTo(org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="other == (Languages.NO_LANGUAGES)" to="false" />
    <mutant id="mutant_1803" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n &lt; 0)" />
    <mutant id="mutant_1804" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n &lt;= 0)" />
    <mutant id="mutant_1801" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="true" />
    <mutant id="mutant_1802" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="false" />
    <mutant id="mutant_1800" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n == 0)" />
    <mutant id="mutant_1872" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'V')" to="(next != 'V')" />
    <mutant id="mutant_1873" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'V')" to="true" />
    <mutant id="mutant_1870" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'V')" to="(next &gt;= 'V')" />
    <mutant id="mutant_1871" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'V')" to="(next &lt; 'V')" />
    <mutant id="mutant_1878" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Q'" to="curr &gt; 'Q'" />
    <mutant id="mutant_1879" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Q'" to="true" />
    <mutant id="mutant_1876" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Q'" to="curr &lt; 'Q'" />
    <mutant id="mutant_1877" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Q'" to="curr != 'Q'" />
    <mutant id="mutant_1874" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'V')" to="false" />
    <mutant id="mutant_1875" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'V')" to="(next &gt; 'V')" />
    <mutant id="mutant_1861" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'U')" to="false" />
    <mutant id="mutant_1862" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E')" to="(curr &gt;= 'E')" />
    <mutant id="mutant_1860" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'U')" to="true" />
    <mutant id="mutant_1869" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(next == 'V')" to="(next &lt;= 'V')" />
    <mutant id="mutant_1867" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E')" to="(curr != 'E')" />
    <mutant id="mutant_1868" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E')" to="(curr &lt; 'E')" />
    <mutant id="mutant_1865" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E')" to="true" />
    <mutant id="mutant_1866" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E')" to="false" />
    <mutant id="mutant_1863" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E')" to="(curr &gt; 'E')" />
    <mutant id="mutant_1864" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E')" to="(curr &lt;= 'E')" />
    <mutant id="mutant_1850" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'O')" to="(c &lt; 'O')" />
    <mutant id="mutant_1851" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'O')" to="(c &gt; 'O')" />
    <mutant id="mutant_1858" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'U')" to="(c &lt;= 'U')" />
    <mutant id="mutant_1859" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'U')" to="(c &gt;= 'U')" />
    <mutant id="mutant_1856" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'U')" to="(c &gt; 'U')" />
    <mutant id="mutant_1857" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'U')" to="(c != 'U')" />
    <mutant id="mutant_1854" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'O')" to="(c &lt;= 'O')" />
    <mutant id="mutant_1855" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'U')" to="(c &lt; 'U')" />
    <mutant id="mutant_1852" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'O')" to="true" />
    <mutant id="mutant_1853" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'O')" to="false" />
    <mutant id="mutant_1849" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'O')" to="(c &gt;= 'O')" />
    <mutant id="mutant_1840" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'E')" to="false" />
    <mutant id="mutant_1847" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'I')" to="(c &gt; 'I')" />
    <mutant id="mutant_1848" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'O')" to="(c != 'O')" />
    <mutant id="mutant_1845" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'I')" to="false" />
    <mutant id="mutant_1846" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'I')" to="(c &lt; 'I')" />
    <mutant id="mutant_1843" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'I')" to="(c != 'I')" />
    <mutant id="mutant_1844" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'I')" to="true" />
    <mutant id="mutant_1841" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'I')" to="(c &lt;= 'I')" />
    <mutant id="mutant_1842" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(c == 'I')" to="(c &gt;= 'I')" />
    <mutant id="mutant_3611" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="(data[i]) == (QCodec.BLANK)" to="(data[i]) &gt;= (QCodec.BLANK)" />
    <mutant id="mutant_3610" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="(data[i]) == (QCodec.BLANK)" to="(data[i]) &lt;= (QCodec.BLANK)" />
    <mutant id="mutant_3619" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="obj == null" to="obj &lt;= null" />
    <mutant id="mutant_3618" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="obj == null" to="obj &gt;= null" />
    <mutant id="mutant_3617" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="obj == null" to="obj != null" />
    <mutant id="mutant_3616" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="obj == null" to="false" />
    <mutant id="mutant_3615" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="obj == null" to="true" />
    <mutant id="mutant_3614" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="obj == null" to="obj &gt; null" />
    <mutant id="mutant_3613" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="obj == null" to="obj &lt; null" />
    <mutant id="mutant_3612" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="obj == null" to="obj &lt;= null" />
    <mutant id="mutant_3609" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="(data[i]) == (QCodec.BLANK)" to="false" />
    <mutant id="mutant_3600" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="i &lt; (data.length)" to="true" />
    <mutant id="mutant_3608" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="(data[i]) == (QCodec.BLANK)" to="true" />
    <mutant id="mutant_3607" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="(data[i]) == (QCodec.BLANK)" to="(data[i]) &gt; (QCodec.BLANK)" />
    <mutant id="mutant_3606" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="(data[i]) == (QCodec.BLANK)" to="(data[i]) != (QCodec.BLANK)" />
    <mutant id="mutant_3605" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="(data[i]) == (QCodec.BLANK)" to="(data[i]) &lt; (QCodec.BLANK)" />
    <mutant id="mutant_3604" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="i &lt; (data.length)" to="i == (data.length)" />
    <mutant id="mutant_3603" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="i &lt; (data.length)" to="i &gt;= (data.length)" />
    <mutant id="mutant_3602" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="i &lt; (data.length)" to="i &lt;= (data.length)" />
    <mutant id="mutant_3601" viable="false" in="org.apache.commons.codec.net.QCodec.doEncoding(byte[])" from="i &lt; (data.length)" to="false" />
    <mutant id="mutant_1894" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'M'" to="curr &gt;= 'M'" />
    <mutant id="mutant_1895" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'M'" to="curr &gt; 'M'" />
    <mutant id="mutant_1892" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'M'" to="true" />
    <mutant id="mutant_1893" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'M'" to="false" />
    <mutant id="mutant_1890" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'M'" to="curr != 'M'" />
    <mutant id="mutant_1891" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'M'" to="curr &lt; 'M'" />
    <mutant id="mutant_1898" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'K'" to="curr &lt; 'K'" />
    <mutant id="mutant_1899" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'K'" to="true" />
    <mutant id="mutant_1896" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'M'" to="curr &lt;= 'M'" />
    <mutant id="mutant_1897" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'K'" to="curr &gt;= 'K'" />
    <mutant id="mutant_1883" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Z'" to="curr &gt;= 'Z'" />
    <mutant id="mutant_1884" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Z'" to="curr &gt; 'Z'" />
    <mutant id="mutant_1881" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Q'" to="curr &lt;= 'Q'" />
    <mutant id="mutant_1882" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Q'" to="curr &gt;= 'Q'" />
    <mutant id="mutant_1880" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Q'" to="false" />
    <mutant id="mutant_1889" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Z'" to="curr != 'Z'" />
    <mutant id="mutant_1887" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Z'" to="curr &lt; 'Z'" />
    <mutant id="mutant_1888" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Z'" to="curr &lt;= 'Z'" />
    <mutant id="mutant_1885" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Z'" to="true" />
    <mutant id="mutant_1886" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="curr == 'Z'" to="false" />
    <mutant id="mutant_602" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &gt; '8')" to="(code &lt;= '8')" />
    <mutant id="mutant_603" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &gt; '8')" to="true" />
    <mutant id="mutant_604" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &gt; '8')" to="false" />
    <mutant id="mutant_605" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &gt; '8')" to="(code != '8')" />
    <mutant id="mutant_600" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &lt; '0')" to="(code &lt;= '0')" />
    <mutant id="mutant_601" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &lt; '0')" to="(code &gt; '0')" />
    <mutant id="mutant_606" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &gt; '8')" to="(code == '8')" />
    <mutant id="mutant_607" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &gt; '8')" to="(code &lt; '8')" />
    <mutant id="mutant_608" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code &gt; '8')" to="(code &gt;= '8')" />
    <mutant id="mutant_609" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="index &lt; (chrs.length)" to="index &gt;= (chrs.length)" />
    <mutant id="mutant_2323" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &lt;= 0)" />
    <mutant id="mutant_3655" viable="false" in="?" from="i &lt;= 60" to="i == 60" />
    <mutant id="mutant_2324" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) &lt;= 0)" />
    <mutant id="mutant_3654" viable="false" in="?" from="i &lt;= 60" to="i != 60" />
    <mutant id="mutant_2321" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &lt; 0)" />
    <mutant id="mutant_3653" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_2322" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) != 0)" />
    <mutant id="mutant_3652" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_3651" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_2320" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &gt;= 0)" />
    <mutant id="mutant_3650" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_2329" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="false" />
    <mutant id="mutant_2327" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) &lt; 0)" />
    <mutant id="mutant_3659" viable="false" in="?" from="i &lt;= 60" to="false" />
    <mutant id="mutant_2328" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="true" />
    <mutant id="mutant_3658" viable="false" in="?" from="i &lt;= 60" to="true" />
    <mutant id="mutant_2325" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) == 0)" />
    <mutant id="mutant_3657" viable="false" in="?" from="i &lt;= 60" to="i &lt; 60" />
    <mutant id="mutant_2326" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) != 0)" />
    <mutant id="mutant_3656" viable="false" in="?" from="i &lt;= 60" to="i &gt; 60" />
    <mutant id="mutant_613" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="index &lt; (chrs.length)" to="true" />
    <mutant id="mutant_614" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="index &lt; (chrs.length)" to="false" />
    <mutant id="mutant_615" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="index &lt; (chrs.length)" to="index &gt; (chrs.length)" />
    <mutant id="mutant_616" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) &gt; 'Z'" to="(chrs[index]) != 'Z'" />
    <mutant id="mutant_610" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="index &lt; (chrs.length)" to="index == (chrs.length)" />
    <mutant id="mutant_611" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="index &lt; (chrs.length)" to="index != (chrs.length)" />
    <mutant id="mutant_612" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="index &lt; (chrs.length)" to="index &lt;= (chrs.length)" />
    <mutant id="mutant_617" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) &gt; 'Z'" to="(chrs[index]) == 'Z'" />
    <mutant id="mutant_618" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) &gt; 'Z'" to="(chrs[index]) &lt;= 'Z'" />
    <mutant id="mutant_619" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) &gt; 'Z'" to="true" />
    <mutant id="mutant_2312" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) &gt;= 0)" />
    <mutant id="mutant_3644" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_2313" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) &gt; 0)" />
    <mutant id="mutant_3643" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_2310" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="true" />
    <mutant id="mutant_3642" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_2311" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="false" />
    <mutant id="mutant_3641" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_3640" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_2318" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="true" />
    <mutant id="mutant_2319" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="false" />
    <mutant id="mutant_3649" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="false" />
    <mutant id="mutant_2316" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) &lt;= 0)" />
    <mutant id="mutant_3648" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="true" />
    <mutant id="mutant_2317" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) == 0)" />
    <mutant id="mutant_3647" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.nio.charset.Charset)" from="str == null" to="str != null" />
    <mutant id="mutant_2314" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) &lt; 0)" />
    <mutant id="mutant_3646" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_2315" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) == 0)" to="((lineLength) != 0)" />
    <mutant id="mutant_3645" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String,java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_624" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) == (element[0])" to="false" />
    <mutant id="mutant_625" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) == (element[0])" to="(chrs[index]) &gt; (element[0])" />
    <mutant id="mutant_626" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) == (element[0])" to="(chrs[index]) &lt;= (element[0])" />
    <mutant id="mutant_627" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) == (element[0])" to="(chrs[index]) &lt; (element[0])" />
    <mutant id="mutant_620" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) &gt; 'Z'" to="false" />
    <mutant id="mutant_621" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) &gt; 'Z'" to="(chrs[index]) &gt;= 'Z'" />
    <mutant id="mutant_622" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) &gt; 'Z'" to="(chrs[index]) &lt; 'Z'" />
    <mutant id="mutant_623" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) == (element[0])" to="true" />
    <mutant id="mutant_628" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) == (element[0])" to="(chrs[index]) &gt;= (element[0])" />
    <mutant id="mutant_629" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.preprocess(java.lang.String)" from="(chrs[index]) == (element[0])" to="(chrs[index]) != (element[0])" />
    <mutant id="mutant_2301" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="false" />
    <mutant id="mutant_3633" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_2302" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail != 0" />
    <mutant id="mutant_3632" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_3631" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_2300" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="true" />
    <mutant id="mutant_3630" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_2309" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 &lt;= (context.modulus))" />
    <mutant id="mutant_2307" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 != (context.modulus))" />
    <mutant id="mutant_3639" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_2308" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 &gt;= (context.modulus))" />
    <mutant id="mutant_3638" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_2305" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="true" />
    <mutant id="mutant_3637" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_2306" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="false" />
    <mutant id="mutant_3636" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_2303" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 &gt; (context.modulus))" />
    <mutant id="mutant_3635" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_2304" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus))" to="(0 &lt; (context.modulus))" />
    <mutant id="mutant_3634" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_635" viable="false" in="?" from="rulesIS == null" to="true" />
    <mutant id="mutant_636" viable="false" in="?" from="rulesIS == null" to="false" />
    <mutant id="mutant_637" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.equals(java.lang.Object)" from="(this) == other" to="(this) &gt;= other" />
    <mutant id="mutant_638" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.equals(java.lang.Object)" from="(this) == other" to="(this) != other" />
    <mutant id="mutant_631" viable="false" in="?" from="rulesIS == null" to="rulesIS &gt; null" />
    <mutant id="mutant_632" viable="false" in="?" from="rulesIS == null" to="rulesIS &lt;= null" />
    <mutant id="mutant_633" viable="false" in="?" from="rulesIS == null" to="rulesIS &gt;= null" />
    <mutant id="mutant_634" viable="false" in="?" from="rulesIS == null" to="rulesIS != null" />
    <mutant id="mutant_639" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.equals(java.lang.Object)" from="(this) == other" to="(this) &lt;= other" />
    <mutant id="mutant_3622" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="obj == null" to="true" />
    <mutant id="mutant_3621" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="obj == null" to="obj &gt; null" />
    <mutant id="mutant_3620" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="obj == null" to="obj &lt; null" />
    <mutant id="mutant_3629" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_3628" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_630" viable="false" in="?" from="rulesIS == null" to="rulesIS &lt; null" />
    <mutant id="mutant_3627" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_3626" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_3625" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="obj == null" to="obj &gt;= null" />
    <mutant id="mutant_3624" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="obj == null" to="obj != null" />
    <mutant id="mutant_3623" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="obj == null" to="false" />
    <mutant id="mutant_646" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.toString()" from="(cachedString) == null" to="(cachedString) != null" />
    <mutant id="mutant_647" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.toString()" from="(cachedString) == null" to="true" />
    <mutant id="mutant_648" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.toString()" from="(cachedString) == null" to="false" />
    <mutant id="mutant_649" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.toString()" from="(cachedString) == null" to="(cachedString) &gt; null" />
    <mutant id="mutant_642" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.equals(java.lang.Object)" from="(this) == other" to="(this) &gt; other" />
    <mutant id="mutant_643" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.equals(java.lang.Object)" from="(this) == other" to="(this) &lt; other" />
    <mutant id="mutant_644" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.toString()" from="(cachedString) == null" to="(cachedString) &lt;= null" />
    <mutant id="mutant_645" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.toString()" from="(cachedString) == null" to="(cachedString) &gt;= null" />
    <mutant id="mutant_2370" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator == null" to="true" />
    <mutant id="mutant_1040" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 0)) == 'M')" to="false" />
    <mutant id="mutant_2371" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator == null" to="false" />
    <mutant id="mutant_1036" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 0)) == 'M')" to="((charAt(value, 0)) &gt;= 'M')" />
    <mutant id="mutant_2367" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator == null" to="lineSeparator &lt; null" />
    <mutant id="mutant_3699" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="b == (QuotedPrintableCodec.ESCAPE_CHAR)" to="true" />
    <mutant id="mutant_1037" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 0)) == 'M')" to="((charAt(value, 0)) != 'M')" />
    <mutant id="mutant_2368" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator == null" to="lineSeparator &gt; null" />
    <mutant id="mutant_3698" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="b == (QuotedPrintableCodec.ESCAPE_CHAR)" to="b &lt;= (QuotedPrintableCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_1034" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index &gt;= 1)" />
    <mutant id="mutant_2365" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) &lt; (context.currentLinePos))" />
    <mutant id="mutant_3697" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="b == (QuotedPrintableCodec.ESCAPE_CHAR)" to="b &gt;= (QuotedPrintableCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_1035" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index &lt;= 1)" />
    <mutant id="mutant_2366" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator == null" to="lineSeparator &gt;= null" />
    <mutant id="mutant_3696" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="b == (QuotedPrintableCodec.ESCAPE_CHAR)" to="b &lt; (QuotedPrintableCodec.ESCAPE_CHAR)" />
    <mutant id="mutant_1032" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="true" />
    <mutant id="mutant_2363" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="false" />
    <mutant id="mutant_3695" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="i &lt; (bytes.length)" to="i == (bytes.length)" />
    <mutant id="mutant_1033" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="false" />
    <mutant id="mutant_2364" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) &gt; (context.currentLinePos))" />
    <mutant id="mutant_3694" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="i &lt; (bytes.length)" to="i &gt;= (bytes.length)" />
    <mutant id="mutant_1030" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index &lt; 1)" />
    <mutant id="mutant_2361" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) &gt;= (context.currentLinePos))" />
    <mutant id="mutant_3693" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="i &lt; (bytes.length)" to="i &lt;= (bytes.length)" />
    <mutant id="mutant_1031" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index &gt; 1)" />
    <mutant id="mutant_2362" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="true" />
    <mutant id="mutant_3692" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="i &lt; (bytes.length)" to="false" />
    <mutant id="mutant_640" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.equals(java.lang.Object)" from="(this) == other" to="true" />
    <mutant id="mutant_641" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.equals(java.lang.Object)" from="(this) == other" to="false" />
    <mutant id="mutant_1038" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 0)) == 'M')" to="((charAt(value, 0)) &gt; 'M')" />
    <mutant id="mutant_2369" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="lineSeparator == null" to="lineSeparator &lt;= null" />
    <mutant id="mutant_1039" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((charAt(value, 0)) == 'M')" to="true" />
    <mutant id="mutant_657" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.finish()" from="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_658" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((lastReplacement) == null)" to="((lastReplacement) != null)" />
    <mutant id="mutant_659" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((lastReplacement) == null)" to="((lastReplacement) &lt;= null)" />
    <mutant id="mutant_653" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.finish()" from="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="true" />
    <mutant id="mutant_654" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.finish()" from="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="false" />
    <mutant id="mutant_655" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.finish()" from="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) != (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_656" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.finish()" from="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) &gt;= (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_3691" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="i &lt; (bytes.length)" to="true" />
    <mutant id="mutant_2360" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) != (context.currentLinePos))" />
    <mutant id="mutant_3690" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="i &lt; (bytes.length)" to="i &gt; (bytes.length)" />
    <mutant id="mutant_1025" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2356" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &lt; 0)" />
    <mutant id="mutant_3688" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_1026" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2357" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) != 0)" />
    <mutant id="mutant_3687" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_1023" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="true" />
    <mutant id="mutant_2354" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="false" />
    <mutant id="mutant_3686" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="bytes == null" to="false" />
    <mutant id="mutant_1024" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="false" />
    <mutant id="mutant_2355" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &gt;= 0)" />
    <mutant id="mutant_3685" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="bytes == null" to="true" />
    <mutant id="mutant_1021" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &lt;= 0" />
    <mutant id="mutant_2352" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) == 0)" />
    <mutant id="mutant_3684" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_1022" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_2353" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="true" />
    <mutant id="mutant_3683" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_2350" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 &gt;= (context.modulus)" />
    <mutant id="mutant_3682" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_1020" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &lt; 0" />
    <mutant id="mutant_2351" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 &lt;= (context.modulus)" />
    <mutant id="mutant_3681" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.TAB))" to="(b &lt; (QuotedPrintableCodec.TAB))" />
    <mutant id="mutant_650" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.toString()" from="(cachedString) == null" to="(cachedString) &lt; null" />
    <mutant id="mutant_651" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.finish()" from="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) == (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_652" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.finish()" from="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) &lt;= (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_1029" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 1)" to="(index != 1)" />
    <mutant id="mutant_1027" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2358" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0)" to="((lineLength) &lt;= 0)" />
    <mutant id="mutant_1028" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2359" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) == (context.currentLinePos))" />
    <mutant id="mutant_3689" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="i &lt; (bytes.length)" to="i != (bytes.length)" />
    <mutant id="mutant_668" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="false" />
    <mutant id="mutant_669" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="((builder.length()) != (DaitchMokotoffSoundex.MAX_LENGTH))" />
    <mutant id="mutant_664" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((lastReplacement) == null)" to="((lastReplacement) &gt;= null)" />
    <mutant id="mutant_665" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="((builder.length()) == (DaitchMokotoffSoundex.MAX_LENGTH))" />
    <mutant id="mutant_666" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="((builder.length()) &lt;= (DaitchMokotoffSoundex.MAX_LENGTH))" />
    <mutant id="mutant_667" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="true" />
    <mutant id="mutant_3680" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.TAB))" to="(b &gt;= (QuotedPrintableCodec.TAB))" />
    <mutant id="mutant_1014" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &gt;= (value.length()))" to="(index &gt; (value.length()))" />
    <mutant id="mutant_2345" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 &gt; (context.modulus)" />
    <mutant id="mutant_3677" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.TAB))" to="(b &gt; (QuotedPrintableCodec.TAB))" />
    <mutant id="mutant_1015" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index != 0" />
    <mutant id="mutant_2346" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 &lt; (context.modulus)" />
    <mutant id="mutant_3676" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.TAB))" to="false" />
    <mutant id="mutant_1012" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &gt;= (value.length()))" to="false" />
    <mutant id="mutant_2343" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b &gt;= 0" />
    <mutant id="mutant_3675" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.TAB))" to="true" />
    <mutant id="mutant_1013" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &gt;= (value.length()))" to="(index &lt; (value.length()))" />
    <mutant id="mutant_2344" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b &lt;= 0" />
    <mutant id="mutant_3674" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE))" to="(b &gt;= (QuotedPrintableCodec.SPACE))" />
    <mutant id="mutant_1010" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &gt;= (value.length()))" to="(index == (value.length()))" />
    <mutant id="mutant_2341" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="false" />
    <mutant id="mutant_3673" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE))" to="(b &gt; (QuotedPrintableCodec.SPACE))" />
    <mutant id="mutant_1011" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &gt;= (value.length()))" to="true" />
    <mutant id="mutant_2342" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b &gt; 0" />
    <mutant id="mutant_3672" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE))" to="false" />
    <mutant id="mutant_3671" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE))" to="true" />
    <mutant id="mutant_2340" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="true" />
    <mutant id="mutant_3670" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE))" to="(b &lt; (QuotedPrintableCodec.SPACE))" />
    <mutant id="mutant_660" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((lastReplacement) == null)" to="((lastReplacement) &lt; null)" />
    <mutant id="mutant_661" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((lastReplacement) == null)" to="true" />
    <mutant id="mutant_662" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((lastReplacement) == null)" to="false" />
    <mutant id="mutant_663" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((lastReplacement) == null)" to="((lastReplacement) &gt; null)" />
    <mutant id="mutant_1018" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &gt; 0" />
    <mutant id="mutant_2349" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="0 != (context.modulus)" />
    <mutant id="mutant_1019" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="index &gt;= 0" />
    <mutant id="mutant_1016" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="true" />
    <mutant id="mutant_2347" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="true" />
    <mutant id="mutant_3679" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.TAB))" to="(b != (QuotedPrintableCodec.TAB))" />
    <mutant id="mutant_1017" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index == 0" to="false" />
    <mutant id="mutant_2348" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="0 == (context.modulus)" to="false" />
    <mutant id="mutant_3678" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.TAB))" to="(b &lt;= (QuotedPrintableCodec.TAB))" />
    <mutant id="mutant_679" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(ch == 'a')" to="(ch &lt; 'a')" />
    <mutant id="mutant_675" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="true" />
    <mutant id="mutant_676" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="false" />
    <mutant id="mutant_677" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) != (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_678" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) &gt;= (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_1003" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0)" to="true" />
    <mutant id="mutant_2334" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="true" />
    <mutant id="mutant_3666" viable="false" in="?" from="i &lt;= 126" to="false" />
    <mutant id="mutant_1004" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0)" to="false" />
    <mutant id="mutant_2335" viable="false" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="false" />
    <mutant id="mutant_3665" viable="false" in="?" from="i &lt;= 126" to="true" />
    <mutant id="mutant_1001" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0)" to="(index != 0)" />
    <mutant id="mutant_2332" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &lt;= inAvail" />
    <mutant id="mutant_3664" viable="false" in="?" from="i &lt;= 126" to="i != 126" />
    <mutant id="mutant_1002" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0)" to="(index == 0)" />
    <mutant id="mutant_2333" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &gt;= inAvail" />
    <mutant id="mutant_3663" viable="false" in="?" from="i &lt;= 126" to="i == 126" />
    <mutant id="mutant_2330" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.currentLinePos) &gt; 0)" to="((context.currentLinePos) &gt;= 0)" />
    <mutant id="mutant_3662" viable="false" in="?" from="i &lt;= 126" to="i &gt; 126" />
    <mutant id="mutant_1000" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" from="(DoubleMetaphone.VOWELS.indexOf(ch)) != (-1)" to="(DoubleMetaphone.VOWELS.indexOf(ch)) == (-1)" />
    <mutant id="mutant_2331" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &gt; inAvail" />
    <mutant id="mutant_3661" viable="false" in="?" from="i &lt;= 126" to="i &gt;= 126" />
    <mutant id="mutant_3660" viable="false" in="?" from="i &lt;= 60" to="i &gt;= 60" />
    <mutant id="mutant_671" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="((builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH))" />
    <mutant id="mutant_672" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) == (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_673" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) &lt;= (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_1009" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &gt;= (value.length()))" to="(index != (value.length()))" />
    <mutant id="mutant_674" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(builder.length()) &gt; (DaitchMokotoffSoundex.MAX_LENGTH)" to="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_1007" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2338" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b != 0" />
    <mutant id="mutant_1008" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &gt;= (value.length()))" to="(index &lt;= (value.length()))" />
    <mutant id="mutant_2339" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="b &lt; 0" to="b == 0" />
    <mutant id="mutant_3669" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE))" to="(b &lt;= (QuotedPrintableCodec.SPACE))" />
    <mutant id="mutant_1005" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2336" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i != inAvail" />
    <mutant id="mutant_3668" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE))" to="(b != (QuotedPrintableCodec.SPACE))" />
    <mutant id="mutant_670" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="((builder.length()) &gt;= (DaitchMokotoffSoundex.MAX_LENGTH))" />
    <mutant id="mutant_1006" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2337" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i == inAvail" />
    <mutant id="mutant_3667" viable="false" in="?" from="i &lt;= 126" to="i &lt; 126" />
    <mutant id="mutant_2172" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null)" to="false" />
    <mutant id="mutant_2173" viable="false" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null)" to="(str &gt; null)" />
    <mutant id="mutant_2170" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null)" to="(str != null)" />
    <mutant id="mutant_2171" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null)" to="true" />
    <mutant id="mutant_2169" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1.charAt(i)) == (es2.charAt(i))" to="(es1.charAt(i)) &gt;= (es2.charAt(i))" />
    <mutant id="mutant_2167" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1.charAt(i)) == (es2.charAt(i))" to="(es1.charAt(i)) &lt; (es2.charAt(i))" />
    <mutant id="mutant_3499" viable="false" in="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_2168" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1.charAt(i)) == (es2.charAt(i))" to="(es1.charAt(i)) != (es2.charAt(i))" />
    <mutant id="mutant_3498" viable="false" in="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_2165" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1.charAt(i)) == (es2.charAt(i))" to="true" />
    <mutant id="mutant_3497" viable="false" in="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" from="bytes == null" to="false" />
    <mutant id="mutant_2166" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1.charAt(i)) == (es2.charAt(i))" to="false" />
    <mutant id="mutant_3496" viable="false" in="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" from="bytes == null" to="true" />
    <mutant id="mutant_2163" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1.charAt(i)) == (es2.charAt(i))" to="(es1.charAt(i)) &lt;= (es2.charAt(i))" />
    <mutant id="mutant_3495" viable="false" in="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_2164" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1.charAt(i)) == (es2.charAt(i))" to="(es1.charAt(i)) &gt; (es2.charAt(i))" />
    <mutant id="mutant_3494" viable="false" in="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_2161" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="i &lt; lengthToMatch" to="i &gt; lengthToMatch" />
    <mutant id="mutant_3493" viable="false" in="org.apache.commons.codec.net.BCodec.doEncoding(byte[])" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_2162" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="i &lt; lengthToMatch" to="i &lt;= lengthToMatch" />
    <mutant id="mutant_3492" viable="false" in="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_3491" viable="false" in="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_2160" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="i &lt; lengthToMatch" to="false" />
    <mutant id="mutant_3490" viable="false" in="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" from="bytes == null" to="false" />
    <mutant id="mutant_2158" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="i &lt; lengthToMatch" to="i &gt;= lengthToMatch" />
    <mutant id="mutant_2159" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="i &lt; lengthToMatch" to="true" />
    <mutant id="mutant_3489" viable="false" in="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" from="bytes == null" to="true" />
    <mutant id="mutant_2156" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="i &lt; lengthToMatch" to="i == lengthToMatch" />
    <mutant id="mutant_3488" viable="false" in="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_2157" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="i &lt; lengthToMatch" to="i != lengthToMatch" />
    <mutant id="mutant_3487" viable="false" in="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_2154" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es2 == null)" to="false" />
    <mutant id="mutant_3486" viable="false" in="org.apache.commons.codec.net.BCodec.doDecoding(byte[])" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_2155" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es2 == null)" to="(es2 &gt;= null)" />
    <mutant id="mutant_3485" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="u == 0" to="u &gt; 0" />
    <mutant id="mutant_2152" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es2 == null)" to="(es2 &gt; null)" />
    <mutant id="mutant_3484" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="u == 0" to="u &gt;= 0" />
    <mutant id="mutant_2153" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es2 == null)" to="true" />
    <mutant id="mutant_3483" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="u == 0" to="false" />
    <mutant id="mutant_107" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)" from="finalRules == null" to="true" />
    <mutant id="mutant_108" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)" from="finalRules == null" to="false" />
    <mutant id="mutant_109" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)" from="finalRules == null" to="finalRules &gt;= null" />
    <mutant id="mutant_103" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &gt;= maxPhonemes" to="(newPhonemes.size()) &lt; maxPhonemes" />
    <mutant id="mutant_104" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &gt;= maxPhonemes" to="(newPhonemes.size()) &lt;= maxPhonemes" />
    <mutant id="mutant_105" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)" from="finalRules == null" to="finalRules != null" />
    <mutant id="mutant_106" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)" from="finalRules == null" to="finalRules &lt; null" />
    <mutant id="mutant_2150" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es2 == null)" to="(es2 &lt;= null)" />
    <mutant id="mutant_3482" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="u == 0" to="true" />
    <mutant id="mutant_2151" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es2 == null)" to="(es2 &lt; null)" />
    <mutant id="mutant_3481" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="u == 0" to="u &lt;= 0" />
    <mutant id="mutant_3480" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="u == 0" to="u != 0" />
    <mutant id="mutant_2147" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null)" to="(es1 != null)" />
    <mutant id="mutant_3479" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="u == 0" to="u &lt; 0" />
    <mutant id="mutant_2148" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null)" to="(es1 &lt;= null)" />
    <mutant id="mutant_3478" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((b[y]) &amp; u) != 0" to="((b[y]) &amp; u) &lt; 0" />
    <mutant id="mutant_2145" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null)" to="true" />
    <mutant id="mutant_3477" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((b[y]) &amp; u) != 0" to="false" />
    <mutant id="mutant_2146" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null)" to="false" />
    <mutant id="mutant_3476" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((b[y]) &amp; u) != 0" to="true" />
    <mutant id="mutant_2143" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null)" to="(es1 &gt; null)" />
    <mutant id="mutant_3475" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((b[y]) &amp; u) != 0" to="((b[y]) &amp; u) == 0" />
    <mutant id="mutant_2144" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null)" to="(es1 &gt;= null)" />
    <mutant id="mutant_3474" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((b[y]) &amp; u) != 0" to="((b[y]) &amp; u) &lt;= 0" />
    <mutant id="mutant_2141" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != last)" to="(mapped == last)" />
    <mutant id="mutant_3473" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((b[y]) &amp; u) != 0" to="((b[y]) &amp; u) &gt; 0" />
    <mutant id="mutant_2142" viable="false" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null)" to="(es1 &lt; null)" />
    <mutant id="mutant_3472" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((b[y]) &amp; u) != 0" to="((b[y]) &amp; u) &gt;= 0" />
    <mutant id="mutant_100" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &gt;= maxPhonemes" to="(newPhonemes.size()) &gt; maxPhonemes" />
    <mutant id="mutant_101" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &gt;= maxPhonemes" to="true" />
    <mutant id="mutant_102" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder.apply(org.apache.commons.codec.language.bm.Rule$PhonemeExpr,int)" from="(newPhonemes.size()) &gt;= maxPhonemes" to="false" />
    <mutant id="mutant_2149" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es2 == null)" to="(es2 != null)" />
    <mutant id="mutant_118" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="rules != null" to="false" />
    <mutant id="mutant_119" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="ruleType == (RuleType.RULES)" to="ruleType &lt;= (RuleType.RULES)" />
    <mutant id="mutant_114" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="rules != null" to="rules &gt;= null" />
    <mutant id="mutant_115" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="rules != null" to="rules &lt;= null" />
    <mutant id="mutant_116" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="rules != null" to="rules &gt; null" />
    <mutant id="mutant_117" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="rules != null" to="true" />
    <mutant id="mutant_3471" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="j &lt; 6" to="j &gt; 6" />
    <mutant id="mutant_2140" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != last)" to="false" />
    <mutant id="mutant_3470" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="j &lt; 6" to="j == 6" />
    <mutant id="mutant_2136" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != last)" to="(mapped &lt; last)" />
    <mutant id="mutant_3468" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="j &lt; 6" to="j != 6" />
    <mutant id="mutant_2137" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != last)" to="(mapped &gt;= last)" />
    <mutant id="mutant_3467" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="j &lt; 6" to="false" />
    <mutant id="mutant_2134" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#')" to="(mapped &gt;= '#')" />
    <mutant id="mutant_3466" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="j &lt; 6" to="true" />
    <mutant id="mutant_2135" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != last)" to="(mapped &lt;= last)" />
    <mutant id="mutant_3465" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="j &lt; 6" to="j &gt;= 6" />
    <mutant id="mutant_2132" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#')" to="false" />
    <mutant id="mutant_3464" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; 13" to="i &gt; 13" />
    <mutant id="mutant_2133" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#')" to="(mapped &lt; '#')" />
    <mutant id="mutant_3463" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; 13" to="i == 13" />
    <mutant id="mutant_2130" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#')" to="(mapped &gt; '#')" />
    <mutant id="mutant_3462" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; 13" to="i != 13" />
    <mutant id="mutant_2131" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#')" to="true" />
    <mutant id="mutant_3461" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; 13" to="false" />
    <mutant id="mutant_110" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)" from="finalRules == null" to="finalRules &lt;= null" />
    <mutant id="mutant_111" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication(java.util.Map,java.lang.CharSequence,org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,int,int)" from="finalRules == null" to="finalRules &gt; null" />
    <mutant id="mutant_112" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="rules != null" to="rules == null" />
    <mutant id="mutant_113" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="rules != null" to="rules &lt; null" />
    <mutant id="mutant_2138" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != last)" to="(mapped &gt; last)" />
    <mutant id="mutant_2139" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != last)" to="true" />
    <mutant id="mutant_3469" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="j &lt; 6" to="j &lt;= 6" />
    <mutant id="mutant_129" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(this.nameType) == (NameType.GENERIC)" to="(this.nameType) &lt;= (NameType.GENERIC)" />
    <mutant id="mutant_125" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="ruleType == (RuleType.RULES)" to="ruleType &gt;= (RuleType.RULES)" />
    <mutant id="mutant_126" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(this.nameType) == (NameType.GENERIC)" to="(this.nameType) != (NameType.GENERIC)" />
    <mutant id="mutant_127" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(this.nameType) == (NameType.GENERIC)" to="true" />
    <mutant id="mutant_128" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(this.nameType) == (NameType.GENERIC)" to="false" />
    <mutant id="mutant_121" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="ruleType == (RuleType.RULES)" to="true" />
    <mutant id="mutant_122" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="ruleType == (RuleType.RULES)" to="false" />
    <mutant id="mutant_123" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="ruleType == (RuleType.RULES)" to="ruleType &lt; (RuleType.RULES)" />
    <mutant id="mutant_124" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="ruleType == (RuleType.RULES)" to="ruleType != (RuleType.RULES)" />
    <mutant id="mutant_120" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="ruleType == (RuleType.RULES)" to="ruleType &gt; (RuleType.RULES)" />
    <mutant id="mutant_136" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2)" to="((input.length()) &lt; 2)" />
    <mutant id="mutant_137" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2)" to="true" />
    <mutant id="mutant_138" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2)" to="false" />
    <mutant id="mutant_139" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2)" to="((input.length()) != 2)" />
    <mutant id="mutant_2198" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator &gt;= null" />
    <mutant id="mutant_2199" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator &lt; null" />
    <mutant id="mutant_2196" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="count == len" to="count &lt; len" />
    <mutant id="mutant_2197" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="count == len" to="count &lt;= len" />
    <mutant id="mutant_132" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(this.nameType) == (NameType.GENERIC)" to="(this.nameType) &gt; (NameType.GENERIC)" />
    <mutant id="mutant_133" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2)" to="((input.length()) &gt; 2)" />
    <mutant id="mutant_134" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2)" to="((input.length()) == 2)" />
    <mutant id="mutant_135" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2)" to="((input.length()) &lt;= 2)" />
    <mutant id="mutant_130" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(this.nameType) == (NameType.GENERIC)" to="(this.nameType) &lt; (NameType.GENERIC)" />
    <mutant id="mutant_131" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(this.nameType) == (NameType.GENERIC)" to="(this.nameType) &gt;= (NameType.GENERIC)" />
    <mutant id="mutant_147" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="i &lt; (input.length())" to="i &lt;= (input.length())" />
    <mutant id="mutant_148" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="i &lt; (input.length())" to="i == (input.length())" />
    <mutant id="mutant_149" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="i &lt; (input.length())" to="i != (input.length())" />
    <mutant id="mutant_2194" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="count == len" to="true" />
    <mutant id="mutant_2195" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="count == len" to="false" />
    <mutant id="mutant_2192" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="count == len" to="count &gt;= len" />
    <mutant id="mutant_2193" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="count == len" to="count &gt; len" />
    <mutant id="mutant_2190" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="i &lt; len" to="i != len" />
    <mutant id="mutant_2191" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="count == len" to="count != len" />
    <mutant id="mutant_2189" viable="false" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="i &lt; len" to="false" />
    <mutant id="mutant_2187" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="i &lt; len" to="i &gt;= len" />
    <mutant id="mutant_2188" viable="false" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="i &lt; len" to="true" />
    <mutant id="mutant_2185" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="i &lt; len" to="i &lt;= len" />
    <mutant id="mutant_2186" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="i &lt; len" to="i &gt; len" />
    <mutant id="mutant_143" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(words2.size()) == 1" to="(words2.size()) != 1" />
    <mutant id="mutant_144" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(words2.size()) == 1" to="true" />
    <mutant id="mutant_145" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(words2.size()) == 1" to="false" />
    <mutant id="mutant_146" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(words2.size()) == 1" to="(words2.size()) &lt; 1" />
    <mutant id="mutant_140" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(words2.size()) == 1" to="(words2.size()) &gt; 1" />
    <mutant id="mutant_141" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(words2.size()) == 1" to="(words2.size()) &gt;= 1" />
    <mutant id="mutant_142" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(words2.size()) == 1" to="(words2.size()) &lt;= 1" />
    <mutant id="mutant_158" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="finalRules == null" to="finalRules &gt;= null" />
    <mutant id="mutant_159" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="finalRules == null" to="finalRules &lt;= null" />
    <mutant id="mutant_2183" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="((str.length()) == 0)" to="((str.length()) &gt;= 0)" />
    <mutant id="mutant_2184" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="i &lt; len" to="i == len" />
    <mutant id="mutant_2181" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="((str.length()) == 0)" to="true" />
    <mutant id="mutant_2182" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="((str.length()) == 0)" to="false" />
    <mutant id="mutant_2180" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="((str.length()) == 0)" to="((str.length()) &lt; 0)" />
    <mutant id="mutant_2178" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="((str.length()) == 0)" to="((str.length()) != 0)" />
    <mutant id="mutant_2179" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="((str.length()) == 0)" to="((str.length()) &lt;= 0)" />
    <mutant id="mutant_2176" viable="false" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null)" to="(str &lt; null)" />
    <mutant id="mutant_2177" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="((str.length()) == 0)" to="((str.length()) &gt; 0)" />
    <mutant id="mutant_2174" viable="false" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null)" to="(str &gt;= null)" />
    <mutant id="mutant_2175" viable="false" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null)" to="(str &lt;= null)" />
    <mutant id="mutant_154" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="finalRules == null" to="finalRules != null" />
    <mutant id="mutant_155" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="finalRules == null" to="finalRules &lt; null" />
    <mutant id="mutant_156" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="finalRules == null" to="true" />
    <mutant id="mutant_157" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="finalRules == null" to="false" />
    <mutant id="mutant_150" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="i &lt; (input.length())" to="true" />
    <mutant id="mutant_151" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="i &lt; (input.length())" to="false" />
    <mutant id="mutant_152" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="i &lt; (input.length())" to="i &gt;= (input.length())" />
    <mutant id="mutant_153" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="i &lt; (input.length())" to="i &gt; (input.length())" />
    <mutant id="mutant_169" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &lt; (o1.phonemeText.length())" to="i == (o1.phonemeText.length())" />
    <mutant id="mutant_160" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="finalRules == null" to="finalRules &gt; null" />
    <mutant id="mutant_165" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="i &lt; (phonemeText.length())" to="false" />
    <mutant id="mutant_166" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="i &lt; (phonemeText.length())" to="i &gt;= (phonemeText.length())" />
    <mutant id="mutant_167" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="i &lt; (phonemeText.length())" to="i &gt; (phonemeText.length())" />
    <mutant id="mutant_168" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &lt; (o1.phonemeText.length())" to="i &lt;= (o1.phonemeText.length())" />
    <mutant id="mutant_161" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="i &lt; (phonemeText.length())" to="i &lt;= (phonemeText.length())" />
    <mutant id="mutant_162" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="i &lt; (phonemeText.length())" to="i == (phonemeText.length())" />
    <mutant id="mutant_163" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="i &lt; (phonemeText.length())" to="i != (phonemeText.length())" />
    <mutant id="mutant_164" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="i &lt; (phonemeText.length())" to="true" />
    <mutant id="mutant_170" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &lt; (o1.phonemeText.length())" to="i != (o1.phonemeText.length())" />
    <mutant id="mutant_171" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &lt; (o1.phonemeText.length())" to="i &gt;= (o1.phonemeText.length())" />
    <mutant id="mutant_176" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &gt;= (o2.phonemeText.length())" to="i == (o2.phonemeText.length())" />
    <mutant id="mutant_177" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &gt;= (o2.phonemeText.length())" to="i != (o2.phonemeText.length())" />
    <mutant id="mutant_178" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &gt;= (o2.phonemeText.length())" to="true" />
    <mutant id="mutant_179" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &gt;= (o2.phonemeText.length())" to="false" />
    <mutant id="mutant_172" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &lt; (o1.phonemeText.length())" to="true" />
    <mutant id="mutant_173" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &lt; (o1.phonemeText.length())" to="false" />
    <mutant id="mutant_174" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &lt; (o1.phonemeText.length())" to="i &gt; (o1.phonemeText.length())" />
    <mutant id="mutant_175" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &gt;= (o2.phonemeText.length())" to="i &lt;= (o2.phonemeText.length())" />
    <mutant id="mutant_180" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &gt;= (o2.phonemeText.length())" to="i &lt; (o2.phonemeText.length())" />
    <mutant id="mutant_181" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="i &gt;= (o2.phonemeText.length())" to="i &gt; (o2.phonemeText.length())" />
    <mutant id="mutant_182" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="c != 0" to="true" />
    <mutant id="mutant_187" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="c != 0" to="c &gt; 0" />
    <mutant id="mutant_188" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="c != 0" to="c == 0" />
    <mutant id="mutant_189" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.length()) &lt; (o2.phonemeText.length())" to="(o1.phonemeText.length()) == (o2.phonemeText.length())" />
    <mutant id="mutant_183" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="c != 0" to="false" />
    <mutant id="mutant_184" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="c != 0" to="c &lt;= 0" />
    <mutant id="mutant_185" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="c != 0" to="c &lt; 0" />
    <mutant id="mutant_186" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="c != 0" to="c &gt;= 0" />
    <mutant id="mutant_190" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.length()) &lt; (o2.phonemeText.length())" to="(o1.phonemeText.length()) &gt; (o2.phonemeText.length())" />
    <mutant id="mutant_191" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.length()) &lt; (o2.phonemeText.length())" to="true" />
    <mutant id="mutant_192" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.length()) &lt; (o2.phonemeText.length())" to="false" />
    <mutant id="mutant_193" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.length()) &lt; (o2.phonemeText.length())" to="(o1.phonemeText.length()) != (o2.phonemeText.length())" />
    <mutant id="mutant_198" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="i &lt; (chars.length())" to="i &gt; (chars.length())" />
    <mutant id="mutant_199" viable="false" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="i &lt; (chars.length())" to="true" />
    <mutant id="mutant_194" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.length()) &lt; (o2.phonemeText.length())" to="(o1.phonemeText.length()) &lt;= (o2.phonemeText.length())" />
    <mutant id="mutant_195" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.length()) &lt; (o2.phonemeText.length())" to="(o1.phonemeText.length()) &gt;= (o2.phonemeText.length())" />
    <mutant id="mutant_196" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="i &lt; (chars.length())" to="i != (chars.length())" />
    <mutant id="mutant_197" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="i &lt; (chars.length())" to="i &lt;= (chars.length())" />
    <mutant id="mutant_1719" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'H'" to="true" />
    <mutant id="mutant_1717" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'H'" to="(inwd[1]) &gt; 'H'" />
    <mutant id="mutant_1718" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'H'" to="(inwd[1]) != 'H'" />
    <mutant id="mutant_1715" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'H'" to="(inwd[1]) &lt;= 'H'" />
    <mutant id="mutant_1716" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'H'" to="(inwd[1]) &gt;= 'H'" />
    <mutant id="mutant_1713" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'R'" to="(inwd[1]) != 'R'" />
    <mutant id="mutant_1714" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'R'" to="(inwd[1]) &lt;= 'R'" />
    <mutant id="mutant_1711" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'R'" to="false" />
    <mutant id="mutant_1712" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'R'" to="(inwd[1]) &gt;= 'R'" />
    <mutant id="mutant_1710" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'R'" to="true" />
    <mutant id="mutant_1708" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'R'" to="(inwd[1]) &lt; 'R'" />
    <mutant id="mutant_1709" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'R'" to="(inwd[1]) &gt; 'R'" />
    <mutant id="mutant_1706" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'E'" to="false" />
    <mutant id="mutant_1707" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'E'" to="(inwd[1]) &gt;= 'E'" />
    <mutant id="mutant_1704" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'E'" to="(inwd[1]) != 'E'" />
    <mutant id="mutant_1705" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'E'" to="true" />
    <mutant id="mutant_1702" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'E'" to="(inwd[1]) &lt; 'E'" />
    <mutant id="mutant_1703" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'E'" to="(inwd[1]) &gt; 'E'" />
    <mutant id="mutant_1700" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'N'" to="(inwd[1]) &gt; 'N'" />
    <mutant id="mutant_1701" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'E'" to="(inwd[1]) &lt;= 'E'" />
    <mutant id="mutant_1751" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &lt;= 0)" />
    <mutant id="mutant_1752" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &lt; 0)" />
    <mutant id="mutant_1750" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) == 0)" />
    <mutant id="mutant_1759" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &lt; 0)" />
    <mutant id="mutant_1757" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) == 0)" />
    <mutant id="mutant_1758" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &lt;= 0)" />
    <mutant id="mutant_1755" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="false" />
    <mutant id="mutant_1756" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt; 0)" />
    <mutant id="mutant_1753" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) != 0)" />
    <mutant id="mutant_1754" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="true" />
    <mutant id="mutant_1740" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C')" to="(symb &gt; 'C')" />
    <mutant id="mutant_1741" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C')" to="(symb == 'C')" />
    <mutant id="mutant_1748" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n == 0" to="n &lt;= 0" />
    <mutant id="mutant_1749" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n == 0" to="n != 0" />
    <mutant id="mutant_1746" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n == 0" to="false" />
    <mutant id="mutant_1747" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n == 0" to="n &lt; 0" />
    <mutant id="mutant_1744" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n == 0" to="n &gt; 0" />
    <mutant id="mutant_1745" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n == 0" to="true" />
    <mutant id="mutant_1742" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C')" to="(symb &lt;= 'C')" />
    <mutant id="mutant_1743" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="n == 0" to="n &gt;= 0" />
    <mutant id="mutant_900" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'I')" to="false" />
    <mutant id="mutant_901" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'I')" to="(c &lt; 'I')" />
    <mutant id="mutant_902" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'I')" to="(c &gt; 'I')" />
    <mutant id="mutant_1739" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C')" to="false" />
    <mutant id="mutant_907" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'E')" to="(c &gt;= 'E')" />
    <mutant id="mutant_908" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'E')" to="true" />
    <mutant id="mutant_909" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'E')" to="false" />
    <mutant id="mutant_903" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'E')" to="(c == 'E')" />
    <mutant id="mutant_904" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'E')" to="(c &lt; 'E')" />
    <mutant id="mutant_905" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'E')" to="(c &gt; 'E')" />
    <mutant id="mutant_906" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'E')" to="(c &lt;= 'E')" />
    <mutant id="mutant_1730" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &lt; wdsz)" to="(n &gt; wdsz)" />
    <mutant id="mutant_1737" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C')" to="(symb &lt; 'C')" />
    <mutant id="mutant_1738" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C')" to="true" />
    <mutant id="mutant_1735" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &lt; wdsz)" to="(n &gt;= wdsz)" />
    <mutant id="mutant_1736" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C')" to="(symb &gt;= 'C')" />
    <mutant id="mutant_1733" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &lt; wdsz)" to="true" />
    <mutant id="mutant_1734" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &lt; wdsz)" to="false" />
    <mutant id="mutant_1731" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &lt; wdsz)" to="(n &lt;= wdsz)" />
    <mutant id="mutant_1732" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &lt; wdsz)" to="(n == wdsz)" />
    <mutant id="mutant_910" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="index != 0" to="index == 0" />
    <mutant id="mutant_911" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="index != 0" to="true" />
    <mutant id="mutant_912" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="index != 0" to="false" />
    <mutant id="mutant_913" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="index != 0" to="index &gt; 0" />
    <mutant id="mutant_1728" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen()))" to="((code.length()) != (getMaxCodeLen()))" />
    <mutant id="mutant_1729" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &lt; wdsz)" to="(n != wdsz)" />
    <mutant id="mutant_918" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index == 0)" to="true" />
    <mutant id="mutant_919" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index == 0)" to="false" />
    <mutant id="mutant_914" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="index != 0" to="index &gt;= 0" />
    <mutant id="mutant_915" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="index != 0" to="index &lt; 0" />
    <mutant id="mutant_916" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="index != 0" to="index &lt;= 0" />
    <mutant id="mutant_917" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index == 0)" to="(index != 0)" />
    <mutant id="mutant_1726" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen()))" to="false" />
    <mutant id="mutant_1727" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen()))" to="((code.length()) &gt;= (getMaxCodeLen()))" />
    <mutant id="mutant_1724" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen()))" to="((code.length()) == (getMaxCodeLen()))" />
    <mutant id="mutant_1725" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen()))" to="true" />
    <mutant id="mutant_1722" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen()))" to="((code.length()) &lt;= (getMaxCodeLen()))" />
    <mutant id="mutant_1723" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen()))" to="((code.length()) &gt; (getMaxCodeLen()))" />
    <mutant id="mutant_1720" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'H'" to="false" />
    <mutant id="mutant_1721" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'H'" to="(inwd[1]) &lt; 'H'" />
    <mutant id="mutant_921" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index == 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_922" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index == 0)" to="(index &lt; 0)" />
    <mutant id="mutant_923" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index == 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_924" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) &gt; ((value.length()) - 1))" />
    <mutant id="mutant_920" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index == 0)" to="(index &gt; 0)" />
    <mutant id="mutant_929" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) &gt;= ((value.length()) - 1))" />
    <mutant id="mutant_925" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) &lt;= ((value.length()) - 1))" />
    <mutant id="mutant_926" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) != ((value.length()) - 1))" />
    <mutant id="mutant_927" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="true" />
    <mutant id="mutant_928" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="false" />
    <mutant id="mutant_1795" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) != 0)" />
    <mutant id="mutant_1796" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="true" />
    <mutant id="mutant_1793" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &lt;= 0)" />
    <mutant id="mutant_1794" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &lt; 0)" />
    <mutant id="mutant_1791" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n != 0)" />
    <mutant id="mutant_1792" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) == 0)" />
    <mutant id="mutant_1790" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n &lt;= 0)" />
    <mutant id="mutant_1799" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n &gt;= 0)" />
    <mutant id="mutant_1797" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="false" />
    <mutant id="mutant_1798" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt; 0)" />
    <mutant id="mutant_932" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3))" to="(index &gt;= ((value.length()) - 3))" />
    <mutant id="mutant_933" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3))" to="(index &lt;= ((value.length()) - 3))" />
    <mutant id="mutant_934" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3))" to="(index != ((value.length()) - 3))" />
    <mutant id="mutant_935" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3))" to="true" />
    <mutant id="mutant_930" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) &lt; ((value.length()) - 1))" />
    <mutant id="mutant_931" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3))" to="(index &lt; ((value.length()) - 3))" />
    <mutant id="mutant_936" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3))" to="false" />
    <mutant id="mutant_937" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3))" to="(index &gt; ((value.length()) - 3))" />
    <mutant id="mutant_938" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(charAt(value, (index + 1))) == 'M'" to="(charAt(value, (index + 1))) &gt; 'M'" />
    <mutant id="mutant_939" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(charAt(value, (index + 1))) == 'M'" to="(charAt(value, (index + 1))) &lt;= 'M'" />
    <mutant id="mutant_1784" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) == 0)" />
    <mutant id="mutant_1785" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n &gt;= 0)" />
    <mutant id="mutant_1782" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="false" />
    <mutant id="mutant_1783" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt; 0)" />
    <mutant id="mutant_1780" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &lt; 0)" />
    <mutant id="mutant_1781" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="true" />
    <mutant id="mutant_1788" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="false" />
    <mutant id="mutant_1789" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n &lt; 0)" />
    <mutant id="mutant_1786" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="(n == 0)" />
    <mutant id="mutant_1787" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0)" to="true" />
    <mutant id="mutant_943" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(charAt(value, (index + 1))) == 'M'" to="(charAt(value, (index + 1))) &gt;= 'M'" />
    <mutant id="mutant_944" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(charAt(value, (index + 1))) == 'M'" to="(charAt(value, (index + 1))) &lt; 'M'" />
    <mutant id="mutant_945" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) &gt; ((value.length()) - 1))" />
    <mutant id="mutant_946" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) &lt;= ((value.length()) - 1))" />
    <mutant id="mutant_940" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(charAt(value, (index + 1))) == 'M'" to="true" />
    <mutant id="mutant_941" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(charAt(value, (index + 1))) == 'M'" to="false" />
    <mutant id="mutant_942" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(charAt(value, (index + 1))) == 'M'" to="(charAt(value, (index + 1))) != 'M'" />
    <mutant id="mutant_947" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) != ((value.length()) - 1))" />
    <mutant id="mutant_948" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="true" />
    <mutant id="mutant_949" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="false" />
    <mutant id="mutant_1773" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(wdsz &gt;= 3)" to="(wdsz == 3)" />
    <mutant id="mutant_1774" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(wdsz &gt;= 3)" to="(wdsz &gt; 3)" />
    <mutant id="mutant_1771" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(wdsz &gt;= 3)" to="true" />
    <mutant id="mutant_1772" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(wdsz &gt;= 3)" to="false" />
    <mutant id="mutant_1770" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n == 0)" to="(n != 0)" />
    <mutant id="mutant_1779" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) != 0)" />
    <mutant id="mutant_1777" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(wdsz &gt;= 3)" to="(wdsz &lt;= 3)" />
    <mutant id="mutant_1778" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &lt;= 0)" />
    <mutant id="mutant_1775" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(wdsz &gt;= 3)" to="(wdsz != 3)" />
    <mutant id="mutant_1776" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(wdsz &gt;= 3)" to="(wdsz &lt; 3)" />
    <mutant id="mutant_954" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0)" to="(start &lt; 0)" />
    <mutant id="mutant_955" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0)" to="(start &lt;= 0)" />
    <mutant id="mutant_956" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0)" to="true" />
    <mutant id="mutant_957" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0)" to="false" />
    <mutant id="mutant_950" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) &gt;= ((value.length()) - 1))" />
    <mutant id="mutant_951" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((index + 1) == ((value.length()) - 1))" to="((index + 1) &lt; ((value.length()) - 1))" />
    <mutant id="mutant_952" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0)" to="(start == 0)" />
    <mutant id="mutant_953" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0)" to="(start &gt; 0)" />
    <mutant id="mutant_958" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0)" to="(start != 0)" />
    <mutant id="mutant_959" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="((start + length) &lt;= (value.length()))" to="((start + length) != (value.length()))" />
    <mutant id="mutant_1762" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="false" />
    <mutant id="mutant_1763" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt; 0)" />
    <mutant id="mutant_1760" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) != 0)" />
    <mutant id="mutant_1761" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="true" />
    <mutant id="mutant_1768" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n == 0)" to="(n &lt; 0)" />
    <mutant id="mutant_1769" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n == 0)" to="(n &lt;= 0)" />
    <mutant id="mutant_1766" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n == 0)" to="true" />
    <mutant id="mutant_1767" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n == 0)" to="false" />
    <mutant id="mutant_1764" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n == 0)" to="(n &gt;= 0)" />
    <mutant id="mutant_1765" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n == 0)" to="(n &gt; 0)" />
    <mutant id="mutant_965" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="((start + length) &lt;= (value.length()))" to="((start + length) &lt; (value.length()))" />
    <mutant id="mutant_966" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('W')) &gt; (-1))" to="((value.indexOf('W')) == (-1))" />
    <mutant id="mutant_967" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('W')) &gt; (-1))" to="((value.indexOf('W')) &lt; (-1))" />
    <mutant id="mutant_968" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('W')) &gt; (-1))" to="((value.indexOf('W')) &lt;= (-1))" />
    <mutant id="mutant_961" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="((start + length) &lt;= (value.length()))" to="true" />
    <mutant id="mutant_962" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="((start + length) &lt;= (value.length()))" to="false" />
    <mutant id="mutant_963" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="((start + length) &lt;= (value.length()))" to="((start + length) &gt;= (value.length()))" />
    <mutant id="mutant_964" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="((start + length) &lt;= (value.length()))" to="((start + length) &gt; (value.length()))" />
    <mutant id="mutant_969" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('W')) &gt; (-1))" to="((value.indexOf('W')) != (-1))" />
    <mutant id="mutant_2202" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="true" />
    <mutant id="mutant_3534" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.lang.String)" from="value == null" to="value != null" />
    <mutant id="mutant_2203" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="false" />
    <mutant id="mutant_3533" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.lang.String)" from="value == null" to="value &gt;= null" />
    <mutant id="mutant_2200" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator &gt; null" />
    <mutant id="mutant_3532" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.lang.String)" from="value == null" to="value &lt;= null" />
    <mutant id="mutant_2201" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator &lt;= null" />
    <mutant id="mutant_3531" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.lang.String)" from="value == null" to="false" />
    <mutant id="mutant_3530" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.lang.String)" from="value == null" to="true" />
    <mutant id="mutant_2208" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineLength &gt; 0" to="lineLength == 0" />
    <mutant id="mutant_960" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="((start + length) &lt;= (value.length()))" to="((start + length) == (value.length()))" />
    <mutant id="mutant_2209" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineLength &gt; 0" to="true" />
    <mutant id="mutant_3539" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.nio.charset.Charset)" from="value == null" to="value &lt;= null" />
    <mutant id="mutant_2206" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineLength &gt; 0" to="lineLength &lt; 0" />
    <mutant id="mutant_3538" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.nio.charset.Charset)" from="value == null" to="false" />
    <mutant id="mutant_2207" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineLength &gt; 0" to="lineLength != 0" />
    <mutant id="mutant_3537" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.nio.charset.Charset)" from="value == null" to="true" />
    <mutant id="mutant_2204" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator != null" />
    <mutant id="mutant_3536" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.nio.charset.Charset)" from="value == null" to="value &lt; null" />
    <mutant id="mutant_2205" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineLength &gt; 0" to="lineLength &lt;= 0" />
    <mutant id="mutant_3535" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.nio.charset.Charset)" from="value == null" to="value &gt; null" />
    <mutant id="mutant_976" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('K')) &gt; (-1))" to="((value.indexOf('K')) != (-1))" />
    <mutant id="mutant_977" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('K')) &gt; (-1))" to="true" />
    <mutant id="mutant_978" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('K')) &gt; (-1))" to="false" />
    <mutant id="mutant_979" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('K')) &gt; (-1))" to="((value.indexOf('K')) &lt; (-1))" />
    <mutant id="mutant_972" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('W')) &gt; (-1))" to="((value.indexOf('W')) &gt;= (-1))" />
    <mutant id="mutant_973" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('K')) &gt; (-1))" to="((value.indexOf('K')) &lt;= (-1))" />
    <mutant id="mutant_974" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('K')) &gt; (-1))" to="((value.indexOf('K')) &gt;= (-1))" />
    <mutant id="mutant_975" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('K')) &gt; (-1))" to="((value.indexOf('K')) == (-1))" />
    <mutant id="mutant_3523" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String)" from="value == null" to="true" />
    <mutant id="mutant_3522" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String)" from="value == null" to="value &lt; null" />
    <mutant id="mutant_3521" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String)" from="value == null" to="value &gt; null" />
    <mutant id="mutant_3520" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.String)" from="value == null" to="value != null" />
    <mutant id="mutant_970" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('W')) &gt; (-1))" to="true" />
    <mutant id="mutant_3529" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.lang.String)" from="value == null" to="value &lt; null" />
    <mutant id="mutant_971" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf('W')) &gt; (-1))" to="false" />
    <mutant id="mutant_3528" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.lang.String)" from="value == null" to="value &gt; null" />
    <mutant id="mutant_3527" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String)" from="value == null" to="value != null" />
    <mutant id="mutant_3526" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String)" from="value == null" to="value &gt;= null" />
    <mutant id="mutant_3525" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String)" from="value == null" to="value &lt;= null" />
    <mutant id="mutant_3524" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String)" from="value == null" to="false" />
    <mutant id="mutant_987" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;WITZ&quot;)) != (-1))" />
    <mutant id="mutant_988" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;WITZ&quot;)) &gt;= (-1))" />
    <mutant id="mutant_989" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;WITZ&quot;)) == (-1))" />
    <mutant id="mutant_983" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" to="true" />
    <mutant id="mutant_984" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" to="false" />
    <mutant id="mutant_985" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;CZ&quot;)) == (-1))" />
    <mutant id="mutant_986" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;CZ&quot;)) &gt;= (-1))" />
    <mutant id="mutant_3512" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="value == null" to="value &lt;= null" />
    <mutant id="mutant_3511" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="value == null" to="value &gt; null" />
    <mutant id="mutant_3510" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="value == null" to="false" />
    <mutant id="mutant_980" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;CZ&quot;)) &lt; (-1))" />
    <mutant id="mutant_3519" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.String)" from="value == null" to="value &gt;= null" />
    <mutant id="mutant_981" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;CZ&quot;)) != (-1))" />
    <mutant id="mutant_3518" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.String)" from="value == null" to="value &lt;= null" />
    <mutant id="mutant_982" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;CZ&quot;)) &lt;= (-1))" />
    <mutant id="mutant_3517" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.String)" from="value == null" to="false" />
    <mutant id="mutant_3516" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.String)" from="value == null" to="true" />
    <mutant id="mutant_3515" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.String)" from="value == null" to="value &lt; null" />
    <mutant id="mutant_3514" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.String)" from="value == null" to="value &gt; null" />
    <mutant id="mutant_3513" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="value == null" to="value &lt; null" />
    <mutant id="mutant_998" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" from="(DoubleMetaphone.VOWELS.indexOf(ch)) != (-1)" to="true" />
    <mutant id="mutant_999" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" from="(DoubleMetaphone.VOWELS.indexOf(ch)) != (-1)" to="false" />
    <mutant id="mutant_994" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" from="(DoubleMetaphone.VOWELS.indexOf(ch)) != (-1)" to="(DoubleMetaphone.VOWELS.indexOf(ch)) &gt;= (-1)" />
    <mutant id="mutant_995" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" from="(DoubleMetaphone.VOWELS.indexOf(ch)) != (-1)" to="(DoubleMetaphone.VOWELS.indexOf(ch)) &lt; (-1)" />
    <mutant id="mutant_996" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" from="(DoubleMetaphone.VOWELS.indexOf(ch)) != (-1)" to="(DoubleMetaphone.VOWELS.indexOf(ch)) &lt;= (-1)" />
    <mutant id="mutant_997" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isVowel(char)" from="(DoubleMetaphone.VOWELS.indexOf(ch)) != (-1)" to="(DoubleMetaphone.VOWELS.indexOf(ch)) &gt; (-1)" />
    <mutant id="mutant_3501" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="value == null" to="value &gt;= null" />
    <mutant id="mutant_3500" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="value == null" to="value != null" />
    <mutant id="mutant_990" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;WITZ&quot;)) &lt; (-1))" />
    <mutant id="mutant_3509" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="value == null" to="true" />
    <mutant id="mutant_991" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="true" />
    <mutant id="mutant_3508" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="value == null" to="value &gt;= null" />
    <mutant id="mutant_992" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="false" />
    <mutant id="mutant_3507" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="value == null" to="value != null" />
    <mutant id="mutant_993" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="((value.indexOf(&quot;WITZ&quot;)) &lt;= (-1))" />
    <mutant id="mutant_3506" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="value == null" to="value &lt; null" />
    <mutant id="mutant_3505" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="value == null" to="value &lt;= null" />
    <mutant id="mutant_3504" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="value == null" to="value &gt; null" />
    <mutant id="mutant_3503" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="value == null" to="false" />
    <mutant id="mutant_3502" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="value == null" to="true" />
    <mutant id="mutant_3581" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="i &lt; (bytes.length)" to="i &lt;= (bytes.length)" />
    <mutant id="mutant_2250" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="true" />
    <mutant id="mutant_3580" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="i &lt; (bytes.length)" to="false" />
    <mutant id="mutant_2246" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail != 0" />
    <mutant id="mutant_3578" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="i &lt; (bytes.length)" to="i &gt; (bytes.length)" />
    <mutant id="mutant_2247" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &gt; inAvail" />
    <mutant id="mutant_3577" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="i &lt; (bytes.length)" to="i != (bytes.length)" />
    <mutant id="mutant_2244" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="true" />
    <mutant id="mutant_3576" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b == (QCodec.UNDERSCORE)" to="false" />
    <mutant id="mutant_2245" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="false" />
    <mutant id="mutant_3575" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b == (QCodec.UNDERSCORE)" to="true" />
    <mutant id="mutant_2242" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &gt; 0" />
    <mutant id="mutant_3574" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b == (QCodec.UNDERSCORE)" to="b != (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2243" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail == 0" />
    <mutant id="mutant_3573" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b == (QCodec.UNDERSCORE)" to="b &lt; (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2240" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &lt;= 0" />
    <mutant id="mutant_3572" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b == (QCodec.UNDERSCORE)" to="b &lt;= (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2241" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="inAvail &lt; 0" to="inAvail &gt;= 0" />
    <mutant id="mutant_3571" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b == (QCodec.UNDERSCORE)" to="b &gt; (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2248" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &lt;= inAvail" />
    <mutant id="mutant_2249" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="i &lt; inAvail" to="i &gt;= inAvail" />
    <mutant id="mutant_3579" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="i &lt; (bytes.length)" to="true" />
    <mutant id="mutant_3570" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="b == (QCodec.UNDERSCORE)" to="b &gt;= (QCodec.UNDERSCORE)" />
    <mutant id="mutant_2235" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) == (-1))" />
    <mutant id="mutant_3567" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="bytes == null" to="false" />
    <mutant id="mutant_2236" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) &lt; (-1))" />
    <mutant id="mutant_3566" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="bytes == null" to="true" />
    <mutant id="mutant_2233" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="true" />
    <mutant id="mutant_3565" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_2234" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="false" />
    <mutant id="mutant_3564" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_2231" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="true" />
    <mutant id="mutant_3563" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_2232" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="false" />
    <mutant id="mutant_3562" viable="false" in="?" from="i &lt;= 'z'" to="i &lt; 'z'" />
    <mutant id="mutant_3561" viable="false" in="?" from="i &lt;= 'z'" to="i &gt; 'z'" />
    <mutant id="mutant_2230" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet == (decodeTable.length))" />
    <mutant id="mutant_3560" viable="false" in="?" from="i &lt;= 'z'" to="i != 'z'" />
    <mutant id="mutant_2239" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) &lt;= (-1))" />
    <mutant id="mutant_2237" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) &gt;= (-1))" />
    <mutant id="mutant_3569" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_2238" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((decodeTable[octet]) != (-1))" to="((decodeTable[octet]) &gt; (-1))" />
    <mutant id="mutant_3568" viable="false" in="org.apache.commons.codec.net.QCodec.doDecoding(byte[])" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_2224" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet &lt;= 0)" />
    <mutant id="mutant_3556" viable="false" in="?" from="i &lt;= 'z'" to="i &gt;= 'z'" />
    <mutant id="mutant_2225" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet &lt; 0)" />
    <mutant id="mutant_3555" viable="false" in="?" from="i &lt;= 'Z'" to="i &lt; 'Z'" />
    <mutant id="mutant_2222" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &gt;= 0)" to="true" />
    <mutant id="mutant_3554" viable="false" in="?" from="i &lt;= 'Z'" to="i &gt; 'Z'" />
    <mutant id="mutant_2223" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &gt;= 0)" to="false" />
    <mutant id="mutant_3553" viable="false" in="?" from="i &lt;= 'Z'" to="i != 'Z'" />
    <mutant id="mutant_2220" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet == 0)" />
    <mutant id="mutant_3552" viable="false" in="?" from="i &lt;= 'Z'" to="false" />
    <mutant id="mutant_2221" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet != 0)" />
    <mutant id="mutant_3551" viable="false" in="?" from="i &lt;= 'Z'" to="true" />
    <mutant id="mutant_3550" viable="false" in="?" from="i &lt;= 'Z'" to="i == 'Z'" />
    <mutant id="mutant_2228" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet &gt; (decodeTable.length))" />
    <mutant id="mutant_2229" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet != (decodeTable.length))" />
    <mutant id="mutant_3559" viable="false" in="?" from="i &lt;= 'z'" to="false" />
    <mutant id="mutant_2226" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet &gt;= (decodeTable.length))" />
    <mutant id="mutant_3558" viable="false" in="?" from="i &lt;= 'z'" to="true" />
    <mutant id="mutant_2227" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &lt; (decodeTable.length))" to="(octet &lt;= (decodeTable.length))" />
    <mutant id="mutant_3557" viable="false" in="?" from="i &lt;= 'z'" to="i == 'z'" />
    <mutant id="mutant_2213" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator &lt; null" />
    <mutant id="mutant_3545" viable="false" in="?" from="i &lt;= '9'" to="i != '9'" />
    <mutant id="mutant_2214" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator &gt; null" />
    <mutant id="mutant_3544" viable="false" in="?" from="i &lt;= '9'" to="i == '9'" />
    <mutant id="mutant_2211" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineLength &gt; 0" to="lineLength &gt;= 0" />
    <mutant id="mutant_3543" viable="false" in="?" from="i &lt;= '9'" to="i &gt;= '9'" />
    <mutant id="mutant_2212" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator &gt;= null" />
    <mutant id="mutant_3542" viable="false" in="?" from="i &lt;= '9'" to="i &gt; '9'" />
    <mutant id="mutant_3541" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.nio.charset.Charset)" from="value == null" to="value != null" />
    <mutant id="mutant_2210" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineLength &gt; 0" to="false" />
    <mutant id="mutant_3540" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.String,java.nio.charset.Charset)" from="value == null" to="value &gt;= null" />
    <mutant id="mutant_2219" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="(octet &gt;= 0)" to="(octet &gt; 0)" />
    <mutant id="mutant_2217" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="false" />
    <mutant id="mutant_3549" viable="false" in="?" from="i &lt;= 'Z'" to="i &gt;= 'Z'" />
    <mutant id="mutant_2218" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator != null" />
    <mutant id="mutant_3548" viable="false" in="?" from="i &lt;= '9'" to="i &lt; '9'" />
    <mutant id="mutant_2215" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="lineSeparator &lt;= null" />
    <mutant id="mutant_3547" viable="false" in="?" from="i &lt;= '9'" to="false" />
    <mutant id="mutant_2216" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="lineSeparator == null" to="true" />
    <mutant id="mutant_3546" viable="false" in="?" from="i &lt;= '9'" to="true" />
    <mutant id="mutant_2051" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &gt; 0" />
    <mutant id="mutant_3383" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &gt;= 0" />
    <mutant id="mutant_2052" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) != 0" />
    <mutant id="mutant_3382" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) == 0" />
    <mutant id="mutant_3381" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &gt; 0" />
    <mutant id="mutant_2050" viable="false" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_3380" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7) != 0" to="(i % 7) &gt; 0" />
    <mutant id="mutant_2048" viable="false" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_2049" viable="false" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_3379" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7) != 0" to="(i % 7) == 0" />
    <mutant id="mutant_2046" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_3378" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7) != 0" to="(i % 7) &gt;= 0" />
    <mutant id="mutant_2047" viable="false" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_3377" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7) != 0" to="false" />
    <mutant id="mutant_2044" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_3376" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7) != 0" to="true" />
    <mutant id="mutant_2045" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_3375" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7) != 0" to="(i % 7) &lt;= 0" />
    <mutant id="mutant_2042" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'A'" to="lastChar != 'A'" />
    <mutant id="mutant_3374" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7) != 0" to="(i % 7) &lt; 0" />
    <mutant id="mutant_2043" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'A'" to="lastChar &lt;= 'A'" />
    <mutant id="mutant_3373" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3) != 0" to="(i % 3) &gt;= 0" />
    <mutant id="mutant_2040" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'A'" to="false" />
    <mutant id="mutant_3372" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3) != 0" to="(i % 3) &gt; 0" />
    <mutant id="mutant_2041" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'A'" to="lastChar &gt; 'A'" />
    <mutant id="mutant_3371" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3) != 0" to="(i % 3) == 0" />
    <mutant id="mutant_3370" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3) != 0" to="(i % 3) &lt;= 0" />
    <mutant id="mutant_2037" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'A'" to="lastChar &gt;= 'A'" />
    <mutant id="mutant_3369" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3) != 0" to="false" />
    <mutant id="mutant_2038" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'A'" to="lastChar &lt; 'A'" />
    <mutant id="mutant_3368" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3) != 0" to="true" />
    <mutant id="mutant_2035" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(lastChar == 'Y')" to="(lastChar &gt;= 'Y')" />
    <mutant id="mutant_3367" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3) != 0" to="(i % 3) &lt; 0" />
    <mutant id="mutant_2036" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(lastChar == 'Y')" to="(lastChar &lt; 'Y')" />
    <mutant id="mutant_3366" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &lt; 0" />
    <mutant id="mutant_2033" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(lastChar == 'Y')" to="true" />
    <mutant id="mutant_3365" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &lt;= 0" />
    <mutant id="mutant_2034" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(lastChar == 'Y')" to="false" />
    <mutant id="mutant_3364" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="false" />
    <mutant id="mutant_2031" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(lastChar == 'Y')" to="(lastChar != 'Y')" />
    <mutant id="mutant_3363" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="true" />
    <mutant id="mutant_2032" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(lastChar == 'Y')" to="(lastChar &lt;= 'Y')" />
    <mutant id="mutant_3362" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &gt;= 0" />
    <mutant id="mutant_2039" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'A'" to="true" />
    <mutant id="mutant_3361" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) == 0" />
    <mutant id="mutant_2030" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(lastChar == 'Y')" to="(lastChar &gt; 'Y')" />
    <mutant id="mutant_3360" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &gt; 0" />
    <mutant id="mutant_2026" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A')" to="true" />
    <mutant id="mutant_3358" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (rounds - 1)" to="i == (rounds - 1)" />
    <mutant id="mutant_2027" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A')" to="false" />
    <mutant id="mutant_3357" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (rounds - 1)" to="i &gt; (rounds - 1)" />
    <mutant id="mutant_2024" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A')" to="(last2Char &gt; 'A')" />
    <mutant id="mutant_3356" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (rounds - 1)" to="false" />
    <mutant id="mutant_2025" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A')" to="(last2Char &lt;= 'A')" />
    <mutant id="mutant_3355" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (rounds - 1)" to="true" />
    <mutant id="mutant_2022" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 2" to="(key.length()) &lt; 2" />
    <mutant id="mutant_3354" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (rounds - 1)" to="i &lt; (rounds - 1)" />
    <mutant id="mutant_2023" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A')" to="(last2Char &gt;= 'A')" />
    <mutant id="mutant_3353" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (rounds - 1)" to="i != (rounds - 1)" />
    <mutant id="mutant_2020" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 2" to="false" />
    <mutant id="mutant_3352" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (saltLen - blocksize)" to="cp != (saltLen - blocksize)" />
    <mutant id="mutant_2021" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 2" to="(key.length()) != 2" />
    <mutant id="mutant_3351" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (saltLen - blocksize)" to="cp &lt;= (saltLen - blocksize)" />
    <mutant id="mutant_2028" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A')" to="(last2Char != 'A')" />
    <mutant id="mutant_2029" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A')" to="(last2Char &lt; 'A')" />
    <mutant id="mutant_3359" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (rounds - 1)" to="i &gt;= (rounds - 1)" />
    <mutant id="mutant_3350" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (saltLen - blocksize)" to="cp &gt; (saltLen - blocksize)" />
    <mutant id="mutant_2015" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'S'" to="lastChar &lt;= 'S'" />
    <mutant id="mutant_3347" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (saltLen - blocksize)" to="cp &gt;= (saltLen - blocksize)" />
    <mutant id="mutant_2016" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 2" to="(key.length()) &gt;= 2" />
    <mutant id="mutant_3346" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (saltLen - blocksize)" to="cp == (saltLen - blocksize)" />
    <mutant id="mutant_2013" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'S'" to="lastChar &gt; 'S'" />
    <mutant id="mutant_3345" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (16 + ((altResult[0]) &amp; 255))" to="i &lt; (16 + ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_2014" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'S'" to="lastChar &gt;= 'S'" />
    <mutant id="mutant_3344" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (16 + ((altResult[0]) &amp; 255))" to="i &gt;= (16 + ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_2011" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'S'" to="true" />
    <mutant id="mutant_3343" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (16 + ((altResult[0]) &amp; 255))" to="false" />
    <mutant id="mutant_2012" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'S'" to="false" />
    <mutant id="mutant_3342" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (16 + ((altResult[0]) &amp; 255))" to="true" />
    <mutant id="mutant_3341" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (16 + ((altResult[0]) &amp; 255))" to="i &gt; (16 + ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_2010" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'S'" to="lastChar &lt; 'S'" />
    <mutant id="mutant_3340" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (16 + ((altResult[0]) &amp; 255))" to="i != (16 + ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_2019" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 2" to="true" />
    <mutant id="mutant_2017" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 2" to="(key.length()) &lt;= 2" />
    <mutant id="mutant_3349" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (saltLen - blocksize)" to="false" />
    <mutant id="mutant_2018" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 2" to="(key.length()) == 2" />
    <mutant id="mutant_3348" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (saltLen - blocksize)" to="true" />
    <mutant id="mutant_2095" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="str == null" to="false" />
    <mutant id="mutant_2096" viable="false" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="str == null" to="str &gt; null" />
    <mutant id="mutant_2093" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="str == null" to="str != null" />
    <mutant id="mutant_2094" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="str == null" to="true" />
    <mutant id="mutant_2091" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &gt;= (getSoundexMapping().length))" to="(index &lt; (getSoundexMapping().length))" />
    <mutant id="mutant_2092" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &gt;= (getSoundexMapping().length))" to="(index &gt; (getSoundexMapping().length))" />
    <mutant id="mutant_2090" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &gt;= (getSoundexMapping().length))" to="false" />
    <mutant id="mutant_2088" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &gt;= (getSoundexMapping().length))" to="(index &lt;= (getSoundexMapping().length))" />
    <mutant id="mutant_2089" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &gt;= (getSoundexMapping().length))" to="true" />
    <mutant id="mutant_2086" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &gt;= (getSoundexMapping().length))" to="(index == (getSoundexMapping().length))" />
    <mutant id="mutant_2087" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &gt;= (getSoundexMapping().length))" to="(index != (getSoundexMapping().length))" />
    <mutant id="mutant_2084" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2085" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2082" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0)" to="false" />
    <mutant id="mutant_2083" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2080" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0)" to="(index == 0)" />
    <mutant id="mutant_2081" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0)" to="true" />
    <mutant id="mutant_2079" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0)" to="(index != 0)" />
    <mutant id="mutant_2077" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current != 0" to="current &lt;= 0" />
    <mutant id="mutant_2078" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current != 0" to="current &lt; 0" />
    <mutant id="mutant_2075" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current != 0" to="true" />
    <mutant id="mutant_2076" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current != 0" to="false" />
    <mutant id="mutant_2073" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current != 0" to="current &gt; 0" />
    <mutant id="mutant_2074" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current != 0" to="current == 0" />
    <mutant id="mutant_2071" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current == last" to="current &gt;= last" />
    <mutant id="mutant_2072" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current != 0" to="current &gt;= 0" />
    <mutant id="mutant_2070" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current == last" to="current &gt; last" />
    <mutant id="mutant_2068" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current == last" to="false" />
    <mutant id="mutant_2069" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current == last" to="current &lt;= last" />
    <mutant id="mutant_3399" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="salt == null" to="false" />
    <mutant id="mutant_2066" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current == last" to="current &lt; last" />
    <mutant id="mutant_3398" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="salt == null" to="true" />
    <mutant id="mutant_2067" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current == last" to="true" />
    <mutant id="mutant_3397" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="salt == null" to="salt != null" />
    <mutant id="mutant_2064" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="i &lt; (str.length())" to="i &gt; (str.length())" />
    <mutant id="mutant_3396" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="salt == null" to="salt &lt; null" />
    <mutant id="mutant_2065" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="current == last" to="current != last" />
    <mutant id="mutant_3395" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="salt == null" to="salt &gt;= null" />
    <mutant id="mutant_2062" viable="false" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="i &lt; (str.length())" to="false" />
    <mutant id="mutant_3394" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="blocksize == 32" to="blocksize &lt; 32" />
    <mutant id="mutant_2063" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="i &lt; (str.length())" to="i &gt;= (str.length())" />
    <mutant id="mutant_3393" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="blocksize == 32" to="blocksize != 32" />
    <mutant id="mutant_2060" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="i &lt; (str.length())" to="i != (str.length())" />
    <mutant id="mutant_3392" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="blocksize == 32" to="blocksize &lt;= 32" />
    <mutant id="mutant_2061" viable="false" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="i &lt; (str.length())" to="true" />
    <mutant id="mutant_3391" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="blocksize == 32" to="false" />
    <mutant id="mutant_3390" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="blocksize == 32" to="true" />
    <mutant id="mutant_2059" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="i &lt; (str.length())" to="i == (str.length())" />
    <mutant id="mutant_2057" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &gt;= 0" />
    <mutant id="mutant_3389" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="blocksize == 32" to="blocksize &gt;= 32" />
    <mutant id="mutant_2058" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="i &lt; (str.length())" to="i &lt;= (str.length())" />
    <mutant id="mutant_3388" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="blocksize == 32" to="blocksize &gt; 32" />
    <mutant id="mutant_2055" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="(str.length()) == 0" to="true" />
    <mutant id="mutant_3387" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &lt; 0" />
    <mutant id="mutant_2056" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="(str.length()) == 0" to="false" />
    <mutant id="mutant_3386" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &lt;= 0" />
    <mutant id="mutant_2053" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &lt;= 0" />
    <mutant id="mutant_3385" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="false" />
    <mutant id="mutant_2054" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &lt; 0" />
    <mutant id="mutant_3384" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i &amp; 1) != 0" to="true" />
    <mutant id="mutant_2099" viable="false" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="str == null" to="str &lt; null" />
    <mutant id="mutant_2097" viable="false" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="str == null" to="str &gt;= null" />
    <mutant id="mutant_2098" viable="false" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="str == null" to="str &lt;= null" />
    <mutant id="mutant_2929" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="ii &lt; (l_raw.length)" to="false" />
    <mutant id="mutant_2928" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="ii &lt; (l_raw.length)" to="true" />
    <mutant id="mutant_2927" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="ii &lt; (l_raw.length)" to="ii &gt;= (l_raw.length)" />
    <mutant id="mutant_2926" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="ii &lt; (l_raw.length)" to="ii &gt; (l_raw.length)" />
    <mutant id="mutant_2925" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="((array.length) == 0)" to="((array.length) &gt; 0)" />
    <mutant id="mutant_2924" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="((array.length) == 0)" to="((array.length) &lt; 0)" />
    <mutant id="mutant_2923" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="((array.length) == 0)" to="((array.length) &lt;= 0)" />
    <mutant id="mutant_2922" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="((array.length) == 0)" to="false" />
    <mutant id="mutant_2921" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="((array.length) == 0)" to="true" />
    <mutant id="mutant_2920" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="((array.length) == 0)" to="((array.length) != 0)" />
    <mutant id="mutant_2919" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="((array.length) == 0)" to="((array.length) &gt;= 0)" />
    <mutant id="mutant_2918" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null)" to="(array &gt;= null)" />
    <mutant id="mutant_2917" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null)" to="(array != null)" />
    <mutant id="mutant_2916" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null)" to="false" />
    <mutant id="mutant_2915" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null)" to="true" />
    <mutant id="mutant_2914" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null)" to="(array &lt; null)" />
    <mutant id="mutant_2913" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null)" to="(array &lt;= null)" />
    <mutant id="mutant_2912" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null)" to="(array &gt; null)" />
    <mutant id="mutant_2911" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="len &gt; 0" to="len &gt;= 0" />
    <mutant id="mutant_2910" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="len &gt; 0" to="false" />
    <mutant id="mutant_2909" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="len &gt; 0" to="true" />
    <mutant id="mutant_2908" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="len &gt; 0" to="len &lt;= 0" />
    <mutant id="mutant_2907" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="len &gt; 0" to="len == 0" />
    <mutant id="mutant_2906" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="len &gt; 0" to="len != 0" />
    <mutant id="mutant_2905" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="len &gt; 0" to="len &lt; 0" />
    <mutant id="mutant_2904" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) &gt;= (b.length))" />
    <mutant id="mutant_2903" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) != (b.length))" />
    <mutant id="mutant_2902" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="false" />
    <mutant id="mutant_2901" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="true" />
    <mutant id="mutant_2900" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) &lt;= (b.length))" />
    <mutant id="mutant_1630" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index + 1))) == c" to="(string.charAt((index + 1))) &lt; c" />
    <mutant id="mutant_2962" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="ii &lt; (l_raw.length)" to="ii &gt;= (l_raw.length)" />
    <mutant id="mutant_1631" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0)" to="(index != 0)" />
    <mutant id="mutant_2961" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="ii &lt; (l_raw.length)" to="ii &gt; (l_raw.length)" />
    <mutant id="mutant_2960" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="((ascii.length) == 0)" to="((ascii.length) &gt; 0)" />
    <mutant id="mutant_1638" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &lt; (string.length()))" to="(index == (string.length()))" />
    <mutant id="mutant_1639" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &lt; (string.length()))" to="(index != (string.length()))" />
    <mutant id="mutant_2969" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &gt;= (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1636" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2968" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &gt; (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1637" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2967" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="ii &lt; (l_raw.length)" to="ii != (l_raw.length)" />
    <mutant id="mutant_1634" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0)" to="false" />
    <mutant id="mutant_2966" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="ii &lt; (l_raw.length)" to="ii == (l_raw.length)" />
    <mutant id="mutant_1635" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0)" to="(index &gt;= 0)" />
    <mutant id="mutant_2965" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="ii &lt; (l_raw.length)" to="ii &lt;= (l_raw.length)" />
    <mutant id="mutant_1632" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0)" to="(index == 0)" />
    <mutant id="mutant_2964" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="ii &lt; (l_raw.length)" to="false" />
    <mutant id="mutant_1633" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0)" to="true" />
    <mutant id="mutant_2963" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="ii &lt; (l_raw.length)" to="true" />
    <mutant id="mutant_1629" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index + 1))) == c" to="false" />
    <mutant id="mutant_2951" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null)" to="false" />
    <mutant id="mutant_1620" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &lt; ((string.length()) - 1))" to="(index &lt;= ((string.length()) - 1))" />
    <mutant id="mutant_2950" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null)" to="true" />
    <mutant id="mutant_1627" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index + 1))) == c" to="(string.charAt((index + 1))) &lt;= c" />
    <mutant id="mutant_2959" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="((ascii.length) == 0)" to="((ascii.length) &lt; 0)" />
    <mutant id="mutant_1628" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index + 1))) == c" to="true" />
    <mutant id="mutant_2958" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="((ascii.length) == 0)" to="((ascii.length) &lt;= 0)" />
    <mutant id="mutant_1625" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index + 1))) == c" to="(string.charAt((index + 1))) &gt;= c" />
    <mutant id="mutant_2957" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="((ascii.length) == 0)" to="false" />
    <mutant id="mutant_1626" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index + 1))) == c" to="(string.charAt((index + 1))) != c" />
    <mutant id="mutant_2956" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="((ascii.length) == 0)" to="true" />
    <mutant id="mutant_1623" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &lt; ((string.length()) - 1))" to="(index != ((string.length()) - 1))" />
    <mutant id="mutant_2955" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="((ascii.length) == 0)" to="((ascii.length) != 0)" />
    <mutant id="mutant_1624" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index + 1))) == c" to="(string.charAt((index + 1))) &gt; c" />
    <mutant id="mutant_2954" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="((ascii.length) == 0)" to="((ascii.length) &gt;= 0)" />
    <mutant id="mutant_1621" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &lt; ((string.length()) - 1))" to="(index &gt;= ((string.length()) - 1))" />
    <mutant id="mutant_2953" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null)" to="(ascii != null)" />
    <mutant id="mutant_1622" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &lt; ((string.length()) - 1))" to="(index == ((string.length()) - 1))" />
    <mutant id="mutant_2952" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null)" to="(ascii &lt; null)" />
    <mutant id="mutant_1618" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &lt; ((string.length()) - 1))" to="true" />
    <mutant id="mutant_1619" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &lt; ((string.length()) - 1))" to="false" />
    <mutant id="mutant_2949" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null)" to="(ascii &gt; null)" />
    <mutant id="mutant_2940" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) &lt;= '1'" />
    <mutant id="mutant_1616" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2948" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null)" to="(ascii &gt;= null)" />
    <mutant id="mutant_1617" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &lt; ((string.length()) - 1))" to="(index &gt; ((string.length()) - 1))" />
    <mutant id="mutant_2947" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null)" to="(ascii &lt;= null)" />
    <mutant id="mutant_1614" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2946" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) &gt;= '1'" />
    <mutant id="mutant_1615" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2945" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii[(jj - bits)]) == '1'" to="false" />
    <mutant id="mutant_1612" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0)" to="true" />
    <mutant id="mutant_2944" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii[(jj - bits)]) == '1'" to="true" />
    <mutant id="mutant_1613" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0)" to="false" />
    <mutant id="mutant_2943" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) != '1'" />
    <mutant id="mutant_1610" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0)" to="(index != 0)" />
    <mutant id="mutant_2942" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) &gt; '1'" />
    <mutant id="mutant_1611" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0)" to="(index == 0)" />
    <mutant id="mutant_2941" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) &lt; '1'" />
    <mutant id="mutant_1609" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1) == wdsz" to="(n + 1) != wdsz" />
    <mutant id="mutant_1607" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1) == wdsz" to="false" />
    <mutant id="mutant_2939" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits != (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1608" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1) == wdsz" to="(n + 1) &lt; wdsz" />
    <mutant id="mutant_2938" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="false" />
    <mutant id="mutant_1605" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1) == wdsz" to="(n + 1) &gt; wdsz" />
    <mutant id="mutant_2937" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="true" />
    <mutant id="mutant_1606" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1) == wdsz" to="true" />
    <mutant id="mutant_2936" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &lt;= (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1603" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1) == wdsz" to="(n + 1) &lt;= wdsz" />
    <mutant id="mutant_2935" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits == (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1604" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1) == wdsz" to="(n + 1) &gt;= wdsz" />
    <mutant id="mutant_2934" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &gt;= (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1601" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="pos &gt; (-1)" to="pos &gt;= (-1)" />
    <mutant id="mutant_2933" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &gt; (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1602" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="pos &gt; (-1)" to="pos &lt;= (-1)" />
    <mutant id="mutant_2932" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="ii &lt; (l_raw.length)" to="ii != (l_raw.length)" />
    <mutant id="mutant_2931" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="ii &lt; (l_raw.length)" to="ii == (l_raw.length)" />
    <mutant id="mutant_1600" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="pos &gt; (-1)" to="false" />
    <mutant id="mutant_2930" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="ii &lt; (l_raw.length)" to="ii &lt;= (l_raw.length)" />
    <mutant id="mutant_800" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="cmtI &gt;= 0" to="cmtI &lt;= 0" />
    <mutant id="mutant_801" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="cmtI &gt;= 0" to="cmtI != 0" />
    <mutant id="mutant_802" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="cmtI &gt;= 0" to="true" />
    <mutant id="mutant_803" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="cmtI &gt;= 0" to="false" />
    <mutant id="mutant_808" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(line.length()) == 0" to="(line.length()) &lt; 0" />
    <mutant id="mutant_809" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(line.length()) == 0" to="true" />
    <mutant id="mutant_804" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="cmtI &gt;= 0" to="cmtI &lt; 0" />
    <mutant id="mutant_805" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(line.length()) == 0" to="(line.length()) &gt; 0" />
    <mutant id="mutant_806" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(line.length()) == 0" to="(line.length()) != 0" />
    <mutant id="mutant_807" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(line.length()) == 0" to="(line.length()) &lt;= 0" />
    <mutant id="mutant_1674" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null)" to="(txt != null)" />
    <mutant id="mutant_1675" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null)" to="(txt &lt; null)" />
    <mutant id="mutant_1672" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(((index + (test.length())) - 1) &lt; (string.length()))" to="(((index + (test.length())) - 1) == (string.length()))" />
    <mutant id="mutant_1673" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null)" to="(txt &gt; null)" />
    <mutant id="mutant_1670" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(((index + (test.length())) - 1) &lt; (string.length()))" to="true" />
    <mutant id="mutant_1671" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(((index + (test.length())) - 1) &lt; (string.length()))" to="false" />
    <mutant id="mutant_1678" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null)" to="false" />
    <mutant id="mutant_1679" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null)" to="(txt &gt;= null)" />
    <mutant id="mutant_1676" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null)" to="(txt &lt;= null)" />
    <mutant id="mutant_1677" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null)" to="true" />
    <mutant id="mutant_811" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(line.length()) == 0" to="(line.length()) &gt;= 0" />
    <mutant id="mutant_812" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 2" to="(parts.length) &lt;= 2" />
    <mutant id="mutant_813" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 2" to="true" />
    <mutant id="mutant_814" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 2" to="false" />
    <mutant id="mutant_810" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(line.length()) == 0" to="false" />
    <mutant id="mutant_819" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1)" to="((leftCharacter.length()) == 1)" />
    <mutant id="mutant_815" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 2" to="(parts.length) &lt; 2" />
    <mutant id="mutant_816" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 2" to="(parts.length) &gt; 2" />
    <mutant id="mutant_817" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 2" to="(parts.length) == 2" />
    <mutant id="mutant_818" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 2" to="(parts.length) &gt;= 2" />
    <mutant id="mutant_1663" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0)" to="(index &gt; 0)" />
    <mutant id="mutant_2995" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits != (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1664" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0)" to="(index &lt; 0)" />
    <mutant id="mutant_2994" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="false" />
    <mutant id="mutant_1661" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0)" to="true" />
    <mutant id="mutant_2993" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="true" />
    <mutant id="mutant_1662" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0)" to="false" />
    <mutant id="mutant_2992" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &lt;= (BinaryCodec.BITS.length)" />
    <mutant id="mutant_2991" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits == (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1660" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0)" to="(index == 0)" />
    <mutant id="mutant_2990" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &gt;= (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1669" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(((index + (test.length())) - 1) &lt; (string.length()))" to="(((index + (test.length())) - 1) &gt;= (string.length()))" />
    <mutant id="mutant_1667" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(((index + (test.length())) - 1) &lt; (string.length()))" to="(((index + (test.length())) - 1) != (string.length()))" />
    <mutant id="mutant_2999" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) &gt; 0" />
    <mutant id="mutant_1668" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(((index + (test.length())) - 1) &lt; (string.length()))" to="(((index + (test.length())) - 1) &gt; (string.length()))" />
    <mutant id="mutant_2998" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="false" />
    <mutant id="mutant_1665" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0)" to="(index &lt;= 0)" />
    <mutant id="mutant_2997" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="true" />
    <mutant id="mutant_1666" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(((index + (test.length())) - 1) &lt; (string.length()))" to="(((index + (test.length())) - 1) &lt;= (string.length()))" />
    <mutant id="mutant_2996" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) == 0" to="((raw[ii]) &amp; (BinaryCodec.BITS[bits])) &gt;= 0" />
    <mutant id="mutant_822" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1)" to="((leftCharacter.length()) &lt; 1)" />
    <mutant id="mutant_823" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1)" to="((leftCharacter.length()) &lt;= 1)" />
    <mutant id="mutant_824" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1)" to="true" />
    <mutant id="mutant_825" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1)" to="false" />
    <mutant id="mutant_820" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1)" to="((leftCharacter.length()) &gt;= 1)" />
    <mutant id="mutant_821" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1)" to="((leftCharacter.length()) &gt; 1)" />
    <mutant id="mutant_826" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((rightCharacter.length()) != 1)" to="((rightCharacter.length()) == 1)" />
    <mutant id="mutant_827" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((rightCharacter.length()) != 1)" to="((rightCharacter.length()) &gt;= 1)" />
    <mutant id="mutant_828" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((rightCharacter.length()) != 1)" to="((rightCharacter.length()) &gt; 1)" />
    <mutant id="mutant_829" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((rightCharacter.length()) != 1)" to="((rightCharacter.length()) &lt; 1)" />
    <mutant id="mutant_1652" viable="true" in="org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder,int)" from="(Metaphone.VOWELS.indexOf(string.charAt(index))) &gt;= 0" to="(Metaphone.VOWELS.indexOf(string.charAt(index))) &gt; 0" />
    <mutant id="mutant_2984" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="ii &lt; (raw.length)" to="true" />
    <mutant id="mutant_1653" viable="true" in="org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder,int)" from="(Metaphone.VOWELS.indexOf(string.charAt(index))) &gt;= 0" to="(Metaphone.VOWELS.indexOf(string.charAt(index))) == 0" />
    <mutant id="mutant_2983" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="ii &lt; (raw.length)" to="ii &gt;= (raw.length)" />
    <mutant id="mutant_1650" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index - 1))) == c" to="false" />
    <mutant id="mutant_2982" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="ii &lt; (raw.length)" to="ii &gt; (raw.length)" />
    <mutant id="mutant_1651" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index - 1))) == c" to="(string.charAt((index - 1))) &lt; c" />
    <mutant id="mutant_2981" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) &gt;= '1'" />
    <mutant id="mutant_2980" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii[(jj - bits)]) == '1'" to="false" />
    <mutant id="mutant_1658" viable="true" in="org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder,int)" from="(Metaphone.VOWELS.indexOf(string.charAt(index))) &gt;= 0" to="(Metaphone.VOWELS.indexOf(string.charAt(index))) &lt; 0" />
    <mutant id="mutant_1659" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0)" to="(index != 0)" />
    <mutant id="mutant_2989" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &gt; (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1656" viable="true" in="org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder,int)" from="(Metaphone.VOWELS.indexOf(string.charAt(index))) &gt;= 0" to="false" />
    <mutant id="mutant_2988" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="ii &lt; (raw.length)" to="ii != (raw.length)" />
    <mutant id="mutant_1657" viable="true" in="org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder,int)" from="(Metaphone.VOWELS.indexOf(string.charAt(index))) &gt;= 0" to="(Metaphone.VOWELS.indexOf(string.charAt(index))) != 0" />
    <mutant id="mutant_2987" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="ii &lt; (raw.length)" to="ii == (raw.length)" />
    <mutant id="mutant_1654" viable="true" in="org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder,int)" from="(Metaphone.VOWELS.indexOf(string.charAt(index))) &gt;= 0" to="(Metaphone.VOWELS.indexOf(string.charAt(index))) &lt;= 0" />
    <mutant id="mutant_2986" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="ii &lt; (raw.length)" to="ii &lt;= (raw.length)" />
    <mutant id="mutant_1655" viable="true" in="org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder,int)" from="(Metaphone.VOWELS.indexOf(string.charAt(index))) &gt;= 0" to="true" />
    <mutant id="mutant_2985" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="ii &lt; (raw.length)" to="false" />
    <mutant id="mutant_833" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 4" to="(parts.length) &lt;= 4" />
    <mutant id="mutant_834" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 4" to="(parts.length) &lt; 4" />
    <mutant id="mutant_835" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 4" to="true" />
    <mutant id="mutant_836" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 4" to="false" />
    <mutant id="mutant_830" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((rightCharacter.length()) != 1)" to="((rightCharacter.length()) &lt;= 1)" />
    <mutant id="mutant_831" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((rightCharacter.length()) != 1)" to="true" />
    <mutant id="mutant_832" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((rightCharacter.length()) != 1)" to="false" />
    <mutant id="mutant_837" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 4" to="(parts.length) &gt; 4" />
    <mutant id="mutant_838" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 4" to="(parts.length) == 4" />
    <mutant id="mutant_839" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(parts.length) != 4" to="(parts.length) &gt;= 4" />
    <mutant id="mutant_1641" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &lt; (string.length()))" to="true" />
    <mutant id="mutant_2973" viable="false" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="bits &lt; (BinaryCodec.BITS.length)" to="false" />
    <mutant id="mutant_1642" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &lt; (string.length()))" to="false" />
    <mutant id="mutant_2972" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="bits &lt; (BinaryCodec.BITS.length)" to="true" />
    <mutant id="mutant_2971" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits &lt;= (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1640" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &lt; (string.length()))" to="(index &gt; (string.length()))" />
    <mutant id="mutant_2970" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits == (BinaryCodec.BITS.length)" />
    <mutant id="mutant_1649" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index - 1))) == c" to="true" />
    <mutant id="mutant_1647" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index - 1))) == c" to="(string.charAt((index - 1))) &gt; c" />
    <mutant id="mutant_2979" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii[(jj - bits)]) == '1'" to="true" />
    <mutant id="mutant_1648" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index - 1))) == c" to="(string.charAt((index - 1))) &lt;= c" />
    <mutant id="mutant_2978" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) != '1'" />
    <mutant id="mutant_1645" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index - 1))) == c" to="(string.charAt((index - 1))) != c" />
    <mutant id="mutant_2977" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) &gt; '1'" />
    <mutant id="mutant_1646" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(string.charAt((index - 1))) == c" to="(string.charAt((index - 1))) &gt;= c" />
    <mutant id="mutant_2976" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) &lt; '1'" />
    <mutant id="mutant_1643" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &lt; (string.length()))" to="(index &gt;= (string.length()))" />
    <mutant id="mutant_2975" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii[(jj - bits)]) == '1'" to="(ascii[(jj - bits)]) &lt;= '1'" />
    <mutant id="mutant_1644" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &lt; (string.length()))" to="(index &lt;= (string.length()))" />
    <mutant id="mutant_2974" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="bits &lt; (BinaryCodec.BITS.length)" to="bits != (BinaryCodec.BITS.length)" />
    <mutant id="mutant_844" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="rules == null" to="true" />
    <mutant id="mutant_845" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="rules == null" to="false" />
    <mutant id="mutant_846" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="rules == null" to="rules != null" />
    <mutant id="mutant_847" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength))" to="((this.primary.length()) &lt; (this.maxLength))" />
    <mutant id="mutant_840" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="rules == null" to="rules &lt; null" />
    <mutant id="mutant_841" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="rules == null" to="rules &gt;= null" />
    <mutant id="mutant_842" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="rules == null" to="rules &lt;= null" />
    <mutant id="mutant_843" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="rules == null" to="rules &gt; null" />
    <mutant id="mutant_848" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength))" to="((this.primary.length()) == (this.maxLength))" />
    <mutant id="mutant_849" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength))" to="((this.primary.length()) &lt;= (this.maxLength))" />
    <mutant id="mutant_3413" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="j &lt; 25" to="j &gt; 25" />
    <mutant id="mutant_3412" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="j &lt; 25" to="j &gt;= 25" />
    <mutant id="mutant_3411" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="j &lt; 25" to="j != 25" />
    <mutant id="mutant_3410" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="j &lt; 25" to="false" />
    <mutant id="mutant_3419" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="i &lt; 32" to="i == 32" />
    <mutant id="mutant_3418" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="i &lt; 32" to="false" />
    <mutant id="mutant_3417" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="i &lt; 32" to="true" />
    <mutant id="mutant_3416" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="i &lt; 32" to="i != 32" />
    <mutant id="mutant_3415" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="j &lt; 25" to="j &lt;= 25" />
    <mutant id="mutant_3414" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="j &lt; 25" to="j == 25" />
    <mutant id="mutant_855" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.alternate.length()) &gt;= (this.maxLength))" to="((this.alternate.length()) == (this.maxLength))" />
    <mutant id="mutant_856" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.alternate.length()) &gt;= (this.maxLength))" to="((this.alternate.length()) &lt;= (this.maxLength))" />
    <mutant id="mutant_857" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.alternate.length()) &gt;= (this.maxLength))" to="true" />
    <mutant id="mutant_858" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.alternate.length()) &gt;= (this.maxLength))" to="false" />
    <mutant id="mutant_851" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength))" to="false" />
    <mutant id="mutant_852" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength))" to="((this.primary.length()) != (this.maxLength))" />
    <mutant id="mutant_853" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength))" to="((this.primary.length()) &gt; (this.maxLength))" />
    <mutant id="mutant_854" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.alternate.length()) &gt;= (this.maxLength))" to="((this.alternate.length()) &lt; (this.maxLength))" />
    <mutant id="mutant_859" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.alternate.length()) &gt;= (this.maxLength))" to="((this.alternate.length()) != (this.maxLength))" />
    <mutant id="mutant_3402" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value &lt; 0" to="value != 0" />
    <mutant id="mutant_3401" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="salt == null" to="salt &lt;= null" />
    <mutant id="mutant_3400" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="salt == null" to="salt &gt; null" />
    <mutant id="mutant_3409" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="j &lt; 25" to="true" />
    <mutant id="mutant_3408" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value &lt; 0" to="value &lt;= 0" />
    <mutant id="mutant_850" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength))" to="true" />
    <mutant id="mutant_3407" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value &lt; 0" to="value == 0" />
    <mutant id="mutant_3406" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value &lt; 0" to="value &gt;= 0" />
    <mutant id="mutant_3405" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value &lt; 0" to="value &gt; 0" />
    <mutant id="mutant_3404" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value &lt; 0" to="false" />
    <mutant id="mutant_3403" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value &lt; 0" to="true" />
    <mutant id="mutant_866" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(char)" from="(this.alternate.length()) &lt; (this.maxLength)" to="(this.alternate.length()) != (this.maxLength)" />
    <mutant id="mutant_867" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(char)" from="(this.alternate.length()) &lt; (this.maxLength)" to="(this.alternate.length()) &gt; (this.maxLength)" />
    <mutant id="mutant_868" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) &gt;= addChars" />
    <mutant id="mutant_869" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) &gt; addChars" />
    <mutant id="mutant_862" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(char)" from="(this.alternate.length()) &lt; (this.maxLength)" to="(this.alternate.length()) == (this.maxLength)" />
    <mutant id="mutant_863" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(char)" from="(this.alternate.length()) &lt; (this.maxLength)" to="(this.alternate.length()) &lt;= (this.maxLength)" />
    <mutant id="mutant_864" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(char)" from="(this.alternate.length()) &lt; (this.maxLength)" to="true" />
    <mutant id="mutant_865" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(char)" from="(this.alternate.length()) &lt; (this.maxLength)" to="false" />
    <mutant id="mutant_1696" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'N'" to="(inwd[1]) &gt;= 'N'" />
    <mutant id="mutant_1697" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'N'" to="true" />
    <mutant id="mutant_1694" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'N'" to="(inwd[1]) != 'N'" />
    <mutant id="mutant_1695" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'N'" to="(inwd[1]) &lt; 'N'" />
    <mutant id="mutant_1692" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="txtLength == 1" to="txtLength &gt; 1" />
    <mutant id="mutant_1693" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="txtLength == 1" to="txtLength &gt;= 1" />
    <mutant id="mutant_1690" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="txtLength == 1" to="true" />
    <mutant id="mutant_1691" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="txtLength == 1" to="false" />
    <mutant id="mutant_860" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.alternate.length()) &gt;= (this.maxLength))" to="((this.alternate.length()) &gt; (this.maxLength))" />
    <mutant id="mutant_861" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(char)" from="(this.alternate.length()) &lt; (this.maxLength)" to="(this.alternate.length()) &gt;= (this.maxLength)" />
    <mutant id="mutant_1698" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'N'" to="false" />
    <mutant id="mutant_1699" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(inwd[1]) == 'N'" to="(inwd[1]) &lt;= 'N'" />
    <mutant id="mutant_877" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(char)" from="(this.primary.length()) &lt; (this.maxLength)" to="(this.primary.length()) &lt;= (this.maxLength)" />
    <mutant id="mutant_878" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(char)" from="(this.primary.length()) &lt; (this.maxLength)" to="true" />
    <mutant id="mutant_879" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(char)" from="(this.primary.length()) &lt; (this.maxLength)" to="false" />
    <mutant id="mutant_873" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) == addChars" />
    <mutant id="mutant_874" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) != addChars" />
    <mutant id="mutant_875" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(char)" from="(this.primary.length()) &lt; (this.maxLength)" to="(this.primary.length()) &gt;= (this.maxLength)" />
    <mutant id="mutant_876" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(char)" from="(this.primary.length()) &lt; (this.maxLength)" to="(this.primary.length()) == (this.maxLength)" />
    <mutant id="mutant_1685" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((txtLength = txt.length()) == 0)" to="((txtLength = txt.length()) &gt; 0)" />
    <mutant id="mutant_1686" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((txtLength = txt.length()) == 0)" to="((txtLength = txt.length()) &gt;= 0)" />
    <mutant id="mutant_1683" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((txtLength = txt.length()) == 0)" to="true" />
    <mutant id="mutant_1684" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((txtLength = txt.length()) == 0)" to="false" />
    <mutant id="mutant_1681" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((txtLength = txt.length()) == 0)" to="((txtLength = txt.length()) != 0)" />
    <mutant id="mutant_1682" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((txtLength = txt.length()) == 0)" to="((txtLength = txt.length()) &lt; 0)" />
    <mutant id="mutant_1680" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((txtLength = txt.length()) == 0)" to="((txtLength = txt.length()) &lt;= 0)" />
    <mutant id="mutant_870" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) &lt; addChars" />
    <mutant id="mutant_871" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(value.length()) &lt;= addChars" to="true" />
    <mutant id="mutant_872" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(value.length()) &lt;= addChars" to="false" />
    <mutant id="mutant_1689" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="txtLength == 1" to="txtLength &lt; 1" />
    <mutant id="mutant_1687" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="txtLength == 1" to="txtLength &lt;= 1" />
    <mutant id="mutant_1688" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="txtLength == 1" to="txtLength != 1" />
    <mutant id="mutant_888" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) != addChars" />
    <mutant id="mutant_889" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="index &lt;= 1" to="index != 1" />
    <mutant id="mutant_884" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) &lt; addChars" />
    <mutant id="mutant_885" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(value.length()) &lt;= addChars" to="true" />
    <mutant id="mutant_886" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(value.length()) &lt;= addChars" to="false" />
    <mutant id="mutant_887" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) == addChars" />
    <mutant id="mutant_3460" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; 13" to="true" />
    <mutant id="mutant_2125" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="mapped == '0'" to="mapped != '0'" />
    <mutant id="mutant_3457" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (original.length))" to="(i == (original.length))" />
    <mutant id="mutant_2126" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="mapped == '0'" to="mapped &lt;= '0'" />
    <mutant id="mutant_3456" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (original.length))" to="(i &gt;= (original.length))" />
    <mutant id="mutant_2123" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="mapped == '0'" to="true" />
    <mutant id="mutant_3455" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (original.length))" to="(i &lt;= (original.length))" />
    <mutant id="mutant_2124" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="mapped == '0'" to="false" />
    <mutant id="mutant_3454" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (original.length))" to="false" />
    <mutant id="mutant_2121" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="mapped == '0'" to="mapped &gt; '0'" />
    <mutant id="mutant_3453" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (original.length))" to="true" />
    <mutant id="mutant_2122" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="mapped == '0'" to="mapped &lt; '0'" />
    <mutant id="mutant_3452" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (original.length))" to="(i &gt; (original.length))" />
    <mutant id="mutant_3451" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (original.length))" to="(i != (original.length))" />
    <mutant id="mutant_2120" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(count &lt; (out.length))" to="(count &gt; (out.length))" />
    <mutant id="mutant_3450" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length))" to="(i == (key.length))" />
    <mutant id="mutant_880" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(char)" from="(this.primary.length()) &lt; (this.maxLength)" to="(this.primary.length()) != (this.maxLength)" />
    <mutant id="mutant_881" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(char)" from="(this.primary.length()) &lt; (this.maxLength)" to="(this.primary.length()) &gt; (this.maxLength)" />
    <mutant id="mutant_882" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) &gt;= addChars" />
    <mutant id="mutant_883" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(value.length()) &lt;= addChars" to="(value.length()) &gt; addChars" />
    <mutant id="mutant_2129" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#')" to="(mapped == '#')" />
    <mutant id="mutant_2127" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="mapped == '0'" to="mapped &gt;= '0'" />
    <mutant id="mutant_3459" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; 13" to="i &lt;= 13" />
    <mutant id="mutant_2128" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#')" to="(mapped &lt;= '#')" />
    <mutant id="mutant_3458" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; 13" to="i &gt;= 13" />
    <mutant id="mutant_899" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'I')" to="true" />
    <mutant id="mutant_895" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="index &lt;= 1" to="index == 1" />
    <mutant id="mutant_896" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'I')" to="(c &lt;= 'I')" />
    <mutant id="mutant_897" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'I')" to="(c == 'I')" />
    <mutant id="mutant_898" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(c != 'I')" to="(c &gt;= 'I')" />
    <mutant id="mutant_2114" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(count &lt; (out.length))" to="(count == (out.length))" />
    <mutant id="mutant_3446" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length))" to="true" />
    <mutant id="mutant_2115" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(count &lt; (out.length))" to="true" />
    <mutant id="mutant_3445" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length))" to="(i &gt; (key.length))" />
    <mutant id="mutant_2112" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length()))" to="false" />
    <mutant id="mutant_3444" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length))" to="(i != (key.length))" />
    <mutant id="mutant_2113" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length()))" to="(incount &gt; (str.length()))" />
    <mutant id="mutant_3443" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; (key.length)" to="i == (key.length)" />
    <mutant id="mutant_2110" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length()))" to="(incount &gt;= (str.length()))" />
    <mutant id="mutant_3442" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; (key.length)" to="i &gt;= (key.length)" />
    <mutant id="mutant_2111" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length()))" to="true" />
    <mutant id="mutant_3441" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; (key.length)" to="i &lt;= (key.length)" />
    <mutant id="mutant_3440" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; (key.length)" to="false" />
    <mutant id="mutant_891" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="index &lt;= 1" to="index &gt; 1" />
    <mutant id="mutant_892" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="index &lt;= 1" to="true" />
    <mutant id="mutant_893" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="index &lt;= 1" to="false" />
    <mutant id="mutant_894" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="index &lt;= 1" to="index &gt;= 1" />
    <mutant id="mutant_2118" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(count &lt; (out.length))" to="(count &lt;= (out.length))" />
    <mutant id="mutant_2119" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(count &lt; (out.length))" to="(count != (out.length))" />
    <mutant id="mutant_3449" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length))" to="(i &gt;= (key.length))" />
    <mutant id="mutant_2116" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(count &lt; (out.length))" to="false" />
    <mutant id="mutant_3448" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length))" to="(i &lt;= (key.length))" />
    <mutant id="mutant_890" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="index &lt;= 1" to="index &lt; 1" />
    <mutant id="mutant_2117" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(count &lt; (out.length))" to="(count &gt;= (out.length))" />
    <mutant id="mutant_3447" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length))" to="false" />
    <mutant id="mutant_2103" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &lt; 0" />
    <mutant id="mutant_3435" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt &gt; null" />
    <mutant id="mutant_2104" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(str.length()) == 0" to="true" />
    <mutant id="mutant_3434" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="salt == null" to="false" />
    <mutant id="mutant_2101" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) != 0" />
    <mutant id="mutant_3433" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="salt == null" to="true" />
    <mutant id="mutant_2102" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &lt;= 0" />
    <mutant id="mutant_3432" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt != null" />
    <mutant id="mutant_3431" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt &lt; null" />
    <mutant id="mutant_2100" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &gt; 0" />
    <mutant id="mutant_3430" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt &gt;= null" />
    <mutant id="mutant_2109" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length()))" to="(incount == (str.length()))" />
    <mutant id="mutant_2107" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length()))" to="(incount &lt;= (str.length()))" />
    <mutant id="mutant_3439" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; (key.length)" to="true" />
    <mutant id="mutant_2108" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length()))" to="(incount != (str.length()))" />
    <mutant id="mutant_3438" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; (key.length)" to="i &gt; (key.length)" />
    <mutant id="mutant_2105" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(str.length()) == 0" to="false" />
    <mutant id="mutant_3437" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="i &lt; (key.length)" to="i != (key.length)" />
    <mutant id="mutant_2106" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(str.length()) == 0" to="(str.length()) &gt;= 0" />
    <mutant id="mutant_3436" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt &lt;= null" />
    <mutant id="mutant_3424" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" from="i &lt; 16" to="i &gt;= 16" />
    <mutant id="mutant_3423" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" from="i &lt; 16" to="i == 16" />
    <mutant id="mutant_3422" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="i &lt; 32" to="i &gt; 32" />
    <mutant id="mutant_3421" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="i &lt; 32" to="i &gt;= 32" />
    <mutant id="mutant_3420" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="i &lt; 32" to="i &lt;= 32" />
    <mutant id="mutant_3429" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" from="i &lt; 16" to="i &lt;= 16" />
    <mutant id="mutant_3428" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" from="i &lt; 16" to="false" />
    <mutant id="mutant_3427" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" from="i &lt; 16" to="true" />
    <mutant id="mutant_3426" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" from="i &lt; 16" to="i != 16" />
    <mutant id="mutant_3425" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])" from="i &lt; 16" to="i &gt; 16" />
    <mutant id="mutant_327" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(content.length()) == 0" to="false" />
    <mutant id="mutant_328" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(content.length()) == 0" to="(content.length()) &gt;= 0" />
    <mutant id="mutant_329" viable="true" in="org.apache.commons.codec.language.bm.Rule$3.isMatch(java.lang.CharSequence)" from="(input.length()) == 0" to="(input.length()) &gt;= 0" />
    <mutant id="mutant_323" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(content.length()) == 0" to="(content.length()) != 0" />
    <mutant id="mutant_324" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(content.length()) == 0" to="(content.length()) &lt;= 0" />
    <mutant id="mutant_325" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(content.length()) == 0" to="(content.length()) &lt; 0" />
    <mutant id="mutant_326" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(content.length()) == 0" to="true" />
    <mutant id="mutant_3262" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7) != 0" to="(i % 7) &lt; 0" />
    <mutant id="mutant_3261" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3) != 0" to="(i % 3) &gt;= 0" />
    <mutant id="mutant_3260" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3) != 0" to="(i % 3) &gt; 0" />
    <mutant id="mutant_3259" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3) != 0" to="(i % 3) == 0" />
    <mutant id="mutant_3258" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3) != 0" to="(i % 3) &lt;= 0" />
    <mutant id="mutant_3257" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3) != 0" to="false" />
    <mutant id="mutant_3256" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3) != 0" to="true" />
    <mutant id="mutant_3255" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3) != 0" to="(i % 3) &lt; 0" />
    <mutant id="mutant_3254" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &lt; 0" />
    <mutant id="mutant_3253" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &lt;= 0" />
    <mutant id="mutant_3252" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="false" />
    <mutant id="mutant_320" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="open &gt;= 0" to="true" />
    <mutant id="mutant_321" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="open &gt;= 0" to="false" />
    <mutant id="mutant_322" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(content.length()) == 0" to="(content.length()) &gt; 0" />
    <mutant id="mutant_338" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) == 0)" to="((content.length()) &lt;= 0)" />
    <mutant id="mutant_339" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) == 0)" to="((content.length()) &lt; 0)" />
    <mutant id="mutant_334" viable="true" in="org.apache.commons.codec.language.bm.Rule$3.isMatch(java.lang.CharSequence)" from="(input.length()) == 0" to="false" />
    <mutant id="mutant_335" viable="true" in="org.apache.commons.codec.language.bm.Rule$3.isMatch(java.lang.CharSequence)" from="(input.length()) == 0" to="(input.length()) != 0" />
    <mutant id="mutant_336" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) == 0)" to="((content.length()) &gt; 0)" />
    <mutant id="mutant_337" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) == 0)" to="((content.length()) != 0)" />
    <mutant id="mutant_3251" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="true" />
    <mutant id="mutant_3250" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &gt;= 0" />
    <mutant id="mutant_3248" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &gt; 0" />
    <mutant id="mutant_3247" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="i &lt; (Md5Crypt.ROUNDS)" to="i != (Md5Crypt.ROUNDS)" />
    <mutant id="mutant_3246" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="i &lt; (Md5Crypt.ROUNDS)" to="i == (Md5Crypt.ROUNDS)" />
    <mutant id="mutant_3245" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="i &lt; (Md5Crypt.ROUNDS)" to="false" />
    <mutant id="mutant_3244" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="i &lt; (Md5Crypt.ROUNDS)" to="true" />
    <mutant id="mutant_3243" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="i &lt; (Md5Crypt.ROUNDS)" to="i &lt;= (Md5Crypt.ROUNDS)" />
    <mutant id="mutant_3242" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="i &lt; (Md5Crypt.ROUNDS)" to="i &gt; (Md5Crypt.ROUNDS)" />
    <mutant id="mutant_3241" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="i &lt; (Md5Crypt.ROUNDS)" to="i &gt;= (Md5Crypt.ROUNDS)" />
    <mutant id="mutant_330" viable="true" in="org.apache.commons.codec.language.bm.Rule$3.isMatch(java.lang.CharSequence)" from="(input.length()) == 0" to="(input.length()) &gt; 0" />
    <mutant id="mutant_331" viable="true" in="org.apache.commons.codec.language.bm.Rule$3.isMatch(java.lang.CharSequence)" from="(input.length()) == 0" to="(input.length()) &lt; 0" />
    <mutant id="mutant_332" viable="true" in="org.apache.commons.codec.language.bm.Rule$3.isMatch(java.lang.CharSequence)" from="(input.length()) == 0" to="(input.length()) &lt;= 0" />
    <mutant id="mutant_333" viable="true" in="org.apache.commons.codec.language.bm.Rule$3.isMatch(java.lang.CharSequence)" from="(input.length()) == 0" to="true" />
    <mutant id="mutant_3249" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) == 0" />
    <mutant id="mutant_349" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1)" to="((input.length()) &lt; 1)" />
    <mutant id="mutant_345" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1)" to="((input.length()) &lt;= 1)" />
    <mutant id="mutant_346" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1)" to="((input.length()) != 1)" />
    <mutant id="mutant_347" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1)" to="true" />
    <mutant id="mutant_348" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1)" to="false" />
    <mutant id="mutant_3240" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(ii &amp; 1) == 1" to="(ii &amp; 1) &gt; 1" />
    <mutant id="mutant_3237" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(ii &amp; 1) == 1" to="true" />
    <mutant id="mutant_3236" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(ii &amp; 1) == 1" to="(ii &amp; 1) != 1" />
    <mutant id="mutant_3235" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(ii &amp; 1) == 1" to="(ii &amp; 1) &lt; 1" />
    <mutant id="mutant_3234" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(ii &amp; 1) == 1" to="(ii &amp; 1) &lt;= 1" />
    <mutant id="mutant_3233" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii &lt;= 0" />
    <mutant id="mutant_3232" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii &lt; 0" />
    <mutant id="mutant_3231" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii == 0" />
    <mutant id="mutant_3230" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="false" />
    <mutant id="mutant_341" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) == 0)" to="false" />
    <mutant id="mutant_342" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) == 0)" to="((content.length()) &gt;= 0)" />
    <mutant id="mutant_343" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1)" to="((input.length()) &gt; 1)" />
    <mutant id="mutant_344" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1)" to="((input.length()) &gt;= 1)" />
    <mutant id="mutant_3239" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(ii &amp; 1) == 1" to="(ii &amp; 1) &gt;= 1" />
    <mutant id="mutant_340" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) == 0)" to="true" />
    <mutant id="mutant_3238" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(ii &amp; 1) == 1" to="false" />
    <mutant id="mutant_356" viable="false" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) &gt;= shouldMatch)" />
    <mutant id="mutant_357" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) &gt;= 0)" />
    <mutant id="mutant_358" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) == 0)" />
    <mutant id="mutant_359" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) &lt; 0)" />
    <mutant id="mutant_3226" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 16" to="ii == 16" />
    <mutant id="mutant_3225" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 16" to="false" />
    <mutant id="mutant_3224" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 16" to="true" />
    <mutant id="mutant_3223" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 16" to="ii &gt;= 16" />
    <mutant id="mutant_3222" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 16" to="ii != 16" />
    <mutant id="mutant_3221" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 16" to="ii &lt; 16" />
    <mutant id="mutant_3220" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 16" to="ii &lt;= 16" />
    <mutant id="mutant_352" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) != shouldMatch)" />
    <mutant id="mutant_353" viable="false" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) &lt; shouldMatch)" />
    <mutant id="mutant_354" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="true" />
    <mutant id="mutant_355" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="false" />
    <mutant id="mutant_3229" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="true" />
    <mutant id="mutant_350" viable="false" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) &gt; shouldMatch)" />
    <mutant id="mutant_3228" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii &gt;= 0" />
    <mutant id="mutant_351" viable="false" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) &lt;= shouldMatch)" />
    <mutant id="mutant_3227" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii != 0" />
    <mutant id="mutant_367" viable="false" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) &lt; shouldMatch)" />
    <mutant id="mutant_368" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="true" />
    <mutant id="mutant_369" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="false" />
    <mutant id="mutant_3299" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m.group(3)) != null" to="true" />
    <mutant id="mutant_3298" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m.group(3)) != null" to="(m.group(3)) == null" />
    <mutant id="mutant_3297" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m.group(3)) != null" to="(m.group(3)) &gt; null" />
    <mutant id="mutant_3296" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null)" to="(m != null)" />
    <mutant id="mutant_363" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) != 0)" />
    <mutant id="mutant_364" viable="false" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) &gt; shouldMatch)" />
    <mutant id="mutant_365" viable="false" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) &lt;= shouldMatch)" />
    <mutant id="mutant_366" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) != shouldMatch)" />
    <mutant id="mutant_360" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) &lt;= 0)" />
    <mutant id="mutant_361" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="true" />
    <mutant id="mutant_362" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="false" />
    <mutant id="mutant_378" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) != shouldMatch)" />
    <mutant id="mutant_379" viable="false" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) &gt; shouldMatch)" />
    <mutant id="mutant_3295" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null)" to="(m &lt;= null)" />
    <mutant id="mutant_3294" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null)" to="false" />
    <mutant id="mutant_3293" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null)" to="true" />
    <mutant id="mutant_3292" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null)" to="(m &gt;= null)" />
    <mutant id="mutant_3291" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null)" to="(m &lt; null)" />
    <mutant id="mutant_3290" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null)" to="(m &gt; null)" />
    <mutant id="mutant_3289" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="salt == null" to="salt &lt;= null" />
    <mutant id="mutant_3288" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="salt == null" to="salt &gt; null" />
    <mutant id="mutant_3287" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="salt == null" to="false" />
    <mutant id="mutant_3286" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="salt == null" to="true" />
    <mutant id="mutant_3285" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="salt == null" to="salt != null" />
    <mutant id="mutant_374" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) &lt;= 0)" />
    <mutant id="mutant_375" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="true" />
    <mutant id="mutant_376" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="false" />
    <mutant id="mutant_377" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) != 0)" />
    <mutant id="mutant_370" viable="false" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) &gt;= shouldMatch)" />
    <mutant id="mutant_371" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) &gt;= 0)" />
    <mutant id="mutant_372" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) == 0)" />
    <mutant id="mutant_373" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0)" to="((input.length()) &lt; 0)" />
    <mutant id="mutant_389" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null)" to="true" />
    <mutant id="mutant_3284" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="salt == null" to="salt &lt; null" />
    <mutant id="mutant_3283" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="salt == null" to="salt &gt;= null" />
    <mutant id="mutant_3282" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="salt == null" to="salt &lt;= null" />
    <mutant id="mutant_3281" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="salt == null" to="salt &gt; null" />
    <mutant id="mutant_3280" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="salt == null" to="false" />
    <mutant id="mutant_3279" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="salt == null" to="true" />
    <mutant id="mutant_380" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="true" />
    <mutant id="mutant_3278" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="salt == null" to="salt != null" />
    <mutant id="mutant_3277" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="salt == null" to="salt &lt; null" />
    <mutant id="mutant_3276" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="salt == null" to="salt &gt;= null" />
    <mutant id="mutant_3275" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &lt; 0" />
    <mutant id="mutant_3274" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &lt;= 0" />
    <mutant id="mutant_385" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null)" to="(txt &gt; null)" />
    <mutant id="mutant_386" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null)" to="(txt != null)" />
    <mutant id="mutant_387" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null)" to="(txt &lt; null)" />
    <mutant id="mutant_388" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null)" to="(txt &lt;= null)" />
    <mutant id="mutant_381" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="false" />
    <mutant id="mutant_382" viable="false" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) &lt; shouldMatch)" />
    <mutant id="mutant_383" viable="false" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) &lt;= shouldMatch)" />
    <mutant id="mutant_384" viable="false" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) &gt;= shouldMatch)" />
    <mutant id="mutant_3273" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="false" />
    <mutant id="mutant_3272" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="true" />
    <mutant id="mutant_3271" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &gt;= 0" />
    <mutant id="mutant_3270" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) == 0" />
    <mutant id="mutant_3269" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i &amp; 1) != 0" to="(i &amp; 1) &gt; 0" />
    <mutant id="mutant_390" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null)" to="false" />
    <mutant id="mutant_3268" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7) != 0" to="(i % 7) &gt; 0" />
    <mutant id="mutant_391" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null)" to="(txt &gt;= null)" />
    <mutant id="mutant_3267" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7) != 0" to="(i % 7) == 0" />
    <mutant id="mutant_3266" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7) != 0" to="(i % 7) &gt;= 0" />
    <mutant id="mutant_3265" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7) != 0" to="false" />
    <mutant id="mutant_3264" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7) != 0" to="true" />
    <mutant id="mutant_3263" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7) != 0" to="(i % 7) &lt;= 0" />
    <mutant id="mutant_396" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="((txt.length()) == 0)" to="true" />
    <mutant id="mutant_397" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="((txt.length()) == 0)" to="false" />
    <mutant id="mutant_398" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) &gt;= 0)" />
    <mutant id="mutant_399" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null)" to="(txt &gt; null)" />
    <mutant id="mutant_392" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) &gt; 0)" />
    <mutant id="mutant_393" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) != 0)" />
    <mutant id="mutant_394" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) &lt;= 0)" />
    <mutant id="mutant_395" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="((txt.length()) == 0)" to="((txt.length()) &lt; 0)" />
    <mutant id="mutant_2809" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset &lt; (b.length))" />
    <mutant id="mutant_2808" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset &gt;= (b.length))" />
    <mutant id="mutant_2807" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset &lt;= (b.length))" />
    <mutant id="mutant_2806" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(len &lt; 0)" to="(len &gt; 0)" />
    <mutant id="mutant_2805" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(len &lt; 0)" to="(len &gt;= 0)" />
    <mutant id="mutant_2804" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(len &lt; 0)" to="false" />
    <mutant id="mutant_2803" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(len &lt; 0)" to="true" />
    <mutant id="mutant_2802" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(len &lt; 0)" to="(len &lt;= 0)" />
    <mutant id="mutant_2801" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(len &lt; 0)" to="(len == 0)" />
    <mutant id="mutant_2800" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(len &lt; 0)" to="(len != 0)" />
    <mutant id="mutant_1519" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT))" to="(sumLength == (MatchRatingApproachEncoder.EIGHT))" />
    <mutant id="mutant_2841" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n &lt; 0" to="n &gt;= 0" />
    <mutant id="mutant_1510" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE))" to="(sumLength == (MatchRatingApproachEncoder.FIVE))" />
    <mutant id="mutant_2840" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n &lt; 0" to="n &gt; 0" />
    <mutant id="mutant_1517" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="(sumLength &gt;= (MatchRatingApproachEncoder.SEVEN))" />
    <mutant id="mutant_2849" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="len == (BaseNCodec.EOF)" to="len &lt;= (BaseNCodec.EOF)" />
    <mutant id="mutant_1518" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="(sumLength &lt; (MatchRatingApproachEncoder.SEVEN))" />
    <mutant id="mutant_2848" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="todo &gt; 0" to="false" />
    <mutant id="mutant_1515" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="false" />
    <mutant id="mutant_2847" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="todo &gt; 0" to="true" />
    <mutant id="mutant_1516" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="(sumLength &gt; (MatchRatingApproachEncoder.SEVEN))" />
    <mutant id="mutant_2846" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="todo &gt; 0" to="todo &lt; 0" />
    <mutant id="mutant_1513" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="(sumLength != (MatchRatingApproachEncoder.SEVEN))" />
    <mutant id="mutant_2845" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="todo &gt; 0" to="todo != 0" />
    <mutant id="mutant_1514" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="true" />
    <mutant id="mutant_2844" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="todo &gt; 0" to="todo &lt;= 0" />
    <mutant id="mutant_1511" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE))" to="(sumLength &lt;= (MatchRatingApproachEncoder.FIVE))" />
    <mutant id="mutant_2843" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="todo &gt; 0" to="todo == 0" />
    <mutant id="mutant_1512" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="(sumLength == (MatchRatingApproachEncoder.SEVEN))" />
    <mutant id="mutant_2842" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="todo &gt; 0" to="todo &gt;= 0" />
    <mutant id="mutant_1508" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE))" to="(sumLength != (MatchRatingApproachEncoder.FIVE))" />
    <mutant id="mutant_1509" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE))" to="(sumLength &lt; (MatchRatingApproachEncoder.FIVE))" />
    <mutant id="mutant_2839" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n &lt; 0" to="n == 0" />
    <mutant id="mutant_2830" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="readLen == 0" to="readLen &lt;= 0" />
    <mutant id="mutant_1506" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE))" to="true" />
    <mutant id="mutant_2838" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n &lt; 0" to="n &lt;= 0" />
    <mutant id="mutant_1507" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE))" to="false" />
    <mutant id="mutant_2837" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n &lt; 0" to="false" />
    <mutant id="mutant_1504" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength &lt;= (MatchRatingApproachEncoder.FOUR)" to="sumLength &lt; (MatchRatingApproachEncoder.FOUR)" />
    <mutant id="mutant_2836" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n &lt; 0" to="true" />
    <mutant id="mutant_1505" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE))" to="(sumLength &gt; (MatchRatingApproachEncoder.FIVE))" />
    <mutant id="mutant_2835" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n &lt; 0" to="n != 0" />
    <mutant id="mutant_1502" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength &lt;= (MatchRatingApproachEncoder.FOUR)" to="false" />
    <mutant id="mutant_2834" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="readLen == 0" to="readLen &lt; 0" />
    <mutant id="mutant_1503" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength &lt;= (MatchRatingApproachEncoder.FOUR)" to="sumLength != (MatchRatingApproachEncoder.FOUR)" />
    <mutant id="mutant_2833" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="readLen == 0" to="readLen != 0" />
    <mutant id="mutant_1500" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength &lt;= (MatchRatingApproachEncoder.FOUR)" to="sumLength == (MatchRatingApproachEncoder.FOUR)" />
    <mutant id="mutant_2832" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="readLen == 0" to="false" />
    <mutant id="mutant_1501" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength &lt;= (MatchRatingApproachEncoder.FOUR)" to="true" />
    <mutant id="mutant_2831" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="readLen == 0" to="true" />
    <mutant id="mutant_2829" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="readLen == 0" to="readLen &gt;= 0" />
    <mutant id="mutant_2828" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="readLen == 0" to="readLen &gt; 0" />
    <mutant id="mutant_2827" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="len == 0" to="len &gt; 0" />
    <mutant id="mutant_2826" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="len == 0" to="len &gt;= 0" />
    <mutant id="mutant_2825" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="len == 0" to="false" />
    <mutant id="mutant_2824" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="len == 0" to="true" />
    <mutant id="mutant_2823" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="len == 0" to="len &lt;= 0" />
    <mutant id="mutant_2822" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="len == 0" to="len != 0" />
    <mutant id="mutant_2821" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="len == 0" to="len &lt; 0" />
    <mutant id="mutant_2820" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) &gt;= (b.length))" />
    <mutant id="mutant_2819" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) != (b.length))" />
    <mutant id="mutant_2818" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="false" />
    <mutant id="mutant_2817" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="true" />
    <mutant id="mutant_2816" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) &lt;= (b.length))" />
    <mutant id="mutant_2815" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) == (b.length))" />
    <mutant id="mutant_2814" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) &lt; (b.length))" />
    <mutant id="mutant_2813" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset == (b.length))" />
    <mutant id="mutant_2812" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset != (b.length))" />
    <mutant id="mutant_2811" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length))" to="false" />
    <mutant id="mutant_2810" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length))" to="true" />
    <mutant id="mutant_1553" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &gt; name2Size" to="i != name2Size" />
    <mutant id="mutant_2885" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(len &lt; 0)" to="(len == 0)" />
    <mutant id="mutant_1554" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(strA.length()) &gt; (strB.length())" to="(strA.length()) &lt;= (strB.length())" />
    <mutant id="mutant_2884" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(len &lt; 0)" to="(len != 0)" />
    <mutant id="mutant_1551" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &gt; name2Size" to="true" />
    <mutant id="mutant_2883" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0)" to="(offset &gt;= 0)" />
    <mutant id="mutant_1552" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &gt; name2Size" to="false" />
    <mutant id="mutant_2882" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0)" to="(offset &gt; 0)" />
    <mutant id="mutant_2881" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0)" to="false" />
    <mutant id="mutant_1550" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &gt; name2Size" to="i &lt; name2Size" />
    <mutant id="mutant_2880" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0)" to="true" />
    <mutant id="mutant_1559" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(strA.length()) &gt; (strB.length())" to="(strA.length()) == (strB.length())" />
    <mutant id="mutant_1557" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(strA.length()) &gt; (strB.length())" to="false" />
    <mutant id="mutant_2889" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(len &lt; 0)" to="(len &gt;= 0)" />
    <mutant id="mutant_1558" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(strA.length()) &gt; (strB.length())" to="(strA.length()) &lt; (strB.length())" />
    <mutant id="mutant_2888" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(len &lt; 0)" to="false" />
    <mutant id="mutant_1555" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(strA.length()) &gt; (strB.length())" to="(strA.length()) &gt;= (strB.length())" />
    <mutant id="mutant_2887" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(len &lt; 0)" to="true" />
    <mutant id="mutant_1556" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(strA.length()) &gt; (strB.length())" to="true" />
    <mutant id="mutant_2886" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(len &lt; 0)" to="(len &lt;= 0)" />
    <mutant id="mutant_1542" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &lt; (name1Char.length)" to="true" />
    <mutant id="mutant_2874" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="b == null" to="true" />
    <mutant id="mutant_1543" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &lt; (name1Char.length)" to="false" />
    <mutant id="mutant_2873" viable="false" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="b == null" to="b &lt;= null" />
    <mutant id="mutant_1540" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &lt; (name1Char.length)" to="i != (name1Char.length)" />
    <mutant id="mutant_2872" viable="false" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="b == null" to="b &gt; null" />
    <mutant id="mutant_1541" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &lt; (name1Char.length)" to="i &gt; (name1Char.length)" />
    <mutant id="mutant_2871" viable="false" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="b == null" to="b &gt;= null" />
    <mutant id="mutant_2870" viable="false" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="b == null" to="b &lt; null" />
    <mutant id="mutant_1548" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &gt; name2Size" to="i &gt;= name2Size" />
    <mutant id="mutant_1549" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &gt; name2Size" to="i &lt;= name2Size" />
    <mutant id="mutant_2879" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0)" to="(offset != 0)" />
    <mutant id="mutant_1546" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &lt; (name1Char.length)" to="i == (name1Char.length)" />
    <mutant id="mutant_2878" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0)" to="(offset == 0)" />
    <mutant id="mutant_1547" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &gt; name2Size" to="i == name2Size" />
    <mutant id="mutant_2877" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0)" to="(offset &lt;= 0)" />
    <mutant id="mutant_1544" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &lt; (name1Char.length)" to="i &lt;= (name1Char.length)" />
    <mutant id="mutant_2876" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="b == null" to="b != null" />
    <mutant id="mutant_1545" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="i &lt; (name1Char.length)" to="i &gt;= (name1Char.length)" />
    <mutant id="mutant_2875" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="b == null" to="false" />
    <mutant id="mutant_1531" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="false" />
    <mutant id="mutant_2863" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="c &gt; 0" to="true" />
    <mutant id="mutant_1532" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="(sumLength != (MatchRatingApproachEncoder.ELEVEN))" />
    <mutant id="mutant_2862" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="avail &gt; 0" to="false" />
    <mutant id="mutant_2861" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="avail &gt; 0" to="true" />
    <mutant id="mutant_1530" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="true" />
    <mutant id="mutant_2860" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="avail &gt; 0" to="avail &gt;= 0" />
    <mutant id="mutant_1539" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength == (MatchRatingApproachEncoder.TWELVE)" to="sumLength &gt;= (MatchRatingApproachEncoder.TWELVE)" />
    <mutant id="mutant_1537" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength == (MatchRatingApproachEncoder.TWELVE)" to="sumLength &gt; (MatchRatingApproachEncoder.TWELVE)" />
    <mutant id="mutant_2869" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="c &gt; 0" to="c == 0" />
    <mutant id="mutant_1538" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength == (MatchRatingApproachEncoder.TWELVE)" to="sumLength &lt; (MatchRatingApproachEncoder.TWELVE)" />
    <mutant id="mutant_2868" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="c &gt; 0" to="c &gt;= 0" />
    <mutant id="mutant_1535" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength == (MatchRatingApproachEncoder.TWELVE)" to="sumLength != (MatchRatingApproachEncoder.TWELVE)" />
    <mutant id="mutant_2867" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="c &gt; 0" to="c != 0" />
    <mutant id="mutant_1536" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength == (MatchRatingApproachEncoder.TWELVE)" to="sumLength &lt;= (MatchRatingApproachEncoder.TWELVE)" />
    <mutant id="mutant_2866" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="c &gt; 0" to="c &lt; 0" />
    <mutant id="mutant_1533" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength == (MatchRatingApproachEncoder.TWELVE)" to="true" />
    <mutant id="mutant_2865" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="c &gt; 0" to="c &lt;= 0" />
    <mutant id="mutant_1534" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength == (MatchRatingApproachEncoder.TWELVE)" to="false" />
    <mutant id="mutant_2864" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="c &gt; 0" to="false" />
    <mutant id="mutant_1520" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT))" to="(sumLength != (MatchRatingApproachEncoder.EIGHT))" />
    <mutant id="mutant_2852" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="len == (BaseNCodec.EOF)" to="len &lt; (BaseNCodec.EOF)" />
    <mutant id="mutant_1521" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT))" to="true" />
    <mutant id="mutant_2851" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="len == (BaseNCodec.EOF)" to="false" />
    <mutant id="mutant_2850" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="len == (BaseNCodec.EOF)" to="true" />
    <mutant id="mutant_1528" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="(sumLength == (MatchRatingApproachEncoder.ELEVEN))" />
    <mutant id="mutant_1529" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="(sumLength &lt; (MatchRatingApproachEncoder.ELEVEN))" />
    <mutant id="mutant_2859" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="avail &gt; 0" to="avail != 0" />
    <mutant id="mutant_1526" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="(sumLength &gt; (MatchRatingApproachEncoder.ELEVEN))" />
    <mutant id="mutant_2858" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="avail &gt; 0" to="avail &lt; 0" />
    <mutant id="mutant_1527" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="(sumLength &gt;= (MatchRatingApproachEncoder.ELEVEN))" />
    <mutant id="mutant_2857" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="avail &gt; 0" to="avail &lt;= 0" />
    <mutant id="mutant_1524" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT))" to="(sumLength &lt; (MatchRatingApproachEncoder.EIGHT))" />
    <mutant id="mutant_2856" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(boolean)" from="avail &gt; 0" to="avail == 0" />
    <mutant id="mutant_1525" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT))" to="(sumLength &gt; (MatchRatingApproachEncoder.EIGHT))" />
    <mutant id="mutant_2855" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="len == (BaseNCodec.EOF)" to="len &gt;= (BaseNCodec.EOF)" />
    <mutant id="mutant_1522" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT))" to="false" />
    <mutant id="mutant_2854" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="len == (BaseNCodec.EOF)" to="len &gt; (BaseNCodec.EOF)" />
    <mutant id="mutant_1523" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT))" to="(sumLength &lt;= (MatchRatingApproachEncoder.EIGHT))" />
    <mutant id="mutant_2853" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="len == (BaseNCodec.EOF)" to="len != (BaseNCodec.EOF)" />
    <mutant id="mutant_1597" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="pos &gt; (-1)" to="pos &lt; (-1)" />
    <mutant id="mutant_1598" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="pos &gt; (-1)" to="pos != (-1)" />
    <mutant id="mutant_1595" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="i &lt; n" to="i != n" />
    <mutant id="mutant_1596" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="pos &gt; (-1)" to="pos == (-1)" />
    <mutant id="mutant_1593" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="i &lt; n" to="i &lt;= n" />
    <mutant id="mutant_1594" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="i &lt; n" to="i == n" />
    <mutant id="mutant_1591" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="i &lt; n" to="true" />
    <mutant id="mutant_1592" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="i &lt; n" to="false" />
    <mutant id="mutant_1599" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="pos &gt; (-1)" to="true" />
    <mutant id="mutant_1590" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="i &lt; n" to="i &gt; n" />
    <mutant id="mutant_1586" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="accentedWord == null" to="false" />
    <mutant id="mutant_1587" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="accentedWord == null" to="accentedWord &gt; null" />
    <mutant id="mutant_1584" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="accentedWord == null" to="accentedWord != null" />
    <mutant id="mutant_1585" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="accentedWord == null" to="true" />
    <mutant id="mutant_1582" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="accentedWord == null" to="accentedWord &lt;= null" />
    <mutant id="mutant_1583" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="accentedWord == null" to="accentedWord &gt;= null" />
    <mutant id="mutant_1580" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="nameLength &gt; (MatchRatingApproachEncoder.SIX)" to="nameLength &lt; (MatchRatingApproachEncoder.SIX)" />
    <mutant id="mutant_1581" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="nameLength &gt; (MatchRatingApproachEncoder.SIX)" to="nameLength &gt;= (MatchRatingApproachEncoder.SIX)" />
    <mutant id="mutant_1588" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="accentedWord == null" to="accentedWord &lt; null" />
    <mutant id="mutant_1589" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)" from="i &lt; n" to="i &gt;= n" />
    <mutant id="mutant_1575" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="nameLength &gt; (MatchRatingApproachEncoder.SIX)" to="nameLength &lt;= (MatchRatingApproachEncoder.SIX)" />
    <mutant id="mutant_1576" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="nameLength &gt; (MatchRatingApproachEncoder.SIX)" to="nameLength != (MatchRatingApproachEncoder.SIX)" />
    <mutant id="mutant_1573" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name.length()) == 1)" to="true" />
    <mutant id="mutant_1574" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name.length()) == 1)" to="false" />
    <mutant id="mutant_1571" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name.length()) == 1)" to="((name.length()) != 1)" />
    <mutant id="mutant_1572" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name.length()) == 1)" to="((name.length()) &lt;= 1)" />
    <mutant id="mutant_1570" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name.length()) == 1)" to="((name.length()) &lt; 1)" />
    <mutant id="mutant_1579" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="nameLength &gt; (MatchRatingApproachEncoder.SIX)" to="false" />
    <mutant id="mutant_1577" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="nameLength &gt; (MatchRatingApproachEncoder.SIX)" to="nameLength == (MatchRatingApproachEncoder.SIX)" />
    <mutant id="mutant_1578" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="nameLength &gt; (MatchRatingApproachEncoder.SIX)" to="true" />
    <mutant id="mutant_1564" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(name == null)" to="(name &lt;= null)" />
    <mutant id="mutant_2896" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset != (b.length))" />
    <mutant id="mutant_1565" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(name == null)" to="(name != null)" />
    <mutant id="mutant_2895" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length))" to="false" />
    <mutant id="mutant_1562" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(name == null)" to="(name &lt; null)" />
    <mutant id="mutant_2894" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length))" to="true" />
    <mutant id="mutant_1563" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(name == null)" to="(name &gt; null)" />
    <mutant id="mutant_2893" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset &lt; (b.length))" />
    <mutant id="mutant_1560" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(strA.length()) &gt; (strB.length())" to="(strA.length()) != (strB.length())" />
    <mutant id="mutant_2892" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset &gt;= (b.length))" />
    <mutant id="mutant_1561" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(name == null)" to="(name &gt;= null)" />
    <mutant id="mutant_2891" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset &lt;= (b.length))" />
    <mutant id="mutant_2890" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(len &lt; 0)" to="(len &gt; 0)" />
    <mutant id="mutant_1568" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name.length()) == 1)" to="((name.length()) &gt;= 1)" />
    <mutant id="mutant_1569" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name.length()) == 1)" to="((name.length()) &gt; 1)" />
    <mutant id="mutant_2899" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) == (b.length))" />
    <mutant id="mutant_1566" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(name == null)" to="true" />
    <mutant id="mutant_2898" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="((offset + len) &gt; (b.length))" to="((offset + len) &lt; (b.length))" />
    <mutant id="mutant_1567" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(name == null)" to="false" />
    <mutant id="mutant_2897" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length))" to="(offset == (b.length))" />
    <mutant id="mutant_2004" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 1" to="(key.length()) &lt; 1" />
    <mutant id="mutant_3336" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (keyLen - blocksize)" to="false" />
    <mutant id="mutant_2005" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 1" to="(key.length()) &lt;= 1" />
    <mutant id="mutant_3335" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (keyLen - blocksize)" to="true" />
    <mutant id="mutant_2002" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 1" to="(key.length()) == 1" />
    <mutant id="mutant_3334" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (keyLen - blocksize)" to="cp &gt; (keyLen - blocksize)" />
    <mutant id="mutant_2003" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 1" to="(key.length()) &gt;= 1" />
    <mutant id="mutant_3333" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (keyLen - blocksize)" to="cp &lt;= (keyLen - blocksize)" />
    <mutant id="mutant_2000" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(chars[i]) != (chars[(i - 1)])" to="(chars[i]) &lt; (chars[(i - 1)])" />
    <mutant id="mutant_3332" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (keyLen - blocksize)" to="cp == (keyLen - blocksize)" />
    <mutant id="mutant_2001" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(chars[i]) != (chars[(i - 1)])" to="(chars[i]) &gt;= (chars[(i - 1)])" />
    <mutant id="mutant_3331" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= keyLen" to="i &lt; keyLen" />
    <mutant id="mutant_3330" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= keyLen" to="i &gt; keyLen" />
    <mutant id="mutant_2008" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 1" to="(key.length()) != 1" />
    <mutant id="mutant_2009" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="lastChar == 'S'" to="lastChar != 'S'" />
    <mutant id="mutant_3339" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= (16 + ((altResult[0]) &amp; 255))" to="i == (16 + ((altResult[0]) &amp; 255))" />
    <mutant id="mutant_2006" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 1" to="true" />
    <mutant id="mutant_3338" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (keyLen - blocksize)" to="cp != (keyLen - blocksize)" />
    <mutant id="mutant_2007" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(key.length()) &gt; 1" to="false" />
    <mutant id="mutant_3337" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cp &lt; (keyLen - blocksize)" to="cp &gt;= (keyLen - blocksize)" />
    <mutant id="mutant_3325" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= keyLen" to="i != keyLen" />
    <mutant id="mutant_3324" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(cnt &amp; 1) != 0" to="(cnt &amp; 1) == 0" />
    <mutant id="mutant_3323" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(cnt &amp; 1) != 0" to="(cnt &amp; 1) &gt; 0" />
    <mutant id="mutant_3322" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(cnt &amp; 1) != 0" to="(cnt &amp; 1) &gt;= 0" />
    <mutant id="mutant_3321" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(cnt &amp; 1) != 0" to="false" />
    <mutant id="mutant_3320" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(cnt &amp; 1) != 0" to="true" />
    <mutant id="mutant_3329" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= keyLen" to="false" />
    <mutant id="mutant_3328" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= keyLen" to="true" />
    <mutant id="mutant_3327" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= keyLen" to="i &gt;= keyLen" />
    <mutant id="mutant_3326" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="i &lt;= keyLen" to="i == keyLen" />
    <mutant id="mutant_305" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="rulesIS == null" to="rulesIS != null" />
    <mutant id="mutant_306" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="rulesIS == null" to="true" />
    <mutant id="mutant_307" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="rulesIS == null" to="false" />
    <mutant id="mutant_308" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rulesIS == null" to="rulesIS &lt; null" />
    <mutant id="mutant_301" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="rulesIS == null" to="rulesIS &lt; null" />
    <mutant id="mutant_302" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="rulesIS == null" to="rulesIS &gt; null" />
    <mutant id="mutant_303" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="rulesIS == null" to="rulesIS &lt;= null" />
    <mutant id="mutant_304" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="rulesIS == null" to="rulesIS &gt;= null" />
    <mutant id="mutant_309" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rulesIS == null" to="rulesIS &gt; null" />
    <mutant id="mutant_3314" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; 0" to="true" />
    <mutant id="mutant_3313" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; 0" to="cnt == 0" />
    <mutant id="mutant_3312" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; 0" to="cnt &lt;= 0" />
    <mutant id="mutant_3311" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; 0" to="cnt &gt;= 0" />
    <mutant id="mutant_3310" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; blocksize" to="cnt &lt;= blocksize" />
    <mutant id="mutant_300" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="rules == null" to="rules != null" />
    <mutant id="mutant_3319" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(cnt &amp; 1) != 0" to="(cnt &amp; 1) &lt; 0" />
    <mutant id="mutant_3318" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(cnt &amp; 1) != 0" to="(cnt &amp; 1) &lt;= 0" />
    <mutant id="mutant_3317" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; 0" to="cnt != 0" />
    <mutant id="mutant_3316" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; 0" to="cnt &lt; 0" />
    <mutant id="mutant_3315" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; 0" to="false" />
    <mutant id="mutant_316" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="open &gt;= 0" to="open == 0" />
    <mutant id="mutant_317" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="open &gt;= 0" to="open &lt;= 0" />
    <mutant id="mutant_318" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="open &gt;= 0" to="open &lt; 0" />
    <mutant id="mutant_319" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="open &gt;= 0" to="open != 0" />
    <mutant id="mutant_312" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rulesIS == null" to="rulesIS != null" />
    <mutant id="mutant_313" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rulesIS == null" to="true" />
    <mutant id="mutant_314" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rulesIS == null" to="false" />
    <mutant id="mutant_315" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="open &gt;= 0" to="open &gt; 0" />
    <mutant id="mutant_3303" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m.group(3)) != null" to="(m.group(3)) &lt; null" />
    <mutant id="mutant_3302" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m.group(3)) != null" to="(m.group(3)) &gt;= null" />
    <mutant id="mutant_3301" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m.group(3)) != null" to="(m.group(3)) &lt;= null" />
    <mutant id="mutant_3300" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m.group(3)) != null" to="false" />
    <mutant id="mutant_310" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rulesIS == null" to="rulesIS &lt;= null" />
    <mutant id="mutant_3309" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; blocksize" to="cnt == blocksize" />
    <mutant id="mutant_311" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rulesIS == null" to="rulesIS &gt;= null" />
    <mutant id="mutant_3308" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; blocksize" to="false" />
    <mutant id="mutant_3307" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; blocksize" to="true" />
    <mutant id="mutant_3306" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; blocksize" to="cnt != blocksize" />
    <mutant id="mutant_3305" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; blocksize" to="cnt &lt; blocksize" />
    <mutant id="mutant_3304" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="cnt &gt; blocksize" to="cnt &gt;= blocksize" />
    <mutant id="mutant_206" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="(chars.charAt(i)) == input" to="false" />
    <mutant id="mutant_207" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="(chars.charAt(i)) == input" to="(chars.charAt(i)) &gt;= input" />
    <mutant id="mutant_208" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="(chars.charAt(i)) == input" to="(chars.charAt(i)) &gt; input" />
    <mutant id="mutant_209" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="(chars.charAt(i)) == input" to="(chars.charAt(i)) != input" />
    <mutant id="mutant_202" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="i &lt; (chars.length())" to="i &gt;= (chars.length())" />
    <mutant id="mutant_203" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="(chars.charAt(i)) == input" to="(chars.charAt(i)) &lt; input" />
    <mutant id="mutant_204" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="(chars.charAt(i)) == input" to="(chars.charAt(i)) &lt;= input" />
    <mutant id="mutant_205" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="(chars.charAt(i)) == input" to="true" />
    <mutant id="mutant_3141" viable="false" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.nio.charset.Charset)" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_3140" viable="true" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.nio.charset.Charset)" from="bytes == null" to="false" />
    <mutant id="mutant_3138" viable="false" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.nio.charset.Charset)" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_3137" viable="false" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.nio.charset.Charset)" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_3136" viable="false" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.nio.charset.Charset)" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_3135" viable="true" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_3134" viable="false" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)" from="bytes == null" to="bytes &gt;= null" />
    <mutant id="mutant_3133" viable="true" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)" from="bytes == null" to="false" />
    <mutant id="mutant_3132" viable="true" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)" from="bytes == null" to="true" />
    <mutant id="mutant_3131" viable="false" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)" from="bytes == null" to="bytes &lt;= null" />
    <mutant id="mutant_200" viable="false" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="i &lt; (chars.length())" to="false" />
    <mutant id="mutant_201" viable="true" in="org.apache.commons.codec.language.bm.Rule.contains(java.lang.CharSequence,char)" from="i &lt; (chars.length())" to="i == (chars.length())" />
    <mutant id="mutant_3139" viable="true" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.nio.charset.Charset)" from="bytes == null" to="true" />
    <mutant id="mutant_217" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="j &gt;= 0" to="j &lt; 0" />
    <mutant id="mutant_218" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="j &gt;= 0" to="j &lt;= 0" />
    <mutant id="mutant_219" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="j &gt;= 0" to="j == 0" />
    <mutant id="mutant_213" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) &gt; (input.length())" to="false" />
    <mutant id="mutant_214" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) &gt; (input.length())" to="(suffix.length()) != (input.length())" />
    <mutant id="mutant_215" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) &gt; (input.length())" to="(suffix.length()) &gt;= (input.length())" />
    <mutant id="mutant_216" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) &gt; (input.length())" to="(suffix.length()) &lt; (input.length())" />
    <mutant id="mutant_3130" viable="false" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)" from="bytes == null" to="bytes &lt; null" />
    <mutant id="mutant_3127" viable="false" in="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)" from="string == null" to="string &lt; null" />
    <mutant id="mutant_3126" viable="false" in="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)" from="string == null" to="string &gt; null" />
    <mutant id="mutant_3125" viable="false" in="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)" from="string == null" to="string &gt;= null" />
    <mutant id="mutant_3124" viable="true" in="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)" from="string == null" to="false" />
    <mutant id="mutant_3123" viable="true" in="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)" from="string == null" to="true" />
    <mutant id="mutant_3122" viable="true" in="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)" from="string == null" to="string != null" />
    <mutant id="mutant_3121" viable="false" in="org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string &lt;= null" />
    <mutant id="mutant_3120" viable="false" in="org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string &lt; null" />
    <mutant id="mutant_210" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) &gt; (input.length())" to="(suffix.length()) == (input.length())" />
    <mutant id="mutant_211" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) &gt; (input.length())" to="(suffix.length()) &lt;= (input.length())" />
    <mutant id="mutant_212" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) &gt; (input.length())" to="true" />
    <mutant id="mutant_3129" viable="false" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.lang.String)" from="bytes == null" to="bytes &gt; null" />
    <mutant id="mutant_3128" viable="false" in="org.apache.commons.codec.binary.StringUtils.getBytesUnchecked(java.lang.String,java.lang.String)" from="string == null" to="string &lt;= null" />
    <mutant id="mutant_228" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (suffix.charAt(j))" to="false" />
    <mutant id="mutant_229" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (suffix.charAt(j))" to="(input.charAt(i)) &lt;= (suffix.charAt(j))" />
    <mutant id="mutant_224" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (suffix.charAt(j))" to="(input.charAt(i)) &gt; (suffix.charAt(j))" />
    <mutant id="mutant_225" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (suffix.charAt(j))" to="(input.charAt(i)) == (suffix.charAt(j))" />
    <mutant id="mutant_226" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (suffix.charAt(j))" to="(input.charAt(i)) &lt; (suffix.charAt(j))" />
    <mutant id="mutant_227" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (suffix.charAt(j))" to="true" />
    <mutant id="mutant_3116" viable="true" in="org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String,java.nio.charset.Charset)" from="string == null" to="true" />
    <mutant id="mutant_3115" viable="true" in="org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string != null" />
    <mutant id="mutant_3114" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2 == null)" to="(cs2 &lt;= null)" />
    <mutant id="mutant_3113" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2 == null)" to="(cs2 &gt; null)" />
    <mutant id="mutant_3112" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2 == null)" to="(cs2 &gt;= null)" />
    <mutant id="mutant_3111" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2 == null)" to="false" />
    <mutant id="mutant_3110" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2 == null)" to="true" />
    <mutant id="mutant_220" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="j &gt;= 0" to="j &gt; 0" />
    <mutant id="mutant_221" viable="false" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="j &gt;= 0" to="true" />
    <mutant id="mutant_222" viable="false" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="j &gt;= 0" to="false" />
    <mutant id="mutant_223" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="j &gt;= 0" to="j != 0" />
    <mutant id="mutant_3119" viable="false" in="org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string &gt; null" />
    <mutant id="mutant_3118" viable="false" in="org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string &gt;= null" />
    <mutant id="mutant_3117" viable="true" in="org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String,java.nio.charset.Charset)" from="string == null" to="false" />
    <mutant id="mutant_239" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="ipl &gt; (input.length())" to="ipl != (input.length())" />
    <mutant id="mutant_235" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i &lt; 0" to="true" />
    <mutant id="mutant_236" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i &lt; 0" to="false" />
    <mutant id="mutant_237" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i &lt; 0" to="i != 0" />
    <mutant id="mutant_238" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="ipl &gt; (input.length())" to="ipl &lt;= (input.length())" />
    <mutant id="mutant_3105" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null)" to="true" />
    <mutant id="mutant_3104" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null)" to="(cs1 &lt; null)" />
    <mutant id="mutant_3103" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null)" to="(cs1 &lt;= null)" />
    <mutant id="mutant_3102" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null)" to="(cs1 &gt; null)" />
    <mutant id="mutant_3101" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null)" to="(cs1 &gt;= null)" />
    <mutant id="mutant_3100" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="cs1 == cs2" to="cs1 &lt;= cs2" />
    <mutant id="mutant_231" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i &lt; 0" to="i &lt;= 0" />
    <mutant id="mutant_232" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i &lt; 0" to="i == 0" />
    <mutant id="mutant_233" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i &lt; 0" to="i &gt;= 0" />
    <mutant id="mutant_234" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i &lt; 0" to="i &gt; 0" />
    <mutant id="mutant_3109" viable="false" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2 == null)" to="(cs2 &lt; null)" />
    <mutant id="mutant_3108" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs2 == null)" to="(cs2 != null)" />
    <mutant id="mutant_3107" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null)" to="(cs1 != null)" />
    <mutant id="mutant_230" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (suffix.charAt(j))" to="(input.charAt(i)) &gt;= (suffix.charAt(j))" />
    <mutant id="mutant_3106" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null)" to="false" />
    <mutant id="mutant_246" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(prefix.length()) &gt; (input.length())" to="(prefix.length()) &lt;= (input.length())" />
    <mutant id="mutant_247" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(prefix.length()) &gt; (input.length())" to="true" />
    <mutant id="mutant_248" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(prefix.length()) &gt; (input.length())" to="false" />
    <mutant id="mutant_249" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(prefix.length()) &gt; (input.length())" to="(prefix.length()) != (input.length())" />
    <mutant id="mutant_3185" viable="true" in="org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.io.InputStream)" from="read &gt; (-1)" to="read != (-1)" />
    <mutant id="mutant_3184" viable="false" in="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(java.lang.String,byte[])" from="key == null" to="key &gt; null" />
    <mutant id="mutant_3183" viable="false" in="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(java.lang.String,byte[])" from="key == null" to="key &gt;= null" />
    <mutant id="mutant_3182" viable="false" in="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(java.lang.String,byte[])" from="key == null" to="key &lt;= null" />
    <mutant id="mutant_3181" viable="true" in="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(java.lang.String,byte[])" from="key == null" to="key != null" />
    <mutant id="mutant_3180" viable="true" in="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(java.lang.String,byte[])" from="key == null" to="false" />
    <mutant id="mutant_3179" viable="true" in="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(java.lang.String,byte[])" from="key == null" to="true" />
    <mutant id="mutant_3178" viable="false" in="org.apache.commons.codec.digest.HmacUtils.getInitializedMac(java.lang.String,byte[])" from="key == null" to="key &lt; null" />
    <mutant id="mutant_3177" viable="true" in="org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest,java.io.InputStream)" from="read &gt; (-1)" to="read &gt;= (-1)" />
    <mutant id="mutant_3176" viable="true" in="org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest,java.io.InputStream)" from="read &gt; (-1)" to="read &lt;= (-1)" />
    <mutant id="mutant_3175" viable="false" in="org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest,java.io.InputStream)" from="read &gt; (-1)" to="false" />
    <mutant id="mutant_242" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="ipl &gt; (input.length())" to="true" />
    <mutant id="mutant_243" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="ipl &gt; (input.length())" to="false" />
    <mutant id="mutant_244" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="ipl &gt; (input.length())" to="ipl &lt; (input.length())" />
    <mutant id="mutant_245" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(prefix.length()) &gt; (input.length())" to="(prefix.length()) == (input.length())" />
    <mutant id="mutant_240" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="ipl &gt; (input.length())" to="ipl &gt;= (input.length())" />
    <mutant id="mutant_241" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="ipl &gt; (input.length())" to="ipl == (input.length())" />
    <mutant id="mutant_257" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="i &lt; (prefix.length())" to="i == (prefix.length())" />
    <mutant id="mutant_258" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="i &lt; (prefix.length())" to="i &gt;= (prefix.length())" />
    <mutant id="mutant_259" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (prefix.charAt(i))" to="(input.charAt(i)) == (prefix.charAt(i))" />
    <mutant id="mutant_3174" viable="false" in="org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest,java.io.InputStream)" from="read &gt; (-1)" to="true" />
    <mutant id="mutant_3173" viable="true" in="org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest,java.io.InputStream)" from="read &gt; (-1)" to="read &lt; (-1)" />
    <mutant id="mutant_3172" viable="true" in="org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest,java.io.InputStream)" from="read &gt; (-1)" to="read == (-1)" />
    <mutant id="mutant_3171" viable="true" in="org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest,java.io.InputStream)" from="read &gt; (-1)" to="read != (-1)" />
    <mutant id="mutant_3170" viable="false" in="org.apache.commons.codec.digest.Crypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt &lt;= null" />
    <mutant id="mutant_3169" viable="false" in="org.apache.commons.codec.digest.Crypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt &gt; null" />
    <mutant id="mutant_3168" viable="true" in="org.apache.commons.codec.digest.Crypt.crypt(byte[],java.lang.String)" from="salt == null" to="false" />
    <mutant id="mutant_3167" viable="true" in="org.apache.commons.codec.digest.Crypt.crypt(byte[],java.lang.String)" from="salt == null" to="true" />
    <mutant id="mutant_3166" viable="true" in="org.apache.commons.codec.digest.Crypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt != null" />
    <mutant id="mutant_3165" viable="false" in="org.apache.commons.codec.digest.Crypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt &lt; null" />
    <mutant id="mutant_3164" viable="false" in="org.apache.commons.codec.digest.Crypt.crypt(byte[],java.lang.String)" from="salt == null" to="salt &gt;= null" />
    <mutant id="mutant_253" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="i &lt; (prefix.length())" to="i &lt;= (prefix.length())" />
    <mutant id="mutant_254" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="i &lt; (prefix.length())" to="i &gt; (prefix.length())" />
    <mutant id="mutant_255" viable="false" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="i &lt; (prefix.length())" to="true" />
    <mutant id="mutant_256" viable="false" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="i &lt; (prefix.length())" to="false" />
    <mutant id="mutant_250" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(prefix.length()) &gt; (input.length())" to="(prefix.length()) &gt;= (input.length())" />
    <mutant id="mutant_251" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(prefix.length()) &gt; (input.length())" to="(prefix.length()) &lt; (input.length())" />
    <mutant id="mutant_252" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="i &lt; (prefix.length())" to="i != (prefix.length())" />
    <mutant id="mutant_268" viable="false" in="org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rules == null" to="rules &gt;= null" />
    <mutant id="mutant_269" viable="false" in="org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rules == null" to="rules &gt; null" />
    <mutant id="mutant_3163" viable="true" in="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)" from="(n--) &gt; 0" to="(n--) &gt;= 0" />
    <mutant id="mutant_3162" viable="false" in="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)" from="(n--) &gt; 0" to="false" />
    <mutant id="mutant_3161" viable="true" in="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)" from="(n--) &gt; 0" to="true" />
    <mutant id="mutant_3160" viable="true" in="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)" from="(n--) &gt; 0" to="(n--) == 0" />
    <mutant id="mutant_3159" viable="true" in="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)" from="(n--) &gt; 0" to="(n--) &lt;= 0" />
    <mutant id="mutant_3158" viable="true" in="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)" from="(n--) &gt; 0" to="(n--) &lt; 0" />
    <mutant id="mutant_3157" viable="true" in="org.apache.commons.codec.digest.B64.b64from24bit(byte,byte,byte,int,java.lang.StringBuilder)" from="(n--) &gt; 0" to="(n--) != 0" />
    <mutant id="mutant_3156" viable="true" in="org.apache.commons.codec.digest.B64.getRandomSalt(int)" from="i &lt;= num" to="i &gt; num" />
    <mutant id="mutant_3155" viable="true" in="org.apache.commons.codec.digest.B64.getRandomSalt(int)" from="i &lt;= num" to="i != num" />
    <mutant id="mutant_3154" viable="false" in="org.apache.commons.codec.digest.B64.getRandomSalt(int)" from="i &lt;= num" to="false" />
    <mutant id="mutant_3153" viable="false" in="org.apache.commons.codec.digest.B64.getRandomSalt(int)" from="i &lt;= num" to="true" />
    <mutant id="mutant_264" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (prefix.charAt(i))" to="(input.charAt(i)) &gt; (prefix.charAt(i))" />
    <mutant id="mutant_265" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (prefix.charAt(i))" to="(input.charAt(i)) &gt;= (prefix.charAt(i))" />
    <mutant id="mutant_266" viable="true" in="org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rules == null" to="rules != null" />
    <mutant id="mutant_267" viable="false" in="org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rules == null" to="rules &lt;= null" />
    <mutant id="mutant_260" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (prefix.charAt(i))" to="(input.charAt(i)) &lt; (prefix.charAt(i))" />
    <mutant id="mutant_261" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (prefix.charAt(i))" to="true" />
    <mutant id="mutant_262" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (prefix.charAt(i))" to="false" />
    <mutant id="mutant_263" viable="true" in="org.apache.commons.codec.language.bm.Rule.startsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.charAt(i)) != (prefix.charAt(i))" to="(input.charAt(i)) &lt;= (prefix.charAt(i))" />
    <mutant id="mutant_279" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="cmtI &gt;= 0" to="cmtI &lt; 0" />
    <mutant id="mutant_3152" viable="true" in="org.apache.commons.codec.digest.B64.getRandomSalt(int)" from="i &lt;= num" to="i &lt; num" />
    <mutant id="mutant_3151" viable="true" in="org.apache.commons.codec.digest.B64.getRandomSalt(int)" from="i &lt;= num" to="i &gt;= num" />
    <mutant id="mutant_3150" viable="true" in="org.apache.commons.codec.digest.B64.getRandomSalt(int)" from="i &lt;= num" to="i == num" />
    <mutant id="mutant_3149" viable="false" in="org.apache.commons.codec.binary.StringUtils.getByteBuffer(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string &lt;= null" />
    <mutant id="mutant_3148" viable="false" in="org.apache.commons.codec.binary.StringUtils.getByteBuffer(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string &lt; null" />
    <mutant id="mutant_3147" viable="false" in="org.apache.commons.codec.binary.StringUtils.getByteBuffer(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string &gt; null" />
    <mutant id="mutant_270" viable="false" in="org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rules == null" to="rules &lt; null" />
    <mutant id="mutant_3146" viable="false" in="org.apache.commons.codec.binary.StringUtils.getByteBuffer(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string &gt;= null" />
    <mutant id="mutant_3145" viable="true" in="org.apache.commons.codec.binary.StringUtils.getByteBuffer(java.lang.String,java.nio.charset.Charset)" from="string == null" to="false" />
    <mutant id="mutant_3144" viable="true" in="org.apache.commons.codec.binary.StringUtils.getByteBuffer(java.lang.String,java.nio.charset.Charset)" from="string == null" to="true" />
    <mutant id="mutant_3143" viable="true" in="org.apache.commons.codec.binary.StringUtils.getByteBuffer(java.lang.String,java.nio.charset.Charset)" from="string == null" to="string != null" />
    <mutant id="mutant_3142" viable="true" in="org.apache.commons.codec.binary.StringUtils.newString(byte[],java.nio.charset.Charset)" from="bytes == null" to="bytes != null" />
    <mutant id="mutant_275" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="cmtI &gt;= 0" to="cmtI &lt;= 0" />
    <mutant id="mutant_276" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="cmtI &gt;= 0" to="cmtI != 0" />
    <mutant id="mutant_277" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="cmtI &gt;= 0" to="true" />
    <mutant id="mutant_278" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="cmtI &gt;= 0" to="false" />
    <mutant id="mutant_271" viable="true" in="org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rules == null" to="true" />
    <mutant id="mutant_272" viable="true" in="org.apache.commons.codec.language.bm.Rule.getInstanceMap(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="rules == null" to="false" />
    <mutant id="mutant_273" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="cmtI &gt;= 0" to="cmtI &gt; 0" />
    <mutant id="mutant_274" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="cmtI &gt;= 0" to="cmtI == 0" />
    <mutant id="mutant_280" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(line.length()) == 0" to="(line.length()) &gt; 0" />
    <mutant id="mutant_281" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(line.length()) == 0" to="(line.length()) != 0" />
    <mutant id="mutant_286" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(line.length()) == 0" to="(line.length()) &gt;= 0" />
    <mutant id="mutant_287" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(parts.length) != 4" to="(parts.length) &lt;= 4" />
    <mutant id="mutant_288" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(parts.length) != 4" to="(parts.length) &lt; 4" />
    <mutant id="mutant_289" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(parts.length) != 4" to="true" />
    <mutant id="mutant_282" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(line.length()) == 0" to="(line.length()) &lt;= 0" />
    <mutant id="mutant_283" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(line.length()) == 0" to="(line.length()) &lt; 0" />
    <mutant id="mutant_284" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(line.length()) == 0" to="true" />
    <mutant id="mutant_285" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(line.length()) == 0" to="false" />
    <mutant id="mutant_290" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(parts.length) != 4" to="false" />
    <mutant id="mutant_291" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(parts.length) != 4" to="(parts.length) &gt; 4" />
    <mutant id="mutant_292" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(parts.length) != 4" to="(parts.length) == 4" />
    <mutant id="mutant_297" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="rules == null" to="rules &gt; null" />
    <mutant id="mutant_298" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="rules == null" to="true" />
    <mutant id="mutant_299" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="rules == null" to="false" />
    <mutant id="mutant_293" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(parts.length) != 4" to="(parts.length) &gt;= 4" />
    <mutant id="mutant_294" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="rules == null" to="rules &lt; null" />
    <mutant id="mutant_295" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="rules == null" to="rules &gt;= null" />
    <mutant id="mutant_296" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="rules == null" to="rules &lt;= null" />
    <mutant id="mutant_3199" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="salt == null" to="salt &gt;= null" />
    <mutant id="mutant_3198" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null)" to="(salt &lt;= null)" />
    <mutant id="mutant_3197" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null)" to="(salt &gt; null)" />
    <mutant id="mutant_3196" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null)" to="false" />
    <mutant id="mutant_3195" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null)" to="true" />
    <mutant id="mutant_3194" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null)" to="(salt &lt; null)" />
    <mutant id="mutant_3193" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null)" to="(salt == null)" />
    <mutant id="mutant_3192" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null)" to="(salt &gt;= null)" />
    <mutant id="mutant_3191" viable="true" in="org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.io.InputStream)" from="read &gt; (-1)" to="read &gt;= (-1)" />
    <mutant id="mutant_3190" viable="true" in="org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.io.InputStream)" from="read &gt; (-1)" to="read &lt;= (-1)" />
    <mutant id="mutant_3189" viable="false" in="org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.io.InputStream)" from="read &gt; (-1)" to="false" />
    <mutant id="mutant_3188" viable="false" in="org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.io.InputStream)" from="read &gt; (-1)" to="true" />
    <mutant id="mutant_3187" viable="true" in="org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.io.InputStream)" from="read &gt; (-1)" to="read &lt; (-1)" />
    <mutant id="mutant_3186" viable="true" in="org.apache.commons.codec.digest.HmacUtils.updateHmac(javax.crypto.Mac,java.io.InputStream)" from="read &gt; (-1)" to="read == (-1)" />
    <mutant id="mutant_2729" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer.length) &lt; ((context.pos) + size))" to="((context.buffer.length) != ((context.pos) + size))" />
    <mutant id="mutant_2720" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null)" to="false" />
    <mutant id="mutant_2728" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer.length) &lt; ((context.pos) + size))" to="((context.buffer.length) == ((context.pos) + size))" />
    <mutant id="mutant_2727" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer.length) &lt; ((context.pos) + size))" to="false" />
    <mutant id="mutant_2726" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer.length) &lt; ((context.pos) + size))" to="true" />
    <mutant id="mutant_2725" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer.length) &lt; ((context.pos) + size))" to="((context.buffer.length) &gt; ((context.pos) + size))" />
    <mutant id="mutant_2724" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer.length) &lt; ((context.pos) + size))" to="((context.buffer.length) &gt;= ((context.pos) + size))" />
    <mutant id="mutant_2723" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer.length) &lt; ((context.pos) + size))" to="((context.buffer.length) &lt;= ((context.pos) + size))" />
    <mutant id="mutant_2722" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null)" to="((context.buffer) != null)" />
    <mutant id="mutant_2721" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null)" to="((context.buffer) &gt;= null)" />
    <mutant id="mutant_2719" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null)" to="true" />
    <mutant id="mutant_2718" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null)" to="((context.buffer) &gt; null)" />
    <mutant id="mutant_2717" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null)" to="((context.buffer) &lt; null)" />
    <mutant id="mutant_2716" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null)" to="((context.buffer) &lt;= null)" />
    <mutant id="mutant_2715" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) &gt; 0)" />
    <mutant id="mutant_2714" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) &lt; 0)" />
    <mutant id="mutant_2713" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) &lt;= 0)" />
    <mutant id="mutant_2712" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="((pArray.length) == 0)" to="false" />
    <mutant id="mutant_2711" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="((pArray.length) == 0)" to="true" />
    <mutant id="mutant_2710" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) != 0)" />
    <mutant id="mutant_2709" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) &gt;= 0)" />
    <mutant id="mutant_2708" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null)" to="(pArray != null)" />
    <mutant id="mutant_2707" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null)" to="false" />
    <mutant id="mutant_2706" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null)" to="true" />
    <mutant id="mutant_2705" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null)" to="(pArray &lt;= null)" />
    <mutant id="mutant_2704" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null)" to="(pArray &gt; null)" />
    <mutant id="mutant_2703" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null)" to="(pArray &lt; null)" />
    <mutant id="mutant_2702" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null)" to="(pArray &gt;= null)" />
    <mutant id="mutant_2701" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) &gt; 0)" />
    <mutant id="mutant_2700" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="((pArray.length) == 0)" to="((pArray.length) &lt; 0)" />
    <mutant id="mutant_1432" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'K'" to="true" />
    <mutant id="mutant_2764" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(lineLength) &gt; 0" to="(lineLength) &lt;= 0" />
    <mutant id="mutant_1433" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'K'" to="false" />
    <mutant id="mutant_2763" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(lineLength) &gt; 0" to="(lineLength) != 0" />
    <mutant id="mutant_1430" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'K'" to="(charAt(value, (index + 1))) != 'K'" />
    <mutant id="mutant_2762" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(lineLength) &gt; 0" to="(lineLength) &lt; 0" />
    <mutant id="mutant_1431" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'K'" to="(charAt(value, (index + 1))) &lt;= 'K'" />
    <mutant id="mutant_2761" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(lineLength) &gt; 0" to="(lineLength) &gt;= 0" />
    <mutant id="mutant_2760" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(lineLength) &gt; 0" to="false" />
    <mutant id="mutant_1438" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="true" />
    <mutant id="mutant_1439" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="false" />
    <mutant id="mutant_2769" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r == 0" to="true" />
    <mutant id="mutant_1436" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) &gt;= 'N'" />
    <mutant id="mutant_2768" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r == 0" to="r &lt; 0" />
    <mutant id="mutant_1437" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) &lt;= 'N'" />
    <mutant id="mutant_2767" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r == 0" to="r &lt;= 0" />
    <mutant id="mutant_1434" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'K'" to="(charAt(value, (index + 1))) &gt;= 'K'" />
    <mutant id="mutant_2766" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r == 0" to="r &gt;= 0" />
    <mutant id="mutant_1435" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) &gt; 'N'" />
    <mutant id="mutant_2765" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r == 0" to="r &gt; 0" />
    <mutant id="mutant_1421" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'F'" to="(charAt(value, (index + 1))) != 'F'" />
    <mutant id="mutant_2753" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.readPos) &gt;= (context.pos)" to="true" />
    <mutant id="mutant_1422" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'F'" to="(charAt(value, (index + 1))) &lt; 'F'" />
    <mutant id="mutant_2752" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.readPos) &gt;= (context.pos)" to="(context.readPos) &gt; (context.pos)" />
    <mutant id="mutant_2751" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.readPos) &gt;= (context.pos)" to="(context.readPos) &lt; (context.pos)" />
    <mutant id="mutant_1420" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'B'" to="(charAt(value, (index + 1))) != 'B'" />
    <mutant id="mutant_2750" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) == null" />
    <mutant id="mutant_1429" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'K'" to="(charAt(value, (index + 1))) &gt; 'K'" />
    <mutant id="mutant_1427" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'F'" to="(charAt(value, (index + 1))) &lt;= 'F'" />
    <mutant id="mutant_2759" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(lineLength) &gt; 0" to="true" />
    <mutant id="mutant_1428" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'K'" to="(charAt(value, (index + 1))) &lt; 'K'" />
    <mutant id="mutant_2758" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(lineLength) &gt; 0" to="(lineLength) == 0" />
    <mutant id="mutant_1425" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'F'" to="(charAt(value, (index + 1))) &gt; 'F'" />
    <mutant id="mutant_2757" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.readPos) &gt;= (context.pos)" to="(context.readPos) &lt;= (context.pos)" />
    <mutant id="mutant_1426" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'F'" to="(charAt(value, (index + 1))) &gt;= 'F'" />
    <mutant id="mutant_2756" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.readPos) &gt;= (context.pos)" to="(context.readPos) == (context.pos)" />
    <mutant id="mutant_1423" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'F'" to="true" />
    <mutant id="mutant_2755" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.readPos) &gt;= (context.pos)" to="(context.readPos) != (context.pos)" />
    <mutant id="mutant_1424" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'F'" to="false" />
    <mutant id="mutant_2754" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.readPos) &gt;= (context.pos)" to="false" />
    <mutant id="mutant_1410" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index &lt;= ((value.length()) - 1))" to="(index &gt;= ((value.length()) - 1))" />
    <mutant id="mutant_2742" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &gt;= null" />
    <mutant id="mutant_1411" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index &lt;= ((value.length()) - 1))" to="true" />
    <mutant id="mutant_2741" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="false" />
    <mutant id="mutant_2740" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="true" />
    <mutant id="mutant_1418" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'B'" to="(charAt(value, (index + 1))) &lt; 'B'" />
    <mutant id="mutant_1419" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'B'" to="(charAt(value, (index + 1))) &gt; 'B'" />
    <mutant id="mutant_2749" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &gt;= null" />
    <mutant id="mutant_1416" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'B'" to="true" />
    <mutant id="mutant_2748" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="false" />
    <mutant id="mutant_1417" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'B'" to="false" />
    <mutant id="mutant_2747" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="true" />
    <mutant id="mutant_1414" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'B'" to="(charAt(value, (index + 1))) &gt;= 'B'" />
    <mutant id="mutant_2746" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &gt; null" />
    <mutant id="mutant_1415" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'B'" to="(charAt(value, (index + 1))) &lt;= 'B'" />
    <mutant id="mutant_2745" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &lt; null" />
    <mutant id="mutant_1412" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index &lt;= ((value.length()) - 1))" to="false" />
    <mutant id="mutant_2744" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &lt;= null" />
    <mutant id="mutant_1413" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index &lt;= ((value.length()) - 1))" to="(index == ((value.length()) - 1))" />
    <mutant id="mutant_2743" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) == null" />
    <mutant id="mutant_1409" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index &lt;= ((value.length()) - 1))" to="(index &lt; ((value.length()) - 1))" />
    <mutant id="mutant_2731" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) == null" to="(context.buffer) &lt; null" />
    <mutant id="mutant_1400" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="value == null" to="value &gt; null" />
    <mutant id="mutant_2730" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) == null" to="(context.buffer) &lt;= null" />
    <mutant id="mutant_1407" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index &lt;= ((value.length()) - 1))" to="(index &gt; ((value.length()) - 1))" />
    <mutant id="mutant_2739" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &gt; null" />
    <mutant id="mutant_1408" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index &lt;= ((value.length()) - 1))" to="(index != ((value.length()) - 1))" />
    <mutant id="mutant_2738" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &lt; null" />
    <mutant id="mutant_1405" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="value == null" to="value &gt;= null" />
    <mutant id="mutant_2737" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) != null" to="(context.buffer) &lt;= null" />
    <mutant id="mutant_1406" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="value == null" to="value != null" />
    <mutant id="mutant_2736" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) == null" to="(context.buffer) != null" />
    <mutant id="mutant_1403" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="value == null" to="false" />
    <mutant id="mutant_2735" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) == null" to="(context.buffer) &gt;= null" />
    <mutant id="mutant_1404" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="value == null" to="value &lt;= null" />
    <mutant id="mutant_2734" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) == null" to="false" />
    <mutant id="mutant_1401" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="value == null" to="value &lt; null" />
    <mutant id="mutant_2733" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) == null" to="true" />
    <mutant id="mutant_1402" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="value == null" to="true" />
    <mutant id="mutant_2732" viable="false" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer) == null" to="(context.buffer) &gt; null" />
    <mutant id="mutant_1480" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2.length()) == 1)" to="((name2.length()) != 1)" />
    <mutant id="mutant_1476" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1)" to="false" />
    <mutant id="mutant_1477" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2.length()) == 1)" to="((name2.length()) &gt;= 1)" />
    <mutant id="mutant_1474" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1)" to="((name1.length()) &lt;= 1)" />
    <mutant id="mutant_1475" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1)" to="true" />
    <mutant id="mutant_1472" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1)" to="((name1.length()) &lt; 1)" />
    <mutant id="mutant_1473" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1)" to="((name1.length()) != 1)" />
    <mutant id="mutant_1470" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1)" to="((name1.length()) &gt;= 1)" />
    <mutant id="mutant_1471" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1)" to="((name1.length()) &gt; 1)" />
    <mutant id="mutant_1478" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2.length()) == 1)" to="((name2.length()) &gt; 1)" />
    <mutant id="mutant_1479" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2.length()) == 1)" to="((name2.length()) &lt; 1)" />
    <mutant id="mutant_1465" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name2 == null)" to="true" />
    <mutant id="mutant_2797" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0)" to="false" />
    <mutant id="mutant_1466" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name2 == null)" to="false" />
    <mutant id="mutant_2796" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0)" to="true" />
    <mutant id="mutant_1463" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name2 == null)" to="(name2 &lt;= null)" />
    <mutant id="mutant_2795" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0)" to="(offset != 0)" />
    <mutant id="mutant_1464" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name2 == null)" to="(name2 &gt;= null)" />
    <mutant id="mutant_2794" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0)" to="(offset == 0)" />
    <mutant id="mutant_1461" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name1 == null)" to="(name1 &gt; null)" />
    <mutant id="mutant_2793" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0)" to="(offset &lt;= 0)" />
    <mutant id="mutant_1462" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name1 == null)" to="(name1 &gt;= null)" />
    <mutant id="mutant_2792" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="b == null" to="b != null" />
    <mutant id="mutant_2791" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="b == null" to="false" />
    <mutant id="mutant_1460" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name1 == null)" to="(name1 &lt;= null)" />
    <mutant id="mutant_2790" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="b == null" to="true" />
    <mutant id="mutant_1469" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name2 == null)" to="(name2 != null)" />
    <mutant id="mutant_1467" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name2 == null)" to="(name2 &gt; null)" />
    <mutant id="mutant_2799" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0)" to="(offset &gt;= 0)" />
    <mutant id="mutant_1468" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name2 == null)" to="(name2 &lt; null)" />
    <mutant id="mutant_2798" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0)" to="(offset &gt; 0)" />
    <mutant id="mutant_1454" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'V'" to="(charAt(value, (index + 1))) &gt;= 'V'" />
    <mutant id="mutant_2786" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="b == null" to="b &lt; null" />
    <mutant id="mutant_1455" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'V'" to="(charAt(value, (index + 1))) &lt;= 'V'" />
    <mutant id="mutant_2785" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="b &lt; 0" to="false" />
    <mutant id="mutant_1452" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'V'" to="false" />
    <mutant id="mutant_2784" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="b &lt; 0" to="true" />
    <mutant id="mutant_1453" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'V'" to="(charAt(value, (index + 1))) &gt; 'V'" />
    <mutant id="mutant_2783" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="b &lt; 0" to="b == 0" />
    <mutant id="mutant_1450" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'V'" to="(charAt(value, (index + 1))) &lt; 'V'" />
    <mutant id="mutant_2782" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="b &lt; 0" to="b &gt;= 0" />
    <mutant id="mutant_1451" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'V'" to="true" />
    <mutant id="mutant_2781" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="b &lt; 0" to="b &gt; 0" />
    <mutant id="mutant_2780" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="b &lt; 0" to="b != 0" />
    <mutant id="mutant_1458" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name1 == null)" to="true" />
    <mutant id="mutant_1459" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name1 == null)" to="false" />
    <mutant id="mutant_2789" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="b == null" to="b &lt;= null" />
    <mutant id="mutant_1456" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name1 == null)" to="(name1 &lt; null)" />
    <mutant id="mutant_2788" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="b == null" to="b &gt; null" />
    <mutant id="mutant_1457" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(name1 == null)" to="(name1 != null)" />
    <mutant id="mutant_2787" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="b == null" to="b &gt;= null" />
    <mutant id="mutant_1443" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'Q'" to="(charAt(value, (index + 1))) &gt;= 'Q'" />
    <mutant id="mutant_2775" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r &gt; 0" to="r &lt; 0" />
    <mutant id="mutant_1444" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'Q'" to="true" />
    <mutant id="mutant_2774" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r &gt; 0" to="r &lt;= 0" />
    <mutant id="mutant_1441" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) &lt; 'N'" />
    <mutant id="mutant_2773" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r &gt; 0" to="r &gt;= 0" />
    <mutant id="mutant_1442" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'Q'" to="(charAt(value, (index + 1))) &lt;= 'Q'" />
    <mutant id="mutant_2772" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r &gt; 0" to="r == 0" />
    <mutant id="mutant_2771" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r == 0" to="r != 0" />
    <mutant id="mutant_1440" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'N'" to="(charAt(value, (index + 1))) != 'N'" />
    <mutant id="mutant_2770" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r == 0" to="false" />
    <mutant id="mutant_1449" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'V'" to="(charAt(value, (index + 1))) != 'V'" />
    <mutant id="mutant_1447" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'Q'" to="(charAt(value, (index + 1))) &gt; 'Q'" />
    <mutant id="mutant_2779" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="b &lt; 0" to="b &lt;= 0" />
    <mutant id="mutant_1448" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'Q'" to="(charAt(value, (index + 1))) != 'Q'" />
    <mutant id="mutant_2778" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r &gt; 0" to="r != 0" />
    <mutant id="mutant_1445" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'Q'" to="false" />
    <mutant id="mutant_2777" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r &gt; 0" to="false" />
    <mutant id="mutant_1446" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(charAt(value, (index + 1))) == 'Q'" to="(charAt(value, (index + 1))) &lt; 'Q'" />
    <mutant id="mutant_2776" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="r &gt; 0" to="true" />
    <mutant id="mutant_3215" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="true" />
    <mutant id="mutant_3214" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii &gt;= 0" />
    <mutant id="mutant_3213" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii != 0" />
    <mutant id="mutant_3212" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null)" to="(m != null)" />
    <mutant id="mutant_3211" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null)" to="(m &lt;= null)" />
    <mutant id="mutant_3210" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null)" to="false" />
    <mutant id="mutant_3219" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii &lt;= 0" />
    <mutant id="mutant_3218" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii &lt; 0" />
    <mutant id="mutant_3217" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="ii == 0" />
    <mutant id="mutant_3216" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="ii &gt; 0" to="false" />
    <mutant id="mutant_3204" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="salt == null" to="salt &gt; null" />
    <mutant id="mutant_3203" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="salt == null" to="false" />
    <mutant id="mutant_3202" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="salt == null" to="true" />
    <mutant id="mutant_3201" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="salt == null" to="salt != null" />
    <mutant id="mutant_3200" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="salt == null" to="salt &lt; null" />
    <mutant id="mutant_3209" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null)" to="true" />
    <mutant id="mutant_3208" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null)" to="(m &gt;= null)" />
    <mutant id="mutant_3207" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null)" to="(m &lt; null)" />
    <mutant id="mutant_3206" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null)" to="(m &gt; null)" />
    <mutant id="mutant_3205" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="salt == null" to="salt &lt;= null" />
    <mutant id="mutant_1498" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength &lt;= (MatchRatingApproachEncoder.FOUR)" to="sumLength &gt; (MatchRatingApproachEncoder.FOUR)" />
    <mutant id="mutant_1499" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="sumLength &lt;= (MatchRatingApproachEncoder.FOUR)" to="sumLength &gt;= (MatchRatingApproachEncoder.FOUR)" />
    <mutant id="mutant_1496" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="count &gt;= minRating" to="count &lt; minRating" />
    <mutant id="mutant_1497" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="count &gt;= minRating" to="count &gt; minRating" />
    <mutant id="mutant_1494" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="count &gt;= minRating" to="true" />
    <mutant id="mutant_1495" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="count &gt;= minRating" to="false" />
    <mutant id="mutant_1492" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="count &gt;= minRating" to="count != minRating" />
    <mutant id="mutant_1493" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="count &gt;= minRating" to="count == minRating" />
    <mutant id="mutant_1490" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(Math.abs(((name1.length()) - (name2.length())))) &gt;= (MatchRatingApproachEncoder.THREE)" to="(Math.abs(((name1.length()) - (name2.length())))) &lt; (MatchRatingApproachEncoder.THREE)" />
    <mutant id="mutant_1491" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="count &gt;= minRating" to="count &lt;= minRating" />
    <mutant id="mutant_1487" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(Math.abs(((name1.length()) - (name2.length())))) &gt;= (MatchRatingApproachEncoder.THREE)" to="true" />
    <mutant id="mutant_1488" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(Math.abs(((name1.length()) - (name2.length())))) &gt;= (MatchRatingApproachEncoder.THREE)" to="false" />
    <mutant id="mutant_1485" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(Math.abs(((name1.length()) - (name2.length())))) &gt;= (MatchRatingApproachEncoder.THREE)" to="(Math.abs(((name1.length()) - (name2.length())))) != (MatchRatingApproachEncoder.THREE)" />
    <mutant id="mutant_1486" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(Math.abs(((name1.length()) - (name2.length())))) &gt;= (MatchRatingApproachEncoder.THREE)" to="(Math.abs(((name1.length()) - (name2.length())))) == (MatchRatingApproachEncoder.THREE)" />
    <mutant id="mutant_1483" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2.length()) == 1)" to="false" />
    <mutant id="mutant_1484" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(Math.abs(((name1.length()) - (name2.length())))) &gt;= (MatchRatingApproachEncoder.THREE)" to="(Math.abs(((name1.length()) - (name2.length())))) &lt;= (MatchRatingApproachEncoder.THREE)" />
    <mutant id="mutant_1481" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2.length()) == 1)" to="((name2.length()) &lt;= 1)" />
    <mutant id="mutant_1482" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2.length()) == 1)" to="true" />
    <mutant id="mutant_1489" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="(Math.abs(((name1.length()) - (name2.length())))) &gt;= (MatchRatingApproachEncoder.THREE)" to="(Math.abs(((name1.length()) - (name2.length())))) &gt; (MatchRatingApproachEncoder.THREE)" />
  </mutants>
</mutation>
