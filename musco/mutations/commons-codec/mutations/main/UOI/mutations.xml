<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="UOI" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="74896">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_569" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="((index + 4) - 1)" />
    <mutant id="mutant_565" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1))))) &amp;&amp; (isVowel(charAt(value, (index + 1))))" to="!(((index == 0) || (isVowel(charAt(value, (index - 1))))) &amp;&amp; (isVowel(charAt(value, (index + 1)))))" />
    <mutant id="mutant_566" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;)))" />
    <mutant id="mutant_567" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="((index + 4) + 1)" />
    <mutant id="mutant_568" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 4)" to="((index + 4) * -1)" />
    <mutant id="mutant_561" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1)))))" to="(!((index == 0) || (isVowel(charAt(value, (index - 1))))))" />
    <mutant id="mutant_562" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_563" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_564" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_560" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_576" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_577" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic))" to="(!((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)))" />
    <mutant id="mutant_578" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_579" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_572" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="!((((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;)))" />
    <mutant id="mutant_573" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)))" to="!((index == 0) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;))))" />
    <mutant id="mutant_574" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_575" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_570" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' '))" to="(!((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')))" />
    <mutant id="mutant_571" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4))" to="(!(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)))" />
    <mutant id="mutant_107" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="(i + patternLength) + 1" />
    <mutant id="mutant_108" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="(i + patternLength) * -1" />
    <mutant id="mutant_109" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) + 1)" />
    <mutant id="mutant_103" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="((suffix.length()) - 1) + 1" />
    <mutant id="mutant_587" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_104" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="((suffix.length()) - 1) - 1" />
    <mutant id="mutant_588" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_105" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(suffix.length()) - 1" to="((suffix.length()) - 1) * -1" />
    <mutant id="mutant_589" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_106" viable="true" in="org.apache.commons.codec.language.bm.Rule.patternAndContextMatches(java.lang.CharSequence,int)" from="i + patternLength" to="(i + patternLength) - 1" />
    <mutant id="mutant_1298" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="!((offset &lt; 0) || (len &lt; 0))" />
    <mutant id="mutant_1299" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="((offset + len) * -1)" />
    <mutant id="mutant_1296" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="(256 + b) - 1" />
    <mutant id="mutant_1297" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="(256 + b) + 1" />
    <mutant id="mutant_1294" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="((((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)) * -1" />
    <mutant id="mutant_1295" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read()" from="256 + b" to="(256 + b) * -1" />
    <mutant id="mutant_583" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_100" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="((input.length()) - 1) + 1" />
    <mutant id="mutant_584" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="(!(((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O')))" />
    <mutant id="mutant_101" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="((input.length()) - 1) - 1" />
    <mutant id="mutant_585" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)) &amp;&amp; (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="!(((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)) &amp;&amp; (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O')))" />
    <mutant id="mutant_102" viable="true" in="org.apache.commons.codec.language.bm.Rule.endsWith(java.lang.CharSequence,java.lang.CharSequence)" from="(input.length()) - 1" to="((input.length()) - 1) * -1" />
    <mutant id="mutant_586" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_580" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_581" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_582" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_118" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="((((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location) * -1)" />
    <mutant id="mutant_119" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="((((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location) + 1)" />
    <mutant id="mutant_114" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="((&quot;Malformed import statement \'&quot; + rawLine) + 1)" />
    <mutant id="mutant_598" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_115" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) * -1)" />
    <mutant id="mutant_599" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_116" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + 1)" />
    <mutant id="mutant_117" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;)" to="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) - 1)" />
    <mutant id="mutant_1292" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="((((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)) + 1" />
    <mutant id="mutant_1293" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)" to="((((len + (lineLength)) - 1) / (lineLength)) * (chunkSeparatorLength)) - 1" />
    <mutant id="mutant_1290" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="((((len + (lineLength)) - 1) / (lineLength)) * -1)" />
    <mutant id="mutant_1291" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="((((len + (lineLength)) - 1) / (lineLength)) - 1)" />
    <mutant id="mutant_1289" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((len + (lineLength)) - 1) / (lineLength))" to="((((len + (lineLength)) - 1) / (lineLength)) + 1)" />
    <mutant id="mutant_1287" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="(((len + (lineLength)) - 1) + 1)" />
    <mutant id="mutant_1288" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="(((len + (lineLength)) - 1) * -1)" />
    <mutant id="mutant_1285" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="((len + (lineLength)) + 1)" />
    <mutant id="mutant_1286" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((len + (lineLength)) - 1)" to="(((len + (lineLength)) - 1) - 1)" />
    <mutant id="mutant_1283" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="((len + (lineLength)) * -1)" />
    <mutant id="mutant_1284" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(len + (lineLength))" to="((len + (lineLength)) - 1)" />
    <mutant id="mutant_110" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) * -1)" />
    <mutant id="mutant_594" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_111" viable="true" in="org.apache.commons.codec.language.bm.Rule.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) - 1)" />
    <mutant id="mutant_595" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;)))" to="!((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;))))" />
    <mutant id="mutant_112" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="((&quot;Malformed import statement \'&quot; + rawLine) * -1)" />
    <mutant id="mutant_596" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_113" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed import statement \'&quot; + rawLine)" to="((&quot;Malformed import statement \'&quot; + rawLine) - 1)" />
    <mutant id="mutant_597" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_590" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_591" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_592" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_593" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_129" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) * -1)" />
    <mutant id="mutant_125" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="(((location + &quot;-&gt;&quot;) + incl) + 1)" />
    <mutant id="mutant_126" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="(((location + &quot;-&gt;&quot;) + incl) - 1)" />
    <mutant id="mutant_127" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) + 1)" />
    <mutant id="mutant_128" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) - 1)" />
    <mutant id="mutant_121" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="((location + &quot;-&gt;&quot;) * -1)" />
    <mutant id="mutant_122" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="((location + &quot;-&gt;&quot;) - 1)" />
    <mutant id="mutant_123" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(location + &quot;-&gt;&quot;)" to="((location + &quot;-&gt;&quot;) + 1)" />
    <mutant id="mutant_124" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((location + &quot;-&gt;&quot;) + incl)" to="(((location + &quot;-&gt;&quot;) + incl) * -1)" />
    <mutant id="mutant_120" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location)" to="((((&quot;Malformed import statement \'&quot; + rawLine) + &quot;\' in &quot;) + location) - 1)" />
    <mutant id="mutant_136" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + 1)" />
    <mutant id="mutant_137" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) - 1)" />
    <mutant id="mutant_138" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) * -1)" />
    <mutant id="mutant_139" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) * -1)" />
    <mutant id="mutant_132" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) * -1)" />
    <mutant id="mutant_133" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) * -1)" />
    <mutant id="mutant_134" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) - 1)" />
    <mutant id="mutant_135" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + 1)" />
    <mutant id="mutant_130" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) - 1)" />
    <mutant id="mutant_131" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + 1)" />
    <mutant id="mutant_147" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + 1)" />
    <mutant id="mutant_148" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="((((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location) * -1)" />
    <mutant id="mutant_149" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="((((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location) + 1)" />
    <mutant id="mutant_143" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="((&quot;Problem parsing line \'&quot; + currentLine) - 1)" />
    <mutant id="mutant_144" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="((&quot;Problem parsing line \'&quot; + currentLine) * -1)" />
    <mutant id="mutant_145" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) * -1)" />
    <mutant id="mutant_146" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) - 1)" />
    <mutant id="mutant_140" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) - 1)" />
    <mutant id="mutant_141" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) + 1)" />
    <mutant id="mutant_142" viable="true" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="((&quot;Problem parsing line \'&quot; + currentLine) + 1)" />
    <mutant id="mutant_158" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="((open + 1) * -1)" />
    <mutant id="mutant_159" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="((open + 1) + 1)" />
    <mutant id="mutant_154" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="((&quot;Unable to load resource: &quot; + resName) * -1)" />
    <mutant id="mutant_155" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="((&quot;Unable to load resource: &quot; + resName) - 1)" />
    <mutant id="mutant_156" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="((&quot;Unable to load resource: &quot; + resName) + 1)" />
    <mutant id="mutant_157" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="(open + 1)" to="((open + 1) - 1)" />
    <mutant id="mutant_150" viable="false" in="org.apache.commons.codec.language.bm.Rule.parseRules(java.util.Scanner,java.lang.String)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="((((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location) - 1)" />
    <mutant id="mutant_151" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="((&quot;Unable to load resource: &quot; + resName) * -1)" />
    <mutant id="mutant_152" viable="false" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="((&quot;Unable to load resource: &quot; + resName) - 1)" />
    <mutant id="mutant_153" viable="true" in="org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String)" from="(&quot;Unable to load resource: &quot; + resName)" to="((&quot;Unable to load resource: &quot; + resName) + 1)" />
    <mutant id="mutant_169" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="((regex.length()) - 1) - 1" />
    <mutant id="mutant_160" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="(((ph.length()) - 1) + 1)" />
    <mutant id="mutant_165" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="(((ph.length()) - 1) - 1)" />
    <mutant id="mutant_166" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="(body.startsWith(&quot;|&quot;)) || (body.endsWith(&quot;|&quot;))" to="!((body.startsWith(&quot;|&quot;)) || (body.endsWith(&quot;|&quot;)))" />
    <mutant id="mutant_167" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="((regex.length()) - 1) + 1" />
    <mutant id="mutant_168" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(regex.length()) - 1" to="((regex.length()) - 1) * -1" />
    <mutant id="mutant_161" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="(((ph.length()) - 1) * -1)" />
    <mutant id="mutant_162" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)" from="((ph.length()) - 1)" to="(((ph.length()) - 1) - 1)" />
    <mutant id="mutant_163" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="(((ph.length()) - 1) + 1)" />
    <mutant id="mutant_164" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="((ph.length()) - 1)" to="(((ph.length()) - 1) * -1)" />
    <mutant id="mutant_170" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="!(startsWith &amp;&amp; endsWith)" />
    <mutant id="mutant_171" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith)" to="(!(startsWith || endsWith))" />
    <mutant id="mutant_176" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="(((content.length()) - 1) - 1)" />
    <mutant id="mutant_177" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="!(startsWith &amp;&amp; endsWith)" />
    <mutant id="mutant_178" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="!(((input.length()) == 1) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch))" />
    <mutant id="mutant_179" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="!(((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch))" />
    <mutant id="mutant_172" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith) &amp;&amp; ((content.length()) == 0)" to="!((startsWith || endsWith) &amp;&amp; ((content.length()) == 0))" />
    <mutant id="mutant_173" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWithBox &amp;&amp; endsWithBox" to="!(startsWithBox &amp;&amp; endsWithBox)" />
    <mutant id="mutant_174" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="(((content.length()) - 1) + 1)" />
    <mutant id="mutant_175" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="((content.length()) - 1)" to="(((content.length()) - 1) * -1)" />
    <mutant id="mutant_180" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="(((input.length()) - 1) + 1)" />
    <mutant id="mutant_181" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="(((input.length()) - 1) - 1)" />
    <mutant id="mutant_182" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) - 1)" to="(((input.length()) - 1) * -1)" />
    <mutant id="mutant_187" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="(txt + (Caverphone1.SIX_1)) - 1" />
    <mutant id="mutant_188" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="!((txt == null) || ((txt.length()) == 0))" />
    <mutant id="mutant_189" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="(txt + (Caverphone2.TEN_1)) + 1" />
    <mutant id="mutant_183" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="!(((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch))" />
    <mutant id="mutant_184" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="!((txt == null) || ((txt.length()) == 0))" />
    <mutant id="mutant_185" viable="false" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="(txt + (Caverphone1.SIX_1)) * -1" />
    <mutant id="mutant_186" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="txt + (Caverphone1.SIX_1)" to="(txt + (Caverphone1.SIX_1)) + 1" />
    <mutant id="mutant_190" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="(txt + (Caverphone2.TEN_1)) * -1" />
    <mutant id="mutant_191" viable="false" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="txt + (Caverphone2.TEN_1)" to="(txt + (Caverphone2.TEN_1)) - 1" />
    <mutant id="mutant_192" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="(((data.length) - (this.length)) - 1)" />
    <mutant id="mutant_193" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="(((data.length) - (this.length)) * -1)" />
    <mutant id="mutant_198" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="((data.length) - (length)) - 1" />
    <mutant id="mutant_199" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="((data.length) - (length)) * -1" />
    <mutant id="mutant_194" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="((data.length) - (this.length))" to="(((data.length) - (this.length)) + 1)" />
    <mutant id="mutant_195" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="((((data.length) - (this.length)) + start) - 1)" />
    <mutant id="mutant_196" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="((((data.length) - (this.length)) + start) * -1)" />
    <mutant id="mutant_197" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.copyData(int,int)" from="(((data.length) - (this.length)) + start)" to="((((data.length) - (this.length)) + start) + 1)" />
    <mutant id="mutant_900" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_901" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) - 1)" />
    <mutant id="mutant_902" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) + 1)" />
    <mutant id="mutant_907" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="(((name1Size - i) + 1) - 1)" />
    <mutant id="mutant_908" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="(((name1Size - i) + 1) + 1)" />
    <mutant id="mutant_909" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name1Size - i) + 1)" to="(((name1Size - i) + 1) * -1)" />
    <mutant id="mutant_903" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) * -1)" />
    <mutant id="mutant_904" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) - 1)" />
    <mutant id="mutant_905" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) + 1)" />
    <mutant id="mutant_906" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) * -1)" />
    <mutant id="mutant_910" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_911" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_912" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_913" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) + 1)" />
    <mutant id="mutant_918" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) * -1)" />
    <mutant id="mutant_919" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="(((name2Size - i) + 1) * -1)" />
    <mutant id="mutant_914" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) - 1)" />
    <mutant id="mutant_915" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) * -1)" />
    <mutant id="mutant_916" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) + 1)" />
    <mutant id="mutant_917" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) - 1)" />
    <mutant id="mutant_921" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="(((name2Size - i) + 1) - 1)" />
    <mutant id="mutant_922" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) - 1)" />
    <mutant id="mutant_923" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) + 1)" />
    <mutant id="mutant_924" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1Size - i)" to="((name1Size - i) * -1)" />
    <mutant id="mutant_920" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((name2Size - i) + 1)" to="(((name2Size - i) + 1) + 1)" />
    <mutant id="mutant_929" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="(((MatchRatingApproachEncoder.SIX) - (strA.length())) + 1)" />
    <mutant id="mutant_925" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) + 1)" />
    <mutant id="mutant_926" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) - 1)" />
    <mutant id="mutant_927" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2Size - i)" to="((name2Size - i) * -1)" />
    <mutant id="mutant_928" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="(((MatchRatingApproachEncoder.SIX) - (strA.length())) * -1)" />
    <mutant id="mutant_1311" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="((offset + len) - 1)" />
    <mutant id="mutant_1312" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="((offset + len) + 1)" />
    <mutant id="mutant_1310" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset + len)" to="((offset + len) * -1)" />
    <mutant id="mutant_1319" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="((jj - bits) + 1)" />
    <mutant id="mutant_1317" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="((ascii.length) - 1) + 1" />
    <mutant id="mutant_1318" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="((jj - bits) * -1)" />
    <mutant id="mutant_1315" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="((ascii.length) - 1) * -1" />
    <mutant id="mutant_1316" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(ascii.length) - 1" to="((ascii.length) - 1) - 1" />
    <mutant id="mutant_1313" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="!((offset &gt; (b.length)) || ((offset + len) &gt; (b.length)))" />
    <mutant id="mutant_1314" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null) || ((array.length) == 0)" to="!((array == null) || ((array.length) == 0))" />
    <mutant id="mutant_932" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="(((MatchRatingApproachEncoder.SIX) - (strB.length())) + 1)" />
    <mutant id="mutant_933" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="(((MatchRatingApproachEncoder.SIX) - (strB.length())) - 1)" />
    <mutant id="mutant_934" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name)))" to="(!((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))))" />
    <mutant id="mutant_935" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name)))" to="(!(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))))" />
    <mutant id="mutant_930" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strA.length()))" to="(((MatchRatingApproachEncoder.SIX) - (strA.length())) - 1)" />
    <mutant id="mutant_931" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="((MatchRatingApproachEncoder.SIX) - (strB.length()))" to="(((MatchRatingApproachEncoder.SIX) - (strB.length())) * -1)" />
    <mutant id="mutant_936" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)" to="!((((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1))" />
    <mutant id="mutant_937" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="((nameLength - (MatchRatingApproachEncoder.THREE)) + 1)" />
    <mutant id="mutant_938" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="((nameLength - (MatchRatingApproachEncoder.THREE)) - 1)" />
    <mutant id="mutant_939" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="(nameLength - (MatchRatingApproachEncoder.THREE))" to="((nameLength - (MatchRatingApproachEncoder.THREE)) * -1)" />
    <mutant id="mutant_1300" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="((offset + len) - 1)" />
    <mutant id="mutant_1301" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset + len)" to="((offset + len) + 1)" />
    <mutant id="mutant_1308" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="(n - todo) * -1" />
    <mutant id="mutant_1309" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="!((offset &lt; 0) || (len &lt; 0))" />
    <mutant id="mutant_1306" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="(n - todo) + 1" />
    <mutant id="mutant_1307" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="n - todo" to="(n - todo) - 1" />
    <mutant id="mutant_1304" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="((&quot;Negative skip length: &quot; + n) + 1)" />
    <mutant id="mutant_1305" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="((&quot;Negative skip length: &quot; + n) - 1)" />
    <mutant id="mutant_1302" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="!((offset &gt; (b.length)) || ((offset + len) &gt; (b.length)))" />
    <mutant id="mutant_1303" viable="false" in="org.apache.commons.codec.binary.BaseNCodecInputStream.skip(long)" from="(&quot;Negative skip length: &quot; + n)" to="((&quot;Negative skip length: &quot; + n) * -1)" />
    <mutant id="mutant_943" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="(firstLetter + name) - 1" />
    <mutant id="mutant_944" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="(firstLetter + name) + 1" />
    <mutant id="mutant_945" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)" from="firstLetter + name" to="(firstLetter + name) * -1" />
    <mutant id="mutant_946" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="((n + 1) + 1)" />
    <mutant id="mutant_940" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="(firstThree + lastThree) - 1" />
    <mutant id="mutant_941" viable="false" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="(firstThree + lastThree) * -1" />
    <mutant id="mutant_942" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)" from="firstThree + lastThree" to="(firstThree + lastThree) + 1" />
    <mutant id="mutant_947" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_948" viable="true" in="org.apache.commons.codec.language.Metaphone.isLastChar(int,int)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_949" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="(((string.length()) - 1) * -1)" />
    <mutant id="mutant_954" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_955" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_956" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0) &amp;&amp; (index &lt; (string.length()))" to="!((index &gt; 0) &amp;&amp; (index &lt; (string.length())))" />
    <mutant id="mutant_957" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_950" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="(((string.length()) - 1) + 1)" />
    <mutant id="mutant_951" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="((string.length()) - 1)" to="(((string.length()) - 1) - 1)" />
    <mutant id="mutant_952" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0) &amp;&amp; (index &lt; ((string.length()) - 1))" to="!((index &gt;= 0) &amp;&amp; (index &lt; ((string.length()) - 1)))" />
    <mutant id="mutant_953" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_958" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_959" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_965" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="(((index + (test.length())) - 1) - 1)" />
    <mutant id="mutant_966" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0) &amp;&amp; (((index + (test.length())) - 1) &lt; (string.length()))" to="!((index &gt;= 0) &amp;&amp; (((index + (test.length())) - 1) &lt; (string.length())))" />
    <mutant id="mutant_967" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="((index + (test.length())) + 1)" />
    <mutant id="mutant_968" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="((index + (test.length())) * -1)" />
    <mutant id="mutant_961" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="((index + (test.length())) * -1)" />
    <mutant id="mutant_962" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="((index + (test.length())) - 1)" />
    <mutant id="mutant_963" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="(((index + (test.length())) - 1) + 1)" />
    <mutant id="mutant_964" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="((index + (test.length())) - 1)" to="(((index + (test.length())) - 1) * -1)" />
    <mutant id="mutant_969" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="((index + (test.length())) - 1)" />
    <mutant id="mutant_1355" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="((((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index) - 1)" />
    <mutant id="mutant_1356" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="((((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index) * -1)" />
    <mutant id="mutant_1353" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + 1)" />
    <mutant id="mutant_1354" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index)" to="((((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) + index) + 1)" />
    <mutant id="mutant_1351" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) * -1)" />
    <mutant id="mutant_1352" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;)" to="(((&quot;Illegal hexadecimal character &quot; + ch) + &quot; at index &quot;) - 1)" />
    <mutant id="mutant_1350" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="((&quot;Illegal hexadecimal character &quot; + ch) - 1)" />
    <mutant id="mutant_960" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index + (test.length()))" to="((index + (test.length())) + 1)" />
    <mutant id="mutant_1359" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="(((super.toString()) + &quot;[charsetName=&quot;) + 1)" />
    <mutant id="mutant_1357" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="(((super.toString()) + &quot;[charsetName=&quot;) * -1)" />
    <mutant id="mutant_1358" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="((super.toString()) + &quot;[charsetName=&quot;)" to="(((super.toString()) + &quot;[charsetName=&quot;) - 1)" />
    <mutant id="mutant_976" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) + 1)" />
    <mutant id="mutant_977" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) * -1)" />
    <mutant id="mutant_978" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) - 1)" />
    <mutant id="mutant_979" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) + 1)" />
    <mutant id="mutant_972" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) - 1)" />
    <mutant id="mutant_973" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) + 1)" />
    <mutant id="mutant_974" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) * -1)" />
    <mutant id="mutant_975" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) - 1)" />
    <mutant id="mutant_1344" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="((jj - bits) + 1)" />
    <mutant id="mutant_1345" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="((jj - bits) - 1)" />
    <mutant id="mutant_1342" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="((jj - bits) - 1)" />
    <mutant id="mutant_1343" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="((jj - bits) * -1)" />
    <mutant id="mutant_1340" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="((jj - bits) * -1)" />
    <mutant id="mutant_1341" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(jj - bits)" to="((jj - bits) + 1)" />
    <mutant id="mutant_970" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null) || ((txtLength = txt.length()) == 0)" to="!((txt == null) || ((txtLength = txt.length()) == 0))" />
    <mutant id="mutant_971" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) * -1)" />
    <mutant id="mutant_1348" viable="false" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="((&quot;Illegal hexadecimal character &quot; + ch) * -1)" />
    <mutant id="mutant_1349" viable="true" in="org.apache.commons.codec.binary.Hex.toDigit(char,int)" from="(&quot;Illegal hexadecimal character &quot; + ch)" to="((&quot;Illegal hexadecimal character &quot; + ch) + 1)" />
    <mutant id="mutant_1346" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String)" to="!((cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String))" />
    <mutant id="mutant_1347" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="!(((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2))))" />
    <mutant id="mutant_503" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_987" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) + 1)" />
    <mutant id="mutant_504" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_988" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_505" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_989" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_506" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;)))" to="!(((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;))))" />
    <mutant id="mutant_983" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen())) &amp;&amp; (n &lt; wdsz)" to="!(((code.length()) &lt; (getMaxCodeLen())) &amp;&amp; (n &lt; wdsz))" />
    <mutant id="mutant_500" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_984" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C') &amp;&amp; (isPreviousChar(local, n, symb))" to="!((symb != 'C') &amp;&amp; (isPreviousChar(local, n, symb)))" />
    <mutant id="mutant_501" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_985" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'M')) &amp;&amp; (isLastChar(wdsz, n))" to="!((isPreviousChar(local, n, 'M')) &amp;&amp; (isLastChar(wdsz, n)))" />
    <mutant id="mutant_502" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;))))" to="(!((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))))" />
    <mutant id="mutant_986" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n))))" to="(!((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))))" />
    <mutant id="mutant_507" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_508" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_509" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1333" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="((jj - bits) - 1)" />
    <mutant id="mutant_1334" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="((jj - bits) * -1)" />
    <mutant id="mutant_1331" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="((jj - bits) * -1)" />
    <mutant id="mutant_1332" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="((jj - bits) + 1)" />
    <mutant id="mutant_1330" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="((l_ascii.length) - 1) + 1" />
    <mutant id="mutant_980" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) * -1)" />
    <mutant id="mutant_981" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) - 1)" />
    <mutant id="mutant_1339" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="((l_ascii.length) - 1) + 1" />
    <mutant id="mutant_982" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((inwd.length) - 1)" to="(((inwd.length) - 1) + 1)" />
    <mutant id="mutant_1337" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="((l_ascii.length) - 1) * -1" />
    <mutant id="mutant_1338" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])" from="(l_ascii.length) - 1" to="((l_ascii.length) - 1) - 1" />
    <mutant id="mutant_1335" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="((jj - bits) + 1)" />
    <mutant id="mutant_1336" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(jj - bits)" to="((jj - bits) - 1)" />
    <mutant id="mutant_514" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="(!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))))" />
    <mutant id="mutant_998" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) + 1)" />
    <mutant id="mutant_515" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_999" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_516" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_517" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_510" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_994" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="!((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" />
    <mutant id="mutant_511" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_995" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'S')) &amp;&amp; (isNextChar(local, n, 'H'))" to="!((isPreviousChar(local, n, 'S')) &amp;&amp; (isNextChar(local, n, 'H')))" />
    <mutant id="mutant_512" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_996" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3))" to="(!((n == 0) &amp;&amp; (wdsz &gt;= 3)))" />
    <mutant id="mutant_513" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;)))" />
    <mutant id="mutant_997" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3)) &amp;&amp; (isVowel(local, 2))" to="!(((n == 0) &amp;&amp; (wdsz &gt;= 3)) &amp;&amp; (isVowel(local, 2)))" />
    <mutant id="mutant_518" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;))" to="!(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;)))" />
    <mutant id="mutant_519" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1322" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="((ascii.length) - 1) * -1" />
    <mutant id="mutant_1323" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="((ascii.length) - 1) - 1" />
    <mutant id="mutant_1320" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(byte[])" from="(jj - bits)" to="((jj - bits) - 1)" />
    <mutant id="mutant_1321" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null) || ((ascii.length) == 0)" to="!((ascii == null) || ((ascii.length) == 0))" />
    <mutant id="mutant_990" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="!(((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" />
    <mutant id="mutant_991" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) + 1)" />
    <mutant id="mutant_992" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_1328" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="((l_ascii.length) - 1) * -1" />
    <mutant id="mutant_993" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_1329" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])" from="(l_ascii.length) - 1" to="((l_ascii.length) - 1) - 1" />
    <mutant id="mutant_1326" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="((jj - bits) + 1)" />
    <mutant id="mutant_1327" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="((jj - bits) - 1)" />
    <mutant id="mutant_1324" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii.length) - 1" to="((ascii.length) - 1) + 1" />
    <mutant id="mutant_1325" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(jj - bits)" to="((jj - bits) * -1)" />
    <mutant id="mutant_525" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_526" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_527" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_528" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (!(isVowel(charAt(value, (index - 1)))))" to="!((index &gt; 0) &amp;&amp; (!(isVowel(charAt(value, (index - 1))))))" />
    <mutant id="mutant_521" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_522" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_523" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_524" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_529" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_1399" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="(((prefix + saltString) + &quot;$&quot;) * -1)" />
    <mutant id="mutant_1397" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="(((prefix + saltString) + &quot;$&quot;) + 1)" />
    <mutant id="mutant_1398" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((prefix + saltString) + &quot;$&quot;)" to="(((prefix + saltString) + &quot;$&quot;) - 1)" />
    <mutant id="mutant_1395" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="((prefix + saltString) + 1)" />
    <mutant id="mutant_1396" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="((prefix + saltString) - 1)" />
    <mutant id="mutant_1393" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) - 1)" />
    <mutant id="mutant_1394" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(prefix + saltString)" to="((prefix + saltString) * -1)" />
    <mutant id="mutant_520" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_536" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) + 1)" />
    <mutant id="mutant_537" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) * -1)" />
    <mutant id="mutant_538" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) - 1)" />
    <mutant id="mutant_539" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="(!((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" />
    <mutant id="mutant_532" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) * -1)" />
    <mutant id="mutant_533" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) + 1)" />
    <mutant id="mutant_534" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) - 1)" />
    <mutant id="mutant_535" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="(!((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" />
    <mutant id="mutant_1391" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) + 1)" />
    <mutant id="mutant_1392" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) * -1)" />
    <mutant id="mutant_1390" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null) || (!(m.find()))" to="!((m == null) || (!(m.find())))" />
    <mutant id="mutant_1388" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="(((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;) + 1)" />
    <mutant id="mutant_1389" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="(((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;) - 1)" />
    <mutant id="mutant_1386" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) * -1)" />
    <mutant id="mutant_1387" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;)" to="(((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + &quot;([\\.\\/a-zA-Z0-9]{1,8}).*&quot;) * -1)" />
    <mutant id="mutant_1384" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) + 1)" />
    <mutant id="mutant_1385" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;)))" to="((&quot;^&quot; + (prefix.replace(&quot;$&quot;, &quot;\\$&quot;))) - 1)" />
    <mutant id="mutant_1382" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="(((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8))) - 1)" />
    <mutant id="mutant_1383" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="(((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8))) * -1)" />
    <mutant id="mutant_530" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_531" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_547" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_548" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_549" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U'))" to="(!((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')))" />
    <mutant id="mutant_543" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="((index - 4) + 1)" />
    <mutant id="mutant_544" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="(!((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;))))" />
    <mutant id="mutant_545" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))) || ((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="!((((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))) || ((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;))))" />
    <mutant id="mutant_546" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_1380" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="((Md5Crypt.APR1_PREFIX) + salt) - 1" />
    <mutant id="mutant_1381" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[])" from="((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8)))" to="(((Md5Crypt.MD5_PREFIX) + (B64.getRandomSalt(8))) + 1)" />
    <mutant id="mutant_1377" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null) &amp;&amp; (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))" to="!((salt != null) &amp;&amp; (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX))))" />
    <mutant id="mutant_1378" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="((Md5Crypt.APR1_PREFIX) + salt) + 1" />
    <mutant id="mutant_1375" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="(((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8))) - 1)" />
    <mutant id="mutant_1376" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="(((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8))) * -1)" />
    <mutant id="mutant_1373" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="(((charsetName + &quot;: &quot;) + e) * -1)" />
    <mutant id="mutant_1374" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[])" from="((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8)))" to="(((Md5Crypt.APR1_PREFIX) + (B64.getRandomSalt(8))) + 1)" />
    <mutant id="mutant_1371" viable="true" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="(((charsetName + &quot;: &quot;) + e) + 1)" />
    <mutant id="mutant_1372" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="((charsetName + &quot;: &quot;) + e)" to="(((charsetName + &quot;: &quot;) + e) - 1)" />
    <mutant id="mutant_540" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" to="(!(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))))" />
    <mutant id="mutant_541" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="((index - 4) * -1)" />
    <mutant id="mutant_542" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 4)" to="((index - 4) - 1)" />
    <mutant id="mutant_1379" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(Md5Crypt.APR1_PREFIX) + salt" to="((Md5Crypt.APR1_PREFIX) + salt) * -1" />
    <mutant id="mutant_558" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_559" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_554" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_555" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_556" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_557" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'I')" to="!((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'I'))" />
    <mutant id="mutant_1370" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="((charsetName + &quot;: &quot;) - 1)" />
    <mutant id="mutant_1366" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null) || (cs2 == null)" to="!((cs1 == null) || (cs2 == null))" />
    <mutant id="mutant_1367" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String)" to="!((cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String))" />
    <mutant id="mutant_1364" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="((((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;) + 1" />
    <mutant id="mutant_1365" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="((((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;) - 1" />
    <mutant id="mutant_1362" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="((((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) - 1)" />
    <mutant id="mutant_1363" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;" to="((((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + &quot;]&quot;) * -1" />
    <mutant id="mutant_1360" viable="false" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="((((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) * -1)" />
    <mutant id="mutant_1361" viable="true" in="org.apache.commons.codec.binary.Hex.toString()" from="(((super.toString()) + &quot;[charsetName=&quot;) + (this.charset))" to="((((super.toString()) + &quot;[charsetName=&quot;) + (this.charset)) + 1)" />
    <mutant id="mutant_550" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) + 1)" />
    <mutant id="mutant_551" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) * -1)" />
    <mutant id="mutant_552" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) - 1)" />
    <mutant id="mutant_553" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;))" to="!(((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;)))" />
    <mutant id="mutant_1368" viable="true" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="((charsetName + &quot;: &quot;) + 1)" />
    <mutant id="mutant_1369" viable="false" in="org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String,java.io.UnsupportedEncodingException)" from="(charsetName + &quot;: &quot;)" to="((charsetName + &quot;: &quot;) * -1)" />
    <mutant id="mutant_448" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_449" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_444" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;))" to="!((index &gt; 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;)))" />
    <mutant id="mutant_445" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_446" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_447" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_1199" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="(((bigInt.bitLength()) % 8) - 1)" />
    <mutant id="mutant_1197" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0) &amp;&amp; ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="!((((bigInt.bitLength()) % 8) != 0) &amp;&amp; ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8)))" />
    <mutant id="mutant_1198" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="(((bigInt.bitLength()) % 8) + 1)" />
    <mutant id="mutant_1195" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="((bitlen / 8) + 1)" />
    <mutant id="mutant_1196" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="((bitlen / 8) * -1)" />
    <mutant id="mutant_440" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_441" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_442" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_443" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;))" to="!(((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;)))" />
    <mutant id="mutant_459" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_455" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_456" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_457" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_458" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_1193" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="((((bigInt.bitLength()) / 8) + 1) * -1)" />
    <mutant id="mutant_1194" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="((bitlen / 8) - 1)" />
    <mutant id="mutant_1191" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="((((bigInt.bitLength()) / 8) + 1) + 1)" />
    <mutant id="mutant_1192" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) / 8) + 1)" to="((((bigInt.bitLength()) / 8) + 1) - 1)" />
    <mutant id="mutant_1190" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="(((bigInt.bitLength()) / 8) * -1)" />
    <mutant id="mutant_1188" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="(((bigInt.bitLength()) / 8) + 1)" />
    <mutant id="mutant_1189" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) / 8)" to="(((bigInt.bitLength()) / 8) - 1)" />
    <mutant id="mutant_1186" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="(((bigInt.bitLength()) % 8) - 1)" />
    <mutant id="mutant_1187" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="(((bigInt.bitLength()) % 8) * -1)" />
    <mutant id="mutant_1184" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="((bitlen + 7) - 1)" />
    <mutant id="mutant_1185" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="(((bigInt.bitLength()) % 8) + 1)" />
    <mutant id="mutant_451" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_452" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_453" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_454" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_450" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_466" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0))))" to="(!((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))))" />
    <mutant id="mutant_467" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))) &amp;&amp; (!slavoGermanic)" to="!(((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))) &amp;&amp; (!slavoGermanic))" />
    <mutant id="mutant_468" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_469" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_1182" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="((bitlen + 7) * -1)" />
    <mutant id="mutant_1183" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen + 7)" to="((bitlen + 7) + 1)" />
    <mutant id="mutant_1180" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="((((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize) + 1)" />
    <mutant id="mutant_1181" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="((((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize) * -1)" />
    <mutant id="mutant_1179" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize)" to="((((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + maxResultSize) - 1)" />
    <mutant id="mutant_1177" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) + 1)" />
    <mutant id="mutant_1178" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) - 1)" />
    <mutant id="mutant_1175" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="((&quot;Input array too big, the output array would be bigger (&quot; + len) - 1)" />
    <mutant id="mutant_1176" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;)" to="(((&quot;Input array too big, the output array would be bigger (&quot; + len) + &quot;) than the specified maximum size of &quot;) * -1)" />
    <mutant id="mutant_1173" viable="false" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="((&quot;Input array too big, the output array would be bigger (&quot; + len) * -1)" />
    <mutant id="mutant_1174" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(&quot;Input array too big, the output array would be bigger (&quot; + len)" to="((&quot;Input array too big, the output array would be bigger (&quot; + len) + 1)" />
    <mutant id="mutant_462" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_463" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_464" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_465" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_460" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_461" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_477" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_478" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_479" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1171" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="!(((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1)))" />
    <mutant id="mutant_1172" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null) || ((binaryData.length) == 0)" to="!((binaryData == null) || ((binaryData.length) == 0))" />
    <mutant id="mutant_1170" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="(!((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))))" />
    <mutant id="mutant_1168" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT)) || (((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="!((octet == (BaseNCodec.PAD_DEFAULT)) || (((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1))))" />
    <mutant id="mutant_1169" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="(!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) &amp;&amp; (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))" to="!((!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) &amp;&amp; (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i]))))" />
    <mutant id="mutant_1166" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length)))" to="(!((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))))" />
    <mutant id="mutant_1167" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="(!(((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1))))" />
    <mutant id="mutant_1164" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="((this.encodeSize) - 1) + 1" />
    <mutant id="mutant_1165" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="((this.encodeSize) - 1) * -1" />
    <mutant id="mutant_1162" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="((Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)) - 1" />
    <mutant id="mutant_1163" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(this.encodeSize) - 1" to="((this.encodeSize) - 1) - 1" />
    <mutant id="mutant_473" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_474" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y'))" to="(!((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')))" />
    <mutant id="mutant_475" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')) &amp;&amp; (!slavoGermanic)" to="!(((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')) &amp;&amp; (!slavoGermanic))" />
    <mutant id="mutant_476" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_470" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_471" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_472" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_488" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_489" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="(!(((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))))" />
    <mutant id="mutant_484" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_485" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_486" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_487" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_480" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_481" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_482" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)) &amp;&amp; (!slavoGermanic)" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)) &amp;&amp; (!slavoGermanic))" />
    <mutant id="mutant_483" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_499" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_490" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="!((index == 0) &amp;&amp; (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))))" />
    <mutant id="mutant_495" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_496" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_497" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y'))" to="(!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')))" />
    <mutant id="mutant_498" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;))))" to="(!(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))))" />
    <mutant id="mutant_491" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_492" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_493" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_494" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_800" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_801" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_802" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_803" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_808" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_809" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_804" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_805" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_806" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_807" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_811" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_812" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_813" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_814" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_810" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_819" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_815" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_816" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_817" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_818" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_822" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_823" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_824" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_825" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_820" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_821" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_826" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_827" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_828" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_829" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_833" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="((&quot;Cc&quot; + &quot;OoUu&quot;) * -1)" />
    <mutant id="mutant_834" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="((&quot;Cc&quot; + &quot;OoUu&quot;) - 1)" />
    <mutant id="mutant_835" viable="false" in="?" from="(&quot;Cc&quot; + &quot;OoUu&quot;)" to="((&quot;Cc&quot; + &quot;OoUu&quot;) + 1)" />
    <mutant id="mutant_836" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="((&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)) - 1)" />
    <mutant id="mutant_830" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_831" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_832" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_837" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="((&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)) * -1)" />
    <mutant id="mutant_838" viable="false" in="?" from="(&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))" to="((&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)) + 1)" />
    <mutant id="mutant_839" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))) + 1)" />
    <mutant id="mutant_844" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="((&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))) - 1)" />
    <mutant id="mutant_845" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))) + 1)" />
    <mutant id="mutant_846" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))) * -1)" />
    <mutant id="mutant_847" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))) - 1)" />
    <mutant id="mutant_840" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))) - 1)" />
    <mutant id="mutant_841" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))) * -1)" />
    <mutant id="mutant_842" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="((&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))) * -1)" />
    <mutant id="mutant_843" viable="false" in="?" from="(&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))" to="((&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))) + 1)" />
    <mutant id="mutant_848" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))) - 1)" />
    <mutant id="mutant_849" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))) * -1)" />
    <mutant id="mutant_1234" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) * -1)" />
    <mutant id="mutant_1235" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)) - 1" />
    <mutant id="mutant_1232" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) - 1)" />
    <mutant id="mutant_1233" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) + 1)" />
    <mutant id="mutant_1230" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="((context.pos) - savedPos) - 1" />
    <mutant id="mutant_1231" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="!(((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0))" />
    <mutant id="mutant_1238" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="(((context.ibitWorkArea) &lt;&lt; 8) + b) * -1" />
    <mutant id="mutant_1239" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="(((context.ibitWorkArea) &lt;&lt; 8) + b) - 1" />
    <mutant id="mutant_1236" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)) * -1" />
    <mutant id="mutant_1237" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base64.BYTES_PER_UNENCODED_BLOCK)) + 1" />
    <mutant id="mutant_855" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="((&quot;Çç&quot; + &quot;ŐőŰű&quot;) - 1)" />
    <mutant id="mutant_856" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="((&quot;Çç&quot; + &quot;ŐőŰű&quot;) + 1)" />
    <mutant id="mutant_857" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="((&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)) + 1)" />
    <mutant id="mutant_858" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="((&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)) * -1)" />
    <mutant id="mutant_851" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="(&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))) * -1" />
    <mutant id="mutant_852" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="(&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))) + 1" />
    <mutant id="mutant_853" viable="false" in="?" from="&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="(&quot;AaEeIiOoUu&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))) - 1" />
    <mutant id="mutant_854" viable="false" in="?" from="(&quot;Çç&quot; + &quot;ŐőŰű&quot;)" to="((&quot;Çç&quot; + &quot;ŐőŰű&quot;) * -1)" />
    <mutant id="mutant_859" viable="false" in="?" from="(&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))" to="((&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)) - 1)" />
    <mutant id="mutant_1223" viable="false" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) - 1)" />
    <mutant id="mutant_1224" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="!((0 == (context.modulus)) &amp;&amp; ((lineLength) == 0))" />
    <mutant id="mutant_1221" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) + 1)" />
    <mutant id="mutant_1222" viable="false" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) * -1)" />
    <mutant id="mutant_1220" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) != 0)" to="!((context.eof) &amp;&amp; ((context.modulus) != 0))" />
    <mutant id="mutant_1229" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="((context.pos) - savedPos) * -1" />
    <mutant id="mutant_850" viable="false" in="?" from="(&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;))))))" to="((&quot;AaEeIiOoUuYy&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;AaOoNn&quot; + (&quot;AaEeIiOoUuYy&quot; + (&quot;Aa&quot; + (&quot;Cc&quot; + &quot;OoUu&quot;)))))) + 1)" />
    <mutant id="mutant_1227" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) - 1)" />
    <mutant id="mutant_1228" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="((context.pos) - savedPos) + 1" />
    <mutant id="mutant_1225" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) + 1)" />
    <mutant id="mutant_1226" viable="false" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) * -1)" />
    <mutant id="mutant_866" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="((&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))) + 1)" />
    <mutant id="mutant_867" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="((&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))) * -1)" />
    <mutant id="mutant_868" viable="false" in="?" from="(&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))" to="((&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))) - 1)" />
    <mutant id="mutant_869" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="((&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))) + 1)" />
    <mutant id="mutant_862" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="((&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))) * -1)" />
    <mutant id="mutant_863" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="((&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))) * -1)" />
    <mutant id="mutant_864" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="((&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))) - 1)" />
    <mutant id="mutant_865" viable="false" in="?" from="(&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))" to="((&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))) + 1)" />
    <mutant id="mutant_1212" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) + 1)" />
    <mutant id="mutant_1213" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) * -1)" />
    <mutant id="mutant_1210" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (Base64.DECODE_TABLE.length))" to="!((b &gt;= 0) &amp;&amp; (b &lt; (Base64.DECODE_TABLE.length)))" />
    <mutant id="mutant_1211" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) - 1)" />
    <mutant id="mutant_860" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="((&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))) - 1)" />
    <mutant id="mutant_1218" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="(((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result) - 1" />
    <mutant id="mutant_861" viable="false" in="?" from="(&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))" to="((&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))) + 1)" />
    <mutant id="mutant_1219" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="(((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result) + 1" />
    <mutant id="mutant_1216" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)) * -1" />
    <mutant id="mutant_1217" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result" to="(((context.ibitWorkArea) &lt;&lt; (Base64.BITS_PER_ENCODED_BYTE)) + result) * -1" />
    <mutant id="mutant_1214" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)) + 1" />
    <mutant id="mutant_1215" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base64.BYTES_PER_ENCODED_BLOCK)) - 1" />
    <mutant id="mutant_877" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2)))" to="(!((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))))" />
    <mutant id="mutant_878" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))" to="!(((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2)))" />
    <mutant id="mutant_879" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1) || ((name2.length()) == 1)" to="!(((name1.length()) == 1) || ((name2.length()) == 1))" />
    <mutant id="mutant_873" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="(&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))) + 1" />
    <mutant id="mutant_874" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="(&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))) * -1" />
    <mutant id="mutant_875" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1)))" to="(!((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))))" />
    <mutant id="mutant_876" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))" to="!(((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1)))" />
    <mutant id="mutant_1201" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="((bitlen / 8) - 1)" />
    <mutant id="mutant_1202" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="((bitlen / 8) + 1)" />
    <mutant id="mutant_1200" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="((bigInt.bitLength()) % 8)" to="(((bigInt.bitLength()) % 8) * -1)" />
    <mutant id="mutant_1209" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="(bitlen / 8) * -1" />
    <mutant id="mutant_870" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="((&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))) - 1)" />
    <mutant id="mutant_871" viable="false" in="?" from="(&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="((&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;)))))) * -1)" />
    <mutant id="mutant_1207" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="(bitlen / 8) - 1" />
    <mutant id="mutant_872" viable="false" in="?" from="&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))" to="(&quot;ÀàÈèÌìÒòÙù&quot; + (&quot;ÁáÉéÍíÓóÚúÝý&quot; + (&quot;ÂâÊêÎîÔôÛûŶŷ&quot; + (&quot;ÃãÕõÑñ&quot; + (&quot;ÄäËëÏïÖöÜüŸÿ&quot; + (&quot;Åå&quot; + (&quot;Çç&quot; + &quot;ŐőŰű&quot;))))))) - 1" />
    <mutant id="mutant_1208" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="bitlen / 8" to="(bitlen / 8) + 1" />
    <mutant id="mutant_1205" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="((bitlen / 8) - len) - 1" />
    <mutant id="mutant_1206" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="((bitlen / 8) - len) * -1" />
    <mutant id="mutant_1203" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8)" to="((bitlen / 8) * -1)" />
    <mutant id="mutant_1204" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(bitlen / 8) - len" to="((bitlen / 8) - len) + 1" />
    <mutant id="mutant_404" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))) || ((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="!(((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))) || ((value.indexOf(&quot;WITZ&quot;)) &gt; (-1)))" />
    <mutant id="mutant_888" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;)))" to="(!((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))))" />
    <mutant id="mutant_405" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0) || (index &gt;= (value.length()))" to="!((index &lt; 0) || (index &gt;= (value.length())))" />
    <mutant id="mutant_889" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))) || (letter.equalsIgnoreCase(&quot;U&quot;))" to="!(((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))) || (letter.equalsIgnoreCase(&quot;U&quot;)))" />
    <mutant id="mutant_406" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_407" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_400" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="((start + length) - 1)" />
    <mutant id="mutant_884" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) + (name2.length()))" to="(((name1.length()) + (name2.length())) - 1)" />
    <mutant id="mutant_401" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="((start + length) + 1)" />
    <mutant id="mutant_885" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) + (name2.length()))" to="(((name1.length()) + (name2.length())) * -1)" />
    <mutant id="mutant_402" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1)))" to="(!(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))))" />
    <mutant id="mutant_886" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;)))" to="(!((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))))" />
    <mutant id="mutant_403" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1)))" to="(!((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))))" />
    <mutant id="mutant_887" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;)))" to="(!(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))))" />
    <mutant id="mutant_1281" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="(((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))) - 1" />
    <mutant id="mutant_1282" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="(((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))) + 1" />
    <mutant id="mutant_1280" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))" to="(((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * ((long)(encodedBlockSize))) * -1" />
    <mutant id="mutant_408" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_409" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;))" to="!((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;)))" />
    <mutant id="mutant_1278" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="(((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) - 1)" />
    <mutant id="mutant_1279" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="(((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) * -1)" />
    <mutant id="mutant_1276" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="((((pArray.length) + (unencodedBlockSize)) - 1) - 1)" />
    <mutant id="mutant_1277" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize))" to="(((((pArray.length) + (unencodedBlockSize)) - 1) / (unencodedBlockSize)) + 1)" />
    <mutant id="mutant_1274" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="((((pArray.length) + (unencodedBlockSize)) - 1) * -1)" />
    <mutant id="mutant_1275" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="(((pArray.length) + (unencodedBlockSize)) - 1)" to="((((pArray.length) + (unencodedBlockSize)) - 1) + 1)" />
    <mutant id="mutant_1272" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="(((pArray.length) + (unencodedBlockSize)) * -1)" />
    <mutant id="mutant_1273" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="(((pArray.length) + (unencodedBlockSize)) - 1)" />
    <mutant id="mutant_880" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) - (name2.length()))" to="(((name1.length()) - (name2.length())) * -1)" />
    <mutant id="mutant_881" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) - (name2.length()))" to="(((name1.length()) - (name2.length())) + 1)" />
    <mutant id="mutant_882" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) - (name2.length()))" to="(((name1.length()) - (name2.length())) - 1)" />
    <mutant id="mutant_883" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) + (name2.length()))" to="(((name1.length()) + (name2.length())) + 1)" />
    <mutant id="mutant_415" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_899" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_416" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_417" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M'))" to="(!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M')))" />
    <mutant id="mutant_418" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)) &amp;&amp; (!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M')))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)) &amp;&amp; (!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M'))))" />
    <mutant id="mutant_411" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) + 1)" />
    <mutant id="mutant_895" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="((name2.length()) - 1) + 1" />
    <mutant id="mutant_412" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) - 1)" />
    <mutant id="mutant_896" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="((name2.length()) - 1) * -1" />
    <mutant id="mutant_413" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;)))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;))))" />
    <mutant id="mutant_897" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name2.length()) - 1" to="((name2.length()) - 1) - 1" />
    <mutant id="mutant_414" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_898" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_1270" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="((context.pos) - (context.readPos)) - 1" />
    <mutant id="mutant_1271" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.getEncodedLength(byte[])" from="((pArray.length) + (unencodedBlockSize))" to="(((pArray.length) + (unencodedBlockSize)) + 1)" />
    <mutant id="mutant_419" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1267" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="((context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)) - 1" />
    <mutant id="mutant_1268" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="((context.pos) - (context.readPos)) + 1" />
    <mutant id="mutant_1265" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="((context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)) * -1" />
    <mutant id="mutant_1266" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)" to="((context.buffer.length) * (BaseNCodec.DEFAULT_BUFFER_RESIZE_FACTOR)) + 1" />
    <mutant id="mutant_1263" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="(((context.pos) + size) * -1)" />
    <mutant id="mutant_1264" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null) || ((context.buffer.length) &lt; ((context.pos) + size))" to="!(((context.buffer) == null) || ((context.buffer.length) &lt; ((context.pos) + size)))" />
    <mutant id="mutant_1261" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="(((context.pos) + size) + 1)" />
    <mutant id="mutant_1262" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.pos) + size)" to="(((context.pos) + size) - 1)" />
    <mutant id="mutant_891" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="!((sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN)))" />
    <mutant id="mutant_892" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="((name1.length()) - 1) + 1" />
    <mutant id="mutant_893" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="((name1.length()) - 1) * -1" />
    <mutant id="mutant_410" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) * -1)" />
    <mutant id="mutant_894" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String,java.lang.String)" from="(name1.length()) - 1" to="((name1.length()) - 1) - 1" />
    <mutant id="mutant_1269" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - (context.readPos)" to="((context.pos) - (context.readPos)) * -1" />
    <mutant id="mutant_890" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="!((sumLength &gt;= (MatchRatingApproachEncoder.FIVE)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.SEVEN)))" />
    <mutant id="mutant_426" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_427" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_428" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;)))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;))))" />
    <mutant id="mutant_429" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_422" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_423" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_424" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_425" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1260" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="((context.pos) - (context.readPos)) - 1" />
    <mutant id="mutant_1256" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="!((pArray == null) || ((pArray.length) == 0))" />
    <mutant id="mutant_1257" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="!((pArray == null) || ((pArray.length) == 0))" />
    <mutant id="mutant_1254" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="(!((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))))" />
    <mutant id="mutant_1255" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(!(isInAlphabet(arrayOctet[i]))) &amp;&amp; ((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="!((!(isInAlphabet(arrayOctet[i]))) &amp;&amp; ((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))))" />
    <mutant id="mutant_1252" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element) || (isInAlphabet(element))" to="!(((pad) == element) || (isInAlphabet(element)))" />
    <mutant id="mutant_1253" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" to="(!(((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" />
    <mutant id="mutant_1250" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="((lineLength / encodedBlockSize) * encodedBlockSize) + 1" />
    <mutant id="mutant_1251" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="((lineLength / encodedBlockSize) * encodedBlockSize) * -1" />
    <mutant id="mutant_420" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_421" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1258" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="((context.pos) - (context.readPos)) + 1" />
    <mutant id="mutant_1259" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(context.pos) - (context.readPos)" to="((context.pos) - (context.readPos)) * -1" />
    <mutant id="mutant_437" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_438" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_439" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A'))" to="(!((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')))" />
    <mutant id="mutant_433" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_434" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_435" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;)))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;))))" />
    <mutant id="mutant_436" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_1245" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0) &amp;&amp; (chunkSeparatorLength &gt; 0)" to="!((lineLength &gt; 0) &amp;&amp; (chunkSeparatorLength &gt; 0))" />
    <mutant id="mutant_1246" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="((lineLength / encodedBlockSize) + 1)" />
    <mutant id="mutant_1243" viable="false" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="((&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;) - 1)" />
    <mutant id="mutant_1244" viable="false" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="((&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;) * -1)" />
    <mutant id="mutant_1241" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="!(((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos)))" />
    <mutant id="mutant_1242" viable="true" in="org.apache.commons.codec.binary.BaseNCodec$Context.toString()" from="(&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;)" to="((&quot;%s[buffer=%s, currentLinePos=%s, eof=%s, ibitWorkArea=%s, lbitWorkArea=%s, &quot; + &quot;modulus=%s, pos=%s, readPos=%s]&quot;) + 1)" />
    <mutant id="mutant_1240" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.ibitWorkArea) &lt;&lt; 8) + b" to="(((context.ibitWorkArea) &lt;&lt; 8) + b) + 1" />
    <mutant id="mutant_430" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_431" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_432" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_1249" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize) * encodedBlockSize" to="((lineLength / encodedBlockSize) * encodedBlockSize) - 1" />
    <mutant id="mutant_1247" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="((lineLength / encodedBlockSize) * -1)" />
    <mutant id="mutant_1248" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength / encodedBlockSize)" to="((lineLength / encodedBlockSize) - 1)" />
    <mutant id="mutant_327" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;))" to="!(((c != 'I') &amp;&amp; (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;)))" />
    <mutant id="mutant_328" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_329" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_323" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E'))" to="(!((c != 'I') &amp;&amp; (c != 'E')))" />
    <mutant id="mutant_324" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="((index - 2) * -1)" />
    <mutant id="mutant_325" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="((index - 2) + 1)" />
    <mutant id="mutant_326" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="((index - 2) - 1)" />
    <mutant id="mutant_1083" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="(((key.length()) - 2) * -1)" />
    <mutant id="mutant_1084" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) * -1)" />
    <mutant id="mutant_1081" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="(((key.length()) - 2) + 1)" />
    <mutant id="mutant_1082" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="(((key.length()) - 2) - 1)" />
    <mutant id="mutant_1080" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A') &amp;&amp; (lastChar == 'Y')" to="!((last2Char == 'A') &amp;&amp; (lastChar == 'Y'))" />
    <mutant id="mutant_1078" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="(((key.length()) - 2) - 1)" />
    <mutant id="mutant_1079" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="(((key.length()) - 2) * -1)" />
    <mutant id="mutant_1076" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) - 1)" />
    <mutant id="mutant_1077" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 2)" to="(((key.length()) - 2) + 1)" />
    <mutant id="mutant_1074" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) * -1)" />
    <mutant id="mutant_1075" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) + 1)" />
    <mutant id="mutant_320" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_321" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_322" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_338" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="((index - 2) - 1)" />
    <mutant id="mutant_339" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;)))" to="(!(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))))" />
    <mutant id="mutant_334" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;)))" to="!((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;))))" />
    <mutant id="mutant_335" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="(!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))))" />
    <mutant id="mutant_336" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="((index - 2) * -1)" />
    <mutant id="mutant_337" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 2)" to="((index - 2) + 1)" />
    <mutant id="mutant_1072" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) + 1)" />
    <mutant id="mutant_1073" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) - 1)" />
    <mutant id="mutant_1070" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) - 1)" />
    <mutant id="mutant_1071" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) * -1)" />
    <mutant id="mutant_1069" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) + 1)" />
    <mutant id="mutant_1067" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_1068" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) * -1)" />
    <mutant id="mutant_1065" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1066" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1063" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="((i - 1) - 1)" />
    <mutant id="mutant_1064" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="((i - 1) * -1)" />
    <mutant id="mutant_330" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_331" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_332" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_333" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_349" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_345" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_346" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_347" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0))" to="(!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)))" />
    <mutant id="mutant_348" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_1061" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="((i + 2) - 1)" />
    <mutant id="mutant_1062" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i - 1)" to="((i - 1) + 1)" />
    <mutant id="mutant_1060" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="((i + 2) * -1)" />
    <mutant id="mutant_1058" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="((len - 2) - 1)" />
    <mutant id="mutant_1059" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 2)" to="((i + 2) + 1)" />
    <mutant id="mutant_1056" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="((len - 2) * -1)" />
    <mutant id="mutant_1057" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 2)" to="((len - 2) + 1)" />
    <mutant id="mutant_1054" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_1055" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_1052" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="((len - 1) + 1)" />
    <mutant id="mutant_1053" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_341" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_342" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_343" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;)))" to="(!((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))))" />
    <mutant id="mutant_344" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_340" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_356" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_357" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))" to="(!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" />
    <mutant id="mutant_358" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="(!(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))))" />
    <mutant id="mutant_359" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))) || (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="!(((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))) || (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))))" />
    <mutant id="mutant_1050" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="((len - 1) - 1)" />
    <mutant id="mutant_1051" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(len - 1)" to="((len - 1) * -1)" />
    <mutant id="mutant_1047" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="(!((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next)))))" />
    <mutant id="mutant_1048" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H') &amp;&amp; ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="!((curr == 'H') &amp;&amp; ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next)))))" />
    <mutant id="mutant_1045" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C')) &amp;&amp; (aNext == 'H')" to="!(((curr == 'S') &amp;&amp; (next == 'C')) &amp;&amp; (aNext == 'H'))" />
    <mutant id="mutant_1046" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P') &amp;&amp; (next == 'H')" to="!((curr == 'P') &amp;&amp; (next == 'H'))" />
    <mutant id="mutant_1043" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E') &amp;&amp; (next == 'V')" to="!((curr == 'E') &amp;&amp; (next == 'V'))" />
    <mutant id="mutant_1044" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C'))" to="(!((curr == 'S') &amp;&amp; (next == 'C')))" />
    <mutant id="mutant_1041" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O'))" to="(!((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')))" />
    <mutant id="mutant_1042" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')" to="!(((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U'))" />
    <mutant id="mutant_352" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_353" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_354" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_355" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_350" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_1049" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W') &amp;&amp; (org.apache.commons.codec.language.Nysiis.isVowel(prev))" to="!((curr == 'W') &amp;&amp; (org.apache.commons.codec.language.Nysiis.isVowel(prev)))" />
    <mutant id="mutant_351" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_367" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="(((value.length()) - 2) * -1)" />
    <mutant id="mutant_368" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="(((value.length()) - 2) - 1)" />
    <mutant id="mutant_369" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 2)" to="(((value.length()) - 2) + 1)" />
    <mutant id="mutant_363" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_364" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_365" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_366" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;))" to="!((index == ((value.length()) - 3)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;)))" />
    <mutant id="mutant_360" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="(((value.length()) - 3) * -1)" />
    <mutant id="mutant_361" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="(((value.length()) - 3) - 1)" />
    <mutant id="mutant_362" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 3)" to="(((value.length()) - 3) + 1)" />
    <mutant id="mutant_378" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_379" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_374" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_375" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_376" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_377" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;))" to="!(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;)))" />
    <mutant id="mutant_370" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_371" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_372" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_373" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;)))" to="(!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))))" />
    <mutant id="mutant_389" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_380" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1098" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#') &amp;&amp; (mapped != last)" to="!((mapped != '#') &amp;&amp; (mapped != last))" />
    <mutant id="mutant_1099" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null) || (es2 == null)" to="!((es1 == null) || (es2 == null))" />
    <mutant id="mutant_1096" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="((&quot;The character is not mapped: &quot; + ch) + 1)" />
    <mutant id="mutant_1097" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length())) &amp;&amp; (count &lt; (out.length))" to="!((incount &lt; (str.length())) &amp;&amp; (count &lt; (out.length)))" />
    <mutant id="mutant_385" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_386" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_387" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_388" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_381" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_382" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_383" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_384" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1094" viable="false" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="((&quot;The character is not mapped: &quot; + ch) - 1)" />
    <mutant id="mutant_1095" viable="false" in="org.apache.commons.codec.language.Soundex.map(char)" from="(&quot;The character is not mapped: &quot; + ch)" to="((&quot;The character is not mapped: &quot; + ch) * -1)" />
    <mutant id="mutant_1092" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="(ch - 'A') - 1" />
    <mutant id="mutant_1093" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0) || (index &gt;= (getSoundexMapping().length))" to="!((index &lt; 0) || (index &gt;= (getSoundexMapping().length)))" />
    <mutant id="mutant_1090" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="(ch - 'A') * -1" />
    <mutant id="mutant_1091" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="ch - 'A'" to="(ch - 'A') + 1" />
    <mutant id="mutant_390" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_1089" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="(((Character.toUpperCase(c)) - 'A') - 1)" />
    <mutant id="mutant_391" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_1087" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="(((Character.toUpperCase(c)) - 'A') * -1)" />
    <mutant id="mutant_1088" viable="true" in="org.apache.commons.codec.language.RefinedSoundex.getMappingCode(char)" from="((Character.toUpperCase(c)) - 'A')" to="(((Character.toUpperCase(c)) - 'A') + 1)" />
    <mutant id="mutant_1085" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) + 1)" />
    <mutant id="mutant_1086" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="((key.length()) - 1)" to="(((key.length()) - 1) - 1)" />
    <mutant id="mutant_396" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="((start + length) - 1)" />
    <mutant id="mutant_397" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="((start + length) + 1)" />
    <mutant id="mutant_398" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0) &amp;&amp; ((start + length) &lt;= (value.length()))" to="!((start &gt;= 0) &amp;&amp; ((start + length) &lt;= (value.length())))" />
    <mutant id="mutant_399" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="((start + length) * -1)" />
    <mutant id="mutant_392" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_393" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="(!(((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;))))" />
    <mutant id="mutant_394" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)) &amp;&amp; (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)) &amp;&amp; (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;))))" />
    <mutant id="mutant_395" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start + length)" to="((start + length) * -1)" />
    <mutant id="mutant_1519" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="(((bytes.length) - 2) * -1)" />
    <mutant id="mutant_1510" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="(!((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))))" />
    <mutant id="mutant_1517" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="((bytes.length) - 2) - 1" />
    <mutant id="mutant_1518" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="(((bytes.length) - 2) + 1)" />
    <mutant id="mutant_1515" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="((bytes.length) - 2) + 1" />
    <mutant id="mutant_1516" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(bytes.length) - 2" to="((bytes.length) - 2) * -1" />
    <mutant id="mutant_1513" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="(((QuotedPrintableCodec.SAFE_LENGTH) - 2) - 1)" />
    <mutant id="mutant_1514" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="(((QuotedPrintableCodec.SAFE_LENGTH) - 2) + 1)" />
    <mutant id="mutant_1511" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="!((!(printable.get(b))) || ((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))))" />
    <mutant id="mutant_1512" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 2)" to="(((QuotedPrintableCodec.SAFE_LENGTH) - 2) * -1)" />
    <mutant id="mutant_1508" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="(((QuotedPrintableCodec.SAFE_LENGTH) - 5) * -1)" />
    <mutant id="mutant_1509" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="(((QuotedPrintableCodec.SAFE_LENGTH) - 5) + 1)" />
    <mutant id="mutant_1506" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="(((bytes.length) - 3) * -1)" />
    <mutant id="mutant_1507" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.SAFE_LENGTH) - 5)" to="(((QuotedPrintableCodec.SAFE_LENGTH) - 5) - 1)" />
    <mutant id="mutant_1504" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="(((bytes.length) - 3) + 1)" />
    <mutant id="mutant_1505" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="(((bytes.length) - 3) - 1)" />
    <mutant id="mutant_1502" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="(((bytes.length) - 3) * -1)" />
    <mutant id="mutant_1503" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="!((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" />
    <mutant id="mutant_1500" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="(((bytes.length) - 3) + 1)" />
    <mutant id="mutant_1501" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 3)" to="(((bytes.length) - 3) - 1)" />
    <mutant id="mutant_1553" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="(((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;) * -1)" />
    <mutant id="mutant_1554" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="(to + 1) + 1" />
    <mutant id="mutant_1551" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="(((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;) - 1)" />
    <mutant id="mutant_1552" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;)" to="(((&quot;This codec cannot decode &quot; + encoding) + &quot; encoded content&quot;) + 1)" />
    <mutant id="mutant_1550" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="((&quot;This codec cannot decode &quot; + encoding) + 1)" />
    <mutant id="mutant_1559" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="(((char)(((u &lt;&lt; 4) + l))) * -1)" />
    <mutant id="mutant_1557" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="(((char)(((u &lt;&lt; 4) + l))) - 1)" />
    <mutant id="mutant_1558" viable="true" in="org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="(((char)(((u &lt;&lt; 4) + l))) + 1)" />
    <mutant id="mutant_1555" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="(to + 1) - 1" />
    <mutant id="mutant_1556" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="(to + 1) * -1" />
    <mutant id="mutant_1542" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="((text.length()) - 2) * -1" />
    <mutant id="mutant_1543" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="((text.length()) - 2) - 1" />
    <mutant id="mutant_1540" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;) + 1)" />
    <mutant id="mutant_1541" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))" to="!((!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX))))" />
    <mutant id="mutant_1548" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="((&quot;This codec cannot decode &quot; + encoding) - 1)" />
    <mutant id="mutant_1549" viable="false" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(&quot;This codec cannot decode &quot; + encoding)" to="((&quot;This codec cannot decode &quot; + encoding) * -1)" />
    <mutant id="mutant_1546" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="(to + 1) - 1" />
    <mutant id="mutant_1547" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="(to + 1) * -1" />
    <mutant id="mutant_1544" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(text.length()) - 2" to="((text.length()) - 2) + 1" />
    <mutant id="mutant_1545" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="to + 1" to="(to + 1) + 1" />
    <mutant id="mutant_701" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_702" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_703" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_704" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_700" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_709" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_705" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_706" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_707" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_708" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1531" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_1532" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;) + 1)" />
    <mutant id="mutant_1530" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_1539" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;) * -1)" />
    <mutant id="mutant_1537" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_1538" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable encoded&quot;) - 1)" />
    <mutant id="mutant_1535" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_1536" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_1533" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;) - 1)" />
    <mutant id="mutant_1534" viable="false" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be quoted-printable decoded&quot;) * -1)" />
    <mutant id="mutant_712" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="!((index == 0) &amp;&amp; ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;))))" />
    <mutant id="mutant_713" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_714" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_715" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_710" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_711" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="(!((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;))))" />
    <mutant id="mutant_716" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_717" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_718" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_719" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_1520" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((bytes.length) - 2)" to="(((bytes.length) - 2) - 1)" />
    <mutant id="mutant_1521" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="(!((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))))" />
    <mutant id="mutant_1528" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="(256 + b) + 1" />
    <mutant id="mutant_1529" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_1526" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="(256 + b) - 1" />
    <mutant id="mutant_1527" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int,byte[])" from="256 + b" to="(256 + b) * -1" />
    <mutant id="mutant_1524" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="(256 + b) * -1" />
    <mutant id="mutant_1525" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="(256 + b) + 1" />
    <mutant id="mutant_1522" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="!((!(printable.get(b))) || ((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))))" />
    <mutant id="mutant_1523" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="256 + b" to="(256 + b) - 1" />
    <mutant id="mutant_723" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_724" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_725" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_726" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;)))" to="(!(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))))" />
    <mutant id="mutant_720" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_721" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_722" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1)))))" to="(!((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))))" />
    <mutant id="mutant_727" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="!((((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" />
    <mutant id="mutant_728" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_729" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_1113" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="((Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)) * -1" />
    <mutant id="mutant_1114" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="((Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)) - 1" />
    <mutant id="mutant_1111" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="(((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;) - 1)" />
    <mutant id="mutant_1112" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="(((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;) + 1)" />
    <mutant id="mutant_1110" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;)" to="(((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + &quot;]&quot;) * -1)" />
    <mutant id="mutant_1119" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))" to="!((isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad)))" />
    <mutant id="mutant_1117" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="((this.encodeSize) - 1) * -1" />
    <mutant id="mutant_1118" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="((this.encodeSize) - 1) + 1" />
    <mutant id="mutant_1115" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="((Base32.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)) + 1" />
    <mutant id="mutant_1116" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(this.encodeSize) - 1" to="((this.encodeSize) - 1) - 1" />
    <mutant id="mutant_734" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) * -1)" />
    <mutant id="mutant_735" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) + 1)" />
    <mutant id="mutant_736" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 2)" to="((index - 2) - 1)" />
    <mutant id="mutant_737" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))" to="(!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))))" />
    <mutant id="mutant_730" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_731" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) + 1)" />
    <mutant id="mutant_732" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) * -1)" />
    <mutant id="mutant_733" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index - 3)" to="((index - 3) - 1)" />
    <mutant id="mutant_738" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))))" to="(!((index == ((value.length()) - 1)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))))" />
    <mutant id="mutant_739" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1102" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="((&quot;lineLength &quot; + lineLength) + 1)" />
    <mutant id="mutant_1103" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="((&quot;lineLength &quot; + lineLength) * -1)" />
    <mutant id="mutant_1100" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null) || ((str.length()) == 0)" to="!((str == null) || ((str.length()) == 0))" />
    <mutant id="mutant_1101" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineLength &quot; + lineLength)" to="((&quot;lineLength &quot; + lineLength) - 1)" />
    <mutant id="mutant_1582" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="((((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b) - 1)" />
    <mutant id="mutant_1583" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="((((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b) * -1)" />
    <mutant id="mutant_1580" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + 1)" />
    <mutant id="mutant_1581" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b)" to="((((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) + b) + 1)" />
    <mutant id="mutant_1108" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) - 1)" />
    <mutant id="mutant_1109" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) * -1)" />
    <mutant id="mutant_1106" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="(((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;) * -1)" />
    <mutant id="mutant_1107" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(&quot;lineSeparator must not contain Base32 characters: [&quot; + sep)" to="((&quot;lineSeparator must not contain Base32 characters: [&quot; + sep) + 1)" />
    <mutant id="mutant_1104" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="(((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;) + 1)" />
    <mutant id="mutant_1105" viable="false" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;)" to="(((&quot;lineLength &quot; + lineLength) + &quot; &gt; 0, but lineSeparator is null&quot;) - 1)" />
    <mutant id="mutant_745" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_746" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_747" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_748" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_741" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_742" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_743" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_744" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_749" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_1575" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) * -1)" />
    <mutant id="mutant_1576" viable="true" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + 1)" />
    <mutant id="mutant_1573" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;) * -1)" />
    <mutant id="mutant_1574" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;) + 1)" />
    <mutant id="mutant_1571" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_1572" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL encoded&quot;) - 1)" />
    <mutant id="mutant_1570" viable="false" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_740" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_1579" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) * -1)" />
    <mutant id="mutant_1577" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="(&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX))" to="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) - 1)" />
    <mutant id="mutant_1578" viable="false" in="org.apache.commons.codec.net.Utils.digit16(byte)" from="((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;)" to="(((&quot;Invalid URL encoding: not a valid digit (radix &quot; + (URLCodec.RADIX)) + &quot;): &quot;) - 1)" />
    <mutant id="mutant_756" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_757" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))" to="(!((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" />
    <mutant id="mutant_758" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="(!(slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))))" />
    <mutant id="mutant_759" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)) || (slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)) || (slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))))" />
    <mutant id="mutant_752" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_753" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_754" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_755" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_1564" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_1565" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_1562" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="(256 + b) + 1" />
    <mutant id="mutant_1563" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_1560" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="(256 + b) - 1" />
    <mutant id="mutant_1561" viable="true" in="org.apache.commons.codec.net.URLCodec.encodeUrl(java.util.BitSet,byte[])" from="256 + b" to="(256 + b) * -1" />
    <mutant id="mutant_750" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_751" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1568" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;) * -1)" />
    <mutant id="mutant_1569" viable="true" in="org.apache.commons.codec.net.URLCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_1566" viable="false" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;) - 1)" />
    <mutant id="mutant_1567" viable="true" in="org.apache.commons.codec.net.URLCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be URL decoded&quot;) + 1)" />
    <mutant id="mutant_767" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_768" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_769" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_763" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_764" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_765" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_766" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_1160" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="((Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)) * -1" />
    <mutant id="mutant_1161" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)" to="((Base64.BYTES_PER_ENCODED_BLOCK) + (lineSeparator.length)) + 1" />
    <mutant id="mutant_1157" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="(((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;) * -1)" />
    <mutant id="mutant_1158" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="(((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;) - 1)" />
    <mutant id="mutant_1155" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) * -1)" />
    <mutant id="mutant_1156" viable="false" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) - 1)" />
    <mutant id="mutant_1153" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="!(((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos)))" />
    <mutant id="mutant_1154" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="(&quot;lineSeparator must not contain base64 characters: [&quot; + sep)" to="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + 1)" />
    <mutant id="mutant_1151" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="(((context.lbitWorkArea) &lt;&lt; 8) + b) * -1" />
    <mutant id="mutant_1152" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="(((context.lbitWorkArea) &lt;&lt; 8) + b) - 1" />
    <mutant id="mutant_760" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_761" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_762" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1159" viable="true" in="org.apache.commons.codec.binary.Base64(int,byte[],boolean)" from="((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;)" to="(((&quot;lineSeparator must not contain base64 characters: [&quot; + sep) + &quot;]&quot;) + 1)" />
    <mutant id="mutant_778" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_779" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_774" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_775" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_776" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_777" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_1150" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; 8) + b" to="(((context.lbitWorkArea) &lt;&lt; 8) + b) + 1" />
    <mutant id="mutant_1146" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) * -1)" />
    <mutant id="mutant_1147" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)) + 1" />
    <mutant id="mutant_1144" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) - 1)" />
    <mutant id="mutant_1145" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) + 1)" />
    <mutant id="mutant_1142" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="((context.pos) - savedPos) - 1" />
    <mutant id="mutant_1143" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="!(((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0))" />
    <mutant id="mutant_1140" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="((context.pos) - savedPos) + 1" />
    <mutant id="mutant_1141" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.pos) - savedPos" to="((context.pos) - savedPos) * -1" />
    <mutant id="mutant_770" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_771" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_772" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(!(result.isComplete())) &amp;&amp; (index &lt;= ((value.length()) - 1))" to="!((!(result.isComplete())) &amp;&amp; (index &lt;= ((value.length()) - 1)))" />
    <mutant id="mutant_773" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1148" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)) - 1" />
    <mutant id="mutant_1149" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base32.BYTES_PER_UNENCODED_BLOCK)) * -1" />
    <mutant id="mutant_305" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="((((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location) + 1)" />
    <mutant id="mutant_789" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_306" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="((((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location) - 1)" />
    <mutant id="mutant_307" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength)) &amp;&amp; ((this.alternate.length()) &gt;= (this.maxLength))" to="!(((this.primary.length()) &gt;= (this.maxLength)) &amp;&amp; ((this.alternate.length()) &gt;= (this.maxLength)))" />
    <mutant id="mutant_308" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="((this.maxLength) - (this.alternate.length())) - 1" />
    <mutant id="mutant_301" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) * -1)" />
    <mutant id="mutant_785" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_302" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) - 1)" />
    <mutant id="mutant_786" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_303" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;)" to="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + 1)" />
    <mutant id="mutant_787" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_304" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location)" to="((((&quot;Problem parsing line \'&quot; + currentLine) + &quot;\' in &quot;) + location) * -1)" />
    <mutant id="mutant_788" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_309" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="((this.maxLength) - (this.alternate.length())) + 1" />
    <mutant id="mutant_1135" viable="false" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) - 1)" />
    <mutant id="mutant_1136" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="!((0 == (context.modulus)) &amp;&amp; ((lineLength) == 0))" />
    <mutant id="mutant_1133" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) + 1)" />
    <mutant id="mutant_1134" viable="false" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) * -1)" />
    <mutant id="mutant_1131" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="(((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result) - 1" />
    <mutant id="mutant_1132" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) &gt;= 2)" to="!((context.eof) &amp;&amp; ((context.modulus) &gt;= 2))" />
    <mutant id="mutant_1130" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="(((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result) * -1" />
    <mutant id="mutant_781" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_782" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_783" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_300" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="((&quot;Problem parsing line \'&quot; + currentLine) * -1)" />
    <mutant id="mutant_784" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1139" viable="false" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) - 1)" />
    <mutant id="mutant_1137" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) + 1)" />
    <mutant id="mutant_780" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_1138" viable="false" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(&quot;Impossible modulus &quot; + (context.modulus))" to="((&quot;Impossible modulus &quot; + (context.modulus)) * -1)" />
    <mutant id="mutant_316" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="((index - 2) - 1)" />
    <mutant id="mutant_317" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_318" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_319" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_312" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="((this.maxLength) - (this.primary.length())) + 1" />
    <mutant id="mutant_796" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_313" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="((this.maxLength) - (this.primary.length())) * -1" />
    <mutant id="mutant_797" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_314" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="((index - 2) * -1)" />
    <mutant id="mutant_798" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_315" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="(index - 2)" to="((index - 2) + 1)" />
    <mutant id="mutant_799" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_1124" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) + 1)" />
    <mutant id="mutant_1125" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) * -1)" />
    <mutant id="mutant_1122" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (this.decodeTable.length))" to="!((b &gt;= 0) &amp;&amp; (b &lt; (this.decodeTable.length)))" />
    <mutant id="mutant_1123" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1)" to="(((context.modulus) + 1) - 1)" />
    <mutant id="mutant_1120" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="(!((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))))" />
    <mutant id="mutant_1121" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="!(((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1)))" />
    <mutant id="mutant_792" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_793" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_310" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendAlternate(java.lang.String)" from="(this.maxLength) - (this.alternate.length())" to="((this.maxLength) - (this.alternate.length())) * -1" />
    <mutant id="mutant_794" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_311" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.appendPrimary(java.lang.String)" from="(this.maxLength) - (this.primary.length())" to="((this.maxLength) - (this.primary.length())) - 1" />
    <mutant id="mutant_795" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_1128" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)) * -1" />
    <mutant id="mutant_1129" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result" to="(((context.lbitWorkArea) &lt;&lt; (Base32.BITS_PER_ENCODED_BYTE)) + result) + 1" />
    <mutant id="mutant_790" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_1126" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)) + 1" />
    <mutant id="mutant_791" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1127" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)" to="(((context.modulus) + 1) % (Base32.BYTES_PER_ENCODED_BLOCK)) - 1" />
    <mutant id="mutant_9" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + 1)" />
    <mutant id="mutant_206" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) - 1)" />
    <mutant id="mutant_8" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + 1)" />
    <mutant id="mutant_207" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) * -1)" />
    <mutant id="mutant_208" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + 1)" />
    <mutant id="mutant_209" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName()))" to="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) - 1)" />
    <mutant id="mutant_5" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="((&quot;Malformed line \'&quot; + rawLine) - 1)" />
    <mutant id="mutant_202" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + 1)" />
    <mutant id="mutant_686" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))) &amp;&amp; ((charAt(value, 3)) != 'W')" to="!(((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))) &amp;&amp; ((charAt(value, 3)) != 'W'))" />
    <mutant id="mutant_4" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="((&quot;Malformed line \'&quot; + rawLine) + 1)" />
    <mutant id="mutant_203" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) - 1)" />
    <mutant id="mutant_687" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_7" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) - 1)" />
    <mutant id="mutant_204" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + 1)" />
    <mutant id="mutant_688" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_6" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;)" to="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) * -1)" />
    <mutant id="mutant_205" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;)" to="(((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) * -1)" />
    <mutant id="mutant_689" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_85" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="((((phonemeText.toString()) + &quot;[&quot;) + (languages)) + 1)" />
    <mutant id="mutant_84" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="(((phonemeText.toString()) + &quot;[&quot;) + 1)" />
    <mutant id="mutant_87" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="((((phonemeText.toString()) + &quot;[&quot;) + (languages)) - 1)" />
    <mutant id="mutant_86" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages))" to="((((phonemeText.toString()) + &quot;[&quot;) + (languages)) * -1)" />
    <mutant id="mutant_89" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="((((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;) - 1" />
    <mutant id="mutant_88" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="((((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;) * -1" />
    <mutant id="mutant_90" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="(((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;" to="((((phonemeText.toString()) + &quot;[&quot;) + (languages)) + &quot;]&quot;) + 1" />
    <mutant id="mutant_92" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule$Phoneme)" from="((this.phonemeText.toString()) + (right.phonemeText.toString()))" to="(((this.phonemeText.toString()) + (right.phonemeText.toString())) + 1)" />
    <mutant id="mutant_91" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule$Phoneme)" from="((this.phonemeText.toString()) + (right.phonemeText.toString()))" to="(((this.phonemeText.toString()) + (right.phonemeText.toString())) * -1)" />
    <mutant id="mutant_94" viable="true" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="((lContext + &quot;$&quot;) + 1)" />
    <mutant id="mutant_93" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.join(org.apache.commons.codec.language.bm.Rule$Phoneme)" from="((this.phonemeText.toString()) + (right.phonemeText.toString()))" to="(((this.phonemeText.toString()) + (right.phonemeText.toString())) - 1)" />
    <mutant id="mutant_1" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="((&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN)) - 1)" />
    <mutant id="mutant_682" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="((index + 3) * -1)" />
    <mutant id="mutant_0" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="((&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN)) + 1)" />
    <mutant id="mutant_683" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="((index + 3) + 1)" />
    <mutant id="mutant_3" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Malformed line \'&quot; + rawLine)" to="((&quot;Malformed line \'&quot; + rawLine) * -1)" />
    <mutant id="mutant_200" viable="true" in="org.apache.commons.codec.language.ColognePhonetic$CologneInputBuffer.getNextPos()" from="(data.length) - (length)" to="((data.length) - (length)) + 1" />
    <mutant id="mutant_684" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="((index + 3) - 1)" />
    <mutant id="mutant_2" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN))" to="((&quot;Unable to resolve required resource:&quot; + (Lang.LANGUAGE_RULES_RN)) * -1)" />
    <mutant id="mutant_201" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="(&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName()))" to="((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) * -1)" />
    <mutant id="mutant_685" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3)))))" to="(!((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))))" />
    <mutant id="mutant_680" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="((index + 3) + 1)" />
    <mutant id="mutant_681" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="((index + 3) - 1)" />
    <mutant id="mutant_217" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A')) || (chr &gt; 'Z')" to="!(((chr == 'H') || (chr &lt; 'A')) || (chr &gt; 'Z'))" />
    <mutant id="mutant_218" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="(!((chr == 'P') &amp;&amp; (nextChar != 'H')))" />
    <mutant id="mutant_219" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B') || ((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="!((chr == 'B') || ((chr == 'P') &amp;&amp; (nextChar != 'H')))" />
    <mutant id="mutant_213" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="(((text.length()) * 2) + 1)" />
    <mutant id="mutant_697" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)))" to="(!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))))" />
    <mutant id="mutant_214" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="(((text.length()) * 2) * -1)" />
    <mutant id="mutant_698" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="!(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" />
    <mutant id="mutant_215" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((text.length()) * 2)" to="(((text.length()) * 2) - 1)" />
    <mutant id="mutant_699" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_216" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A'))" to="(!((chr == 'H') || (chr &lt; 'A')))" />
    <mutant id="mutant_74" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="((i + 1) - 1)" />
    <mutant id="mutant_73" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="((i + 1) * -1)" />
    <mutant id="mutant_76" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="((&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) + 1)" />
    <mutant id="mutant_75" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.applyFinalRules(org.apache.commons.codec.language.bm.PhoneticEngine$PhonemeBuilder,java.util.Map)" from="(i + 1)" to="((i + 1) + 1)" />
    <mutant id="mutant_78" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="((&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) - 1)" />
    <mutant id="mutant_77" viable="false" in="?" from="(&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l)))" to="((&quot;Problem processing &quot; + (org.apache.commons.codec.language.bm.Rule.createResourceName(s, rt, l))) * -1)" />
    <mutant id="mutant_79" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))" to="((o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))) * -1" />
    <mutant id="mutant_81" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))" to="((o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))) + 1" />
    <mutant id="mutant_80" viable="true" in="org.apache.commons.codec.language.bm.Rule$Phoneme$1.compare(org.apache.commons.codec.language.bm.Rule$Phoneme,org.apache.commons.codec.language.bm.Rule$Phoneme)" from="(o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))" to="((o1.phonemeText.charAt(i)) - (o2.phonemeText.charAt(i))) - 1" />
    <mutant id="mutant_83" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="(((phonemeText.toString()) + &quot;[&quot;) - 1)" />
    <mutant id="mutant_82" viable="false" in="org.apache.commons.codec.language.bm.Rule$Phoneme.toString()" from="((phonemeText.toString()) + &quot;[&quot;)" to="(((phonemeText.toString()) + &quot;[&quot;) * -1)" />
    <mutant id="mutant_693" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;)))" />
    <mutant id="mutant_210" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="(((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;) * -1)" />
    <mutant id="mutant_694" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_211" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="(((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;) + 1)" />
    <mutant id="mutant_695" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_212" viable="false" in="org.apache.commons.codec.language.ColognePhonetic.encode(java.lang.Object)" from="((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;)" to="(((((&quot;This method\'s parameter was expected to be of the type &quot; + (String.class.getName())) + &quot;. But actually it was of the type &quot;) + (object.getClass().getName())) + &quot;.&quot;) - 1)" />
    <mutant id="mutant_696" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_690" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="(index + 3) * -1" />
    <mutant id="mutant_691" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="(index + 3) + 1" />
    <mutant id="mutant_692" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 3" to="(index + 3) - 1" />
    <mutant id="mutant_228" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0'))" to="(!(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')))" />
    <mutant id="mutant_229" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="(!((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8')))" />
    <mutant id="mutant_224" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))" to="!((org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar))))" />
    <mutant id="mutant_225" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M') || (chr == 'N')" to="!((chr == 'M') || (chr == 'N'))" />
    <mutant id="mutant_226" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((code != '0') || (lastCode == '/'))" to="(!((code != '0') || (lastCode == '/')))" />
    <mutant id="mutant_227" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/')))" to="(!((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))))" />
    <mutant id="mutant_220" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T'))" to="(!((chr == 'D') || (chr == 'T')))" />
    <mutant id="mutant_221" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T')) &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar)))" to="!(((chr == 'D') || (chr == 'T')) &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar))))" />
    <mutant id="mutant_222" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X') &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar)))" to="!((chr == 'X') &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar))))" />
    <mutant id="mutant_223" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S') || (chr == 'Z')" to="!((chr == 'S') || (chr == 'Z'))" />
    <mutant id="mutant_239" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="append &amp;&amp; ((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="!(append &amp;&amp; ((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)))" />
    <mutant id="mutant_235" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)" from="(rule2.getPatternLength()) - (rule1.getPatternLength())" to="((rule2.getPatternLength()) - (rule1.getPatternLength())) - 1" />
    <mutant id="mutant_236" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)" from="(rule2.getPatternLength()) - (rule1.getPatternLength())" to="((rule2.getPatternLength()) - (rule1.getPatternLength())) * -1" />
    <mutant id="mutant_237" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement))))" to="(!(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))))" />
    <mutant id="mutant_238" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))) || forceAppend" to="!((((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))) || forceAppend)" />
    <mutant id="mutant_96" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="((lContext + &quot;$&quot;) * -1)" />
    <mutant id="mutant_95" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(lContext + &quot;$&quot;)" to="((lContext + &quot;$&quot;) - 1)" />
    <mutant id="mutant_98" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="((&quot;^&quot; + rContext) * -1)" />
    <mutant id="mutant_97" viable="true" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="((&quot;^&quot; + rContext) + 1)" />
    <mutant id="mutant_99" viable="false" in="org.apache.commons.codec.language.bm.Rule(java.lang.String,java.lang.String,java.lang.String,org.apache.commons.codec.language.bm.Rule$PhonemeExpr)" from="(&quot;^&quot; + rContext)" to="((&quot;^&quot; + rContext) - 1)" />
    <mutant id="mutant_231" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="((&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE)) - 1)" />
    <mutant id="mutant_232" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="((&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE)) * -1)" />
    <mutant id="mutant_233" viable="false" in="?" from="(&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE))" to="((&quot;Unable to load resource: &quot; + (DaitchMokotoffSoundex.RESOURCE_FILE)) + 1)" />
    <mutant id="mutant_234" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$1.compare(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule,org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule)" from="(rule2.getPatternLength()) - (rule1.getPatternLength())" to="((rule2.getPatternLength()) - (rule1.getPatternLength())) + 1" />
    <mutant id="mutant_230" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-') &amp;&amp; ((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="!((code != '-') &amp;&amp; ((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8')))" />
    <mutant id="mutant_246" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) * -1)" />
    <mutant id="mutant_247" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) - 1)" />
    <mutant id="mutant_248" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1) &amp;&amp; branching" to="!(((replacements.length) &gt; 1) &amp;&amp; branching)" />
    <mutant id="mutant_249" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n'))" to="(!((lastChar == 'm') &amp;&amp; (ch == 'n')))" />
    <mutant id="mutant_242" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o'))" to="(!((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')))" />
    <mutant id="mutant_243" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u')" to="!(((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u'))" />
    <mutant id="mutant_244" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)" from="(folding) &amp;&amp; (DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))" to="!((folding) &amp;&amp; (DaitchMokotoffSoundex.FOLDINGS.containsKey(ch)))" />
    <mutant id="mutant_245" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String)" from="((str.length()) - 1)" to="(((str.length()) - 1) + 1)" />
    <mutant id="mutant_240" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((ch == 'a') || (ch == 'e'))" to="(!((ch == 'a') || (ch == 'e')))" />
    <mutant id="mutant_241" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(((ch == 'a') || (ch == 'e')) || (ch == 'i'))" to="(!(((ch == 'a') || (ch == 'e')) || (ch == 'i')))" />
    <mutant id="mutant_257" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="((&quot;Malformed folding statement split into &quot; + (parts.length)) - 1)" />
    <mutant id="mutant_258" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + 1)" />
    <mutant id="mutant_259" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) * -1)" />
    <mutant id="mutant_253" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="((rule.getPatternLength()) - 1) * -1" />
    <mutant id="mutant_254" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="((rule.getPatternLength()) - 1) + 1" />
    <mutant id="mutant_255" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="((&quot;Malformed folding statement split into &quot; + (parts.length)) * -1)" />
    <mutant id="mutant_256" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement split into &quot; + (parts.length))" to="((&quot;Malformed folding statement split into &quot; + (parts.length)) + 1)" />
    <mutant id="mutant_250" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="(!((lastChar == 'n') &amp;&amp; (ch == 'm')))" />
    <mutant id="mutant_251" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n')) || ((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="!(((lastChar == 'm') &amp;&amp; (ch == 'n')) || ((lastChar == 'n') &amp;&amp; (ch == 'm')))" />
    <mutant id="mutant_252" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="(rule.getPatternLength()) - 1" to="((rule.getPatternLength()) - 1) - 1" />
    <mutant id="mutant_268" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) + 1)" />
    <mutant id="mutant_269" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) - 1)" />
    <mutant id="mutant_264" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + 1)" />
    <mutant id="mutant_265" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) - 1)" />
    <mutant id="mutant_266" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) * -1)" />
    <mutant id="mutant_267" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) * -1)" />
    <mutant id="mutant_260" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) - 1)" />
    <mutant id="mutant_261" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) * -1)" />
    <mutant id="mutant_262" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) - 1)" />
    <mutant id="mutant_263" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed folding statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + 1)" />
    <mutant id="mutant_279" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) * -1)" />
    <mutant id="mutant_270" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)" to="!(((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1))" />
    <mutant id="mutant_275" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) * -1)" />
    <mutant id="mutant_276" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) - 1)" />
    <mutant id="mutant_277" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) - 1)" />
    <mutant id="mutant_278" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;)" to="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + 1)" />
    <mutant id="mutant_271" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) - 1)" />
    <mutant id="mutant_272" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) * -1)" />
    <mutant id="mutant_273" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;)" to="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + 1)" />
    <mutant id="mutant_274" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine)" to="(((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + 1)" />
    <mutant id="mutant_280" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location) + 1)" />
    <mutant id="mutant_281" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location) * -1)" />
    <mutant id="mutant_286" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) - 1)" />
    <mutant id="mutant_287" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + 1)" />
    <mutant id="mutant_288" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;)" to="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) * -1)" />
    <mutant id="mutant_289" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) * -1)" />
    <mutant id="mutant_282" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location)" to="(((((&quot;Malformed folding statement - &quot; + &quot;patterns are not single characters: &quot;) + rawLine) + &quot; in &quot;) + location) - 1)" />
    <mutant id="mutant_283" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) + 1)" />
    <mutant id="mutant_284" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) - 1)" />
    <mutant id="mutant_285" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Malformed rule statement split into &quot; + (parts.length))" to="((&quot;Malformed rule statement split into &quot; + (parts.length)) * -1)" />
    <mutant id="mutant_290" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) - 1)" />
    <mutant id="mutant_291" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine)" to="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + 1)" />
    <mutant id="mutant_292" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + 1)" />
    <mutant id="mutant_297" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) + 1)" />
    <mutant id="mutant_298" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="((&quot;Problem parsing line \'&quot; + currentLine) + 1)" />
    <mutant id="mutant_299" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(&quot;Problem parsing line \'&quot; + currentLine)" to="((&quot;Problem parsing line \'&quot; + currentLine) - 1)" />
    <mutant id="mutant_293" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) - 1)" />
    <mutant id="mutant_294" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;)" to="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) * -1)" />
    <mutant id="mutant_295" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) * -1)" />
    <mutant id="mutant_296" viable="false" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="(((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location)" to="((((((&quot;Malformed rule statement split into &quot; + (parts.length)) + &quot; parts: &quot;) + rawLine) + &quot; in &quot;) + location) - 1)" />
    <mutant id="mutant_27" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="((&quot;ruleType must not be &quot; + (RuleType.RULES)) + 1)" />
    <mutant id="mutant_26" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="(((i) + patternLength) - 1)" />
    <mutant id="mutant_29" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="((&quot;ruleType must not be &quot; + (RuleType.RULES)) * -1)" />
    <mutant id="mutant_28" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine(org.apache.commons.codec.language.bm.NameType,org.apache.commons.codec.language.bm.RuleType,boolean,int)" from="(&quot;ruleType must not be &quot; + (RuleType.RULES))" to="((&quot;ruleType must not be &quot; + (RuleType.RULES)) - 1)" />
    <mutant id="mutant_21" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="((&quot;Unable to resolve required resource: &quot; + languagesResourceName) * -1)" />
    <mutant id="mutant_20" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="((&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;) + 1" />
    <mutant id="mutant_23" viable="true" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="((&quot;Unable to resolve required resource: &quot; + languagesResourceName) + 1)" />
    <mutant id="mutant_22" viable="false" in="org.apache.commons.codec.language.bm.Languages.getInstance(java.lang.String)" from="(&quot;Unable to resolve required resource: &quot; + languagesResourceName)" to="((&quot;Unable to resolve required resource: &quot; + languagesResourceName) - 1)" />
    <mutant id="mutant_25" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="(((i) + patternLength) * -1)" />
    <mutant id="mutant_24" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine$RulesApplication.invoke()" from="((i) + patternLength)" to="(((i) + patternLength) + 1)" />
    <mutant id="mutant_16" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="((&quot;Languages(&quot; + (languages.toString())) - 1)" />
    <mutant id="mutant_15" viable="true" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="((&quot;Languages(&quot; + (languages.toString())) + 1)" />
    <mutant id="mutant_18" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="((&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;) * -1" />
    <mutant id="mutant_17" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString()))" to="((&quot;Languages(&quot; + (languages.toString())) * -1)" />
    <mutant id="mutant_19" viable="false" in="org.apache.commons.codec.language.bm.Languages$SomeLanguages.toString()" from="(&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;" to="((&quot;Languages(&quot; + (languages.toString())) + &quot;)&quot;) - 1" />
    <mutant id="mutant_10" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) - 1)" />
    <mutant id="mutant_12" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="(((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;) - 1)" />
    <mutant id="mutant_11" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="(((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName)" to="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) * -1)" />
    <mutant id="mutant_14" viable="true" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="(((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;) + 1)" />
    <mutant id="mutant_13" viable="false" in="org.apache.commons.codec.language.bm.Lang.loadFromResource(java.lang.String,org.apache.commons.codec.language.bm.Languages)" from="((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;)" to="(((((&quot;Malformed line \'&quot; + rawLine) + &quot;\' in language resource \'&quot;) + languageRulesResourceName) + &quot;\'&quot;) * -1)" />
    <mutant id="mutant_49" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="(((l.length()) + 1) - 1)" />
    <mutant id="mutant_48" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="((l + &quot; &quot;) + 1)" />
    <mutant id="mutant_41" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) * -1)" />
    <mutant id="mutant_40" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) - 1)" />
    <mutant id="mutant_43" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;) * -1" />
    <mutant id="mutant_42" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + 1)" />
    <mutant id="mutant_45" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;) - 1" />
    <mutant id="mutant_44" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;) + 1" />
    <mutant id="mutant_47" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="((l + &quot; &quot;) - 1)" />
    <mutant id="mutant_46" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(l + &quot; &quot;)" to="((l + &quot; &quot;) * -1)" />
    <mutant id="mutant_50" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="(((l.length()) + 1) * -1)" />
    <mutant id="mutant_38" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) * -1)" />
    <mutant id="mutant_37" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) - 1)" />
    <mutant id="mutant_39" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + 1)" />
    <mutant id="mutant_30" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2) &amp;&amp; (input.substring(0, 2).equals(&quot;d\'&quot;))" to="!(((input.length()) &gt;= 2) &amp;&amp; (input.substring(0, 2).equals(&quot;d\'&quot;)))" />
    <mutant id="mutant_32" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="(&quot;d&quot; + remainder) - 1" />
    <mutant id="mutant_31" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="(&quot;d&quot; + remainder) * -1" />
    <mutant id="mutant_34" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="((&quot;(&quot; + (encode(remainder))) - 1)" />
    <mutant id="mutant_33" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="&quot;d&quot; + remainder" to="(&quot;d&quot; + remainder) + 1" />
    <mutant id="mutant_36" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="((&quot;(&quot; + (encode(remainder))) * -1)" />
    <mutant id="mutant_35" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="((&quot;(&quot; + (encode(remainder))) + 1)" />
    <mutant id="mutant_63" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + 1)" />
    <mutant id="mutant_62" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) * -1)" />
    <mutant id="mutant_65" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;) + 1" />
    <mutant id="mutant_64" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;) * -1" />
    <mutant id="mutant_67" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="(((parts.length) - 1) * -1)" />
    <mutant id="mutant_66" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) + &quot;)&quot;) - 1" />
    <mutant id="mutant_69" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="(((parts.length) - 1) + 1)" />
    <mutant id="mutant_68" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((parts.length) - 1)" to="(((parts.length) - 1) - 1)" />
    <mutant id="mutant_70" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="((&quot;Unreachable case: &quot; + (this.nameType)) - 1)" />
    <mutant id="mutant_72" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="((&quot;Unreachable case: &quot; + (this.nameType)) + 1)" />
    <mutant id="mutant_71" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;Unreachable case: &quot; + (this.nameType))" to="((&quot;Unreachable case: &quot; + (this.nameType)) * -1)" />
    <mutant id="mutant_59" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) * -1)" />
    <mutant id="mutant_52" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="(l + remainder) * -1" />
    <mutant id="mutant_51" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((l.length()) + 1)" to="(((l.length()) + 1) + 1)" />
    <mutant id="mutant_54" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="(l + remainder) + 1" />
    <mutant id="mutant_53" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="l + remainder" to="(l + remainder) - 1" />
    <mutant id="mutant_56" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="((&quot;(&quot; + (encode(remainder))) + 1)" />
    <mutant id="mutant_55" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="((&quot;(&quot; + (encode(remainder))) - 1)" />
    <mutant id="mutant_58" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) - 1)" />
    <mutant id="mutant_57" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(&quot;(&quot; + (encode(remainder)))" to="((&quot;(&quot; + (encode(remainder))) * -1)" />
    <mutant id="mutant_61" viable="false" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined)))" to="((((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + (encode(combined))) - 1)" />
    <mutant id="mutant_60" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;)" to="(((&quot;(&quot; + (encode(remainder))) + &quot;)-(&quot;) + 1)" />
    <mutant id="mutant_1432" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="((i % 3) - 1)" />
    <mutant id="mutant_1433" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="((i % 3) + 1)" />
    <mutant id="mutant_1430" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="((rounds - 1) - 1)" />
    <mutant id="mutant_1431" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 3)" to="((i % 3) * -1)" />
    <mutant id="mutant_1438" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="((Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))) * -1" />
    <mutant id="mutant_1439" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="((Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))) + 1" />
    <mutant id="mutant_1436" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="((i % 7) * -1)" />
    <mutant id="mutant_1437" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))" to="((Sha2Crypt.SHA512_PREFIX) + (B64.getRandomSalt(8))) - 1" />
    <mutant id="mutant_1434" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="((i % 7) + 1)" />
    <mutant id="mutant_1435" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(i % 7)" to="((i % 7) - 1)" />
    <mutant id="mutant_1421" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="((16 + ((altResult[0]) &amp; 255)) * -1)" />
    <mutant id="mutant_1422" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="((saltLen - blocksize) - 1)" />
    <mutant id="mutant_1420" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="((16 + ((altResult[0]) &amp; 255)) - 1)" />
    <mutant id="mutant_1429" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="((rounds - 1) * -1)" />
    <mutant id="mutant_1427" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="((saltLen - cp) * -1)" />
    <mutant id="mutant_1428" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(rounds - 1)" to="((rounds - 1) + 1)" />
    <mutant id="mutant_1425" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="((saltLen - cp) + 1)" />
    <mutant id="mutant_1426" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - cp)" to="((saltLen - cp) - 1)" />
    <mutant id="mutant_1423" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="((saltLen - blocksize) + 1)" />
    <mutant id="mutant_1424" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(saltLen - blocksize)" to="((saltLen - blocksize) * -1)" />
    <mutant id="mutant_1410" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) + 1)" />
    <mutant id="mutant_1411" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) * -1)" />
    <mutant id="mutant_1418" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="((keyLen - cp) + 1)" />
    <mutant id="mutant_1419" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(16 + ((altResult[0]) &amp; 255))" to="((16 + ((altResult[0]) &amp; 255)) + 1)" />
    <mutant id="mutant_1416" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="((keyLen - cp) * -1)" />
    <mutant id="mutant_1417" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - cp)" to="((keyLen - cp) - 1)" />
    <mutant id="mutant_1414" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="((keyLen - blocksize) - 1)" />
    <mutant id="mutant_1415" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="((keyLen - blocksize) + 1)" />
    <mutant id="mutant_1412" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) - 1)" />
    <mutant id="mutant_1413" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(keyLen - blocksize)" to="((keyLen - blocksize) * -1)" />
    <mutant id="mutant_1409" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null) || (!(m.find()))" to="!((m == null) || (!(m.find())))" />
    <mutant id="mutant_1400" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="((i % 3) * -1)" />
    <mutant id="mutant_1407" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="((Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))) - 1" />
    <mutant id="mutant_1408" viable="false" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="((Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))) * -1" />
    <mutant id="mutant_1405" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="((i % 7) * -1)" />
    <mutant id="mutant_1406" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[],java.lang.String)" from="(Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))" to="((Sha2Crypt.SHA256_PREFIX) + (B64.getRandomSalt(8))) + 1" />
    <mutant id="mutant_1403" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="((i % 7) + 1)" />
    <mutant id="mutant_1404" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 7)" to="((i % 7) - 1)" />
    <mutant id="mutant_1401" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="((i % 3) - 1)" />
    <mutant id="mutant_1402" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(i % 3)" to="((i % 3) + 1)" />
    <mutant id="mutant_602" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_603" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_604" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_605" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_600" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_601" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleL(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1480" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="(((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;) + 1)" />
    <mutant id="mutant_606" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_607" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_608" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_609" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_1476" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="(((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;) + 1)" />
    <mutant id="mutant_1477" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="((&quot;Objects of type &quot; + (value.getClass().getName())) + 1)" />
    <mutant id="mutant_1474" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="(((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;) * -1)" />
    <mutant id="mutant_1475" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;)" to="(((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be decoded using BCodec&quot;) - 1)" />
    <mutant id="mutant_1472" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="((&quot;Objects of type &quot; + (value.getClass().getName())) - 1)" />
    <mutant id="mutant_1473" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="((&quot;Objects of type &quot; + (value.getClass().getName())) * -1)" />
    <mutant id="mutant_1470" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length)) &amp;&amp; (i &lt; (original.length))" to="!((i &lt; (key.length)) &amp;&amp; (i &lt; (original.length)))" />
    <mutant id="mutant_1471" viable="false" in="org.apache.commons.codec.net.BCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="((&quot;Objects of type &quot; + (value.getClass().getName())) + 1)" />
    <mutant id="mutant_1478" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="((&quot;Objects of type &quot; + (value.getClass().getName())) - 1)" />
    <mutant id="mutant_1479" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (value.getClass().getName()))" to="((&quot;Objects of type &quot; + (value.getClass().getName())) * -1)" />
    <mutant id="mutant_613" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_614" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_615" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_616" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_610" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_611" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_612" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_617" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic))" to="(!((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)))" />
    <mutant id="mutant_618" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="((index - 2) * -1)" />
    <mutant id="mutant_619" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="((index - 2) + 1)" />
    <mutant id="mutant_1465" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="(((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;) - 1)" />
    <mutant id="mutant_1466" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="(((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;) * -1)" />
    <mutant id="mutant_1463" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="((&quot;^[&quot; + (B64.B64T)) + 1)" />
    <mutant id="mutant_1464" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;)" to="(((&quot;^[&quot; + (B64.B64T)) + &quot;]{2,}$&quot;) + 1)" />
    <mutant id="mutant_1461" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="((&quot;^[&quot; + (B64.B64T)) - 1)" />
    <mutant id="mutant_1462" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;^[&quot; + (B64.B64T))" to="((&quot;^[&quot; + (B64.B64T)) * -1)" />
    <mutant id="mutant_1460" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="((&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) * -1" />
    <mutant id="mutant_1469" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) - 1)" />
    <mutant id="mutant_1467" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) + 1)" />
    <mutant id="mutant_1468" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;Invalid salt value: &quot; + salt)" to="((&quot;Invalid salt value: &quot; + salt) * -1)" />
    <mutant id="mutant_624" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="((index - 4) + 1)" />
    <mutant id="mutant_625" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;)))" to="!((((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;))))" />
    <mutant id="mutant_626" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_627" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_620" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="((index - 2) - 1)" />
    <mutant id="mutant_621" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;)))" to="(!(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))))" />
    <mutant id="mutant_622" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="((index - 4) * -1)" />
    <mutant id="mutant_623" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 4)" to="((index - 4) - 1)" />
    <mutant id="mutant_628" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_629" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_1454" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="((i + 2) - 1)" />
    <mutant id="mutant_1455" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="((&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + 1)" />
    <mutant id="mutant_1452" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="((i + 2) + 1)" />
    <mutant id="mutant_1453" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.body(int[],int,int)" from="(i + 2)" to="((i + 2) * -1)" />
    <mutant id="mutant_1450" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="((16 - n) - 1)" />
    <mutant id="mutant_1451" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="((16 - n) + 1)" />
    <mutant id="mutant_1458" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="((&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + 1" />
    <mutant id="mutant_1459" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])" to="((&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) - 1" />
    <mutant id="mutant_1456" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="((&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) * -1)" />
    <mutant id="mutant_1457" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)]))" to="((&quot;&quot; + (UnixCrypt.SALT_CHARS[randomGenerator.nextInt(numSaltChars)])) - 1)" />
    <mutant id="mutant_635" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) - 1)" />
    <mutant id="mutant_636" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) * -1)" />
    <mutant id="mutant_637" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 1)" to="((index - 1) + 1)" />
    <mutant id="mutant_638" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;))" to="!((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;)))" />
    <mutant id="mutant_631" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_632" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_633" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_634" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_639" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1443" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="((s + 1) + 1)" />
    <mutant id="mutant_1444" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="((s + 1) * -1)" />
    <mutant id="mutant_1441" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="(value + 256) + 1" />
    <mutant id="mutant_1442" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="(value + 256) * -1" />
    <mutant id="mutant_1440" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte)" from="value + 256" to="(value + 256) - 1" />
    <mutant id="mutant_1449" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="((16 - n) * -1)" />
    <mutant id="mutant_630" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_1447" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="((16 - n) - 1)" />
    <mutant id="mutant_1448" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="((16 - n) + 1)" />
    <mutant id="mutant_1445" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int,int,int,int,int,int[])" from="(s + 1)" to="((s + 1) - 1)" />
    <mutant id="mutant_1446" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.hPermOp(int,int,int)" from="(16 - n)" to="((16 - n) * -1)" />
    <mutant id="mutant_646" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;)))" to="(!((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))))" />
    <mutant id="mutant_647" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_648" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_649" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_642" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;))" to="!((org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;)))" />
    <mutant id="mutant_643" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_644" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_645" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1040" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(((c == 'A') || (c == 'E')) || (c == 'I'))" to="(!(((c == 'A') || (c == 'E')) || (c == 'I')))" />
    <mutant id="mutant_1036" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_1037" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_1034" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(regionMatch(local, n, &quot;TIA&quot;)) || (regionMatch(local, n, &quot;TIO&quot;))" to="!((regionMatch(local, n, &quot;TIA&quot;)) || (regionMatch(local, n, &quot;TIO&quot;)))" />
    <mutant id="mutant_1035" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) + 1)" />
    <mutant id="mutant_1032" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;)))" to="(!((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))))" />
    <mutant id="mutant_1033" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))) || (regionMatch(local, n, &quot;SIA&quot;))" to="!(((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))) || (regionMatch(local, n, &quot;SIA&quot;)))" />
    <mutant id="mutant_1030" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_1031" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_640" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_641" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_1038" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; (isVowel(local, (n + 1)))" to="!((!(isLastChar(wdsz, n))) &amp;&amp; (isVowel(local, (n + 1))))" />
    <mutant id="mutant_1039" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((c == 'A') || (c == 'E'))" to="(!((c == 'A') || (c == 'E')))" />
    <mutant id="mutant_657" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_658" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_659" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_653" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_654" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_655" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_656" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_1025" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="((n - 1) - 1)" />
    <mutant id="mutant_1026" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="((n - 1) * -1)" />
    <mutant id="mutant_1023" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" to="(!((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)))" />
    <mutant id="mutant_1024" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)) &amp;&amp; (!hard)" to="!(((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)) &amp;&amp; (!hard))" />
    <mutant id="mutant_1021" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_1022" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_1020" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) + 1)" />
    <mutant id="mutant_650" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;))" to="!(((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;)))" />
    <mutant id="mutant_651" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_652" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_1029" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) + 1)" />
    <mutant id="mutant_1027" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n - 1)" to="((n - 1) + 1)" />
    <mutant id="mutant_1028" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="!((n &gt; 0) &amp;&amp; ((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0))" />
    <mutant id="mutant_668" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) * -1)" />
    <mutant id="mutant_669" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) + 1)" />
    <mutant id="mutant_664" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="((index - 2) + 1)" />
    <mutant id="mutant_665" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="((index - 2) - 1)" />
    <mutant id="mutant_666" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;))" to="!((index == ((value.length()) - 1)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;)))" />
    <mutant id="mutant_667" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index + 1)" to="((index + 1) - 1)" />
    <mutant id="mutant_1014" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="((n + 2) + 1)" />
    <mutant id="mutant_1498" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="(((char)(((u &lt;&lt; 4) + l))) * -1)" />
    <mutant id="mutant_1015" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="((n + 2) * -1)" />
    <mutant id="mutant_1499" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR)) &amp;&amp; (b != (QuotedPrintableCodec.LF))" to="!((b != (QuotedPrintableCodec.CR)) &amp;&amp; (b != (QuotedPrintableCodec.LF)))" />
    <mutant id="mutant_1012" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_1496" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="(((char)(((u &lt;&lt; 4) + l))) - 1)" />
    <mutant id="mutant_1013" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H')))" to="(!((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))))" />
    <mutant id="mutant_1497" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="((char)((u &lt;&lt; 4) + l))" to="(((char)(((u &lt;&lt; 4) + l))) + 1)" />
    <mutant id="mutant_1010" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) + 1)" />
    <mutant id="mutant_1494" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;) - 1)" />
    <mutant id="mutant_1011" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_1495" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE)) || (b == (QuotedPrintableCodec.TAB))" to="!((b == (QuotedPrintableCodec.SPACE)) || (b == (QuotedPrintableCodec.TAB)))" />
    <mutant id="mutant_1492" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;) * -1)" />
    <mutant id="mutant_1493" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be encoded using Q codec&quot;) + 1)" />
    <mutant id="mutant_660" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) + 1)" />
    <mutant id="mutant_661" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) * -1)" />
    <mutant id="mutant_662" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((value.length()) - 1)" to="(((value.length()) - 1) - 1)" />
    <mutant id="mutant_663" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index - 2)" to="((index - 2) * -1)" />
    <mutant id="mutant_1018" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="(!((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;))))" />
    <mutant id="mutant_1019" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="!((n &gt; 0) &amp;&amp; ((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;))))" />
    <mutant id="mutant_1016" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="((n + 2) - 1)" />
    <mutant id="mutant_1017" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))) &amp;&amp; (!(isVowel(local, (n + 2))))" to="!(((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))) &amp;&amp; (!(isVowel(local, (n + 2)))))" />
    <mutant id="mutant_679" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 3)" to="((index + 3) * -1)" />
    <mutant id="mutant_675" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) + 1" />
    <mutant id="mutant_676" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) - 1)" />
    <mutant id="mutant_677" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) + 1)" />
    <mutant id="mutant_678" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index + 2)" to="((index + 2) * -1)" />
    <mutant id="mutant_1490" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_1491" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_1003" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="((n + 2) * -1)" />
    <mutant id="mutant_1487" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;) * -1)" />
    <mutant id="mutant_1004" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="((n + 2) - 1)" />
    <mutant id="mutant_1488" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;) + 1)" />
    <mutant id="mutant_1001" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G')))" to="(!((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))))" />
    <mutant id="mutant_1485" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) * -1)" />
    <mutant id="mutant_1002" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 2)" to="((n + 2) + 1)" />
    <mutant id="mutant_1486" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;)" to="(((&quot;Objects of type &quot; + (obj.getClass().getName())) + &quot; cannot be decoded using Q codec&quot;) - 1)" />
    <mutant id="mutant_1483" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_1000" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_1484" viable="false" in="org.apache.commons.codec.net.QCodec.decode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) - 1)" />
    <mutant id="mutant_1481" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="(((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;) - 1)" />
    <mutant id="mutant_1482" viable="false" in="org.apache.commons.codec.net.BCodec.encode(java.lang.Object)" from="((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;)" to="(((&quot;Objects of type &quot; + (value.getClass().getName())) + &quot; cannot be encoded using BCodec&quot;) * -1)" />
    <mutant id="mutant_671" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) + 1" />
    <mutant id="mutant_672" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) * -1" />
    <mutant id="mutant_673" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) - 1" />
    <mutant id="mutant_1009" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isLastChar(wdsz, (n + 1))) &amp;&amp; (isNextChar(local, n, 'H'))" to="!((isLastChar(wdsz, (n + 1))) &amp;&amp; (isNextChar(local, n, 'H')))" />
    <mutant id="mutant_674" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 1" to="(index + 1) * -1" />
    <mutant id="mutant_1007" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) - 1)" />
    <mutant id="mutant_1008" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) * -1)" />
    <mutant id="mutant_1005" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="!(((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0))" />
    <mutant id="mutant_1489" viable="false" in="org.apache.commons.codec.net.QCodec.encode(java.lang.Object)" from="(&quot;Objects of type &quot; + (obj.getClass().getName()))" to="((&quot;Objects of type &quot; + (obj.getClass().getName())) + 1)" />
    <mutant id="mutant_670" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="index + 2" to="(index + 2) - 1" />
    <mutant id="mutant_1006" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n + 1)" to="((n + 1) + 1)" />
  </mutants>
</mutation>
