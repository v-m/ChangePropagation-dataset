<?xml version="1.0" encoding="UTF-8"?>
<mutation operator-id="LCR" parent="../../../smf.run.xml" name="main" config-file="mutations.xml" time="56863">
  <class-to-mutate />
  <mutants>
    <mutant id="mutant_327" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;)))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)" />
    <mutant id="mutant_569" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;)" />
    <mutant id="mutant_328" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;)))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)" />
    <mutant id="mutant_329" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;))" />
    <mutant id="mutant_323" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;)))" />
    <mutant id="mutant_565" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))) &amp;&amp; ((charAt(value, 3)) != 'W')" to="true" />
    <mutant id="mutant_324" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;))" />
    <mutant id="mutant_566" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))) &amp;&amp; ((charAt(value, 3)) != 'W')" to="false" />
    <mutant id="mutant_325" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;)))" to="true" />
    <mutant id="mutant_567" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))) &amp;&amp; ((charAt(value, 3)) != 'W')" to="(index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))" />
    <mutant id="mutant_326" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;C&quot;, &quot;K&quot;, &quot;Q&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;CE&quot;, &quot;CI&quot;)))" to="false" />
    <mutant id="mutant_568" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)" />
    <mutant id="mutant_1083" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="(offset &lt; 0) &amp;&amp; (len &lt; 0)" />
    <mutant id="mutant_1084" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="offset &lt; 0" />
    <mutant id="mutant_1081" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="false" />
    <mutant id="mutant_1082" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="len &lt; 0" />
    <mutant id="mutant_1080" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="true" />
    <mutant id="mutant_1078" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="(offset &gt; (b.length)) &amp;&amp; ((offset + len) &gt; (b.length))" />
    <mutant id="mutant_1079" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="offset &gt; (b.length)" />
    <mutant id="mutant_1076" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="false" />
    <mutant id="mutant_1077" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="(offset + len) &gt; (b.length)" />
    <mutant id="mutant_1074" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="offset &lt; 0" />
    <mutant id="mutant_1075" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="true" />
    <mutant id="mutant_561" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3)))))" to="(!(isVowel(charAt(value, 3))))" />
    <mutant id="mutant_320" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)) &amp;&amp; (!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M')))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)" />
    <mutant id="mutant_562" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3)))))" to="((index == 0) || (!(isVowel(charAt(value, 3)))))" />
    <mutant id="mutant_321" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)) &amp;&amp; (!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M')))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)) || (!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M')))" />
    <mutant id="mutant_563" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))) &amp;&amp; ((charAt(value, 3)) != 'W')" to="(charAt(value, 3)) != 'W'" />
    <mutant id="mutant_322" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)) &amp;&amp; (!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M')))" to="!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M'))" />
    <mutant id="mutant_564" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))) &amp;&amp; ((charAt(value, 3)) != 'W')" to="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3))))) || ((charAt(value, 3)) != 'W')" />
    <mutant id="mutant_560" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3)))))" to="(index == 0)" />
    <mutant id="mutant_338" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;))" to="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;))" />
    <mutant id="mutant_339" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;)" />
    <mutant id="mutant_334" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A'))" to="true" />
    <mutant id="mutant_576" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)))" to="false" />
    <mutant id="mutant_335" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A'))" to="false" />
    <mutant id="mutant_577" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;))" />
    <mutant id="mutant_336" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A'))" to="((index == 1) || ((charAt(value, (index - 1))) == 'A'))" />
    <mutant id="mutant_578" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" />
    <mutant id="mutant_337" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A'))" to="(index == 1)" />
    <mutant id="mutant_579" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))" />
    <mutant id="mutant_1072" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="len &lt; 0" />
    <mutant id="mutant_1073" viable="true" in="org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="(offset &lt; 0) &amp;&amp; (len &lt; 0)" />
    <mutant id="mutant_1070" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null) || ((context.buffer.length) &lt; ((context.pos) + size))" to="((context.buffer) == null) &amp;&amp; ((context.buffer.length) &lt; ((context.pos) + size))" />
    <mutant id="mutant_1071" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null) || ((context.buffer.length) &lt; ((context.pos) + size))" to="(context.buffer) == null" />
    <mutant id="mutant_1069" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null) || ((context.buffer.length) &lt; ((context.pos) + size))" to="false" />
    <mutant id="mutant_1067" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null) || ((context.buffer.length) &lt; ((context.pos) + size))" to="(context.buffer.length) &lt; ((context.pos) + size)" />
    <mutant id="mutant_1068" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((context.buffer) == null) || ((context.buffer.length) &lt; ((context.pos) + size))" to="true" />
    <mutant id="mutant_1065" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="(pArray == null) &amp;&amp; ((pArray.length) == 0)" />
    <mutant id="mutant_1066" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="(pArray.length) == 0" />
    <mutant id="mutant_1063" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="true" />
    <mutant id="mutant_1064" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="false" />
    <mutant id="mutant_330" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;)))" to="true" />
    <mutant id="mutant_572" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;))" />
    <mutant id="mutant_331" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;)))" to="false" />
    <mutant id="mutant_573" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)))" />
    <mutant id="mutant_332" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;I&quot;, &quot;E&quot;, &quot;H&quot;)) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;HU&quot;)))" />
    <mutant id="mutant_574" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))" />
    <mutant id="mutant_333" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A'))" to="((charAt(value, (index - 1))) == 'A')" />
    <mutant id="mutant_575" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)))" to="true" />
    <mutant id="mutant_570" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;))" to="true" />
    <mutant id="mutant_571" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;TH&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;TTH&quot;))" to="false" />
    <mutant id="mutant_107" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M') || (chr == 'N')" to="true" />
    <mutant id="mutant_349" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0))))" to="((index == 1) || (isVowel(charAt(value, 0))))" />
    <mutant id="mutant_108" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M') || (chr == 'N')" to="false" />
    <mutant id="mutant_109" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M') || (chr == 'N')" to="(chr == 'M') &amp;&amp; (chr == 'N')" />
    <mutant id="mutant_103" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))" to="true" />
    <mutant id="mutant_345" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;))" to="true" />
    <mutant id="mutant_587" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="(isVowel(charAt(value, (index + 1))))" />
    <mutant id="mutant_104" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))" to="false" />
    <mutant id="mutant_346" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;))" to="false" />
    <mutant id="mutant_588" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="(isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;))" />
    <mutant id="mutant_105" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M') || (chr == 'N')" to="chr == 'M'" />
    <mutant id="mutant_347" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;))" to="index &gt; 0" />
    <mutant id="mutant_589" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="true" />
    <mutant id="mutant_106" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'M') || (chr == 'N')" to="chr == 'N'" />
    <mutant id="mutant_348" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0))))" to="(isVowel(charAt(value, 0)))" />
    <mutant id="mutant_1061" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="(pArray.length) == 0" />
    <mutant id="mutant_1062" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.encode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="pArray == null" />
    <mutant id="mutant_1060" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="(pArray == null) &amp;&amp; ((pArray.length) == 0)" />
    <mutant id="mutant_1058" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="true" />
    <mutant id="mutant_1059" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="false" />
    <mutant id="mutant_1056" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(!(isInAlphabet(arrayOctet[i]))) &amp;&amp; ((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="(!(isInAlphabet(arrayOctet[i]))) || ((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" />
    <mutant id="mutant_1057" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.decode(byte[])" from="(pArray == null) || ((pArray.length) == 0)" to="pArray == null" />
    <mutant id="mutant_1054" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(!(isInAlphabet(arrayOctet[i]))) &amp;&amp; ((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="true" />
    <mutant id="mutant_1055" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(!(isInAlphabet(arrayOctet[i]))) &amp;&amp; ((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="false" />
    <mutant id="mutant_1052" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(!(isInAlphabet(arrayOctet[i]))) &amp;&amp; ((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="(!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" />
    <mutant id="mutant_1053" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(!(isInAlphabet(arrayOctet[i]))) &amp;&amp; ((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="!(isInAlphabet(arrayOctet[i]))" />
    <mutant id="mutant_341" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;))" to="true" />
    <mutant id="mutant_583" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;))" />
    <mutant id="mutant_100" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))" to="(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))" />
    <mutant id="mutant_342" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;))" to="false" />
    <mutant id="mutant_584" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="true" />
    <mutant id="mutant_101" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))" to="org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)" />
    <mutant id="mutant_343" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;))" to="(index &gt; 0) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;))" />
    <mutant id="mutant_585" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="false" />
    <mutant id="mutant_102" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SZ, lastChar)) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar)))" to="!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.AHOUKQX, nextChar))" />
    <mutant id="mutant_344" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;CHAE&quot;)" />
    <mutant id="mutant_586" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="((isVowel(charAt(value, (index + 1)))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" />
    <mutant id="mutant_580" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="true" />
    <mutant id="mutant_581" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="false" />
    <mutant id="mutant_340" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;UCCEE&quot;, &quot;UCCES&quot;))" to="(index == 1) &amp;&amp; ((charAt(value, (index - 1))) == 'A')" />
    <mutant id="mutant_582" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;OM&quot;, &quot;AM&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)" />
    <mutant id="mutant_118" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/')))" to="true" />
    <mutant id="mutant_119" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/')))" to="false" />
    <mutant id="mutant_114" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((code != '0') || (lastCode == '/'))" to="((code != '0') &amp;&amp; (lastCode == '/'))" />
    <mutant id="mutant_356" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))) &amp;&amp; (!slavoGermanic)" to="(index == 1) &amp;&amp; (isVowel(charAt(value, 0)))" />
    <mutant id="mutant_598" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;)))" to="((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1)))))" />
    <mutant id="mutant_115" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/')))" to="(lastCode != code)" />
    <mutant id="mutant_357" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))) &amp;&amp; (!slavoGermanic)" to="!slavoGermanic" />
    <mutant id="mutant_599" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))" />
    <mutant id="mutant_116" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/')))" to="((code != '0') || (lastCode == '/'))" />
    <mutant id="mutant_358" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y'))" to="((charAt(value, (index + 1))) != 'Y')" />
    <mutant id="mutant_117" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/')))" to="((lastCode != code) || ((code != '0') || (lastCode == '/')))" />
    <mutant id="mutant_359" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y'))" to="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) || ((charAt(value, (index + 1))) != 'Y'))" />
    <mutant id="mutant_1050" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="((!allowWSPad) &amp;&amp; (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" />
    <mutant id="mutant_1051" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="(((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" />
    <mutant id="mutant_1047" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="(!allowWSPad)" />
    <mutant id="mutant_1048" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="true" />
    <mutant id="mutant_1045" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" to="false" />
    <mutant id="mutant_1046" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" to="(((arrayOctet[i]) != (pad)) || (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" />
    <mutant id="mutant_1043" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" to="((arrayOctet[i]) != (pad))" />
    <mutant id="mutant_1044" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" to="true" />
    <mutant id="mutant_1041" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element) || (isInAlphabet(element))" to="isInAlphabet(element)" />
    <mutant id="mutant_1042" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="(((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i]))))" to="(!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))" />
    <mutant id="mutant_110" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((code != '0') || (lastCode == '/'))" to="(code != '0')" />
    <mutant id="mutant_352" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0))))" to="(index == 1)" />
    <mutant id="mutant_594" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1)))))" to="true" />
    <mutant id="mutant_111" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((code != '0') || (lastCode == '/'))" to="(lastCode == '/')" />
    <mutant id="mutant_353" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))) &amp;&amp; (!slavoGermanic)" to="((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))) || (!slavoGermanic)" />
    <mutant id="mutant_595" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1)))))" to="false" />
    <mutant id="mutant_112" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((code != '0') || (lastCode == '/'))" to="true" />
    <mutant id="mutant_354" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))) &amp;&amp; (!slavoGermanic)" to="true" />
    <mutant id="mutant_596" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1)))))" to="(index == ((value.length()) - 1))" />
    <mutant id="mutant_113" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((code != '0') || (lastCode == '/'))" to="false" />
    <mutant id="mutant_355" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0)))) &amp;&amp; (!slavoGermanic)" to="false" />
    <mutant id="mutant_597" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1)))))" to="((index == ((value.length()) - 1)) || (isVowel(charAt(value, (index - 1)))))" />
    <mutant id="mutant_590" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="false" />
    <mutant id="mutant_591" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="index == 0" />
    <mutant id="mutant_350" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0))))" to="true" />
    <mutant id="mutant_592" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" to="(index == 0) || ((isVowel(charAt(value, (index + 1)))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;WH&quot;)))" />
    <mutant id="mutant_1049" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.isInAlphabet(byte[],boolean)" from="((!allowWSPad) || (((arrayOctet[i]) != (pad)) &amp;&amp; (!(BaseNCodec.isWhiteSpace(arrayOctet[i])))))" to="false" />
    <mutant id="mutant_351" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 1) &amp;&amp; (isVowel(charAt(value, 0))))" to="false" />
    <mutant id="mutant_593" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1)))))" to="(isVowel(charAt(value, (index - 1))))" />
    <mutant id="mutant_129" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="false" />
    <mutant id="mutant_125" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) &amp;&amp; (code &gt; '8'))" />
    <mutant id="mutant_367" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')) &amp;&amp; (!slavoGermanic)" to="!slavoGermanic" />
    <mutant id="mutant_126" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="(code &gt; '8')" />
    <mutant id="mutant_368" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)) &amp;&amp; (!slavoGermanic)" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)) || (!slavoGermanic)" />
    <mutant id="mutant_127" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0'))" />
    <mutant id="mutant_369" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)) &amp;&amp; (!slavoGermanic)" to="true" />
    <mutant id="mutant_128" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="true" />
    <mutant id="mutant_121" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0'))" to="(code &lt; '0')" />
    <mutant id="mutant_363" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')) &amp;&amp; (!slavoGermanic)" to="true" />
    <mutant id="mutant_122" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0'))" to="true" />
    <mutant id="mutant_364" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')) &amp;&amp; (!slavoGermanic)" to="false" />
    <mutant id="mutant_123" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0'))" to="false" />
    <mutant id="mutant_365" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')) &amp;&amp; (!slavoGermanic)" to="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')) || (!slavoGermanic)" />
    <mutant id="mutant_124" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0'))" to="((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/')))" />
    <mutant id="mutant_366" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')) &amp;&amp; (!slavoGermanic)" to="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y')" />
    <mutant id="mutant_360" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y'))" to="true" />
    <mutant id="mutant_361" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y'))" to="false" />
    <mutant id="mutant_120" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0'))" to="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) &amp;&amp; (code &lt; '0'))" />
    <mutant id="mutant_362" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;))) &amp;&amp; ((charAt(value, (index + 1))) != 'Y'))" to="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;EY&quot;)))" />
    <mutant id="mutant_136" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement))))" to="false" />
    <mutant id="mutant_378" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))" />
    <mutant id="mutant_137" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement))))" to="((lastReplacement) == null)" />
    <mutant id="mutant_379" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="true" />
    <mutant id="mutant_138" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement))))" to="(!(lastReplacement.endsWith(replacement)))" />
    <mutant id="mutant_139" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement))))" to="(((lastReplacement) == null) &amp;&amp; (!(lastReplacement.endsWith(replacement))))" />
    <mutant id="mutant_132" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-') &amp;&amp; ((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="true" />
    <mutant id="mutant_374" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="(((charAt(value, (index + 1))) == 'Y') &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" />
    <mutant id="mutant_133" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-') &amp;&amp; ((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="false" />
    <mutant id="mutant_375" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="true" />
    <mutant id="mutant_134" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-') &amp;&amp; ((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="(((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8')" />
    <mutant id="mutant_376" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="false" />
    <mutant id="mutant_135" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement))))" to="true" />
    <mutant id="mutant_377" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER))" />
    <mutant id="mutant_370" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)) &amp;&amp; (!slavoGermanic)" to="false" />
    <mutant id="mutant_371" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)) &amp;&amp; (!slavoGermanic)" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)" />
    <mutant id="mutant_130" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-') &amp;&amp; ((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="code != '-'" />
    <mutant id="mutant_372" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;LI&quot;)) &amp;&amp; (!slavoGermanic)" to="!slavoGermanic" />
    <mutant id="mutant_131" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(code != '-') &amp;&amp; ((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" to="(code != '-') || ((((lastCode != code) &amp;&amp; ((code != '0') || (lastCode == '/'))) || (code &lt; '0')) || (code &gt; '8'))" />
    <mutant id="mutant_373" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="((charAt(value, (index + 1))) == 'Y')" />
    <mutant id="mutant_147" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="append &amp;&amp; ((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="false" />
    <mutant id="mutant_389" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;))))" to="true" />
    <mutant id="mutant_148" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="append &amp;&amp; ((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="append || ((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" />
    <mutant id="mutant_149" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="append &amp;&amp; ((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="append" />
    <mutant id="mutant_380" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="false" />
    <mutant id="mutant_1098" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null) || ((ascii.length) == 0)" to="true" />
    <mutant id="mutant_1099" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null) || ((ascii.length) == 0)" to="false" />
    <mutant id="mutant_1096" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null) || ((array.length) == 0)" to="(array.length) == 0" />
    <mutant id="mutant_1097" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null) || ((ascii.length) == 0)" to="ascii == null" />
    <mutant id="mutant_143" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))) || forceAppend" to="true" />
    <mutant id="mutant_385" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y'))" to="true" />
    <mutant id="mutant_144" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))) || forceAppend" to="false" />
    <mutant id="mutant_386" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y'))" to="false" />
    <mutant id="mutant_145" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="append &amp;&amp; ((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="(builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH)" />
    <mutant id="mutant_387" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y'))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;))" />
    <mutant id="mutant_146" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="append &amp;&amp; ((builder.length()) &lt; (DaitchMokotoffSoundex.MAX_LENGTH))" to="true" />
    <mutant id="mutant_388" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;))))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y'))" />
    <mutant id="mutant_381" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="index == 0" />
    <mutant id="mutant_140" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))) || forceAppend" to="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))) &amp;&amp; forceAppend" />
    <mutant id="mutant_382" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" to="(index == 0) || (((charAt(value, (index + 1))) == 'Y') || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.ES_EP_EB_EL_EY_IB_IL_IN_IE_EI_ER)))" />
    <mutant id="mutant_141" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))) || forceAppend" to="((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))" />
    <mutant id="mutant_383" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y'))" to="((charAt(value, (index + 1))) == 'Y')" />
    <mutant id="mutant_142" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Branch.processNextReplacement(java.lang.String,boolean)" from="(((lastReplacement) == null) || (!(lastReplacement.endsWith(replacement)))) || forceAppend" to="forceAppend" />
    <mutant id="mutant_384" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y'))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) &amp;&amp; ((charAt(value, (index + 1))) == 'Y'))" />
    <mutant id="mutant_158" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(((ch == 'a') || (ch == 'e')) || (ch == 'i'))" to="false" />
    <mutant id="mutant_159" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(((ch == 'a') || (ch == 'e')) || (ch == 'i'))" to="(ch == 'i')" />
    <mutant id="mutant_1094" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null) || ((array.length) == 0)" to="false" />
    <mutant id="mutant_1095" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null) || ((array.length) == 0)" to="array == null" />
    <mutant id="mutant_1092" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null) || ((array.length) == 0)" to="(array == null) &amp;&amp; ((array.length) == 0)" />
    <mutant id="mutant_1093" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])" from="(array == null) || ((array.length) == 0)" to="true" />
    <mutant id="mutant_1090" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="true" />
    <mutant id="mutant_1091" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="false" />
    <mutant id="mutant_390" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;))))" to="false" />
    <mutant id="mutant_1089" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="offset &gt; (b.length)" />
    <mutant id="mutant_391" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;))))" to="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))" />
    <mutant id="mutant_1087" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="(offset + len) &gt; (b.length)" />
    <mutant id="mutant_1088" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &gt; (b.length)) || ((offset + len) &gt; (b.length))" to="(offset &gt; (b.length)) &amp;&amp; ((offset + len) &gt; (b.length))" />
    <mutant id="mutant_1085" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="true" />
    <mutant id="mutant_1086" viable="true" in="org.apache.commons.codec.binary.BaseNCodecOutputStream.write(byte[],int,int)" from="(offset &lt; 0) || (len &lt; 0)" to="false" />
    <mutant id="mutant_154" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((ch == 'a') || (ch == 'e'))" to="(ch == 'e')" />
    <mutant id="mutant_396" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;))))" to="false" />
    <mutant id="mutant_155" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(((ch == 'a') || (ch == 'e')) || (ch == 'i'))" to="(((ch == 'a') || (ch == 'e')) &amp;&amp; (ch == 'i'))" />
    <mutant id="mutant_397" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;))))" to="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;))))" />
    <mutant id="mutant_156" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(((ch == 'a') || (ch == 'e')) || (ch == 'i'))" to="((ch == 'a') || (ch == 'e'))" />
    <mutant id="mutant_398" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;))" />
    <mutant id="mutant_157" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="(((ch == 'a') || (ch == 'e')) || (ch == 'i'))" to="true" />
    <mutant id="mutant_399" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;)))" to="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;)))" />
    <mutant id="mutant_150" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((ch == 'a') || (ch == 'e'))" to="(ch == 'a')" />
    <mutant id="mutant_392" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;))))" to="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;))))" />
    <mutant id="mutant_151" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((ch == 'a') || (ch == 'e'))" to="true" />
    <mutant id="mutant_393" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;))))" to="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;))))" />
    <mutant id="mutant_152" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((ch == 'a') || (ch == 'e'))" to="false" />
    <mutant id="mutant_394" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;))))" to="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))" />
    <mutant id="mutant_153" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((ch == 'a') || (ch == 'e'))" to="((ch == 'a') &amp;&amp; (ch == 'e'))" />
    <mutant id="mutant_395" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;))))" to="true" />
    <mutant id="mutant_169" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u')" to="ch == 'u'" />
    <mutant id="mutant_160" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o'))" to="(((ch == 'a') || (ch == 'e')) || (ch == 'i'))" />
    <mutant id="mutant_165" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u')" to="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) &amp;&amp; (ch == 'u')" />
    <mutant id="mutant_166" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u')" to="true" />
    <mutant id="mutant_167" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u')" to="false" />
    <mutant id="mutant_168" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')) || (ch == 'u')" to="(((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o')" />
    <mutant id="mutant_161" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o'))" to="(ch == 'o')" />
    <mutant id="mutant_162" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o'))" to="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) &amp;&amp; (ch == 'o'))" />
    <mutant id="mutant_163" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o'))" to="true" />
    <mutant id="mutant_164" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule.isVowel(char)" from="((((ch == 'a') || (ch == 'e')) || (ch == 'i')) || (ch == 'o'))" to="false" />
    <mutant id="mutant_170" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)" from="(folding) &amp;&amp; (DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))" to="folding" />
    <mutant id="mutant_171" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)" from="(folding) &amp;&amp; (DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))" to="DaitchMokotoffSoundex.FOLDINGS.containsKey(ch)" />
    <mutant id="mutant_176" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1) &amp;&amp; branching" to="((replacements.length) &gt; 1) || branching" />
    <mutant id="mutant_177" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1) &amp;&amp; branching" to="true" />
    <mutant id="mutant_178" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1) &amp;&amp; branching" to="false" />
    <mutant id="mutant_179" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1) &amp;&amp; branching" to="(replacements.length) &gt; 1" />
    <mutant id="mutant_172" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)" from="(folding) &amp;&amp; (DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))" to="true" />
    <mutant id="mutant_173" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)" from="(folding) &amp;&amp; (DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))" to="false" />
    <mutant id="mutant_174" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)" from="(folding) &amp;&amp; (DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))" to="(folding) || (DaitchMokotoffSoundex.FOLDINGS.containsKey(ch))" />
    <mutant id="mutant_175" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((replacements.length) &gt; 1) &amp;&amp; branching" to="branching" />
    <mutant id="mutant_180" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n'))" to="(ch == 'n')" />
    <mutant id="mutant_181" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n'))" to="true" />
    <mutant id="mutant_182" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n'))" to="false" />
    <mutant id="mutant_187" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="false" />
    <mutant id="mutant_188" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="((lastChar == 'n') || (ch == 'm'))" />
    <mutant id="mutant_189" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="(lastChar == 'n')" />
    <mutant id="mutant_183" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n'))" to="((lastChar == 'm') || (ch == 'n'))" />
    <mutant id="mutant_184" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n'))" to="(lastChar == 'm')" />
    <mutant id="mutant_185" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="(ch == 'm')" />
    <mutant id="mutant_186" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="true" />
    <mutant id="mutant_190" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n')) || ((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="(lastChar == 'n') &amp;&amp; (ch == 'm')" />
    <mutant id="mutant_191" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n')) || ((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="true" />
    <mutant id="mutant_192" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n')) || ((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="false" />
    <mutant id="mutant_193" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n')) || ((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="((lastChar == 'm') &amp;&amp; (ch == 'n')) &amp;&amp; ((lastChar == 'n') &amp;&amp; (ch == 'm'))" />
    <mutant id="mutant_198" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)" to="false" />
    <mutant id="mutant_199" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength)) &amp;&amp; ((this.alternate.length()) &gt;= (this.maxLength))" to="(this.primary.length()) &gt;= (this.maxLength)" />
    <mutant id="mutant_194" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.soundex(java.lang.String,boolean)" from="((lastChar == 'm') &amp;&amp; (ch == 'n')) || ((lastChar == 'n') &amp;&amp; (ch == 'm'))" to="(lastChar == 'm') &amp;&amp; (ch == 'n')" />
    <mutant id="mutant_195" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)" to="((leftCharacter.length()) != 1) &amp;&amp; ((rightCharacter.length()) != 1)" />
    <mutant id="mutant_196" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)" to="(leftCharacter.length()) != 1" />
    <mutant id="mutant_197" viable="true" in="org.apache.commons.codec.language.DaitchMokotoffSoundex.parseRules(java.util.Scanner,java.lang.String,java.util.Map,java.util.Map)" from="((leftCharacter.length()) != 1) || ((rightCharacter.length()) != 1)" to="true" />
    <mutant id="mutant_900" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A') &amp;&amp; (lastChar == 'Y')" to="true" />
    <mutant id="mutant_901" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A') &amp;&amp; (lastChar == 'Y')" to="false" />
    <mutant id="mutant_902" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0) || (index &gt;= (getSoundexMapping().length))" to="index &gt;= (getSoundexMapping().length)" />
    <mutant id="mutant_907" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length())) &amp;&amp; (count &lt; (out.length))" to="count &lt; (out.length)" />
    <mutant id="mutant_908" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length())) &amp;&amp; (count &lt; (out.length))" to="(incount &lt; (str.length())) || (count &lt; (out.length))" />
    <mutant id="mutant_909" viable="false" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length())) &amp;&amp; (count &lt; (out.length))" to="true" />
    <mutant id="mutant_903" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0) || (index &gt;= (getSoundexMapping().length))" to="true" />
    <mutant id="mutant_904" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0) || (index &gt;= (getSoundexMapping().length))" to="false" />
    <mutant id="mutant_905" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0) || (index &gt;= (getSoundexMapping().length))" to="index &lt; 0" />
    <mutant id="mutant_906" viable="true" in="org.apache.commons.codec.language.Soundex.map(char)" from="(index &lt; 0) || (index &gt;= (getSoundexMapping().length))" to="(index &lt; 0) &amp;&amp; (index &gt;= (getSoundexMapping().length))" />
    <mutant id="mutant_910" viable="false" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length())) &amp;&amp; (count &lt; (out.length))" to="false" />
    <mutant id="mutant_911" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(incount &lt; (str.length())) &amp;&amp; (count &lt; (out.length))" to="incount &lt; (str.length())" />
    <mutant id="mutant_912" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#') &amp;&amp; (mapped != last)" to="(mapped != '#') || (mapped != last)" />
    <mutant id="mutant_913" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#') &amp;&amp; (mapped != last)" to="mapped != '#'" />
    <mutant id="mutant_918" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null) || (es2 == null)" to="(es1 == null) &amp;&amp; (es2 == null)" />
    <mutant id="mutant_919" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null) || (es2 == null)" to="true" />
    <mutant id="mutant_914" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#') &amp;&amp; (mapped != last)" to="true" />
    <mutant id="mutant_915" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#') &amp;&amp; (mapped != last)" to="false" />
    <mutant id="mutant_916" viable="true" in="org.apache.commons.codec.language.Soundex.soundex(java.lang.String)" from="(mapped != '#') &amp;&amp; (mapped != last)" to="mapped != last" />
    <mutant id="mutant_917" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null) || (es2 == null)" to="es1 == null" />
    <mutant id="mutant_921" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null) || (es2 == null)" to="es2 == null" />
    <mutant id="mutant_922" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null) || ((str.length()) == 0)" to="(str.length()) == 0" />
    <mutant id="mutant_923" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null) || ((str.length()) == 0)" to="str == null" />
    <mutant id="mutant_924" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null) || ((str.length()) == 0)" to="true" />
    <mutant id="mutant_920" viable="true" in="org.apache.commons.codec.language.SoundexUtils.differenceEncoded(java.lang.String,java.lang.String)" from="(es1 == null) || (es2 == null)" to="false" />
    <mutant id="mutant_929" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))" to="(isInAlphabet(pad)) &amp;&amp; (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))" />
    <mutant id="mutant_925" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null) || ((str.length()) == 0)" to="false" />
    <mutant id="mutant_926" viable="true" in="org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)" from="(str == null) || ((str.length()) == 0)" to="(str == null) &amp;&amp; ((str.length()) == 0)" />
    <mutant id="mutant_927" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))" to="org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad)" />
    <mutant id="mutant_928" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))" to="isInAlphabet(pad)" />
    <mutant id="mutant_932" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="(octet &gt;= 0)" />
    <mutant id="mutant_933" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="true" />
    <mutant id="mutant_934" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="false" />
    <mutant id="mutant_935" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="((octet &gt;= 0) || (octet &lt; (decodeTable.length)))" />
    <mutant id="mutant_930" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))" to="true" />
    <mutant id="mutant_931" viable="true" in="org.apache.commons.codec.binary.Base32(int,byte[],boolean,byte)" from="(isInAlphabet(pad)) || (org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(pad))" to="false" />
    <mutant id="mutant_936" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="(octet &lt; (decodeTable.length))" />
    <mutant id="mutant_937" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="(decodeTable[octet]) != (-1)" />
    <mutant id="mutant_938" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="(octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))" />
    <mutant id="mutant_939" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) || ((decodeTable[octet]) != (-1))" />
    <mutant id="mutant_701" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name)))" to="((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name)))" />
    <mutant id="mutant_943" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (this.decodeTable.length))" to="b &lt; (this.decodeTable.length)" />
    <mutant id="mutant_702" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)" to="(name.length()) == 1" />
    <mutant id="mutant_944" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (this.decodeTable.length))" to="b &gt;= 0" />
    <mutant id="mutant_703" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)" to="((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))" />
    <mutant id="mutant_945" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (this.decodeTable.length))" to="true" />
    <mutant id="mutant_704" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)" to="true" />
    <mutant id="mutant_946" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (this.decodeTable.length))" to="false" />
    <mutant id="mutant_940" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="true" />
    <mutant id="mutant_941" viable="true" in="org.apache.commons.codec.binary.Base32.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="false" />
    <mutant id="mutant_700" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name)))" to="false" />
    <mutant id="mutant_942" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (this.decodeTable.length))" to="(b &gt;= 0) || (b &lt; (this.decodeTable.length))" />
    <mutant id="mutant_709" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0) &amp;&amp; (index &lt; ((string.length()) - 1))" to="true" />
    <mutant id="mutant_705" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)" to="false" />
    <mutant id="mutant_947" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) &gt;= 2)" to="(context.eof) || ((context.modulus) &gt;= 2)" />
    <mutant id="mutant_706" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) || ((name.length()) == 1)" to="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))) &amp;&amp; ((name.length()) == 1)" />
    <mutant id="mutant_948" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) &gt;= 2)" to="true" />
    <mutant id="mutant_707" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0) &amp;&amp; (index &lt; ((string.length()) - 1))" to="(index &gt;= 0) || (index &lt; ((string.length()) - 1))" />
    <mutant id="mutant_949" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) &gt;= 2)" to="false" />
    <mutant id="mutant_708" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0) &amp;&amp; (index &lt; ((string.length()) - 1))" to="index &lt; ((string.length()) - 1)" />
    <mutant id="mutant_712" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0) &amp;&amp; (index &lt; (string.length()))" to="index &lt; (string.length())" />
    <mutant id="mutant_954" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="false" />
    <mutant id="mutant_713" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0) &amp;&amp; (index &lt; (string.length()))" to="true" />
    <mutant id="mutant_955" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="(lineLength) == 0" />
    <mutant id="mutant_714" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0) &amp;&amp; (index &lt; (string.length()))" to="false" />
    <mutant id="mutant_956" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="(0 == (context.modulus)) || ((lineLength) == 0)" />
    <mutant id="mutant_715" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0) &amp;&amp; (index &lt; (string.length()))" to="index &gt; 0" />
    <mutant id="mutant_957" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="((lineLength) &gt; 0) || ((context.currentLinePos) &gt; 0)" />
    <mutant id="mutant_950" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) &gt;= 2)" to="context.eof" />
    <mutant id="mutant_951" viable="true" in="org.apache.commons.codec.binary.Base32.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) &gt;= 2)" to="(context.modulus) &gt;= 2" />
    <mutant id="mutant_710" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0) &amp;&amp; (index &lt; ((string.length()) - 1))" to="false" />
    <mutant id="mutant_952" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="0 == (context.modulus)" />
    <mutant id="mutant_711" viable="true" in="org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder,int,char)" from="(index &gt;= 0) &amp;&amp; (index &lt; ((string.length()) - 1))" to="index &gt;= 0" />
    <mutant id="mutant_953" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="true" />
    <mutant id="mutant_716" viable="true" in="org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder,int,char)" from="(index &gt; 0) &amp;&amp; (index &lt; (string.length()))" to="(index &gt; 0) || (index &lt; (string.length()))" />
    <mutant id="mutant_958" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="true" />
    <mutant id="mutant_717" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0) &amp;&amp; (((index + (test.length())) - 1) &lt; (string.length()))" to="((index + (test.length())) - 1) &lt; (string.length())" />
    <mutant id="mutant_959" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="false" />
    <mutant id="mutant_718" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0) &amp;&amp; (((index + (test.length())) - 1) &lt; (string.length()))" to="true" />
    <mutant id="mutant_719" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0) &amp;&amp; (((index + (test.length())) - 1) &lt; (string.length()))" to="false" />
    <mutant id="mutant_723" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null) || ((txtLength = txt.length()) == 0)" to="(txt == null) &amp;&amp; ((txtLength = txt.length()) == 0)" />
    <mutant id="mutant_965" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="(lineLength) &gt; 0" />
    <mutant id="mutant_724" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null) || ((txtLength = txt.length()) == 0)" to="true" />
    <mutant id="mutant_966" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) &gt; 0) || ((lineLength) &lt;= (context.currentLinePos))" />
    <mutant id="mutant_725" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null) || ((txtLength = txt.length()) == 0)" to="false" />
    <mutant id="mutant_967" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length)))" to="(octet &gt;= 0)" />
    <mutant id="mutant_726" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null) || ((txtLength = txt.length()) == 0)" to="txt == null" />
    <mutant id="mutant_968" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length)))" to="true" />
    <mutant id="mutant_961" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="(context.currentLinePos) &gt; 0" />
    <mutant id="mutant_720" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0) &amp;&amp; (((index + (test.length())) - 1) &lt; (string.length()))" to="(index &gt;= 0) || (((index + (test.length())) - 1) &lt; (string.length()))" />
    <mutant id="mutant_962" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="true" />
    <mutant id="mutant_721" viable="true" in="org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder,int,java.lang.String)" from="(index &gt;= 0) &amp;&amp; (((index + (test.length())) - 1) &lt; (string.length()))" to="index &gt;= 0" />
    <mutant id="mutant_963" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="false" />
    <mutant id="mutant_722" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(txt == null) || ((txtLength = txt.length()) == 0)" to="(txtLength = txt.length()) == 0" />
    <mutant id="mutant_964" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="(lineLength) &lt;= (context.currentLinePos)" />
    <mutant id="mutant_727" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen())) &amp;&amp; (n &lt; wdsz)" to="n &lt; wdsz" />
    <mutant id="mutant_969" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length)))" to="false" />
    <mutant id="mutant_728" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen())) &amp;&amp; (n &lt; wdsz)" to="(code.length()) &lt; (getMaxCodeLen())" />
    <mutant id="mutant_729" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen())) &amp;&amp; (n &lt; wdsz)" to="((code.length()) &lt; (getMaxCodeLen())) || (n &lt; wdsz)" />
    <mutant id="mutant_1113" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null) || (cs2 == null)" to="cs2 == null" />
    <mutant id="mutant_1114" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null) || (cs2 == null)" to="true" />
    <mutant id="mutant_1111" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="false" />
    <mutant id="mutant_1112" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null) || (cs2 == null)" to="(cs1 == null) &amp;&amp; (cs2 == null)" />
    <mutant id="mutant_1110" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="true" />
    <mutant id="mutant_1119" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String)" to="(cs1 instanceof java.lang.String) || (cs2 instanceof java.lang.String)" />
    <mutant id="mutant_960" viable="true" in="org.apache.commons.codec.binary.Base32.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="(lineLength) &gt; 0" />
    <mutant id="mutant_1117" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String)" to="cs1 instanceof java.lang.String" />
    <mutant id="mutant_1118" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String)" to="cs2 instanceof java.lang.String" />
    <mutant id="mutant_1115" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null) || (cs2 == null)" to="false" />
    <mutant id="mutant_1116" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 == null) || (cs2 == null)" to="cs1 == null" />
    <mutant id="mutant_734" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C') &amp;&amp; (isPreviousChar(local, n, symb))" to="isPreviousChar(local, n, symb)" />
    <mutant id="mutant_976" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="false" />
    <mutant id="mutant_735" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C') &amp;&amp; (isPreviousChar(local, n, symb))" to="true" />
    <mutant id="mutant_977" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT)) || (((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="(octet == (BaseNCodec.PAD_DEFAULT)) &amp;&amp; (((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" />
    <mutant id="mutant_736" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C') &amp;&amp; (isPreviousChar(local, n, symb))" to="false" />
    <mutant id="mutant_978" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT)) || (((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="true" />
    <mutant id="mutant_737" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'M')) &amp;&amp; (isLastChar(wdsz, n))" to="isLastChar(wdsz, n)" />
    <mutant id="mutant_979" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT)) || (((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="false" />
    <mutant id="mutant_730" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen())) &amp;&amp; (n &lt; wdsz)" to="true" />
    <mutant id="mutant_972" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length)))" />
    <mutant id="mutant_731" viable="false" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((code.length()) &lt; (getMaxCodeLen())) &amp;&amp; (n &lt; wdsz)" to="false" />
    <mutant id="mutant_973" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="((Base64.DECODE_TABLE[octet]) != (-1))" />
    <mutant id="mutant_732" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C') &amp;&amp; (isPreviousChar(local, n, symb))" to="symb != 'C'" />
    <mutant id="mutant_974" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="(((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) || ((Base64.DECODE_TABLE[octet]) != (-1)))" />
    <mutant id="mutant_733" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(symb != 'C') &amp;&amp; (isPreviousChar(local, n, symb))" to="(symb != 'C') || (isPreviousChar(local, n, symb))" />
    <mutant id="mutant_975" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="true" />
    <mutant id="mutant_738" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'M')) &amp;&amp; (isLastChar(wdsz, n))" to="isPreviousChar(local, n, 'M')" />
    <mutant id="mutant_739" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'M')) &amp;&amp; (isLastChar(wdsz, n))" to="(isPreviousChar(local, n, 'M')) || (isLastChar(wdsz, n))" />
    <mutant id="mutant_1102" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String)" to="(cs instanceof java.lang.String) || (substring instanceof java.lang.String)" />
    <mutant id="mutant_1103" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String)" to="cs instanceof java.lang.String" />
    <mutant id="mutant_1100" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null) || ((ascii.length) == 0)" to="(ascii == null) &amp;&amp; ((ascii.length) == 0)" />
    <mutant id="mutant_1101" viable="true" in="org.apache.commons.codec.binary.BinaryCodec.fromAscii(char[])" from="(ascii == null) || ((ascii.length) == 0)" to="(ascii.length) == 0" />
    <mutant id="mutant_970" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length)))" to="((octet &gt;= 0) || (octet &lt; (Base64.DECODE_TABLE.length)))" />
    <mutant id="mutant_1108" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="(Character.toLowerCase(c1)) != (Character.toLowerCase(c2))" />
    <mutant id="mutant_971" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length)))" to="(octet &lt; (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_1109" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) || ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" />
    <mutant id="mutant_1106" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String)" to="substring instanceof java.lang.String" />
    <mutant id="mutant_1107" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="((Character.toUpperCase(c1)) != (Character.toUpperCase(c2))) &amp;&amp; ((Character.toLowerCase(c1)) != (Character.toLowerCase(c2)))" to="(Character.toUpperCase(c1)) != (Character.toUpperCase(c2))" />
    <mutant id="mutant_1104" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String)" to="true" />
    <mutant id="mutant_1105" viable="true" in="org.apache.commons.codec.binary.CharSequenceUtils.regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)" from="(cs instanceof java.lang.String) &amp;&amp; (substring instanceof java.lang.String)" to="false" />
    <mutant id="mutant_503" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="((charAt(value, (index + 1))) == 'O')" />
    <mutant id="mutant_745" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n))))" to="false" />
    <mutant id="mutant_987" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="(octet &gt;= 0)" />
    <mutant id="mutant_504" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="true" />
    <mutant id="mutant_746" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n))))" to="(isPreviousChar(local, n, 'S'))" />
    <mutant id="mutant_988" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="true" />
    <mutant id="mutant_505" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="false" />
    <mutant id="mutant_747" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="(Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0" />
    <mutant id="mutant_989" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="false" />
    <mutant id="mutant_506" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="((charAt(value, (index + 1))) == 'A')" />
    <mutant id="mutant_748" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="true" />
    <mutant id="mutant_741" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'M')) &amp;&amp; (isLastChar(wdsz, n))" to="false" />
    <mutant id="mutant_983" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="(!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) &amp;&amp; (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))" to="!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))" />
    <mutant id="mutant_500" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic))" to="true" />
    <mutant id="mutant_742" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n))))" to="((isPreviousChar(local, n, 'S')) || (!(isLastChar(wdsz, n))))" />
    <mutant id="mutant_984" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="(!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) &amp;&amp; (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))" to="true" />
    <mutant id="mutant_501" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic))" to="false" />
    <mutant id="mutant_743" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n))))" to="(!(isLastChar(wdsz, n)))" />
    <mutant id="mutant_985" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="(!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) &amp;&amp; (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))" to="false" />
    <mutant id="mutant_502" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic))" to="(!slavoGermanic)" />
    <mutant id="mutant_744" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n))))" to="true" />
    <mutant id="mutant_986" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="(!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) &amp;&amp; (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))" to="(!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) || (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))" />
    <mutant id="mutant_507" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="(((charAt(value, (index + 1))) == 'A') &amp;&amp; ((charAt(value, (index + 1))) == 'O'))" />
    <mutant id="mutant_749" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="false" />
    <mutant id="mutant_508" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)) &amp;&amp; (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="(isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)" />
    <mutant id="mutant_509" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)) &amp;&amp; (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="true" />
    <mutant id="mutant_980" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT)) || (((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="octet == (BaseNCodec.PAD_DEFAULT)" />
    <mutant id="mutant_981" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte)" from="(octet == (BaseNCodec.PAD_DEFAULT)) || (((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1)))" to="((octet &gt;= 0) &amp;&amp; (octet &lt; (Base64.DECODE_TABLE.length))) &amp;&amp; ((Base64.DECODE_TABLE[octet]) != (-1))" />
    <mutant id="mutant_740" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'M')) &amp;&amp; (isLastChar(wdsz, n))" to="true" />
    <mutant id="mutant_982" viable="true" in="org.apache.commons.codec.binary.Base64.isBase64(byte[])" from="(!(org.apache.commons.codec.binary.Base64.isBase64(arrayOctet[i]))) &amp;&amp; (!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i])))" to="!(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(arrayOctet[i]))" />
    <mutant id="mutant_514" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))" />
    <mutant id="mutant_756" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="(!(isLastChar(wdsz, n))) || ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" />
    <mutant id="mutant_998" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null) || ((binaryData.length) == 0)" to="true" />
    <mutant id="mutant_515" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;)))" to="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;)))" />
    <mutant id="mutant_757" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'S')) &amp;&amp; (isNextChar(local, n, 'H'))" to="isNextChar(local, n, 'H')" />
    <mutant id="mutant_999" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null) || ((binaryData.length) == 0)" to="false" />
    <mutant id="mutant_516" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;)))" to="true" />
    <mutant id="mutant_758" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'S')) &amp;&amp; (isNextChar(local, n, 'H'))" to="(isPreviousChar(local, n, 'S')) || (isNextChar(local, n, 'H'))" />
    <mutant id="mutant_517" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;)))" to="false" />
    <mutant id="mutant_759" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'S')) &amp;&amp; (isNextChar(local, n, 'H'))" to="true" />
    <mutant id="mutant_510" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)) &amp;&amp; (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="false" />
    <mutant id="mutant_752" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="(Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0" />
    <mutant id="mutant_994" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="(decodeTable[octet]) != (-1)" />
    <mutant id="mutant_511" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)) &amp;&amp; (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O')" />
    <mutant id="mutant_753" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="!(isLastChar(wdsz, n))" />
    <mutant id="mutant_995" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="true" />
    <mutant id="mutant_512" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)) &amp;&amp; (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" to="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic)) || (((charAt(value, (index + 1))) == 'A') || ((charAt(value, (index + 1))) == 'O'))" />
    <mutant id="mutant_754" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="true" />
    <mutant id="mutant_996" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="false" />
    <mutant id="mutant_513" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.L_T_K_S_N_M_B_Z))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;S&quot;, &quot;K&quot;, &quot;L&quot;))" />
    <mutant id="mutant_755" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="false" />
    <mutant id="mutant_997" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null) || ((binaryData.length) == 0)" to="binaryData == null" />
    <mutant id="mutant_518" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic))" to="((index == ((value.length()) - 1)) || (!slavoGermanic))" />
    <mutant id="mutant_519" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic))" to="true" />
    <mutant id="mutant_990" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="((octet &gt;= 0) || (octet &lt; (decodeTable.length)))" />
    <mutant id="mutant_991" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length)))" to="(octet &lt; (decodeTable.length))" />
    <mutant id="mutant_750" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))) || ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" />
    <mutant id="mutant_992" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) || ((decodeTable[octet]) != (-1))" />
    <mutant id="mutant_751" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" to="(isPreviousChar(local, n, 'S')) &amp;&amp; (!(isLastChar(wdsz, n)))" />
    <mutant id="mutant_993" viable="true" in="org.apache.commons.codec.binary.Base64.isInAlphabet(byte)" from="((octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))) &amp;&amp; ((decodeTable[octet]) != (-1))" to="(octet &gt;= 0) &amp;&amp; (octet &lt; (decodeTable.length))" />
    <mutant id="mutant_525" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;)))" to="true" />
    <mutant id="mutant_767" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3)) &amp;&amp; (isVowel(local, 2))" to="((n == 0) &amp;&amp; (wdsz &gt;= 3)) || (isVowel(local, 2))" />
    <mutant id="mutant_526" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;)))" to="false" />
    <mutant id="mutant_768" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3)) &amp;&amp; (isVowel(local, 2))" to="true" />
    <mutant id="mutant_527" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;)))" to="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;)))" />
    <mutant id="mutant_769" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3)) &amp;&amp; (isVowel(local, 2))" to="false" />
    <mutant id="mutant_528" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;)))" to="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;)))" />
    <mutant id="mutant_521" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic))" to="(index == ((value.length()) - 1))" />
    <mutant id="mutant_763" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3))" to="true" />
    <mutant id="mutant_522" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic))" to="(!slavoGermanic)" />
    <mutant id="mutant_764" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3))" to="false" />
    <mutant id="mutant_523" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;)))" to="((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic))" />
    <mutant id="mutant_765" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3))" to="(wdsz &gt;= 3)" />
    <mutant id="mutant_524" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))" />
    <mutant id="mutant_766" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3))" to="((n == 0) || (wdsz &gt;= 3))" />
    <mutant id="mutant_1160" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="((QuotedPrintableCodec.isWhitespace(b)) || (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" />
    <mutant id="mutant_1161" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="!(printable.get(b))" />
    <mutant id="mutant_529" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;))" />
    <mutant id="mutant_1157" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="true" />
    <mutant id="mutant_1158" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="false" />
    <mutant id="mutant_1155" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)" />
    <mutant id="mutant_1156" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="(pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" />
    <mutant id="mutant_1153" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="true" />
    <mutant id="mutant_1154" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="false" />
    <mutant id="mutant_1151" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="((!(printable.get(b))) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" />
    <mutant id="mutant_1152" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((!(printable.get(b))) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="!(printable.get(b))" />
    <mutant id="mutant_760" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'S')) &amp;&amp; (isNextChar(local, n, 'H'))" to="false" />
    <mutant id="mutant_761" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isPreviousChar(local, n, 'S')) &amp;&amp; (isNextChar(local, n, 'H'))" to="isPreviousChar(local, n, 'S')" />
    <mutant id="mutant_520" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic))" to="false" />
    <mutant id="mutant_762" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3))" to="(n == 0)" />
    <mutant id="mutant_1159" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))" />
    <mutant id="mutant_536" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;))" to="index == 0" />
    <mutant id="mutant_778" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="(!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))" />
    <mutant id="mutant_537" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;))" to="(index == 0) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;))" />
    <mutant id="mutant_779" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="true" />
    <mutant id="mutant_538" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;))" />
    <mutant id="mutant_539" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;)" />
    <mutant id="mutant_532" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;)))" to="((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))" />
    <mutant id="mutant_774" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G')))" to="false" />
    <mutant id="mutant_533" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;)" />
    <mutant id="mutant_775" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G')))" to="((!(isLastChar(wdsz, (n + 1)))) || (isNextChar(local, n, 'G')))" />
    <mutant id="mutant_534" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;))" to="true" />
    <mutant id="mutant_776" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G')))" to="(!(isLastChar(wdsz, (n + 1))))" />
    <mutant id="mutant_535" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 5, &quot;SUGAR&quot;))" to="false" />
    <mutant id="mutant_777" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))) || ((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" />
    <mutant id="mutant_1150" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR)) &amp;&amp; (b != (QuotedPrintableCodec.LF))" to="(b != (QuotedPrintableCodec.CR)) || (b != (QuotedPrintableCodec.LF))" />
    <mutant id="mutant_1146" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR)) &amp;&amp; (b != (QuotedPrintableCodec.LF))" to="b != (QuotedPrintableCodec.LF)" />
    <mutant id="mutant_1147" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR)) &amp;&amp; (b != (QuotedPrintableCodec.LF))" to="b != (QuotedPrintableCodec.CR)" />
    <mutant id="mutant_1144" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE)) || (b == (QuotedPrintableCodec.TAB))" to="false" />
    <mutant id="mutant_1145" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE)) || (b == (QuotedPrintableCodec.TAB))" to="(b == (QuotedPrintableCodec.SPACE)) &amp;&amp; (b == (QuotedPrintableCodec.TAB))" />
    <mutant id="mutant_1142" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE)) || (b == (QuotedPrintableCodec.TAB))" to="b == (QuotedPrintableCodec.TAB)" />
    <mutant id="mutant_1143" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE)) || (b == (QuotedPrintableCodec.TAB))" to="true" />
    <mutant id="mutant_1140" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length)) &amp;&amp; (i &lt; (original.length))" to="i &lt; (key.length)" />
    <mutant id="mutant_1141" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)" from="(b == (QuotedPrintableCodec.SPACE)) || (b == (QuotedPrintableCodec.TAB))" to="b == (QuotedPrintableCodec.SPACE)" />
    <mutant id="mutant_770" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3)) &amp;&amp; (isVowel(local, 2))" to="isVowel(local, 2)" />
    <mutant id="mutant_771" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((n == 0) &amp;&amp; (wdsz &gt;= 3)) &amp;&amp; (isVowel(local, 2))" to="(n == 0) &amp;&amp; (wdsz &gt;= 3)" />
    <mutant id="mutant_530" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;)))" to="true" />
    <mutant id="mutant_772" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G')))" to="(isNextChar(local, n, 'G'))" />
    <mutant id="mutant_531" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleR(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == ((value.length()) - 1)) &amp;&amp; (!slavoGermanic)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;IE&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 2, &quot;ME&quot;, &quot;MA&quot;)))" to="false" />
    <mutant id="mutant_773" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G')))" to="true" />
    <mutant id="mutant_1148" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR)) &amp;&amp; (b != (QuotedPrintableCodec.LF))" to="true" />
    <mutant id="mutant_1149" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])" from="(b != (QuotedPrintableCodec.CR)) &amp;&amp; (b != (QuotedPrintableCodec.LF))" to="false" />
    <mutant id="mutant_305" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;))" to="true" />
    <mutant id="mutant_547" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;)))" to="((index == 0) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;)))" />
    <mutant id="mutant_789" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H')))" to="false" />
    <mutant id="mutant_306" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;))" to="false" />
    <mutant id="mutant_548" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;))" to="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))" />
    <mutant id="mutant_307" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;))" to="index == 0" />
    <mutant id="mutant_549" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;)" />
    <mutant id="mutant_308" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;)))" to="true" />
    <mutant id="mutant_301" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0) || (index &gt;= (value.length()))" to="index &lt; 0" />
    <mutant id="mutant_543" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;)))" to="true" />
    <mutant id="mutant_785" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isLastChar(wdsz, (n + 1))) &amp;&amp; (isNextChar(local, n, 'H'))" to="true" />
    <mutant id="mutant_302" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0) || (index &gt;= (value.length()))" to="(index &lt; 0) &amp;&amp; (index &gt;= (value.length()))" />
    <mutant id="mutant_544" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;)))" to="false" />
    <mutant id="mutant_786" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isLastChar(wdsz, (n + 1))) &amp;&amp; (isNextChar(local, n, 'H'))" to="false" />
    <mutant id="mutant_303" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;))" to="(index == 0) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;))" />
    <mutant id="mutant_545" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;)))" to="(index == 0)" />
    <mutant id="mutant_787" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H')))" to="(isNextChar(local, n, 'H'))" />
    <mutant id="mutant_304" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 6, &quot;CAESAR&quot;)" />
    <mutant id="mutant_546" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))" />
    <mutant id="mutant_788" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H')))" to="true" />
    <mutant id="mutant_309" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;)))" to="false" />
    <mutant id="mutant_1135" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null) || (!(m.find()))" to="!(m.find())" />
    <mutant id="mutant_1136" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null) || (!(m.find()))" to="(m == null) &amp;&amp; (!(m.find()))" />
    <mutant id="mutant_1133" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null) || (!(m.find()))" to="true" />
    <mutant id="mutant_1134" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null) || (!(m.find()))" to="false" />
    <mutant id="mutant_1131" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null) || (!(m.find()))" to="(m == null) &amp;&amp; (!(m.find()))" />
    <mutant id="mutant_1132" viable="true" in="org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)" from="(m == null) || (!(m.find()))" to="m == null" />
    <mutant id="mutant_1130" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null) || (!(m.find()))" to="!(m.find())" />
    <mutant id="mutant_781" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="(Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0" />
    <mutant id="mutant_540" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)" />
    <mutant id="mutant_782" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isLastChar(wdsz, (n + 1))) &amp;&amp; (isNextChar(local, n, 'H'))" to="(isLastChar(wdsz, (n + 1))) || (isNextChar(local, n, 'H'))" />
    <mutant id="mutant_541" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;))" to="true" />
    <mutant id="mutant_783" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isLastChar(wdsz, (n + 1))) &amp;&amp; (isNextChar(local, n, 'H'))" to="isNextChar(local, n, 'H')" />
    <mutant id="mutant_300" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0) || (index &gt;= (value.length()))" to="index &gt;= (value.length())" />
    <mutant id="mutant_542" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 3, &quot;SIO&quot;, &quot;SIA&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;SIAN&quot;))" to="false" />
    <mutant id="mutant_784" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(isLastChar(wdsz, (n + 1))) &amp;&amp; (isNextChar(local, n, 'H'))" to="isLastChar(wdsz, (n + 1))" />
    <mutant id="mutant_1139" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length)) &amp;&amp; (i &lt; (original.length))" to="false" />
    <mutant id="mutant_1137" viable="true" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length)) &amp;&amp; (i &lt; (original.length))" to="(i &lt; (key.length)) || (i &lt; (original.length))" />
    <mutant id="mutant_780" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'G'))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 2)))) &gt;= 0)" to="false" />
    <mutant id="mutant_1138" viable="false" in="org.apache.commons.codec.digest.UnixCrypt.crypt(byte[],java.lang.String)" from="(i &lt; (key.length)) &amp;&amp; (i &lt; (original.length))" to="true" />
    <mutant id="mutant_316" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M'))" to="((index == 1) || ((charAt(value, 0)) == 'M'))" />
    <mutant id="mutant_558" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3)))))" to="true" />
    <mutant id="mutant_317" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M'))" to="(index == 1)" />
    <mutant id="mutant_559" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) &amp;&amp; (!(isVowel(charAt(value, 3)))))" to="false" />
    <mutant id="mutant_318" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)) &amp;&amp; (!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M')))" to="true" />
    <mutant id="mutant_319" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CC&quot;)) &amp;&amp; (!((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M')))" to="false" />
    <mutant id="mutant_312" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;)))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)" />
    <mutant id="mutant_554" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;))" to="true" />
    <mutant id="mutant_796" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))) &amp;&amp; (!(isVowel(local, (n + 2))))" to="!(isVowel(local, (n + 2)))" />
    <mutant id="mutant_313" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M'))" to="true" />
    <mutant id="mutant_555" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;))" to="false" />
    <mutant id="mutant_797" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="((regionMatch(local, n, &quot;GN&quot;)) &amp;&amp; (regionMatch(local, n, &quot;GNED&quot;)))" />
    <mutant id="mutant_314" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M'))" to="false" />
    <mutant id="mutant_556" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;)" />
    <mutant id="mutant_798" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="true" />
    <mutant id="mutant_315" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 1) &amp;&amp; ((charAt(value, 0)) == 'M'))" to="((charAt(value, 0)) == 'M')" />
    <mutant id="mutant_557" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;))" to="index == ((value.length()) - 1)" />
    <mutant id="mutant_799" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="false" />
    <mutant id="mutant_1124" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null) &amp;&amp; (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))" to="salt != null" />
    <mutant id="mutant_1125" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null) &amp;&amp; (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))" to="true" />
    <mutant id="mutant_1122" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null) &amp;&amp; (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))" to="!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX))" />
    <mutant id="mutant_1123" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null) &amp;&amp; (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))" to="(salt != null) || (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))" />
    <mutant id="mutant_1120" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String)" to="true" />
    <mutant id="mutant_1121" viable="true" in="org.apache.commons.codec.binary.StringUtils.equals(java.lang.CharSequence,java.lang.CharSequence)" from="(cs1 instanceof java.lang.String) &amp;&amp; (cs2 instanceof java.lang.String)" to="false" />
    <mutant id="mutant_550" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;))" to="true" />
    <mutant id="mutant_792" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))) &amp;&amp; (!(isVowel(local, (n + 2))))" to="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))) || (!(isVowel(local, (n + 2))))" />
    <mutant id="mutant_551" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;))" to="false" />
    <mutant id="mutant_793" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))) &amp;&amp; (!(isVowel(local, (n + 2))))" to="(!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))" />
    <mutant id="mutant_310" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;))" />
    <mutant id="mutant_552" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;))" to="((index == 0) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;M&quot;, &quot;N&quot;, &quot;L&quot;, &quot;W&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;Z&quot;))" />
    <mutant id="mutant_794" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))) &amp;&amp; (!(isVowel(local, (n + 2))))" to="true" />
    <mutant id="mutant_311" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 2, &quot;CZ&quot;)) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 4, &quot;WICZ&quot;)))" />
    <mutant id="mutant_553" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == ((value.length()) - 1)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;))" to="(index == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AI&quot;, &quot;OI&quot;))" />
    <mutant id="mutant_795" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H'))) &amp;&amp; (!(isVowel(local, (n + 2))))" to="false" />
    <mutant id="mutant_1128" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null) || (!(m.find()))" to="true" />
    <mutant id="mutant_1129" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null) || (!(m.find()))" to="false" />
    <mutant id="mutant_790" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H')))" to="((!(isLastChar(wdsz, (n + 1)))) || (isNextChar(local, n, 'H')))" />
    <mutant id="mutant_1126" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[],java.lang.String)" from="(salt != null) &amp;&amp; (!(salt.startsWith(org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX)))" to="false" />
    <mutant id="mutant_791" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, (n + 1)))) &amp;&amp; (isNextChar(local, n, 'H')))" to="(!(isLastChar(wdsz, (n + 1))))" />
    <mutant id="mutant_1127" viable="false" in="org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[],java.lang.String,java.lang.String)" from="(m == null) || (!(m.find()))" to="m == null" />
    <mutant id="mutant_9" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="(body.startsWith(&quot;|&quot;)) || (body.endsWith(&quot;|&quot;))" to="(body.startsWith(&quot;|&quot;)) &amp;&amp; (body.endsWith(&quot;|&quot;))" />
    <mutant id="mutant_206" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E'))" to="(c != 'I')" />
    <mutant id="mutant_448" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U'))" to="((index &gt; 2) || ((charAt(value, (index - 1))) == 'U'))" />
    <mutant id="mutant_8" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="(body.startsWith(&quot;|&quot;)) || (body.endsWith(&quot;|&quot;))" to="body.endsWith(&quot;|&quot;)" />
    <mutant id="mutant_207" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E'))" to="((c != 'I') || (c != 'E'))" />
    <mutant id="mutant_449" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U'))" to="((charAt(value, (index - 1))) == 'U')" />
    <mutant id="mutant_208" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;))" to="((c != 'I') &amp;&amp; (c != 'E')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;))" />
    <mutant id="mutant_209" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;))" to="true" />
    <mutant id="mutant_5" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="(body.startsWith(&quot;|&quot;)) || (body.endsWith(&quot;|&quot;))" to="body.startsWith(&quot;|&quot;)" />
    <mutant id="mutant_202" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength)) &amp;&amp; ((this.alternate.length()) &gt;= (this.maxLength))" to="false" />
    <mutant id="mutant_444" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))) || ((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="true" />
    <mutant id="mutant_686" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="false" />
    <mutant id="mutant_4" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2) &amp;&amp; (input.substring(0, 2).equals(&quot;d\'&quot;))" to="false" />
    <mutant id="mutant_203" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E'))" to="(c != 'E')" />
    <mutant id="mutant_445" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))) || ((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="false" />
    <mutant id="mutant_687" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="true" />
    <mutant id="mutant_7" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="(body.startsWith(&quot;|&quot;)) || (body.endsWith(&quot;|&quot;))" to="false" />
    <mutant id="mutant_204" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E'))" to="true" />
    <mutant id="mutant_446" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))) || ((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" />
    <mutant id="mutant_688" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="false" />
    <mutant id="mutant_6" viable="true" in="org.apache.commons.codec.language.bm.Rule.parsePhonemeExpr(java.lang.String)" from="(body.startsWith(&quot;|&quot;)) || (body.endsWith(&quot;|&quot;))" to="true" />
    <mutant id="mutant_205" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E'))" to="false" />
    <mutant id="mutant_447" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))) || ((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="(index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;))" />
    <mutant id="mutant_689" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN)" />
    <mutant id="mutant_85" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T')) &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar)))" to="!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar))" />
    <mutant id="mutant_84" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T'))" to="(chr == 'T')" />
    <mutant id="mutant_87" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T')) &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar)))" to="true" />
    <mutant id="mutant_86" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T')) &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar)))" to="((chr == 'D') || (chr == 'T')) || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar)))" />
    <mutant id="mutant_89" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T')) &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar)))" to="(chr == 'D') || (chr == 'T')" />
    <mutant id="mutant_88" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T')) &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.SCZ, nextChar)))" to="false" />
    <mutant id="mutant_90" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X') &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar)))" to="chr == 'X'" />
    <mutant id="mutant_92" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X') &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar)))" to="false" />
    <mutant id="mutant_91" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X') &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar)))" to="true" />
    <mutant id="mutant_94" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X') &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar)))" to="(chr == 'X') || (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar)))" />
    <mutant id="mutant_93" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'X') &amp;&amp; (!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar)))" to="!(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.CKQ, lastChar))" />
    <mutant id="mutant_1" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2) &amp;&amp; (input.substring(0, 2).equals(&quot;d\'&quot;))" to="(input.length()) &gt;= 2" />
    <mutant id="mutant_440" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="true" />
    <mutant id="mutant_682" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="sumLength &gt;= (MatchRatingApproachEncoder.FIVE)" />
    <mutant id="mutant_0" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2) &amp;&amp; (input.substring(0, 2).equals(&quot;d\'&quot;))" to="input.substring(0, 2).equals(&quot;d\'&quot;)" />
    <mutant id="mutant_441" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="false" />
    <mutant id="mutant_683" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE)) || (sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" />
    <mutant id="mutant_3" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2) &amp;&amp; (input.substring(0, 2).equals(&quot;d\'&quot;))" to="true" />
    <mutant id="mutant_200" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength)) &amp;&amp; ((this.alternate.length()) &gt;= (this.maxLength))" to="((this.primary.length()) &gt;= (this.maxLength)) || ((this.alternate.length()) &gt;= (this.maxLength))" />
    <mutant id="mutant_442" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="(index &gt; 3)" />
    <mutant id="mutant_684" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="sumLength &lt;= (MatchRatingApproachEncoder.SEVEN)" />
    <mutant id="mutant_2" viable="true" in="org.apache.commons.codec.language.bm.PhoneticEngine.encode(java.lang.String,org.apache.commons.codec.language.bm.Languages$LanguageSet)" from="((input.length()) &gt;= 2) &amp;&amp; (input.substring(0, 2).equals(&quot;d\'&quot;))" to="((input.length()) &gt;= 2) || (input.substring(0, 2).equals(&quot;d\'&quot;))" />
    <mutant id="mutant_201" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult.isComplete()" from="((this.primary.length()) &gt;= (this.maxLength)) &amp;&amp; ((this.alternate.length()) &gt;= (this.maxLength))" to="true" />
    <mutant id="mutant_443" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))) || ((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))) &amp;&amp; ((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" />
    <mutant id="mutant_685" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.FIVE)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.SEVEN))" to="true" />
    <mutant id="mutant_680" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))) || (letter.equalsIgnoreCase(&quot;U&quot;))" to="false" />
    <mutant id="mutant_681" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))) || (letter.equalsIgnoreCase(&quot;U&quot;))" to="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))" />
    <mutant id="mutant_217" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;)))" to="false" />
    <mutant id="mutant_459" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'I')" to="true" />
    <mutant id="mutant_218" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" />
    <mutant id="mutant_219" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))" />
    <mutant id="mutant_213" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))" />
    <mutant id="mutant_455" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;))" to="true" />
    <mutant id="mutant_697" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name)))" to="(MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name))" />
    <mutant id="mutant_214" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;)))" to="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;)))" />
    <mutant id="mutant_456" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;))" to="false" />
    <mutant id="mutant_698" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name)))" to="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) &amp;&amp; (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name)))" />
    <mutant id="mutant_215" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;))" />
    <mutant id="mutant_457" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;))" to="(index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')" />
    <mutant id="mutant_699" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="(((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name)))" to="true" />
    <mutant id="mutant_216" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String,int)" from="(!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 5, &quot;HARAC&quot;, &quot;HARIS&quot;))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 3, &quot;HOR&quot;, &quot;HYM&quot;, &quot;HIA&quot;, &quot;HEM&quot;)))" to="true" />
    <mutant id="mutant_458" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'I')" to="(charAt(value, (index - 1))) != 'I'" />
    <mutant id="mutant_74" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="(nextChar != 'H')" />
    <mutant id="mutant_73" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="((chr == 'P') || (nextChar != 'H'))" />
    <mutant id="mutant_76" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B') || ((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="false" />
    <mutant id="mutant_75" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B') || ((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="true" />
    <mutant id="mutant_78" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B') || ((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="(chr == 'P') &amp;&amp; (nextChar != 'H')" />
    <mutant id="mutant_77" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B') || ((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="chr == 'B'" />
    <mutant id="mutant_79" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'B') || ((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="(chr == 'B') &amp;&amp; ((chr == 'P') &amp;&amp; (nextChar != 'H'))" />
    <mutant id="mutant_81" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T'))" to="true" />
    <mutant id="mutant_80" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T'))" to="((chr == 'D') &amp;&amp; (chr == 'T'))" />
    <mutant id="mutant_83" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T'))" to="(chr == 'D')" />
    <mutant id="mutant_82" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'D') || (chr == 'T'))" to="false" />
    <mutant id="mutant_451" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U'))" to="false" />
    <mutant id="mutant_693" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name)))" to="(name == null)" />
    <mutant id="mutant_210" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;))" to="false" />
    <mutant id="mutant_452" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U'))" to="(index &gt; 2)" />
    <mutant id="mutant_694" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name)))" to="true" />
    <mutant id="mutant_211" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;)" />
    <mutant id="mutant_453" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;)" />
    <mutant id="mutant_695" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name)))" to="false" />
    <mutant id="mutant_212" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionC0(java.lang.String,int)" from="((c != 'I') &amp;&amp; (c != 'E')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;BACHER&quot;, &quot;MACHER&quot;))" to="(c != 'I') &amp;&amp; (c != 'E')" />
    <mutant id="mutant_454" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;))" to="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U')) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;C&quot;, &quot;G&quot;, &quot;L&quot;, &quot;R&quot;, &quot;T&quot;))" />
    <mutant id="mutant_696" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name)))" to="((name == null) &amp;&amp; (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name)))" />
    <mutant id="mutant_690" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)) || (sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" />
    <mutant id="mutant_691" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)" from="(sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)) &amp;&amp; (sumLength &lt;= (MatchRatingApproachEncoder.ELEVEN))" to="sumLength &gt;= (MatchRatingApproachEncoder.EIGHT)" />
    <mutant id="mutant_450" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; ((charAt(value, (index - 1))) == 'U'))" to="true" />
    <mutant id="mutant_692" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(java.lang.String)" from="((name == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name)))" to="(MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name))" />
    <mutant id="mutant_228" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;)))" to="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;)))" />
    <mutant id="mutant_229" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))" />
    <mutant id="mutant_224" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;)))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" />
    <mutant id="mutant_466" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1)))))" to="(index == 0)" />
    <mutant id="mutant_225" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;)))" to="true" />
    <mutant id="mutant_467" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1)))))" to="((index == 0) &amp;&amp; (isVowel(charAt(value, (index - 1)))))" />
    <mutant id="mutant_226" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;)))" to="false" />
    <mutant id="mutant_468" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1))))) &amp;&amp; (isVowel(charAt(value, (index + 1))))" to="((index == 0) || (isVowel(charAt(value, (index - 1))))) || (isVowel(charAt(value, (index + 1))))" />
    <mutant id="mutant_227" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;)))" to="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;)))" />
    <mutant id="mutant_469" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1))))) &amp;&amp; (isVowel(charAt(value, (index + 1))))" to="(index == 0) || (isVowel(charAt(value, (index - 1))))" />
    <mutant id="mutant_1180" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))" to="!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))" />
    <mutant id="mutant_1179" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))" to="!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX))" />
    <mutant id="mutant_1177" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))" to="false" />
    <mutant id="mutant_1178" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))" to="(!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) &amp;&amp; (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))" />
    <mutant id="mutant_1175" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="(!(printable.get(b))) &amp;&amp; ((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" />
    <mutant id="mutant_1176" viable="true" in="org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String)" from="(!(text.startsWith(org.apache.commons.codec.net.RFC1522Codec.PREFIX))) || (!(text.endsWith(org.apache.commons.codec.net.RFC1522Codec.POSTFIX)))" to="true" />
    <mutant id="mutant_1173" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="true" />
    <mutant id="mutant_1174" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="false" />
    <mutant id="mutant_220" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="true" />
    <mutant id="mutant_462" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'I')" to="(index &gt; 0) || ((charAt(value, (index - 1))) != 'I')" />
    <mutant id="mutant_221" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="false" />
    <mutant id="mutant_463" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1)))))" to="(isVowel(charAt(value, (index - 1))))" />
    <mutant id="mutant_222" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" />
    <mutant id="mutant_464" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1)))))" to="true" />
    <mutant id="mutant_223" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))" />
    <mutant id="mutant_465" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1)))))" to="false" />
    <mutant id="mutant_460" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'I')" to="false" />
    <mutant id="mutant_461" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'I')" to="index &gt; 0" />
    <mutant id="mutant_239" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))" to="true" />
    <mutant id="mutant_235" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;))" />
    <mutant id="mutant_477" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)" />
    <mutant id="mutant_236" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0))" to="(index == 0)" />
    <mutant id="mutant_478" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' '))" to="true" />
    <mutant id="mutant_237" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) &amp;&amp; (index == 0))" />
    <mutant id="mutant_479" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' '))" to="false" />
    <mutant id="mutant_238" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))" to="((index + 1) == ((value.length()) - 1))" />
    <mutant id="mutant_96" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S') || (chr == 'Z')" to="chr == 'Z'" />
    <mutant id="mutant_1171" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="!(printable.get(b))" />
    <mutant id="mutant_95" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S') || (chr == 'Z')" to="(chr == 'S') &amp;&amp; (chr == 'Z')" />
    <mutant id="mutant_1172" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="(i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))" />
    <mutant id="mutant_98" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S') || (chr == 'Z')" to="false" />
    <mutant id="mutant_97" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S') || (chr == 'Z')" to="true" />
    <mutant id="mutant_1170" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b))" />
    <mutant id="mutant_99" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="(chr == 'S') || (chr == 'Z')" to="chr == 'S'" />
    <mutant id="mutant_1168" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="false" />
    <mutant id="mutant_1169" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="(i &gt; ((bytes.length) - 2))" />
    <mutant id="mutant_1166" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="((i &gt; ((bytes.length) - 2)) || (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" />
    <mutant id="mutant_1167" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="((i &gt; ((bytes.length) - 2)) &amp;&amp; (org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(b)))" to="true" />
    <mutant id="mutant_1164" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="false" />
    <mutant id="mutant_1165" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="(!(printable.get(b))) &amp;&amp; ((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" />
    <mutant id="mutant_1162" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="(QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5))" />
    <mutant id="mutant_1163" viable="true" in="org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet,byte[],boolean)" from="(!(printable.get(b))) || ((QuotedPrintableCodec.isWhitespace(b)) &amp;&amp; (pos &gt; ((QuotedPrintableCodec.SAFE_LENGTH) - 5)))" to="true" />
    <mutant id="mutant_231" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;)))" to="false" />
    <mutant id="mutant_473" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" />
    <mutant id="mutant_232" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;)))" to="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;)))" />
    <mutant id="mutant_474" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="true" />
    <mutant id="mutant_233" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0))" to="true" />
    <mutant id="mutant_475" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="false" />
    <mutant id="mutant_234" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0))" to="false" />
    <mutant id="mutant_476" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;)" />
    <mutant id="mutant_470" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1))))) &amp;&amp; (isVowel(charAt(value, (index + 1))))" to="true" />
    <mutant id="mutant_471" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1))))) &amp;&amp; (isVowel(charAt(value, (index + 1))))" to="false" />
    <mutant id="mutant_230" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;)))" to="true" />
    <mutant id="mutant_472" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == 0) || (isVowel(charAt(value, (index - 1))))) &amp;&amp; (isVowel(charAt(value, (index + 1))))" to="isVowel(charAt(value, (index + 1)))" />
    <mutant id="mutant_246" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="false" />
    <mutant id="mutant_488" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)" />
    <mutant id="mutant_247" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) || ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" />
    <mutant id="mutant_489" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="true" />
    <mutant id="mutant_248" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))) || (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))) &amp;&amp; (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" />
    <mutant id="mutant_249" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))) || (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))" />
    <mutant id="mutant_242" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) &amp;&amp; ((index + 1) == ((value.length()) - 1)))" />
    <mutant id="mutant_484" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4))" to="true" />
    <mutant id="mutant_243" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))" />
    <mutant id="mutant_485" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4))" to="false" />
    <mutant id="mutant_244" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0))" />
    <mutant id="mutant_486" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4))" to="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) &amp;&amp; ((value.length()) == 4))" />
    <mutant id="mutant_245" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="true" />
    <mutant id="mutant_487" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4))" to="((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' '))" />
    <mutant id="mutant_480" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' '))" to="(index == 0)" />
    <mutant id="mutant_481" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' '))" to="((charAt(value, (index + 4))) == ' ')" />
    <mutant id="mutant_240" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))" to="false" />
    <mutant id="mutant_482" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' '))" to="((index == 0) || ((charAt(value, (index + 4))) == ' '))" />
    <mutant id="mutant_241" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE))" />
    <mutant id="mutant_483" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4))" to="((value.length()) == 4)" />
    <mutant id="mutant_257" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;)" />
    <mutant id="mutant_499" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic))" to="(isVowel(charAt(value, (index - 1))))" />
    <mutant id="mutant_258" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;)))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;)))" />
    <mutant id="mutant_259" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;))" />
    <mutant id="mutant_490" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="false" />
    <mutant id="mutant_253" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;))" to="(index == ((value.length()) - 3)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;))" />
    <mutant id="mutant_495" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)))" to="false" />
    <mutant id="mutant_254" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;))" to="index == ((value.length()) - 3)" />
    <mutant id="mutant_496" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)))" to="index == 0" />
    <mutant id="mutant_255" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;))" to="true" />
    <mutant id="mutant_497" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)))" to="(index == 0) || (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)))" />
    <mutant id="mutant_256" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="(index == ((value.length()) - 3)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ILLO&quot;, &quot;ILLA&quot;, &quot;ALLE&quot;))" to="false" />
    <mutant id="mutant_498" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((isVowel(charAt(value, (index - 1)))) &amp;&amp; (!slavoGermanic))" to="((isVowel(charAt(value, (index - 1)))) || (!slavoGermanic))" />
    <mutant id="mutant_491" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" />
    <mutant id="mutant_250" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))) || (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="true" />
    <mutant id="mutant_492" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(((index == 0) &amp;&amp; ((charAt(value, (index + 4))) == ' ')) || ((value.length()) == 4)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;SAN &quot;)" />
    <mutant id="mutant_251" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))) || (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="false" />
    <mutant id="mutant_493" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)))" to="!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;))" />
    <mutant id="mutant_252" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String,int)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 6, &quot;ORCHES&quot;, &quot;ARCHIT&quot;, &quot;ORCHID&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, &quot;T&quot;, &quot;S&quot;))) || (((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1))))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;A&quot;, &quot;O&quot;, &quot;U&quot;, &quot;E&quot;)) || (index == 0)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 1, org.apache.commons.codec.language.DoubleMetaphone.L_R_N_M_B_H_F_V_W_SPACE)) || ((index + 1) == ((value.length()) - 1)))" />
    <mutant id="mutant_494" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleJ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(index == 0) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, index, 4, &quot;JOSE&quot;)))" to="true" />
    <mutant id="mutant_268" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="((index + 1) == ((value.length()) - 1))" />
    <mutant id="mutant_269" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="(((index + 1) == ((value.length()) - 1)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" />
    <mutant id="mutant_264" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))" />
    <mutant id="mutant_265" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;))" to="true" />
    <mutant id="mutant_266" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;))" to="false" />
    <mutant id="mutant_267" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;)" />
    <mutant id="mutant_260" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;)))" to="true" />
    <mutant id="mutant_261" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;)))" to="false" />
    <mutant id="mutant_262" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))" />
    <mutant id="mutant_263" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionL0(java.lang.String,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 2), 2, &quot;AS&quot;, &quot;OS&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, ((value.length()) - 1), 1, &quot;A&quot;, &quot;O&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;ALLE&quot;))" />
    <mutant id="mutant_279" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0) &amp;&amp; ((start + length) &lt;= (value.length()))" to="(start &gt;= 0) || ((start + length) &lt;= (value.length()))" />
    <mutant id="mutant_270" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="true" />
    <mutant id="mutant_275" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)) &amp;&amp; (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="false" />
    <mutant id="mutant_276" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)) &amp;&amp; (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)) || (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" />
    <mutant id="mutant_277" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)) &amp;&amp; (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;))" />
    <mutant id="mutant_278" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0) &amp;&amp; ((start + length) &lt;= (value.length()))" to="start &gt;= 0" />
    <mutant id="mutant_271" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="false" />
    <mutant id="mutant_272" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;))" />
    <mutant id="mutant_273" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)) &amp;&amp; (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)" />
    <mutant id="mutant_274" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String,int)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;UMB&quot;)) &amp;&amp; (((index + 1) == ((value.length()) - 1)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 2), 2, &quot;ER&quot;)))" to="true" />
    <mutant id="mutant_280" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0) &amp;&amp; ((start + length) &lt;= (value.length()))" to="true" />
    <mutant id="mutant_281" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0) &amp;&amp; ((start + length) &lt;= (value.length()))" to="false" />
    <mutant id="mutant_286" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1)))" to="((value.indexOf('K')) &gt; (-1))" />
    <mutant id="mutant_287" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1)))" to="((value.indexOf('W')) &gt; (-1))" />
    <mutant id="mutant_288" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1)))" to="((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" />
    <mutant id="mutant_289" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1)))" to="true" />
    <mutant id="mutant_282" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String,int,int,java.lang.String[])" from="(start &gt;= 0) &amp;&amp; ((start + length) &lt;= (value.length()))" to="(start + length) &lt;= (value.length())" />
    <mutant id="mutant_283" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1)))" to="true" />
    <mutant id="mutant_284" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1)))" to="false" />
    <mutant id="mutant_285" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1)))" to="(((value.indexOf('W')) &gt; (-1)) &amp;&amp; ((value.indexOf('K')) &gt; (-1)))" />
    <mutant id="mutant_290" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1)))" to="false" />
    <mutant id="mutant_291" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1)))" to="(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1)))" />
    <mutant id="mutant_292" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1)))" to="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) &amp;&amp; ((value.indexOf(&quot;CZ&quot;)) &gt; (-1)))" />
    <mutant id="mutant_297" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))) || ((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))) &amp;&amp; ((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" />
    <mutant id="mutant_298" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0) || (index &gt;= (value.length()))" to="true" />
    <mutant id="mutant_299" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String,int)" from="(index &lt; 0) || (index &gt;= (value.length()))" to="false" />
    <mutant id="mutant_293" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))) || ((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="(((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))" />
    <mutant id="mutant_294" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))) || ((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="true" />
    <mutant id="mutant_295" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))) || ((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="false" />
    <mutant id="mutant_296" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)" from="((((value.indexOf('W')) &gt; (-1)) || ((value.indexOf('K')) &gt; (-1))) || ((value.indexOf(&quot;CZ&quot;)) &gt; (-1))) || ((value.indexOf(&quot;WITZ&quot;)) &gt; (-1))" to="(value.indexOf(&quot;WITZ&quot;)) &gt; (-1)" />
    <mutant id="mutant_27" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWithBox &amp;&amp; endsWithBox" to="endsWithBox" />
    <mutant id="mutant_26" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWithBox &amp;&amp; endsWithBox" to="startsWithBox" />
    <mutant id="mutant_29" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWithBox &amp;&amp; endsWithBox" to="false" />
    <mutant id="mutant_28" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWithBox &amp;&amp; endsWithBox" to="true" />
    <mutant id="mutant_21" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith) &amp;&amp; ((content.length()) == 0)" to="(content.length()) == 0" />
    <mutant id="mutant_20" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith) &amp;&amp; ((content.length()) == 0)" to="(startsWith || endsWith) || ((content.length()) == 0)" />
    <mutant id="mutant_23" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith) &amp;&amp; ((content.length()) == 0)" to="false" />
    <mutant id="mutant_22" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith) &amp;&amp; ((content.length()) == 0)" to="true" />
    <mutant id="mutant_25" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWithBox &amp;&amp; endsWithBox" to="startsWithBox || endsWithBox" />
    <mutant id="mutant_24" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith) &amp;&amp; ((content.length()) == 0)" to="startsWith || endsWith" />
    <mutant id="mutant_16" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith)" to="startsWith" />
    <mutant id="mutant_15" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith)" to="(startsWith &amp;&amp; endsWith)" />
    <mutant id="mutant_18" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith)" to="false" />
    <mutant id="mutant_17" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith)" to="true" />
    <mutant id="mutant_19" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="(startsWith || endsWith)" to="endsWith" />
    <mutant id="mutant_10" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="startsWith" />
    <mutant id="mutant_12" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="false" />
    <mutant id="mutant_11" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="true" />
    <mutant id="mutant_14" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="endsWith" />
    <mutant id="mutant_13" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="startsWith || endsWith" />
    <mutant id="mutant_49" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="(org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch" />
    <mutant id="mutant_48" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="false" />
    <mutant id="mutant_41" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="true" />
    <mutant id="mutant_40" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="(input.length()) &gt; 0" />
    <mutant id="mutant_43" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="(org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch" />
    <mutant id="mutant_42" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="false" />
    <mutant id="mutant_45" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="(input.length()) &gt; 0" />
    <mutant id="mutant_44" viable="true" in="org.apache.commons.codec.language.bm.Rule$8.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((input.length()) &gt; 0) || ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" />
    <mutant id="mutant_47" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="true" />
    <mutant id="mutant_46" viable="true" in="org.apache.commons.codec.language.bm.Rule$9.isMatch(java.lang.CharSequence)" from="((input.length()) &gt; 0) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" to="((input.length()) &gt; 0) || ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(((input.length()) - 1)))) == shouldMatch)" />
    <mutant id="mutant_50" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="(txt.length()) == 0" />
    <mutant id="mutant_38" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="false" />
    <mutant id="mutant_37" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="true" />
    <mutant id="mutant_39" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="(org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch" />
    <mutant id="mutant_30" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="startsWith" />
    <mutant id="mutant_32" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="false" />
    <mutant id="mutant_31" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="true" />
    <mutant id="mutant_34" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="endsWith" />
    <mutant id="mutant_33" viable="true" in="org.apache.commons.codec.language.bm.Rule.pattern(java.lang.String)" from="startsWith &amp;&amp; endsWith" to="startsWith || endsWith" />
    <mutant id="mutant_36" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="(input.length()) == 1" />
    <mutant id="mutant_35" viable="true" in="org.apache.commons.codec.language.bm.Rule$7.isMatch(java.lang.CharSequence)" from="((input.length()) == 1) &amp;&amp; ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" to="((input.length()) == 1) || ((org.apache.commons.codec.language.bm.Rule.contains(bContent, input.charAt(0))) == shouldMatch)" />
    <mutant id="mutant_63" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A'))" to="false" />
    <mutant id="mutant_62" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A'))" to="true" />
    <mutant id="mutant_65" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A')) || (chr &gt; 'Z')" to="chr &gt; 'Z'" />
    <mutant id="mutant_64" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A'))" to="(chr &lt; 'A')" />
    <mutant id="mutant_67" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A')) || (chr &gt; 'Z')" to="(chr == 'H') || (chr &lt; 'A')" />
    <mutant id="mutant_66" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A')) || (chr &gt; 'Z')" to="((chr == 'H') || (chr &lt; 'A')) &amp;&amp; (chr &gt; 'Z')" />
    <mutant id="mutant_69" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A')) || (chr &gt; 'Z')" to="false" />
    <mutant id="mutant_68" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A')) || (chr &gt; 'Z')" to="true" />
    <mutant id="mutant_70" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="true" />
    <mutant id="mutant_72" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="(chr == 'P')" />
    <mutant id="mutant_71" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'P') &amp;&amp; (nextChar != 'H'))" to="false" />
    <mutant id="mutant_59" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="txt == null" />
    <mutant id="mutant_52" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="false" />
    <mutant id="mutant_51" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="true" />
    <mutant id="mutant_54" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="txt == null" />
    <mutant id="mutant_53" viable="true" in="org.apache.commons.codec.language.Caverphone1.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="(txt == null) &amp;&amp; ((txt.length()) == 0)" />
    <mutant id="mutant_56" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="true" />
    <mutant id="mutant_55" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="(txt.length()) == 0" />
    <mutant id="mutant_58" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="(txt == null) &amp;&amp; ((txt.length()) == 0)" />
    <mutant id="mutant_57" viable="true" in="org.apache.commons.codec.language.Caverphone2.encode(java.lang.String)" from="(txt == null) || ((txt.length()) == 0)" to="false" />
    <mutant id="mutant_61" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A'))" to="((chr == 'H') &amp;&amp; (chr &lt; 'A'))" />
    <mutant id="mutant_60" viable="true" in="org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)" from="((chr == 'H') || (chr &lt; 'A'))" to="(chr == 'H')" />
    <mutant id="mutant_800" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="(regionMatch(local, n, &quot;GNED&quot;))" />
    <mutant id="mutant_801" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="(regionMatch(local, n, &quot;GN&quot;))" />
    <mutant id="mutant_802" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="(regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;))" />
    <mutant id="mutant_803" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="n &gt; 0" />
    <mutant id="mutant_808" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" to="(!(isLastChar(wdsz, n)))" />
    <mutant id="mutant_809" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" to="true" />
    <mutant id="mutant_804" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="true" />
    <mutant id="mutant_805" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="false" />
    <mutant id="mutant_806" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" to="(n &gt; 0) || ((regionMatch(local, n, &quot;GN&quot;)) || (regionMatch(local, n, &quot;GNED&quot;)))" />
    <mutant id="mutant_807" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" to="((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" />
    <mutant id="mutant_811" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" to="((!(isLastChar(wdsz, n))) || ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" />
    <mutant id="mutant_812" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)) &amp;&amp; (!hard)" to="true" />
    <mutant id="mutant_813" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)) &amp;&amp; (!hard)" to="false" />
    <mutant id="mutant_814" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)) &amp;&amp; (!hard)" to="!hard" />
    <mutant id="mutant_810" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0))" to="false" />
    <mutant id="mutant_819" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="true" />
    <mutant id="mutant_815" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)) &amp;&amp; (!hard)" to="(!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)" />
    <mutant id="mutant_816" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)) &amp;&amp; (!hard)" to="((!(isLastChar(wdsz, n))) &amp;&amp; ((Metaphone.FRONTV.indexOf(local.charAt((n + 1)))) &gt;= 0)) || (!hard)" />
    <mutant id="mutant_817" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="(n &gt; 0) || ((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" />
    <mutant id="mutant_818" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="n &gt; 0" />
    <mutant id="mutant_822" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;)))" to="(regionMatch(local, n, &quot;SIO&quot;))" />
    <mutant id="mutant_823" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;)))" to="(regionMatch(local, n, &quot;SH&quot;))" />
    <mutant id="mutant_824" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;)))" to="true" />
    <mutant id="mutant_825" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;)))" to="false" />
    <mutant id="mutant_820" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="false" />
    <mutant id="mutant_821" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(n &gt; 0) &amp;&amp; ((Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0)" to="(Metaphone.VARSON.indexOf(local.charAt((n - 1)))) &gt;= 0" />
    <mutant id="mutant_826" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;)))" to="((regionMatch(local, n, &quot;SH&quot;)) &amp;&amp; (regionMatch(local, n, &quot;SIO&quot;)))" />
    <mutant id="mutant_827" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))) || (regionMatch(local, n, &quot;SIA&quot;))" to="(regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))" />
    <mutant id="mutant_828" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))) || (regionMatch(local, n, &quot;SIA&quot;))" to="true" />
    <mutant id="mutant_829" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))) || (regionMatch(local, n, &quot;SIA&quot;))" to="false" />
    <mutant id="mutant_833" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(regionMatch(local, n, &quot;TIA&quot;)) || (regionMatch(local, n, &quot;TIO&quot;))" to="(regionMatch(local, n, &quot;TIA&quot;)) &amp;&amp; (regionMatch(local, n, &quot;TIO&quot;))" />
    <mutant id="mutant_834" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(regionMatch(local, n, &quot;TIA&quot;)) || (regionMatch(local, n, &quot;TIO&quot;))" to="regionMatch(local, n, &quot;TIA&quot;)" />
    <mutant id="mutant_835" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(regionMatch(local, n, &quot;TIA&quot;)) || (regionMatch(local, n, &quot;TIO&quot;))" to="true" />
    <mutant id="mutant_836" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(regionMatch(local, n, &quot;TIA&quot;)) || (regionMatch(local, n, &quot;TIO&quot;))" to="false" />
    <mutant id="mutant_830" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))) || (regionMatch(local, n, &quot;SIA&quot;))" to="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))) &amp;&amp; (regionMatch(local, n, &quot;SIA&quot;))" />
    <mutant id="mutant_831" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="((regionMatch(local, n, &quot;SH&quot;)) || (regionMatch(local, n, &quot;SIO&quot;))) || (regionMatch(local, n, &quot;SIA&quot;))" to="regionMatch(local, n, &quot;SIA&quot;)" />
    <mutant id="mutant_832" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(regionMatch(local, n, &quot;TIA&quot;)) || (regionMatch(local, n, &quot;TIO&quot;))" to="regionMatch(local, n, &quot;TIO&quot;)" />
    <mutant id="mutant_837" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; (isVowel(local, (n + 1)))" to="!(isLastChar(wdsz, n))" />
    <mutant id="mutant_838" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; (isVowel(local, (n + 1)))" to="true" />
    <mutant id="mutant_839" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; (isVowel(local, (n + 1)))" to="false" />
    <mutant id="mutant_602" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;)))" to="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;)))" />
    <mutant id="mutant_844" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((c == 'A') || (c == 'E'))" to="false" />
    <mutant id="mutant_603" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" />
    <mutant id="mutant_845" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((c == 'A') || (c == 'E'))" to="(c == 'A')" />
    <mutant id="mutant_604" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="true" />
    <mutant id="mutant_846" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((c == 'A') || (c == 'E'))" to="((c == 'A') &amp;&amp; (c == 'E'))" />
    <mutant id="mutant_605" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="false" />
    <mutant id="mutant_847" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(((c == 'A') || (c == 'E')) || (c == 'I'))" to="((c == 'A') || (c == 'E'))" />
    <mutant id="mutant_840" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; (isVowel(local, (n + 1)))" to="(!(isLastChar(wdsz, n))) || (isVowel(local, (n + 1)))" />
    <mutant id="mutant_841" viable="true" in="org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)" from="(!(isLastChar(wdsz, n))) &amp;&amp; (isVowel(local, (n + 1)))" to="isVowel(local, (n + 1))" />
    <mutant id="mutant_600" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;)))" to="true" />
    <mutant id="mutant_842" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((c == 'A') || (c == 'E'))" to="(c == 'E')" />
    <mutant id="mutant_601" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;)))" to="false" />
    <mutant id="mutant_843" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((c == 'A') || (c == 'E'))" to="true" />
    <mutant id="mutant_606" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)" />
    <mutant id="mutant_848" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(((c == 'A') || (c == 'E')) || (c == 'I'))" to="(c == 'I')" />
    <mutant id="mutant_607" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" to="((index == ((value.length()) - 1)) &amp;&amp; (isVowel(charAt(value, (index - 1))))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 5, &quot;EWSKI&quot;, &quot;EWSKY&quot;, &quot;OWSKI&quot;, &quot;OWSKY&quot;))" />
    <mutant id="mutant_849" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(((c == 'A') || (c == 'E')) || (c == 'I'))" to="true" />
    <mutant id="mutant_608" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))" />
    <mutant id="mutant_609" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))" />
    <mutant id="mutant_613" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))))" to="true" />
    <mutant id="mutant_855" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O'))" to="false" />
    <mutant id="mutant_614" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))))" to="false" />
    <mutant id="mutant_856" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O'))" to="(c == 'O')" />
    <mutant id="mutant_615" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))" />
    <mutant id="mutant_857" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')" to="c == 'U'" />
    <mutant id="mutant_616" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))))" to="(index == ((value.length()) - 1))" />
    <mutant id="mutant_858" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')" to="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) &amp;&amp; (c == 'U')" />
    <mutant id="mutant_851" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(((c == 'A') || (c == 'E')) || (c == 'I'))" to="(((c == 'A') || (c == 'E')) &amp;&amp; (c == 'I'))" />
    <mutant id="mutant_610" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;))" />
    <mutant id="mutant_852" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O'))" to="((((c == 'A') || (c == 'E')) || (c == 'I')) &amp;&amp; (c == 'O'))" />
    <mutant id="mutant_611" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))" to="true" />
    <mutant id="mutant_853" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O'))" to="(((c == 'A') || (c == 'E')) || (c == 'I'))" />
    <mutant id="mutant_612" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;)))" to="false" />
    <mutant id="mutant_854" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O'))" to="true" />
    <mutant id="mutant_617" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleX(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index == ((value.length()) - 1)) &amp;&amp; ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))))" to="((index == ((value.length()) - 1)) || ((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 3, &quot;IAU&quot;, &quot;EAU&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 2, &quot;AU&quot;, &quot;OU&quot;))))" />
    <mutant id="mutant_859" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')" to="true" />
    <mutant id="mutant_618" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))" to="((index &gt; 0) || ((charAt(value, (index - 1))) != 'T'))" />
    <mutant id="mutant_619" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))" to="((charAt(value, (index - 1))) != 'T')" />
    <mutant id="mutant_850" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="(((c == 'A') || (c == 'E')) || (c == 'I'))" to="false" />
    <mutant id="mutant_624" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="slavoGermanic" />
    <mutant id="mutant_866" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E') &amp;&amp; (next == 'V')" to="next == 'V'" />
    <mutant id="mutant_625" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="true" />
    <mutant id="mutant_867" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C'))" to="((curr == 'S') || (next == 'C'))" />
    <mutant id="mutant_626" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="false" />
    <mutant id="mutant_868" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C'))" to="(next == 'C')" />
    <mutant id="mutant_627" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="(slavoGermanic || ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" />
    <mutant id="mutant_869" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C'))" to="(curr == 'S')" />
    <mutant id="mutant_620" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))" to="true" />
    <mutant id="mutant_862" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E') &amp;&amp; (next == 'V')" to="curr == 'E'" />
    <mutant id="mutant_621" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))" to="false" />
    <mutant id="mutant_863" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E') &amp;&amp; (next == 'V')" to="true" />
    <mutant id="mutant_622" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))" to="(index &gt; 0)" />
    <mutant id="mutant_864" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E') &amp;&amp; (next == 'V')" to="false" />
    <mutant id="mutant_623" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))" />
    <mutant id="mutant_865" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'E') &amp;&amp; (next == 'V')" to="(curr == 'E') || (next == 'V')" />
    <mutant id="mutant_628" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)) || (slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)" />
    <mutant id="mutant_629" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)) || (slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)) &amp;&amp; (slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" />
    <mutant id="mutant_860" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')" to="false" />
    <mutant id="mutant_861" viable="true" in="org.apache.commons.codec.language.Nysiis.isVowel(char)" from="((((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')) || (c == 'U')" to="(((c == 'A') || (c == 'E')) || (c == 'I')) || (c == 'O')" />
    <mutant id="mutant_635" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(!(result.isComplete())) &amp;&amp; (index &lt;= ((value.length()) - 1))" to="true" />
    <mutant id="mutant_877" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P') &amp;&amp; (next == 'H')" to="curr == 'P'" />
    <mutant id="mutant_636" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(!(result.isComplete())) &amp;&amp; (index &lt;= ((value.length()) - 1))" to="false" />
    <mutant id="mutant_878" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P') &amp;&amp; (next == 'H')" to="(curr == 'P') || (next == 'H')" />
    <mutant id="mutant_637" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(!(result.isComplete())) &amp;&amp; (index &lt;= ((value.length()) - 1))" to="!(result.isComplete())" />
    <mutant id="mutant_879" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P') &amp;&amp; (next == 'H')" to="true" />
    <mutant id="mutant_638" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1)))" to="(MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))" />
    <mutant id="mutant_631" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)) || (slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="false" />
    <mutant id="mutant_873" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C')) &amp;&amp; (aNext == 'H')" to="true" />
    <mutant id="mutant_632" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)) || (slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T'))" />
    <mutant id="mutant_874" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C')) &amp;&amp; (aNext == 'H')" to="false" />
    <mutant id="mutant_633" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(!(result.isComplete())) &amp;&amp; (index &lt;= ((value.length()) - 1))" to="(!(result.isComplete())) || (index &lt;= ((value.length()) - 1))" />
    <mutant id="mutant_875" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C')) &amp;&amp; (aNext == 'H')" to="(curr == 'S') &amp;&amp; (next == 'C')" />
    <mutant id="mutant_634" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String,boolean)" from="(!(result.isComplete())) &amp;&amp; (index &lt;= ((value.length()) - 1))" to="index &lt;= ((value.length()) - 1)" />
    <mutant id="mutant_876" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C')) &amp;&amp; (aNext == 'H')" to="aNext == 'H'" />
    <mutant id="mutant_639" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1)))" to="(name1 == null)" />
    <mutant id="mutant_870" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C'))" to="true" />
    <mutant id="mutant_871" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C'))" to="false" />
    <mutant id="mutant_630" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ZO&quot;, &quot;ZI&quot;, &quot;ZA&quot;)) || (slavoGermanic &amp;&amp; ((index &gt; 0) &amp;&amp; ((charAt(value, (index - 1))) != 'T')))" to="true" />
    <mutant id="mutant_872" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((curr == 'S') &amp;&amp; (next == 'C')) &amp;&amp; (aNext == 'H')" to="((curr == 'S') &amp;&amp; (next == 'C')) || (aNext == 'H')" />
    <mutant id="mutant_404" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;))" />
    <mutant id="mutant_646" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))" to="false" />
    <mutant id="mutant_888" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H') &amp;&amp; ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="false" />
    <mutant id="mutant_405" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;))" to="true" />
    <mutant id="mutant_647" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))" to="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) &amp;&amp; (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))" />
    <mutant id="mutant_889" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H') &amp;&amp; ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="curr == 'H'" />
    <mutant id="mutant_406" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;))" to="false" />
    <mutant id="mutant_648" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2)))" to="(MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))" />
    <mutant id="mutant_407" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)" />
    <mutant id="mutant_649" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2)))" to="true" />
    <mutant id="mutant_400" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;)))" to="true" />
    <mutant id="mutant_642" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1)))" to="false" />
    <mutant id="mutant_884" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="true" />
    <mutant id="mutant_401" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;)))" to="false" />
    <mutant id="mutant_643" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))" to="MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1)" />
    <mutant id="mutant_885" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="false" />
    <mutant id="mutant_402" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 3, &quot;RGY&quot;, &quot;OGY&quot;)))" to="(((org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ER&quot;)) || ((charAt(value, (index + 1))) == 'Y')) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 6, &quot;DANGER&quot;, &quot;RANGER&quot;, &quot;MANGER&quot;)))) &amp;&amp; (!(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 1, &quot;E&quot;, &quot;I&quot;)))" />
    <mutant id="mutant_644" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))" to="(name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))" />
    <mutant id="mutant_886" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="(!(org.apache.commons.codec.language.Nysiis.isVowel(next)))" />
    <mutant id="mutant_403" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 1, &quot;E&quot;, &quot;I&quot;, &quot;Y&quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 1), 4, &quot;AGGI&quot;, &quot;OGGI&quot;)" />
    <mutant id="mutant_645" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name1))" to="true" />
    <mutant id="mutant_887" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H') &amp;&amp; ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="true" />
    <mutant id="mutant_1040" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element) || (isInAlphabet(element))" to="((pad) == element) &amp;&amp; (isInAlphabet(element))" />
    <mutant id="mutant_408" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" />
    <mutant id="mutant_409" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;))" />
    <mutant id="mutant_1036" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0) &amp;&amp; (chunkSeparatorLength &gt; 0)" to="chunkSeparatorLength &gt; 0" />
    <mutant id="mutant_1037" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element) || (isInAlphabet(element))" to="(pad) == element" />
    <mutant id="mutant_1034" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0) &amp;&amp; (chunkSeparatorLength &gt; 0)" to="true" />
    <mutant id="mutant_1035" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0) &amp;&amp; (chunkSeparatorLength &gt; 0)" to="false" />
    <mutant id="mutant_1032" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0) &amp;&amp; (chunkSeparatorLength &gt; 0)" to="(lineLength &gt; 0) || (chunkSeparatorLength &gt; 0)" />
    <mutant id="mutant_1033" viable="true" in="org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)" from="(lineLength &gt; 0) &amp;&amp; (chunkSeparatorLength &gt; 0)" to="lineLength &gt; 0" />
    <mutant id="mutant_1030" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="(lineLength) &gt; 0" />
    <mutant id="mutant_1031" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="((lineLength) &gt; 0) || ((lineLength) &lt;= (context.currentLinePos))" />
    <mutant id="mutant_880" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P') &amp;&amp; (next == 'H')" to="false" />
    <mutant id="mutant_881" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'P') &amp;&amp; (next == 'H')" to="next == 'H'" />
    <mutant id="mutant_640" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1)))" to="((name1 == null) &amp;&amp; (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1)))" />
    <mutant id="mutant_882" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) &amp;&amp; (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" />
    <mutant id="mutant_641" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name1)))" to="true" />
    <mutant id="mutant_883" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="(!(org.apache.commons.codec.language.Nysiis.isVowel(prev)))" />
    <mutant id="mutant_1038" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element) || (isInAlphabet(element))" to="true" />
    <mutant id="mutant_1039" viable="true" in="org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])" from="((pad) == element) || (isInAlphabet(element))" to="false" />
    <mutant id="mutant_415" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" />
    <mutant id="mutant_657" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))" to="false" />
    <mutant id="mutant_899" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A') &amp;&amp; (lastChar == 'Y')" to="lastChar == 'Y'" />
    <mutant id="mutant_416" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;))" to="true" />
    <mutant id="mutant_658" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1) || ((name2.length()) == 1)" to="(name1.length()) == 1" />
    <mutant id="mutant_417" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;))" to="false" />
    <mutant id="mutant_659" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1) || ((name2.length()) == 1)" to="true" />
    <mutant id="mutant_418" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (!(isVowel(charAt(value, (index - 1)))))" to="(index &gt; 0) || (!(isVowel(charAt(value, (index - 1)))))" />
    <mutant id="mutant_411" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="false" />
    <mutant id="mutant_653" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))" to="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) &amp;&amp; (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))" />
    <mutant id="mutant_895" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W') &amp;&amp; (org.apache.commons.codec.language.Nysiis.isVowel(prev))" to="curr == 'W'" />
    <mutant id="mutant_412" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))" />
    <mutant id="mutant_654" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))" to="(name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))" />
    <mutant id="mutant_896" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W') &amp;&amp; (org.apache.commons.codec.language.Nysiis.isVowel(prev))" to="org.apache.commons.codec.language.Nysiis.isVowel(prev)" />
    <mutant id="mutant_413" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;))" to="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;))" />
    <mutant id="mutant_655" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))" to="MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2)" />
    <mutant id="mutant_897" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A') &amp;&amp; (lastChar == 'Y')" to="last2Char == 'A'" />
    <mutant id="mutant_414" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;))) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;))" to="org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index + 1), 2, &quot;ET&quot;)" />
    <mutant id="mutant_656" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2))) || (MatchRatingApproachEncoder.SPACE.equalsIgnoreCase(name2))" to="true" />
    <mutant id="mutant_898" viable="true" in="org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)" from="(last2Char == 'A') &amp;&amp; (lastChar == 'Y')" to="(last2Char == 'A') || (lastChar == 'Y')" />
    <mutant id="mutant_419" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (!(isVowel(charAt(value, (index - 1)))))" to="true" />
    <mutant id="mutant_1025" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="(lineLength) &gt; 0" />
    <mutant id="mutant_1026" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="(context.currentLinePos) &gt; 0" />
    <mutant id="mutant_1023" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="true" />
    <mutant id="mutant_1024" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="false" />
    <mutant id="mutant_1021" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="(0 == (context.modulus)) || ((lineLength) == 0)" />
    <mutant id="mutant_1022" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((context.currentLinePos) &gt; 0)" to="((lineLength) &gt; 0) || ((context.currentLinePos) &gt; 0)" />
    <mutant id="mutant_1020" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="(lineLength) == 0" />
    <mutant id="mutant_891" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H') &amp;&amp; ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="(curr == 'H') || ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" />
    <mutant id="mutant_650" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2)))" to="false" />
    <mutant id="mutant_892" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W') &amp;&amp; (org.apache.commons.codec.language.Nysiis.isVowel(prev))" to="(curr == 'W') || (org.apache.commons.codec.language.Nysiis.isVowel(prev))" />
    <mutant id="mutant_651" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2)))" to="((name2 == null) &amp;&amp; (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2)))" />
    <mutant id="mutant_893" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W') &amp;&amp; (org.apache.commons.codec.language.Nysiis.isVowel(prev))" to="true" />
    <mutant id="mutant_410" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int,boolean)" from="((org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 4, &quot;VAN &quot;, &quot;VON &quot;)) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, 0, 3, &quot;SCH&quot;)))" to="true" />
    <mutant id="mutant_652" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name2 == null) || (MatchRatingApproachEncoder.EMPTY.equalsIgnoreCase(name2)))" to="(name2 == null)" />
    <mutant id="mutant_894" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'W') &amp;&amp; (org.apache.commons.codec.language.Nysiis.isVowel(prev))" to="false" />
    <mutant id="mutant_1029" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="(lineLength) &lt;= (context.currentLinePos)" />
    <mutant id="mutant_1027" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="true" />
    <mutant id="mutant_890" viable="true" in="org.apache.commons.codec.language.Nysiis.transcodeRemaining(char,char,char,char)" from="(curr == 'H') &amp;&amp; ((!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next))))" to="(!(org.apache.commons.codec.language.Nysiis.isVowel(prev))) || (!(org.apache.commons.codec.language.Nysiis.isVowel(next)))" />
    <mutant id="mutant_1028" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="((lineLength) &gt; 0) &amp;&amp; ((lineLength) &lt;= (context.currentLinePos))" to="false" />
    <mutant id="mutant_426" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="(index &gt; 1)" />
    <mutant id="mutant_668" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;)))" to="true" />
    <mutant id="mutant_427" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))" />
    <mutant id="mutant_669" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;)))" to="false" />
    <mutant id="mutant_428" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="true" />
    <mutant id="mutant_429" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="false" />
    <mutant id="mutant_422" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (!(isVowel(charAt(value, (index - 1)))))" to="index &gt; 0" />
    <mutant id="mutant_664" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;)))" to="false" />
    <mutant id="mutant_423" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="((index &gt; 1) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" />
    <mutant id="mutant_665" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;)))" to="(letter.equalsIgnoreCase(&quot;E&quot;))" />
    <mutant id="mutant_424" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="true" />
    <mutant id="mutant_666" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;)))" to="((letter.equalsIgnoreCase(&quot;E&quot;)) &amp;&amp; (letter.equalsIgnoreCase(&quot;A&quot;)))" />
    <mutant id="mutant_425" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="false" />
    <mutant id="mutant_667" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;)))" to="(letter.equalsIgnoreCase(&quot;O&quot;))" />
    <mutant id="mutant_1014" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) != 0)" to="false" />
    <mutant id="mutant_1015" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) != 0)" to="context.eof" />
    <mutant id="mutant_1012" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) != 0)" to="(context.eof) || ((context.modulus) != 0)" />
    <mutant id="mutant_1013" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) != 0)" to="true" />
    <mutant id="mutant_1010" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (Base64.DECODE_TABLE.length))" to="true" />
    <mutant id="mutant_1011" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (Base64.DECODE_TABLE.length))" to="false" />
    <mutant id="mutant_660" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1) || ((name2.length()) == 1)" to="false" />
    <mutant id="mutant_661" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isEncodeEquals(java.lang.String,java.lang.String)" from="((name1.length()) == 1) || ((name2.length()) == 1)" to="((name1.length()) == 1) &amp;&amp; ((name2.length()) == 1)" />
    <mutant id="mutant_420" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (!(isVowel(charAt(value, (index - 1)))))" to="false" />
    <mutant id="mutant_662" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;)))" to="(letter.equalsIgnoreCase(&quot;A&quot;))" />
    <mutant id="mutant_421" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(index &gt; 0) &amp;&amp; (!(isVowel(charAt(value, (index - 1)))))" to="!(isVowel(charAt(value, (index - 1))))" />
    <mutant id="mutant_663" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;)))" to="true" />
    <mutant id="mutant_1018" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="true" />
    <mutant id="mutant_1019" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="false" />
    <mutant id="mutant_1016" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(context.eof) &amp;&amp; ((context.modulus) != 0)" to="(context.modulus) != 0" />
    <mutant id="mutant_1017" viable="true" in="org.apache.commons.codec.binary.Base64.encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(0 == (context.modulus)) &amp;&amp; ((lineLength) == 0)" to="0 == (context.modulus)" />
    <mutant id="mutant_437" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" to="((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" />
    <mutant id="mutant_679" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))) || (letter.equalsIgnoreCase(&quot;U&quot;))" to="true" />
    <mutant id="mutant_438" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="((index &gt; 3) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" />
    <mutant id="mutant_439" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 3) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 4), 1, &quot;B&quot;, &quot;H&quot;))" />
    <mutant id="mutant_433" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" to="((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" />
    <mutant id="mutant_675" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;)))" to="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) &amp;&amp; (letter.equalsIgnoreCase(&quot;I&quot;)))" />
    <mutant id="mutant_434" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" to="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) &amp;&amp; ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" />
    <mutant id="mutant_676" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;)))" to="(letter.equalsIgnoreCase(&quot;I&quot;))" />
    <mutant id="mutant_435" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" to="true" />
    <mutant id="mutant_677" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))) || (letter.equalsIgnoreCase(&quot;U&quot;))" to="letter.equalsIgnoreCase(&quot;U&quot;)" />
    <mutant id="mutant_436" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="(((index &gt; 1) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 2), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))) || ((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))))" to="false" />
    <mutant id="mutant_678" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))) || (letter.equalsIgnoreCase(&quot;U&quot;))" to="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;))) &amp;&amp; (letter.equalsIgnoreCase(&quot;U&quot;))" />
    <mutant id="mutant_1003" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0) &amp;&amp; ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="(((bigInt.bitLength()) % 8) != 0) || ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" />
    <mutant id="mutant_1004" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0) &amp;&amp; ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="true" />
    <mutant id="mutant_1001" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null) || ((binaryData.length) == 0)" to="(binaryData.length) == 0" />
    <mutant id="mutant_1002" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0) &amp;&amp; ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="(((bigInt.bitLength()) / 8) + 1) == (bitlen / 8)" />
    <mutant id="mutant_1000" viable="true" in="org.apache.commons.codec.binary.Base64.encodeBase64(byte[],boolean,boolean,int)" from="(binaryData == null) || ((binaryData.length) == 0)" to="(binaryData == null) &amp;&amp; ((binaryData.length) == 0)" />
    <mutant id="mutant_671" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;)))" to="((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;)))" />
    <mutant id="mutant_430" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="(org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;))" />
    <mutant id="mutant_672" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;)))" to="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;)))" />
    <mutant id="mutant_431" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="((index &gt; 2) || (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" />
    <mutant id="mutant_673" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;)))" to="true" />
    <mutant id="mutant_1009" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (Base64.DECODE_TABLE.length))" to="b &gt;= 0" />
    <mutant id="mutant_432" viable="false" in="org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String,org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult,int)" from="((index &gt; 2) &amp;&amp; (org.apache.commons.codec.language.DoubleMetaphone.contains(value, (index - 3), 1, &quot;B&quot;, &quot;H&quot;, &quot;D&quot;)))" to="(index &gt; 2)" />
    <mutant id="mutant_674" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="((((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;))) || (letter.equalsIgnoreCase(&quot;I&quot;)))" to="false" />
    <mutant id="mutant_1007" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (Base64.DECODE_TABLE.length))" to="(b &gt;= 0) || (b &lt; (Base64.DECODE_TABLE.length))" />
    <mutant id="mutant_1008" viable="true" in="org.apache.commons.codec.binary.Base64.decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context)" from="(b &gt;= 0) &amp;&amp; (b &lt; (Base64.DECODE_TABLE.length))" to="b &lt; (Base64.DECODE_TABLE.length)" />
    <mutant id="mutant_1005" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0) &amp;&amp; ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="false" />
    <mutant id="mutant_670" viable="true" in="org.apache.commons.codec.language.MatchRatingApproachEncoder.isVowel(java.lang.String)" from="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) || (letter.equalsIgnoreCase(&quot;O&quot;)))" to="(((letter.equalsIgnoreCase(&quot;E&quot;)) || (letter.equalsIgnoreCase(&quot;A&quot;))) &amp;&amp; (letter.equalsIgnoreCase(&quot;O&quot;)))" />
    <mutant id="mutant_1006" viable="true" in="org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger)" from="(((bigInt.bitLength()) % 8) != 0) &amp;&amp; ((((bigInt.bitLength()) / 8) + 1) == (bitlen / 8))" to="((bigInt.bitLength()) % 8) != 0" />
  </mutants>
</mutation>
